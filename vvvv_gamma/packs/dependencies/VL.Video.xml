<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.Video</name>
    </assembly>
    <members>
        <member name="F:VL.Video.ErrorState.NoError">
            <summary>No error.</summary>
        </member>
        <member name="F:VL.Video.ErrorState.Aborted">
            <summary>The process of fetching the media resource was stopped at the user's request.</summary>
        </member>
        <member name="F:VL.Video.ErrorState.Network">
            <summary>A network error occurred while fetching the media resource.</summary>
        </member>
        <member name="F:VL.Video.ErrorState.Decode">
            <summary>An error occurred while decoding the media resource.</summary>
        </member>
        <member name="F:VL.Video.ErrorState.SrcNotSupported">
            <summary>The media resource is not supported.</summary>
        </member>
        <member name="F:VL.Video.ErrorState.Encrypted">
            <summary>
            <para>An error occurred while encrypting the media resource. Supported in Windows 8.1 and later.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_err#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayer2Impl.Playing">
            <summary>
            Whether or not playback started.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayer2Impl.IsEnded">
            <summary>
            A Boolean which is true if the media contained in the element has finished playing.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayer2Impl.CurrentTime">
            <summary>
            The current playback time in seconds
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayer2Impl.Duration">
            <summary>
            The length of the element's media in seconds.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayer2Impl.NetworkState">
            <summary>
            The current state of the fetching of media over the network.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayer2Impl.ReadyState">
            <summary>
            The readiness state of the media.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayer2Impl.ErrorCode">
            <summary>
            Gets the most recent error status.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayerImpl.Playing">
            <summary>
            Whether or not playback started.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayerImpl.IsEnded">
            <summary>
            A Boolean which is true if the media contained in the element has finished playing.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayerImpl.CurrentTime">
            <summary>
            The current playback time in seconds
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayerImpl.Duration">
            <summary>
            The length of the element's media in seconds.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayerImpl.NetworkState">
            <summary>
            The current state of the fetching of media over the network.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayerImpl.ReadyState">
            <summary>
            The readiness state of the media.
            </summary>
        </member>
        <member name="P:VL.Video.MF.MFVideoPlayerImpl.ErrorCode">
            <summary>
            Gets the most recent error status.
            </summary>
        </member>
        <member name="T:VL.Video.MF.TexturePool">
            <summary>
            Texture pooling mechanism used by the video player. Each texture gets wrapped in a video frame which allows to keep the texture alive through ref counting.
            </summary>
        </member>
        <member name="F:VL.Video.NetworkState.Empty">
            <summary>
            There is no data yet. Also, readyState is HaveNothing.
            </summary>
        </member>
        <member name="F:VL.Video.NetworkState.Idle">
            <summary>
            HTMLMediaElement is active and has selected a resource, but is not using the network.
            </summary>
        </member>
        <member name="F:VL.Video.NetworkState.Loading">
            <summary>
            The browser is downloading HTMLMediaElement data.
            </summary>
        </member>
        <member name="F:VL.Video.NetworkState.NoSource">
            <summary>
            No HTMLMediaElement src found.
            </summary>
        </member>
        <member name="F:VL.Video.ReadyState.HaveNothing">
            <summary>
            No information is available about the media resource.
            </summary>
        </member>
        <member name="F:VL.Video.ReadyState.HaveMetadata">
            <summary>
            Enough of the media resource has been retrieved that the metadata attributes are initialized. Seeking will no longer raise an exception.
            </summary>
        </member>
        <member name="F:VL.Video.ReadyState.HaveCurrentData">
            <summary>
            Data is available for the current playback position, but not enough to actually play more than one frame.
            </summary>
        </member>
        <member name="F:VL.Video.ReadyState.HaveFutureData">
            <summary>
            Data for the current playback position as well as for at least a little bit of time into the future is available (in other words, at least two frames of video, for example).
            </summary>
        </member>
        <member name="F:VL.Video.ReadyState.HaveEnoughData">
            <summary>
            Enough data is available—and the download rate is high enough—that the media can be played through to the end without interruption.
            </summary>
        </member>
        <member name="T:VL.Video.VideoCaptureDeviceEnum">
            <summary>
            Dynamic enum of available video input devices
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.Url">
            <summary>
            The URL of the media to play.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.Play">
            <summary>
            Set to true to start playback, false to pause playback.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.Rate">
            <summary>
            Gets or sets the rate at which the media is being played back.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.Volume">
            <summary>
            The audio volume.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.SourceBounds">
            <summary>
            The normalized source rectangle.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.BorderColor">
            <summary>
            The border color.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.TextureSize">
            <summary>
            The size of the output texture. Use zero to take the size from the video.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.Playing">
            <summary>
            Whether or not playback started.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.IsEnded">
            <summary>
            A Boolean which is true if the media contained in the element has finished playing.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.CurrentTime">
            <summary>
            The current playback time in seconds
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.Duration">
            <summary>
            The length of the element's media in seconds.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.NetworkState">
            <summary>
            The current state of the fetching of media over the network.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.ReadyState">
            <summary>
            The readiness state of the media.
            </summary>
        </member>
        <member name="P:VL.Video.VideoPlayer.ErrorCode">
            <summary>
            Gets the most recent error status.
            </summary>
        </member>
        <member name="T:Windows.Win32.System.Com.BINDPTR">
            <summary>Describes a pointer.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-bindptr">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.BINDPTR.lpfuncdesc">
            <summary>Pointer to a function.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.BINDPTR.lpvardesc">
            <summary>Pointer to a variable, constant, or data member.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.BINDPTR.lptcomp">
            <summary>The <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> that binds the pointer.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.BLOB">
            <summary>The BLOB structure (winsock2.h), derived from Binary Large Object, contains information about a block of data.</summary>
            <remarks>
            <para>The structure name <b>BLOB</b> comes from the acronym BLOB, which stands for Binary Large Object. This structure does not describe the nature of the data pointed to by <b>pBlobData</b>. <div class="alert"><b>Note</b>  Windows Sockets defines a similar <b>BLOB</b> structure in Wtypes.h. Using both header files in the same source code file creates redefinition–compile time errors.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/winsock2/ns-winsock2-blob#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.BLOB.cbSize">
            <summary>Size of the block of data pointed to by <b>pBlobData</b>, in bytes.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.BLOB.pBlobData">
            <summary>Pointer to a block of data.</summary>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Next(System.Span{Windows.Win32.System.Com.STATSTG},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Next(System.UInt32,Windows.Win32.System.Com.STATSTG*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Next(System.UInt32,Windows.Win32.System.Com.STATSTG*,System.UInt32*)">
            <summary>Retrieves a specified number of STATSTG structures, that follow in the enumeration sequence.</summary>
            <param name="celt">The number of <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structures requested.</param>
            <param name="rgelt">An array of <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structures returned.</param>
            <param name="pceltFetched">The number of <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structures  retrieved in the <i>rgelt</i> parameter.</param>
            <returns>
            <para>This method supports the following return values: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-ienumstatstg-next">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Skip(System.UInt32)">
            <summary>Skips a specified number of STATSTG structures in the enumeration sequence.</summary>
            <param name="celt">The number of <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structures to skip.</param>
            <returns>
            <para>This method supports the following return values: | Return code | Description | |----------------|---------------| | S_OK | The specified number of **STATSTG** structures that were successfully skipped. | | S_FALSE | The number of **STATSTG** structures skipped is less than the *celt* parameter. |</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-ienumstatstg-skip">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Reset">
            <summary>Resets the enumeration sequence to the beginning of the STATSTG structure array.</summary>
            <returns>
            <para>This method supports the S_OK return value. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-ienumstatstg-reset">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Clone(Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG**)">
            <summary>Creates a new enumerator that contains the same enumeration state as the current STATSTG structure enumerator.</summary>
            <param name="ppenum">
            <para>A pointer to the variable that receives the  <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstatstg">IEnumSTATSTG</a> interface pointer. If the method is unsuccessful, the value of the <i>ppenum</i> parameter is undefined.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-ienumstatstg-clone#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method supports the following return values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-ienumstatstg-clone">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{0000000d-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Read(System.Span{Windows.Win32.System.Com.StructuredStorage.PROPBAG2},Windows.Win32.System.Com.IErrorLog*,System.Span{Windows.Win32.System.Variant.VARIANT},System.Span{Windows.Win32.Foundation.HRESULT})">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Read(System.UInt32,Windows.Win32.System.Com.StructuredStorage.PROPBAG2*,Windows.Win32.System.Com.IErrorLog*,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.Foundation.HRESULT*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Write(System.Span{Windows.Win32.System.Com.StructuredStorage.PROPBAG2},System.Span{Windows.Win32.System.Variant.VARIANT})">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Write(System.UInt32,Windows.Win32.System.Com.StructuredStorage.PROPBAG2*,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.CountProperties(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.CountProperties(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.GetPropertyInfo(System.UInt32,System.Span{Windows.Win32.System.Com.StructuredStorage.PROPBAG2},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.GetPropertyInfo(System.UInt32,System.UInt32,Windows.Win32.System.Com.StructuredStorage.PROPBAG2*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.LoadObject(System.String,System.UInt32,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.IErrorLog*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.LoadObject(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.IErrorLog*)"/>
        </member>
        <member name="F:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{22f55882-280b-11d0-a8a9-00a0c90c2004}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CreateStream(System.String,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.IStream**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CreateStream(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.IStream**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CreateStream(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.IStream**)">
            <summary>Creates and opens a stream object with the specified name contained in this storage object.</summary>
            <param name="pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the newly created stream. The name can be used later to open or reopen the stream. The name must not exceed 31 characters in length, not including the string terminator. The 000 through 01f characters, serving as the first character of the stream/storage name, are reserved for use by OLE. This is a compound file restriction, not a structured storage restriction.</param>
            <param name="grfMode">Specifies the access mode to use when opening the newly created stream. For more information and descriptions of the possible values, see <a href="https://docs.microsoft.com/windows/desktop/Stg/stgm-constants">STGM Constants</a>.</param>
            <param name="reserved1">Reserved for future use; must be zero.</param>
            <param name="reserved2">Reserved for future use; must be zero.</param>
            <param name="ppstm">
            <para>On return, pointer to the location of the new <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> interface pointer. This is only valid if the operation is successful. When an error occurs, this parameter is set to <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-createstream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The new stream was successfully created.| |E_PENDING | Asynchronous Storage only: Part or all of the necessary data is currently unavailable. | |STG_E_ACCESSDENIED | Not enough permissions to create stream.| |STG_E_FILEALREADYEXISTS | The name specified for the stream already exists in the storage object and the *grfMode* parameter includes the value STGM_FAILIFTHERE.| |STG_E_INSUFFICIENTMEMORY | The stream was not created due to a lack of memory.| |STG_E_INVALIDFLAG | The value specified for the *grfMode* parameter is not a valid **STGM** constants value.| |STG_E_INVALIDFUNCTION | The specified combination of flags in the *grfMode* parameter is not supported; for example, when this method is called without the STGM_SHARE_EXCLUSIVE flag.| |STG_E_INVALIDNAME | Invalid value for *pwcsName*.| |STG_E_INVALIDPOINTER | The pointer specified for the stream object was invalid.| |STG_E_INVALIDPARAMETER | One of the parameters was invalid.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.| |STG_E_TOOMANYOPENFILES | The stream was not created because there are too many open files.|</para>
            </returns>
            <remarks>
            <para>If a stream with the name specified in the <i>pwcsName</i> parameter already exists and the <i>grfMode</i> parameter includes the STGM_CREATE flag, the existing stream is replaced by a newly created one. Both the destruction of the old stream and the creation of the new stream object are subject to the transaction mode on the parent storage object. The COM-provided compound file implementation of the <b>IStorage::CreateStream</b> method does not support the following behaviors: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-createstream#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.OpenStream(System.String,Windows.Win32.System.Com.STGM,System.UInt32,Windows.Win32.System.Com.IStream**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.OpenStream(Windows.Win32.Foundation.PCWSTR,System.Void*,Windows.Win32.System.Com.STGM,System.UInt32,Windows.Win32.System.Com.IStream**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.OpenStream(Windows.Win32.Foundation.PCWSTR,System.Void*,Windows.Win32.System.Com.STGM,System.UInt32,Windows.Win32.System.Com.IStream**)">
            <summary>Opens an existing stream object within this storage object in the specified access mode.</summary>
            <param name="pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the stream to open. The 000 through 01f characters, serving as the first character of the stream/storage name, are reserved for use by OLE. This is a compound file restriction, not a structured storage restriction.</param>
            <param name="reserved1">Reserved for future use; must be <b>NULL</b>.</param>
            <param name="grfMode">Specifies the access mode to be assigned to the open stream. For more information and descriptions of possible values, see <a href="https://docs.microsoft.com/windows/desktop/Stg/stgm-constants">STGM Constants</a>.  Other modes you choose must at least specify STGM_SHARE_EXCLUSIVE when calling this method in the compound file implementation.</param>
            <param name="reserved2">Reserved for future use; must be zero.</param>
            <param name="ppstm">
            <para>A pointer to <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> pointer variable that receives the interface pointer to the newly opened stream object. If an error occurs, *<i>ppstm</i> must be set to <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-openstream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The stream was successfully opened.| |E_PENDING | Asynchronous Storage only: Part or all of the stream data is currently unavailable. | |STG_E_ACCESSDENIED | Not enough permissions to open stream.| |STG_E_FILENOTFOUND | The stream with specified name does not exist.| |STG_E_INSUFFICIENTMEMORY | The stream was not opened due to a lack of memory.| |STG_E_INVALIDFLAG | The value specified for the *grfMode* parameter is not a valid **STGM** constants value.| |STG_E_INVALIDFUNCTION | The specified combination of flags in the *grfMode* parameter is not supported; for example, when this method is called without the STGM_SHARE_EXCLUSIVE flag.| |STG_E_INVALIDNAME | Invalid value for *pwcsName*.| |STG_E_INVALIDPOINTER | The pointer specified for the stream object was not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.| |STG_E_TOOMANYOPENFILES | The stream was not opened because there are too many open files.|</para>
            </returns>
            <remarks><b>IStorage::OpenStream</b> opens an existing stream object within this storage object in the access mode specified in <i>grfMode</i>. There are restrictions on the permissions that can be given in <i>grfMode</i>. For example, the permissions on this storage object restrict the permissions on its streams. In general, access restrictions on streams need to be stricter than those on their parent storages. Compound-file streams must be opened with STGM_SHARE_EXCLUSIVE.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CreateStorage(System.String,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CreateStorage(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.System.Com.StructuredStorage.IStorage.CreateStorage(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)" -->
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.OpenStorage(System.String,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.System.Com.STGM,System.UInt16*@,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.OpenStorage(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.System.Com.STGM,System.UInt16**,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.OpenStorage(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.System.Com.STGM,System.UInt16**,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)">
            <summary>Opens an existing storage object with the specified name in the specified access mode.</summary>
            <param name="pwcsName">A pointer to a wide character null-terminated Unicode string that contains the name of the storage object to open. The 000 through 01f characters, serving as the first character of the stream/storage name, are reserved for use by OLE. This is a compound file restriction, not a structured storage restriction. It is ignored if <i>pstgPriority</i> is non-<b>NULL</b>.</param>
            <param name="pstgPriority">Must be <b>NULL</b>. A non-<b>NULL</b> value will return STG_E_INVALIDPARAMETER.</param>
            <param name="grfMode">Specifies the access mode to use when opening the storage object. For descriptions of the possible values, see <a href="https://docs.microsoft.com/windows/desktop/Stg/stgm-constants">STGM Constants</a>. Other modes you choose must at least specify STGM_SHARE_EXCLUSIVE when calling this method.</param>
            <param name="snbExclude">Must be <b>NULL</b>. A non-<b>NULL</b> value will return STG_E_INVALIDPARAMETER.</param>
            <param name="reserved">Reserved for future use; must be zero.</param>
            <param name="ppstg">
            <para>When successful, pointer to the location of an <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> pointer to the opened storage object. This parameter is set to <b>NULL</b> if an error occurs.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-openstorage#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The storage object was opened successfully.| |E_PENDING | Asynchronous Storage only: Part or all of the storage's data is currently unavailable. | |STG_E_ACCESSDENIED | Not enough permissions to open storage object.| |STG_E_FILENOTFOUND | The storage object with the specified name does not exist.| |STG_E_INSUFFICIENTMEMORY | The storage object was not opened due to a lack of memory.| |STG_E_INVALIDFLAG | The value specified for the *grfMode* parameter is not a valid **STGM** constants value.| |STG_E_INVALIDFUNCTION | The specified combination of flags in the *grfMode* parameter is not supported.| |STG_E_INVALIDNAME | Not a valid value for *pwcsName*.| |STG_E_INVALIDPOINTER | The pointer specified for the storage object was not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.| |STG_E_TOOMANYOPENFILES | The storage object was not created because there are too many open files.| |STG_S_CONVERTED | The existing stream with the specified name was replaced with a new storage object containing a single stream called CONTENTS. In direct mode, the new storage is immediately written to disk. In transacted mode, the new storage is written to a temporary storage in memory and later written to disk when it is committed.|</para>
            </returns>
            <remarks>
            <para>If the <i>pstgPriority</i> parameter is <b>NULL</b>, it is ignored. If the <i>pstgPriority</i> parameter is not <b>NULL</b>, it is an <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> pointer to a previous opening of an element of the storage object, usually one that was opened in priority mode. The storage object should be closed and reopened according to <i>grfMode</i>. When the <b>IStorage::OpenStorage</b> method returns, <i>pstgPriority</i> is no longer valid. Use the value supplied in the <i>ppstg</i> parameter. Storage objects can be opened with STGM_DELETEONRELEASE, in which case the object is destroyed when it receives its final release. This is useful for creating temporary storage objects.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-openstorage#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CopyTo(System.ReadOnlySpan{System.Guid},System.UInt16**,Windows.Win32.System.Com.StructuredStorage.IStorage*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CopyTo(System.UInt32,System.Guid*,System.UInt16**,Windows.Win32.System.Com.StructuredStorage.IStorage*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.CopyTo(System.UInt32,System.Guid*,System.UInt16**,Windows.Win32.System.Com.StructuredStorage.IStorage*)">
            <summary>Copies the entire contents of an open storage object to another storage object.</summary>
            <param name="ciidExclude">The number of elements in the array pointed to by <i>rgiidExclude</i>. If <i>rgiidExclude</i> is <b>NULL</b>, then <i>ciidExclude</i> is ignored.</param>
            <param name="rgiidExclude">
            <para>An array of interface identifiers (IIDs) that either the caller knows about and does not want copied or that the storage object does not support, but whose state the caller will later explicitly copy. The array can include <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a>, indicating that only stream objects are to be copied, and <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>, indicating that only storage objects are to be copied. An array length of zero indicates that only the state exposed by the <b>IStorage</b> object is to be copied; all other interfaces on the object are to be ignored. Passing <b>NULL</b> indicates that all interfaces on the object are to be copied.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-copyto#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="snbExclude">
            <para>A string name block (refer to <a href="https://docs.microsoft.com/windows/desktop/Stg/snb">SNB</a>) that specifies a block of storage or stream objects that are not to be copied to the destination. These elements are not created at the destination. If <b>IID_IStorage</b> is in the <i>rgiidExclude</i> array, this parameter is ignored. This parameter may be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-copyto#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pstgDest">
            <para>A pointer to the open storage object into which this storage object is to be copied. The destination storage object can be a different implementation of the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> interface from the source storage object. Thus, <b>IStorage::CopyTo</b> can use only publicly available methods of the destination storage object. If <i>pstgDest</i> is open in transacted mode, it can be reverted by calling its <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-revert">IStorage::Revert</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-copyto#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The storage object was successfully copied.| |E_PENDING | Asynchronous Storage only: Part or all of the data to be copied is currently unavailable. | |STG_E_ACCESSDENIED | The destination storage object is a child of the source storage object.| |STG_E_INSUFFICIENTMEMORY | The copy was not completed due to a lack of memory.| |STG_E_INVALIDPOINTER | The pointer specified for the storage object was not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_TOOMANYOPENFILES | The copy was not completed because there are too many open files.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.| |STG_E_MEDIUMFULL | The copy was not completed because the storage medium is full.|</para>
            </returns>
            <remarks>
            <para>This method merges elements contained in the source storage object with those already present in the destination. The layout of the destination storage object may differ from the source storage object. The copy process is recursive, invoking <b>IStorage::CopyTo</b> and <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istream-copyto">IStream::CopyTo</a> on the elements nested inside the source. When copying a stream on top of an existing stream with the same name, the existing stream is first removed and then replaced with the source stream. When copying a storage on top of an existing storage with the same name, the existing storage is not removed. As a result, after the copy operation, the destination <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> contains older elements, unless they were replaced by newer ones with the same names. A storage object may expose interfaces other than <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a>, including <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-irootstorage">IRootStorage</a>, <a href="https://docs.microsoft.com/windows/desktop/api/propidl/nn-propidl-ipropertystorage">IPropertyStorage</a>, or <a href="https://docs.microsoft.com/windows/desktop/api/propidl/nn-propidl-ipropertysetstorage">IPropertySetStorage</a>. The <i>rgiidExclude</i> parameter permits the exclusion of any or all of these additional interfaces from the copy operation. A caller with a newer or more efficient copy of an existing substorage or stream object may want to exclude the current versions of these objects from the copy operation. The <i>snbExclude</i> and <i>rgiidExclude</i> parameters provide two ways of excluding a storage objects existing storages or streams. <h3><a id="Note_to_Callers"></a><a id="note_to_callers"></a><a id="NOTE_TO_CALLERS"></a>Note to Callers</h3> The most common way to use the <b>IStorage::CopyTo</b> method is to copy everything from the source to the destination, as in most full-save and save-as operations. The following  example code shows how to copy everything  from the source storage object to the destination storage object.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-copyto#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.MoveElementTo(System.String,Windows.Win32.System.Com.StructuredStorage.IStorage*,System.String,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.MoveElementTo(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.Foundation.PCWSTR,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.MoveElementTo(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.Foundation.PCWSTR,System.UInt32)">
            <summary>The MoveElementTo method copies or moves a substorage or stream from this storage object to another storage object.</summary>
            <param name="pwcsName">Pointer to a wide character null-terminated Unicode string that contains the name of the element in this storage object to be moved or copied.</param>
            <param name="pstgDest"><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istorage">IStorage</a> pointer to the destination storage object.</param>
            <param name="pwcsNewName">Pointer to a wide character null-terminated unicode string that contains the new name for the element in its new storage object.</param>
            <param name="grfFlags">
            <para>Specifies whether the operation should be a move (STGMOVE_MOVE) or a copy (STGMOVE_COPY). See the <a href="https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-stgmove">STGMOVE</a> enumeration.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-moveelementto#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The storage object was successfully copied or moved.| |E_PENDING | Asynchronous Storage only: Part or all of the element's data is currently unavailable. | |STG_E_ACCESSDENIED | The destination storage object is a child of the source storage object. Or, the destination object and element name are the same as the source object and element name. In other words, you cannot move an element to itself.| |STG_E_FILENOTFOUND | The element with the specified name does not exist.| |STG_E_FILEALREADYEXISTS | The specified file already exists.| |STG_E_INSUFFICIENTMEMORY | The copy or move was not completed due to a lack of memory.| |STG_E_INVALIDFLAG | The value for the *grfFlags* parameter is not valid.| |STG_E_INVALIDNAME | Not a valid value for *pwcsName*.| |STG_E_INVALIDPOINTER | The pointer specified for the storage object was not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.| |STG_E_TOOMANYOPENFILES | The copy or move was not completed because there are too many open files.|</para>
            </returns>
            <remarks>
            <para>The <b>IStorage::MoveElementTo</b> method is typically the same as invoking the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-copyto">IStorage::CopyTo</a> method on the indicated element and then removing the source element. In this case, the <b>MoveElementTo</b> method uses only the publicly available functions of the destination storage object to carry out the move. If the source and destination storage objects have special knowledge about each other's implementation (they could, for example, be different instances of the same implementation), this method can be implemented more efficiently. Before calling this method, the element to be moved must be closed, and the destination storage must be open. Also, the destination object and element cannot be the same storage object/element name as the source of the move. That is, you cannot move an element to itself.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-moveelementto#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Commit(System.UInt32)">
            <summary>The Commit method ensures that any changes made to a storage object open in transacted mode are reflected in the parent storage.</summary>
            <param name="grfCommitFlags">
            <para>Controls how the changes are committed to the storage object. See the <a href="https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-stgc">STGC</a> enumeration for a definition of these values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-commit#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | Changes to the storage object were successfully committed to the parent level. If STGC_CONSOLIDATE was specified, the storage was successfully consolidated, or the storage was already too compact to consolidate further.| |STG_S_MULTIPLEOPENS | The commit operation succeeded, but the storage could not be consolidated because it had been opened multiple times using the STGM_NOSNAPSHOT flag.| |STG_S_CANNOTCONSOLIDATE | The commit operation succeeded, but the storage could not be consolidated due to an incorrect storage mode. For compound files, the storage may have been opened using the STGM_NOSCRATCH flag, or the storage may not be the outermost transacted level.| |STG_S_CONSOLIDATIONFAILED | The commit operation succeeded, but the storage could not be consolidated due to an internal error (for example, a memory allocation failure).| |E_PENDING | Asynchronous storage only: Part or all of the data to be committed is currently unavailable.| |STG_E_INVALIDFLAG | The value for the *grfCommitFlags* parameter is not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_NOTCURRENT | Another open instance of the storage object has committed changes. As a result, the current commit operation may overwrite previous changes.| |STG_E_MEDIUMFULL | No space left on device to commit.| |STG_E_TOOMANYOPENFILES | The commit operation could not be completed because there are too many open files.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para><b>IStorage::Commit</b> makes permanent changes to a storage object that is in transacted mode, in which changes are accumulated in a buffer, and not reflected in the storage object until there is a call to this method. The alternative is to open an object in direct mode, in which changes are immediately reflected in the storage object. An object opened in the direct mode does not require calling <b>IStorage::Commit</b> to make permanent changes in the storage object. Calling the <b>IStorage::Commit</b> method on a nonroot storage opened in direct mode has no effect. Opening a root storage object in direct mode ensures that changes in memory buffers are written to the underlying storage device. The commit operation publishes the current changes in this storage object and its children to the next level up in the storage hierarchy. To undo current changes before committing them, call <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-revert">IStorage::Revert</a> to roll back to the last-committed version. Calling <b>IStorage::Commit</b> has no effect on currently opened nested elements of this storage object. They remain valid and can be used. However, the <b>IStorage::Commit</b> method does not automatically commit changes to these nested elements. The commit operation publishes only known changes to the next higher level in the storage hierarchy. Thus, transactions to nested levels must be committed to this storage object before they can be committed to higher levels. In commit operations, you need to take steps to ensure that data is protected during the commit process: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-commit#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Revert">
            <summary>The Revert method discards all changes that have been made to the storage object since the last commit operation.</summary>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The revert operation was successful.| |E_PENDING | Asynchronous Storage only: Part or all of the storage's data is currently unavailable. | |STG_E_INSUFFICIENTMEMORY | The revert operation could not be completed due to a lack of memory.| |STG_E_TOOMANYOPENFILES | The revert operation could not be completed because there are too many open files.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>For storage objects opened in transacted mode, the <b>IStorage::Revert</b> method discards any uncommitted changes to this storage object or changes that have been committed to this storage object from nested elements. After this method returns, any existing elements (substorages or streams) that were opened from the reverted storage object are invalid and can no longer be used. Specifying these reverted elements in any call except <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-release">IUnknown::Release</a> returns the error STG_E_REVERTED This method has no effect on storage objects opened in direct mode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-revert#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.EnumElements(Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.EnumElements(System.UInt32,System.Void*,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.EnumElements(System.UInt32,System.Void*,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG**)">
            <summary>The EnumElements method retrieves a pointer to an enumerator object that can be used to enumerate the storage and stream objects contained within this storage object.</summary>
            <param name="reserved1">Reserved for future use; must be zero.</param>
            <param name="reserved2">Reserved for future use; must be <b>NULL</b>.</param>
            <param name="reserved3">Reserved for future use; must be zero.</param>
            <param name="ppenum">
            <para>Pointer to <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstatstg">IEnumSTATSTG</a>* pointer variable that receives the interface pointer to the new enumerator object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-enumelements#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The enumerator object was successfully returned.| |E_PENDING | Asynchronous Storage only: Part or all of the element's data is currently unavailable.| |STG_E_INSUFFICIENTMEMORY | The enumerator object could not be created due to lack of memory.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>The enumerator object returned by this method implements the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstatstg">IEnumSTATSTG</a> interface, one of the standard enumerator interfaces that contain the <b>Next</b>, <b>Reset</b>, <b>Clone</b>, and <b>Skip</b> methods. <b>IEnumSTATSTG</b> enumerates the data stored in an array of <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structures. The storage object must be open in read mode to allow the enumeration of its elements. The enumerator object is permitted to enumerate the elements in any order. The enumerator object is also permitted to treat the enumeration as a snapshot or to have the enumeration reflect the current state of the storage object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-enumelements#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.DestroyElement(System.String)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.DestroyElement(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.System.Com.StructuredStorage.IStorage.DestroyElement(Windows.Win32.Foundation.PCWSTR)" -->
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.RenameElement(System.String,System.String)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.RenameElement(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.RenameElement(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.PCWSTR)">
            <summary>The RenameElement method renames the specified substorage or stream in this storage object.</summary>
            <param name="pwcsOldName">
            <para>Pointer to a wide character null-terminated Unicode string that contains the name of the substorage or stream to be changed. <div class="alert"><b>Note</b>  The <i>pwcsName</i>, created in <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstorage">CreateStorage</a> or <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstream">CreateStream</a> must not exceed 31 characters in length, not including the string terminator.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-renameelement#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pwcsNewName">
            <para>Pointer to a wide character null-terminated unicode string that contains the new name for the specified substorage or stream. <div class="alert"><b>Note</b>  The <i>pwcsName</i>, created in <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstorage">CreateStorage</a> or <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-createstream">CreateStream</a> must not exceed 31 characters in length, not including the string terminator.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-renameelement#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The element was successfully renamed.| |E_PENDING | Asynchronous Storage only: Part or all of the element's data is currently unavailable.| |STG_E_ACCESSDENIED | The caller does not have enough permissions for renaming the element.| |STG_E_FILENOTFOUND | The element with the specified old name does not exist.| |STG_E_FILEALREADYEXISTS | The element specified by the new name already exists.| |STG_E_INSUFFICIENTMEMORY | The element was not renamed due to a lack of memory.| |STG_E_INVALIDNAME | Invalid value for one of the names.| |STG_E_INVALIDPOINTER | The pointer specified for the element was not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.| |STG_E_TOOMANYOPENFILES | The element was not renamed because there are too many open files.|</para>
            </returns>
            <remarks>
            <para><b>IStorage::RenameElement</b> renames the specified substorage or stream in this storage object. An element in a storage object cannot be renamed while it is open. The rename operation is subject to committing the changes if the storage is open in transacted mode. The <b>IStorage::RenameElement</b> method is not guaranteed to work in low memory with storage objects open in transacted mode. It may work in direct mode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-renameelement#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.SetElementTimes(System.String,System.Runtime.InteropServices.ComTypes.FILETIME@,System.Runtime.InteropServices.ComTypes.FILETIME@,System.Runtime.InteropServices.ComTypes.FILETIME@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.SetElementTimes(Windows.Win32.Foundation.PCWSTR,System.Runtime.InteropServices.ComTypes.FILETIME*,System.Runtime.InteropServices.ComTypes.FILETIME*,System.Runtime.InteropServices.ComTypes.FILETIME*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.SetElementTimes(Windows.Win32.Foundation.PCWSTR,System.Runtime.InteropServices.ComTypes.FILETIME*,System.Runtime.InteropServices.ComTypes.FILETIME*,System.Runtime.InteropServices.ComTypes.FILETIME*)">
            <summary>The SetElementTimes method sets the modification, access, and creation times of the specified storage element, if the underlying file system supports this method.</summary>
            <param name="pwcsName">The name of the storage object element whose times are to be modified. If <b>NULL</b>, the time is set on the root storage rather than one of its elements.</param>
            <param name="pctime">Either the new creation time for the element or <b>NULL</b> if the creation time is not to be modified.</param>
            <param name="patime">Either the new access time for the element or <b>NULL</b> if the access time is not to be modified.</param>
            <param name="pmtime">Either the new modification time for the element or <b>NULL</b> if the modification time is not to be modified.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The time values were successfully set.| |E_PENDING | Asynchronous Storage only: Part or all of the element's data is currently unavailable.| |STG_E_ACCESSDENIED | The caller does not have enough permissions for changing the element.| |STG_E_FILENOTFOUND | The element with the specified name does not exist.| |STG_E_INSUFFICIENTMEMORY | The element was not changed due to a lack of memory.| |STG_E_INVALIDNAME | Not a valid value for the element name.| |STG_E_INVALIDPOINTER | The pointer specified for the element was not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.| |STG_E_TOOMANYOPENFILES | The element was not changed because there are too many open files.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para><b>SetElementTimes</b>  sets time statistics for the specified storage element within this storage object. Not all file systems support all the time values. This method sets those times that are supported and ignores the rest. Each time-value parameter can be <b>NULL</b>; indicating that no modification should occur. Call the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-stat">IStorage::Stat</a> method to retrieve these time values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-setelementtimes#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.SetClass(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.SetClass(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.SetClass(System.Guid*)">
            <summary>The SetClass method assigns the specified class identifier (CLSID) to this storage object.</summary>
            <param name="clsid">The CLSID that is to be associated with the storage object.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The CLSID was successfully assigned.| |E_PENDING | Asynchronous Storage only: Part or all of the storage's data is currently unavailable.| |STG_E_ACCESSDENIED | The caller does not have enough permissions for assigning a CLSID to the storage object.| |STG_E_MEDIUMFULL | Not enough space was left on device to complete the operation.| |STG_E_REVERTED | The storage object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>When first created, a storage object has an associated CLSID of CLSID_NULL. Call <b>SetClass</b> to assign a CLSID to the storage object. Call the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-stat">IStorage::Stat</a> method to retrieve the current CLSID of a storage object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-setclass#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.SetStateBits(System.UInt32,System.UInt32)">
            <summary>The SetStateBits method stores up to 32 bits of state information in this storage object.</summary>
            <param name="grfStateBits">Specifies the new values of the bits to set. No legal values are defined for these bits; they are all reserved for future use and must not be used by applications.</param>
            <param name="grfMask">A binary mask indicating which bits in <i>grfStateBits</i> are significant in this call.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The state information was successfully set.| |E_PENDING | Asynchronous Storage only: Part or all of the storage's data is currently unavailable. | |STG_E_ACCESSDENIED | The caller does not have enough permissions for changing this storage object.| |STG_E_INVALIDFLAG | The value for the grfStateBits or *grfMask* parameter is not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.|</para>
            </returns>
            <remarks>The values for the state bits are not currently defined.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Stat(Windows.Win32.System.Com.STATSTG@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)">
            <summary>The Stat method retrieves the STATSTG structure for this open storage object.</summary>
            <param name="pstatstg">
            <para>On return, pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure where this method places information about the open storage object. This parameter is <b>NULL</b> if an error occurs.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="grfStatFlag">
            <para>Specifies that some of the members in the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure are not returned, thus saving a memory allocation operation. Values are taken from the <a href="https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-statflag">STATFLAG</a> enumeration.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The STATSTG structure was successfully returned at the specified location.| |E_PENDING | Asynchronous Storage only: Part or all of the storage's data is currently unavailable.| |STG_E_ACCESSDENIED | The caller does not have enough permissions for accessing statistics for this storage object.| |STG_E_INSUFFICIENTMEMORY | The STATSTG structure was not returned due to a lack of memory.| |STG_E_INVALIDFLAG | The value for the *grfStateFlag* parameter is not valid.| |STG_E_INVALIDPARAMETER | One of the parameters was not valid.|</para>
            </returns>
            <remarks>
            <para><b>IStorage::Stat</b> retrieves the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure for the current storage object. The <b>STATSTG</b> structure contains statistical information about the storage object. <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-enumelements">IStorage::EnumElements</a> returns a pointer to an enumerator object. The enumerator object returned by this method implements the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstatstg">IEnumSTATSTG</a> interface, through which the data stored in the array of the <b>STATSTG</b> structures is enumerated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istorage-stat#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.StructuredStorage.IStorage.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{0000000b-0000-0000-c000-000000000046}</value>
        </member>
        <member name="T:Windows.Win32.System.Com.StructuredStorage.PROPVARIANT">
            <summary>The PROPVARIANT structure is used in the ReadMultiple and WriteMultiple methods of IPropertyStorage to define the type tag and the value of a property in a property set.</summary>
            <remarks>
            <para>The <b>PROPVARIANT</b> structure can also hold a value of <b>VT_DECIMAL</b>:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/propidlbase/ns-propidlbase-propvariant#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.System.Com.CALLCONV">
            <summary>Identifies the calling convention used by a member function described in the METHODDATA structure.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-callconv">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_FASTCALL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_CDECL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_MSCPASCAL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_PASCAL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_MACPASCAL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_STDCALL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_FPFASTCALL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_SYSCALL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_MPWCDECL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_MPWPASCAL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CALLCONV.CC_MAX">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.System.Com.CLSCTX">
            <summary>Values that are used in activation calls to indicate the execution contexts in which an object is to be run.</summary>
            <remarks>
            <para>Values from the <b>CLSCTX</b> enumeration are used in activation calls (<a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cocreateinstance">CoCreateInstance</a>, <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cocreateinstanceex">CoCreateInstanceEx</a>, <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cogetclassobject">CoGetClassObject</a>, and so on) to indicate the preferred execution contexts (in-process, local, or remote) in which an object is to be run. They are also used in calls to <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-coregisterclassobject">CoRegisterClassObject</a> to indicate the set of execution contexts in which a class object is to be made available for requests to construct instances (<b>IClassFactory::CreateInstance</b>). To indicate that more than one context is acceptable, you can combine multiple values with Boolean ORs. The contexts are tried in the order in which they are listed.</para>
            <para>Given a set of <b>CLSCTX</b> flags, the execution context to be used depends on the availability of registered class codes and other parameters according to the following algorithm.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_INPROC_SERVER">
            <summary>The code that creates and manages objects of this class is a DLL that runs in the same process as the caller of the function specifying the class context.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_INPROC_HANDLER">
            <summary>The code that manages objects of this class is an in-process handler. This is a DLL that runs in the client process and implements client-side structures of this class when instances of the class are accessed remotely.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_LOCAL_SERVER">
            <summary>The EXE code that creates and manages objects of this class runs on same machine but is loaded in a separate process space.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_INPROC_SERVER16">
            <summary>Obsolete.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_REMOTE_SERVER">
            <summary>A remote context. The <a href="https://docs.microsoft.com/windows/desktop/com/localserver32">LocalServer32</a> or <a href="https://docs.microsoft.com/windows/desktop/com/localservice">LocalService</a> code that creates and manages objects of this class is run on a different computer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_INPROC_HANDLER16">
            <summary>Obsolete.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_RESERVED1">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_RESERVED2">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_RESERVED3">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_RESERVED4">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_NO_CODE_DOWNLOAD">
            <summary>Disables the downloading of code from the directory service or the Internet. This flag cannot be set at the same time as CLSCTX_ENABLE_CODE_DOWNLOAD.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_RESERVED5">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_NO_CUSTOM_MARSHAL">
            <summary>Specify if you want the activation to fail if it uses custom marshalling.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ENABLE_CODE_DOWNLOAD">
            <summary>Enables the downloading of code from the directory service or the Internet. This flag cannot be set at the same time as CLSCTX_NO_CODE_DOWNLOAD.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_NO_FAILURE_LOG">
            <summary>
            <para>The CLSCTX_NO_FAILURE_LOG can be used to override the logging of failures in <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cocreateinstanceex">CoCreateInstanceEx</a>. If the ActivationFailureLoggingLevel is created, the following values can determine the status of event logging: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_DISABLE_AAA">
            <summary>
            <para>Disables activate-as-activator (AAA) activations for this activation only. This flag overrides the setting of the EOAC_DISABLE_AAA flag from the EOLE_AUTHENTICATION_CAPABILITIES enumeration. This flag cannot be set at the same time as CLSCTX_ENABLE_AAA. Any activation where a server process would be launched under the caller's identity is known as an activate-as-activator (AAA) activation. Disabling AAA activations allows an application that runs under a privileged account (such as LocalSystem) to help prevent its identity from being used to launch untrusted components. Library applications that use activation calls should always set this flag during those calls. This helps prevent the library application from being used in an escalation-of-privilege security attack. This is the only way to disable AAA activations in a library application because the EOAC_DISABLE_AAA flag from the EOLE_AUTHENTICATION_CAPABILITIES enumeration is applied only to the server process and not to the library application. <b>Windows 2000:  </b>This flag is not supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ENABLE_AAA">
            <summary>
            <para>Enables activate-as-activator (AAA) activations for this activation only. This flag overrides the setting of the EOAC_DISABLE_AAA flag from the EOLE_AUTHENTICATION_CAPABILITIES enumeration. This flag cannot be set at the same time as CLSCTX_DISABLE_AAA. Any activation where a server process would be launched under the caller's identity is known as an activate-as-activator (AAA) activation. Enabling this flag allows an application to transfer its identity to an activated component. <b>Windows 2000:  </b>This flag is not supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_FROM_DEFAULT_CONTEXT">
            <summary>Begin this activation from the default context of the current apartment.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ACTIVATE_X86_SERVER">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ACTIVATE_32_BIT_SERVER">
            <summary>Activate or connect to a 32-bit version of the server; fail if one is not registered.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ACTIVATE_64_BIT_SERVER">
            <summary>Activate or connect to a 64 bit version of the server; fail if one is not registered.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ENABLE_CLOAKING">
            <summary>
            <para>When this flag is specified, COM uses the impersonation token of the thread, if one is present, for the activation request made by the thread. When this flag is not specified or if the thread does not have an impersonation token, COM uses the process token of the thread's process for the activation request made by the thread.</para>
            <para><b>Windows Vista or later:  </b>This flag is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_APPCONTAINER">
            <summary>
            <para>Indicates activation is for an app container.</para>
            <para><div class="alert"><b>Note</b>  This flag is reserved for internal use and is not intended to be used directly from your code.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ACTIVATE_AAA_AS_IU">
            <summary>
            <para>Specify this flag for Interactive User activation behavior for As-Activator servers. A strongly named Medium IL Windows Store app can use this flag to launch an "As Activator" COM server without a strong name. Also, you can use this flag to bind to a running instance of the COM server that's launched by a desktop application. The client must be Medium IL, it must be strongly named, which means that it has a SysAppID in the client token, it can't be in session 0,  and it must have the same user as the session ID's user in the client token. If  the server is out-of-process and "As Activator", it launches the server with the token of the client token's session user. This token won't be strongly named. If the server is out-of-process and RunAs "Interactive User", this flag has no effect. If the server is out-of-process and is any other RunAs type, the activation fails. This flag has no effect for in-process servers. Off-machine activations fail when they use this flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_RESERVED6">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_ACTIVATE_ARM32_SERVER">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Com.CLSCTX.CLSCTX_PS_DLL">
            <summary>
            <para>Used for loading Proxy/Stub DLLs.</para>
            <para><div class="alert"><b>Note</b>  This flag is reserved for internal use and is not intended to be used directly from your code.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypesbase/ne-wtypesbase-clsctx#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.System.Com.CY">
            <summary>The CY structure is useful for calculations involving money, or for any fixed-point calculation where accuracy is particularly important.</summary>
            <remarks></remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.CY.int64">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.System.Com.DESCKIND">
            <summary>Identifies the type description being bound to.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-desckind">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.DESCKIND.DESCKIND_NONE">
            <summary>No match was found.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DESCKIND.DESCKIND_FUNCDESC">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/ns-oaidl-funcdesc">FUNCDESC</a> was returned.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DESCKIND.DESCKIND_VARDESC">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/ns-oaidl-vardesc">VARDESC</a> was returned.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DESCKIND.DESCKIND_TYPECOMP">
            <summary>A TYPECOMP was returned.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DESCKIND.DESCKIND_IMPLICITAPPOBJ">
            <summary>An IMPLICITAPPOBJ was returned.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DESCKIND.DESCKIND_MAX">
            <summary>The end of the enum.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.DISPPARAMS">
            <summary>Contains the arguments passed to a method or property.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-dispparams">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.DISPPARAMS.rgvarg">
            <summary>
            <para>An array of arguments. **Note**: these arguments appear in reverse order</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-dispparams#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DISPPARAMS.rgdispidNamedArgs">
            <summary>The dispatch IDs of the named arguments.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DISPPARAMS.cArgs">
            <summary>The number of arguments.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.DISPPARAMS.cNamedArgs">
            <summary>The number of named arguments.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.ELEMDESC">
            <summary>The ELEMDESC structure contains the type description and process-transfer information for a variable, a function, or a function parameter. (ELEMDESC)</summary>
            <remarks></remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.ELEMDESC.tdesc">
            <summary>The type of the element.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.EXCEPINFO">
            <summary>Describes an exception that occurred during IDispatch::Invoke.</summary>
            <remarks>
            <para>Use the <b>pfnDeferredFillIn</b> field to enable an object to defer filling in the <b>bstrDescription</b>, <b>bstrHelpFile</b>, and <b>dwHelpContext</b> fields until they are needed. This field might be used, for example, if loading the string for the error is a time-consuming operation. To use deferred fill-in, the object puts a function pointer in this slot and does not fill any of the other fields except <b>wCode</b>, which is required. To get additional information, the caller passes the <b>EXCEPINFO</b> structure back to the <b>pexcepinfo</b> callback function, which fills in the additional information. When the ActiveX object and the ActiveX client are in different processes, the ActiveX object calls <b>pfnDeferredFillIn</b> before returning to the controller.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-excepinfo#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.wCode">
            <summary>The error code. Error codes should be greater than 1000. Either this field or the scode field must be filled in; the other must be set to 0.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.wReserved">
            <summary>Reserved. Should be 0.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.bstrSource">
            <summary>The name of the exception source. Typically, this is an application name. This field should be filled in by the implementer of <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a>.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.bstrDescription">
            <summary>The exception description to display. If no description is available, use null.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.bstrHelpFile">
            <summary>The fully qualified help file path. If no Help is available, use null.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.dwHelpContext">
            <summary>The help context ID.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.pvReserved">
            <summary>Reserved. Must be null.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.pfnDeferredFillIn">
            <summary>Provides deferred fill-in. If deferred fill-in is not desired, this field should be set to null.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.EXCEPINFO.scode">
            <summary>A return value that describes the error. Either this field or wCode (but not both) must be filled in; the other must be set to 0. (16-bit Windows versions only.)</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.FUNCDESC">
            <summary>Describes a function. (FUNCDESC)</summary>
            <remarks>
            <para>The <b>cParams</b> field specifies the total number of required and optional parameters.</para>
            <para>The <b>cParamsOpt</b> field specifies the form of optional parameters accepted by the function, as follows: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-funcdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.memid">
            <summary>The function member ID.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.lprgscode">
            <summary>The status code.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.lprgelemdescParam">
            <summary>Description of the element.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.funckind">
            <summary>Indicates the type of function (virtual, static, or dispatch-only).</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.invkind">
            <summary>The invocation type. Indicates whether this is a property function, and if so, which type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.callconv">
            <summary>The calling convention.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.cParams">
            <summary>The total number of parameters.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.cParamsOpt">
            <summary>The number of optional parameters.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.oVft">
            <summary>For FUNC_VIRTUAL, specifies the offset in the VTBL.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.cScodes">
            <summary>The number of possible return values.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.elemdescFunc">
            <summary>The function return type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCDESC.wFuncFlags">
            <summary>The function flags. See <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/ne-oaidl-funcflags">FUNCFLAGS</a>.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.FUNCFLAGS">
            <summary>Specifies function flags.</summary>
            <remarks>
            <para>FUNCFLAG_FHIDDEN means that the property should never be shown in object browsers, property browsers, and so on. This function is useful for removing items from an object model. Code can bind to the member, but the user will never know that the member exists. FUNCFLAG_FNONBROWSABLE means that the property should not be displayed in a properties browser. It is used in circumstances in which an error would occur if the property were shown in a properties browser. FUNCFLAG_FRESRICTED means that macro-oriented programmers should not be allowed to access this member. These members are usually treated as _FHIDDEN by tools such as Visual Basic, with the main difference being that code cannot bind to those members.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-funcflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FRESTRICTED">
            <summary>The function should not be accessible from macro languages. This flag is intended for system-level functions or functions that type browsers should not display.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FSOURCE">
            <summary>The function returns an object that is a source of events.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FBINDABLE">
            <summary>The function that supports data binding.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FREQUESTEDIT">
            <summary>When set, any call to a method that sets the property results first in a call to <b>IPropertyNotifySink::OnRequestEdit</b>. The implementation of <b>OnRequestEdit</b> determines if the call is allowed to set the property.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FDISPLAYBIND">
            <summary>The function that is displayed to the user as bindable. FUNC_FBINDABLE must also be set.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FDEFAULTBIND">
            <summary>The function that best represents the object. Only one function in a type information can have this attribute.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FHIDDEN">
            <summary>The function should not be displayed to the user, although it exists and is bindable.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FUSESGETLASTERROR">
            <summary>The function supports <b>GetLastError</b>. If an error occurs during the function, the caller can call <b>GetLastError</b> to retrieve the error code.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FDEFAULTCOLLELEM">
            <summary>Permits an optimization in which the compiler looks for a member named xyz on the type of abc. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules. For more information, refer to defaultcollelem in Type Libraries and the Object Description Language.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FUIDEFAULT">
            <summary>The type information member is the default member for display in the user interface.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FNONBROWSABLE">
            <summary>The property appears in an object browser, but not in a properties browser.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FREPLACEABLE">
            <summary>Tags the interface as having default behaviors.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCFLAGS.FUNCFLAG_FIMMEDIATEBIND">
            <summary>Mapped as individual bindable properties.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.FUNCKIND">
            <summary>Specifies the function type.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-funckind">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCKIND.FUNC_VIRTUAL">
            <summary>The function is accessed the same as PUREVIRTUAL, except the function has an implementation.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCKIND.FUNC_PUREVIRTUAL">
            <summary>The function is accessed through the virtual function table (VTBL), and takes an implicit this pointer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCKIND.FUNC_NONVIRTUAL">
            <summary>The function is accessed by static address and takes an implicit this pointer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCKIND.FUNC_STATIC">
            <summary>The function is accessed by static address and does not take an implicit this pointer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.FUNCKIND.FUNC_DISPATCH">
            <summary>The function can be accessed only through <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a>.</summary>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IDispatch.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.GetTypeInfoCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IDispatch.GetTypeInfoCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.GetTypeInfoCount(System.UInt32*)">
            <summary>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</summary>
            <param name="pctinfo">The number of type information interfaces provided by the object. If the object provides type information, this number is 1; otherwise the number is 0.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The method may return zero, which indicates that the object does not provide any type information. In this case, the object may still be programmable through <b>IDispatch</b> or a VTBL, but does not provide run-time type information for browsers, compilers, or other programming tools that access type information. This can be useful for hiding an object from browsers.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.GetTypeInfo(System.UInt32,System.UInt32,Windows.Win32.System.Com.ITypeInfo**)">
            <summary>Retrieves the type information for an object, which can then be used to get the type information for an interface.</summary>
            <param name="iTInfo">The type information to return. Pass 0 to retrieve type information for the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> implementation.</param>
            <param name="lcid">The locale identifier for the type information. An object may be able to return different type information for different languages. This is important for classes that support localized member names. For classes that do not support localized member names, this parameter can be ignored.</param>
            <param name="ppTInfo">The requested type information object.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.GetIDsOfNames(System.Guid@,System.Span{Windows.Win32.Foundation.PWSTR},System.UInt32,System.Span{System.Int32})">
            <inheritdoc cref="M:Windows.Win32.System.Com.IDispatch.GetIDsOfNames(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32,System.UInt32,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.GetIDsOfNames(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32,System.UInt32,System.Int32*)">
            <summary>Maps a single member and an optional set of argument names to a corresponding set of integer DISPIDs, which can be used on subsequent calls to Invoke.</summary>
            <param name="riid">Reserved for future use. Must be IID_NULL.</param>
            <param name="rgszNames">The array of names to be mapped.</param>
            <param name="cNames">The count of the names to be mapped.</param>
            <param name="lcid">The locale context in which to interpret the names.</param>
            <param name="rgDispId">Caller-allocated array, each element of which contains an identifier (ID) corresponding to one of the names passed in the rgszNames array. The first element represents the member name. The subsequent elements represent each of the member's parameters.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>An <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> implementation can associate any positive integer ID value with a given name. Zero is reserved for the default, or <b>Value</b> property; –1 is reserved to indicate an unknown name; and other negative values are defined for other purposes. For example, if <b>GetIDsOfNames</b> is called, and the implementation does not recognize one or more of the names, it returns DISP_E_UNKNOWNNAME, and the <i>rgDispId</i> array contains DISPID_UNKNOWN for the entries that correspond to the unknown names. The member and parameter DISPIDs must remain constant for the lifetime of the object. This allows a client to obtain the DISPIDs once, and cache them for later use. When <b>GetIDsOfNames</b> is called with more than one name, the first name (<i>rgszNames</i>[0]) corresponds to the member name, and subsequent names correspond to the names of the member's parameters. The same name may map to different DISPIDs, depending on context. For example, a name may have a DISPID when it is used as a member name with a particular interface, a different ID as a member of a different interface, and different mapping for each time it appears as a parameter. <b>GetIDsOfNames</b> is used when an <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> client binds to names at run time. To bind at compile time instead, an <b>IDispatch</b> client can map names to DISPIDs by using the type information interfaces described in <a href="https://docs.microsoft.com/previous-versions/windows/desktop/automat/type-description-interfaces">Type Description Interfaces</a>. This allows a client to bind to members at compile time and avoid calling <b>GetIDsOfNames</b> at run time. For a description of binding at compile time, see Type Description Interfaces. The implementation of <b>GetIDsOfNames</b> is case insensitive. Users that need case-sensitive name mapping should use type information interfaces to map names to DISPIDs, rather than call <b>GetIDsOfNames</b>. <div class="alert"><b>Caution</b>  You cannot use this method to access values that have been added dynamically, such as values added through JavaScript. Instead, use the GetDispID of the IDispatchEx interface. For more information, see the <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/windows-scripting/reference/idispatchex-interface">IDispatchEx interface</a>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-idispatch-getidsofnames#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.Invoke(System.Int32,System.Guid@,System.UInt32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS@,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.System.Com.EXCEPINFO*,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IDispatch.Invoke(System.Int32,System.Guid*,System.UInt32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS*,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.System.Com.EXCEPINFO*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IDispatch.Invoke(System.Int32,System.Guid*,System.UInt32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS*,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.System.Com.EXCEPINFO*,System.UInt32*)">
            <summary>Provides access to properties and methods exposed by an object.</summary>
            <param name="dispIdMember">Identifies the member. Use <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-getidsofnames">GetIDsOfNames</a> or the object's documentation to obtain the dispatch identifier.</param>
            <param name="riid">Reserved for future use. Must be IID_NULL.</param>
            <param name="lcid">
            <para>The locale context in which to interpret arguments. The <i>lcid</i> is used by the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-getidsofnames">GetIDsOfNames</a> function, and is also passed to <b>Invoke</b> to allow the object to interpret its arguments specific to a locale. Applications that do not support multiple national languages can ignore this parameter. For more information, refer to <a href="https://docs.microsoft.com/previous-versions/windows/desktop/automat/supporting-multiple-national-languages">Supporting Multiple National Languages</a> and <a href="https://docs.microsoft.com/previous-versions/windows/desktop/automat/exposing-activex-objects">Exposing ActiveX Objects</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-idispatch-invoke#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wFlags">
            <para>Flags describing the context of the <b>Invoke</b> call. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-idispatch-invoke#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDispParams">Pointer to a DISPPARAMS structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</param>
            <param name="pVarResult">Pointer to the location where the result is to be stored, or NULL if the caller expects no result. This argument is ignored if DISPATCH_PROPERTYPUT or DISPATCH_PROPERTYPUTREF is specified.</param>
            <param name="pExcepInfo">Pointer to a structure that contains exception information. This structure should be filled in if DISP_E_EXCEPTION is returned. Can be NULL.</param>
            <param name="puArgErr">The index within rgvarg of the first argument that has an error. Arguments are stored in pDispParams-&gt;rgvarg in reverse order, so the first argument is the one with the highest index in the array. This parameter is returned only when the resulting return value is DISP_E_TYPEMISMATCH or DISP_E_PARAMNOTFOUND. This argument can be set to null. For details, see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/automat/returning-errors">Returning Errors</a>.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Generally, you should not implement <b>Invoke</b> directly. Instead, use the dispatch interface to create functions <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-createstddispatch">CreateStdDispatch</a> and <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-dispinvoke">DispInvoke</a>. For details, refer to <b>CreateStdDispatch</b>, <b>DispInvoke</b>, <a href="https://docs.microsoft.com/previous-versions/windows/desktop/automat/creating-the-idispatch-interface">Creating the IDispatch Interface</a> and <a href="https://docs.microsoft.com/previous-versions/windows/desktop/automat/exposing-activex-objects">Exposing ActiveX Objects</a>. If some application-specific processing needs to be performed before calling a member, the code should perform the necessary actions, and then call <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-invoke">ITypeInfo::Invoke</a> to invoke the member. <b>ITypeInfo::Invoke</b> acts exactly like <b>Invoke</b>. The standard implementations of <b>Invoke</b> created by <b>CreateStdDispatch</b> and <b>DispInvoke</b> defer to <b>ITypeInfo::Invoke</b>. In an ActiveX client, <b>Invoke</b> should be used to get and set the values of properties, or to call a method of an ActiveX object. The <i>dispIdMember</i> argument identifies the member to invoke. The DISPIDs that identify members are defined by the implementer of the object and can be determined by using the object's documentation, the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-getidsofnames">IDispatch::GetIDsOfNames</a> function, or the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> interface. When you use <b>IDispatch::Invoke()</b> with DISPATCH_PROPERTYPUT or DISPATCH_PROPERTYPUTREF, you have to specially initialize the <b>cNamedArgs</b> and <b>rgdispidNamedArgs</b> elements of your DISPPARAMS structure with the following:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-idispatch-invoke#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.IDispatch.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00020400-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumString.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IEnumString.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumString.Next(System.Span{Windows.Win32.Foundation.PWSTR},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IEnumString.Next(System.UInt32,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumString.Next(System.UInt32,Windows.Win32.Foundation.PWSTR*,System.UInt32*)">
            <summary>The IEnumString::Next (objidlbase.h) method retrieves the specified number of items in the enumeration sequence.</summary>
            <param name="celt">The number of items to be retrieved. If there are fewer than the requested number of items left in the sequence, this method retrieves the remaining elements.</param>
            <param name="rgelt">
            <para>An array of enumerated items. The enumerator is responsible for allocating any memory, and the caller is responsible for freeing it. If <i>celt</i> is greater than 1, the caller must also pass a non-NULL pointer passed to <i>pceltFetched</i> to know how many pointers to release.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumstring-next#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pceltFetched">The number of items that were retrieved. This parameter is always less than or equal to the number of items requested.</param>
            <returns>If the method retrieves the number of items requested, the return value is S_OK. Otherwise, it is S_FALSE.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumstring-next">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumString.Skip(System.UInt32)">
            <summary>The IEnumString::Skip (objidlbase.h) method skips over the specified number of items in the enumeration sequence.</summary>
            <param name="celt">The number of items to be skipped.</param>
            <returns>If the method skips the number of items requested, the return value is S_OK. Otherwise, it is S_FALSE.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumstring-skip">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumString.Reset">
            <summary>The IEnumString::Reset (objidlbase.h) method resets the enumeration sequence to the beginning.</summary>
            <returns>The return value is S_OK.</returns>
            <remarks>There is no guarantee that the same set of objects will be enumerated after the reset operation has completed. A static collection is reset to the beginning, but it can be too expensive for some collections, such as files in a directory, to guarantee this condition.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumString.Clone(Windows.Win32.System.Com.IEnumString**)">
            <summary>The IEnumString::Clone (objidlbase.h) method creates a new enumerator that contains the same enumeration state as the current one.</summary>
            <param name="ppenum">A pointer to the cloned enumerator object.</param>
            <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED, and S_OK.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumstring-clone">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.IEnumString.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000101-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumUnknown.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IEnumUnknown.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumUnknown.Next(System.UInt32,Windows.Win32.System.Com.IUnknown**,System.UInt32*)">
            <summary>The IEnumUnknown::Next (objidlbase.h) method retrieves the specified number of items in the enumeration sequence.</summary>
            <param name="celt">The number of items to be retrieved. If there are fewer than the requested number of items left in the sequence, this method retrieves the remaining elements.</param>
            <param name="rgelt">
            <para>An array of enumerated items. The enumerator is responsible for calling <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-addref">AddRef</a>, and the caller is responsible for calling <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-release">Release</a> through each pointer enumerated. If <i>celt</i> is greater than 1, the caller must also pass a non-NULL pointer passed to <i>pceltFetched</i> to know how many pointers to release.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumunknown-next#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pceltFetched">The number of items that were retrieved. This parameter is always less than or equal to the number of items requested.</param>
            <returns>If the method retrieves the number of items requested, the return value is S_OK. Otherwise, it is S_FALSE.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumunknown-next">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumUnknown.Skip(System.UInt32)">
            <summary>The IEnumUnknown::Skip (objidlbase.h) method skips over the specified number of items in the enumeration sequence.</summary>
            <param name="celt">The number of items to be skipped.</param>
            <returns>If the method skips the number of items requested, the return value is S_OK. Otherwise, it is S_FALSE.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumunknown-skip">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumUnknown.Reset">
            <summary>The IEnumUnknown::Reset (objidlbase.h) method resets the enumeration sequence to the beginning.</summary>
            <returns>The return value is S_OK.</returns>
            <remarks>There is no guarantee that the same set of objects will be enumerated after the reset operation has completed. A static collection is reset to the beginning, but it can be too expensive for some collections, such as files in a directory, to guarantee this condition.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IEnumUnknown.Clone(Windows.Win32.System.Com.IEnumUnknown**)">
            <summary>The IEnumUnknown::Clone (objidlbase.h) method creates a new enumerator that contains the same enumeration state as the current one.</summary>
            <param name="ppenum">A pointer to the cloned enumerator object.</param>
            <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED, and S_OK.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidlbase/nf-objidlbase-ienumunknown-clone">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.IEnumUnknown.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000100-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.IErrorLog.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IErrorLog.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IErrorLog.AddError(System.String,Windows.Win32.System.Com.EXCEPINFO@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IErrorLog.AddError(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.EXCEPINFO*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IErrorLog.AddError(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.EXCEPINFO*)">
            <summary>Adds an error for the specified property to the error log.</summary>
            <param name="pszPropName">The address of the name of the property to read. This cannot be NULL.</param>
            <param name="pExcepInfo">Pointer to an array of [EXCEPINFO](ns-oaidl-excepinfo.md) structures.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.IErrorLog.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{3127ca40-446e-11ce-8135-00aa004bb851}</value>
        </member>
        <member name="T:Windows.Win32.System.Com.INVOKEKIND">
            <summary>Specifies the way a function is invoked.</summary>
            <remarks>In C, value assignment is written as *pobj1 = *pobj2, while reference assignment is written as pobj1 = pobj2. Other languages have other syntactic conventions. A property or data member can support only a value assignment, a reference assignment, or both. The INVOKEKIND enumeration constants are the same constants that are passed to <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-invoke">IDispatch::Invoke</a> to specify the way in which a function is invoked.</remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.INVOKEKIND.INVOKE_FUNC">
            <summary>The member is called using a normal function invocation syntax.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.INVOKEKIND.INVOKE_PROPERTYGET">
            <summary>The function is invoked using a normal property-access syntax.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.INVOKEKIND.INVOKE_PROPERTYPUT">
            <summary>The function is invoked using a property value assignment syntax. Syntactically, a typical programming language might represent changing a property in the same way as assignment. For example: object.property : = value.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.INVOKEKIND.INVOKE_PROPERTYPUTREF">
            <summary>The function is invoked using a property reference assignment syntax.</summary>
        </member>
        <member name="M:Windows.Win32.System.Com.ISequentialStream.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ISequentialStream.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ISequentialStream.Read(System.Void*,System.UInt32,System.UInt32*)">
            <summary>Reads a specified number of bytes from the stream object into memory, starting at the current seek pointer.</summary>
            <param name="pv">A pointer to the buffer which the stream data is read into.</param>
            <param name="cb">The number of bytes of data to read from the stream object.</param>
            <param name="pcbRead">
            <para>A pointer to a <b>ULONG</b> variable that receives the actual number of bytes read from the stream object. <div class="alert"><b>Note</b>  The number of bytes read may be zero.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-isequentialstream-read#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | All of the requested data was successfully read from the stream object; the number of bytes requested in *cb* is the same as the number of bytes returned in *pcbRead*.| |S_FALSE | The value returned in *pcbRead* is less than the number of bytes requested in *cb*. This indicates the end of the stream has been reached. The number of bytes read indicates how much of the *pv* buffer has been filled.| |E_PENDING | Asynchronous storage only: Part or all of the data to be read is currently unavailable. | |STG_E_ACCESSDENIED | The caller does not have permissions required to read this stream object.| |STG_E_INVALIDPOINTER | One of the pointer values is invalid.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>This method reads bytes from this stream object into memory. The stream object must be opened in <b>STGM_READ</b> mode. This method adjusts the seek pointer by the actual number of bytes read. The number of bytes actually read is also returned in the <i>pcbRead</i> parameter. <h3><a id="Notes_to_Callers"></a><a id="notes_to_callers"></a><a id="NOTES_TO_CALLERS"></a>Notes to Callers</h3> The actual number of bytes read can be less than the number of bytes requested if an error occurs or if the end of the stream is reached during the read operation.  The number of bytes returned should always  be compared to the number of bytes requested.  If the number of bytes returned is less than the number of bytes requested, it usually means the <b>Read</b> method attempted to read  past the end of the stream. The application should handle both a returned error  and <b>S_OK</b> return values on end-of-stream read operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-isequentialstream-read#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ISequentialStream.Write(System.Void*,System.UInt32,System.UInt32*)">
            <summary>Writes a specified number of bytes into the stream object starting at the current seek pointer.</summary>
            <param name="pv">A pointer to the buffer that contains the data that is to be written to the stream. A valid pointer must be provided for this parameter even when <i>cb</i> is zero.</param>
            <param name="cb">The number of bytes of data to attempt to write into the stream. This value can be zero.</param>
            <param name="pcbWritten">A pointer to a <b>ULONG</b> variable where this method writes the actual number of bytes written to the stream object. The caller can set this pointer to <b>NULL</b>, in which case this method does not provide the actual number of bytes written.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The data was successfully written to the stream object.| |E_PENDING | Asynchronous Storage only: Part or all of the data to be written is currently unavailable.| |STG_E_MEDIUMFULL | The write operation failed because there is no space left on the storage device.| |STG_E_ACCESSDENIED | The caller does not have the required  permissions for writing to this stream object.| |STG_E_CANTSAVE | Data cannot be written for reasons other than improper access or insufficient space.| |STG_E_INVALIDPOINTER | One of the pointer values is not valid. The *pv* parameter must contain a valid pointer even if *cb* is zero.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.| |STG_E_WRITEFAULT | The write operation failed due to a disk error. This value is also returned when this method attempts to write to a stream that was opened in simple mode (using the STGM_SIMPLE flag).|</para>
            </returns>
            <remarks>
            <para><b>ISequentialStream::Write</b> writes the specified data to a stream object. The seek pointer is adjusted for the number of bytes actually written. The number of bytes actually written is returned in the <i>pcbWritten</i> parameter. If the byte count is zero bytes, the write operation has no effect. If the seek pointer is currently past the end of the stream and the byte count is nonzero, this method increases the size of the stream to the seek pointer and writes the specified bytes starting at the seek pointer. The fill bytes written to the stream are not initialized to any particular value. This is the same as the end-of-file behavior in the MS-DOS FAT file system. With a zero byte count and a seek pointer past the end of the stream, this method does not create the fill bytes to increase the stream to the seek pointer. In this case, you must call the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istream-setsize">IStream::SetSize</a> method to increase the size of the stream and write the fill bytes. The <i>pcbWritten</i> parameter can have a value even if an error occurs. In the COM-provided implementation, stream objects are not sparse. Any fill bytes are eventually allocated on the disk and assigned to the stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-isequentialstream-write#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.ISequentialStream.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{0c733a30-2a1c-11ce-ade5-00aa0044773d}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IStream.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.Seek(System.Int64,System.IO.SeekOrigin,System.UInt64*)">
            <summary>Changes the seek pointer to a new location. The new location is relative to either the beginning of the stream, the end of the stream, or the current seek pointer.</summary>
            <param name="dlibMove">The displacement to be added to the location indicated by the <i>dwOrigin</i> parameter. If <i>dwOrigin</i> is <b>STREAM_SEEK_SET</b>, this is interpreted as an unsigned value rather than a signed value.</param>
            <param name="dwOrigin">The origin for the displacement specified in <i>dlibMove</i>. The origin can be the beginning of the file (<b>STREAM_SEEK_SET</b>), the current seek pointer (<b>STREAM_SEEK_CUR</b>), or the end of the file (<b>STREAM_SEEK_END</b>). For more information about values, see the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ne-objidl-stream_seek">STREAM_SEEK</a> enumeration.</param>
            <param name="plibNewPosition">
            <para>A pointer to the location where this method writes the value of the new seek pointer from the beginning of the stream. You can set this pointer to <b>NULL</b>. In this case, this method does not provide the new seek pointer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-seek#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The seek pointer was successfully adjusted.| |E_PENDING | Asynchronous Storage only: Part or all of the stream data is currently unavailable. | |STG_E_INVALIDPOINTER | Indicates that *plibNewPosition* points to invalid memory, because *plibNewPosition* is not read.| |STG_E_INVALIDFUNCTION | The *dwOrigin* parameter contains an invalid value, or the *dlibMove* parameter contains a bad offset value. For example, the result of the seek pointer is a negative offset value.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para><b>IStream::Seek</b> changes the seek pointer so that subsequent read and write operations can be performed at a different location in the stream object. It is an error to seek before the beginning of the stream. It is not, however, an error to seek past the end of the stream. Seeking past the end of the stream is useful for subsequent write operations, as the stream byte range will be extended to the new seek position immediately before the write is complete. You can also use this method to obtain the current value of the seek pointer by calling this method with the <i>dwOrigin</i> parameter set to <b>STREAM_SEEK_CUR</b> and the <i>dlibMove</i> parameter set to 0 so that the seek pointer is not changed. The current seek pointer is returned in the <i>plibNewPosition</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-seek#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.SetSize(System.UInt64)">
            <summary>Changes the size of the stream object.</summary>
            <param name="libNewSize">Specifies the new size, in bytes, of the stream.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The size of the stream object was successfully changed.| |E_PENDING | Asynchronous Storage only: Part or all of the stream's data is currently unavailable.| |STG_E_MEDIUMFULL | The stream size is not changed because there is no space left on the storage device.| |STG_E_INVALIDFUNCTION | The value of the *libNewSize* parameter is not supported by the implementation. Not all streams support greater than 232 bytes. If a stream does not support more than 232 bytes, the high DWORD data type of *libNewSize* must be zero. If it is nonzero, the implementation may return STG_E_INVALIDFUNCTION. In general, COM-based implementations of the IStream interface do not support streams larger than 232 bytes.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para><b>IStream::SetSize</b> changes the size of the stream object. Call this method to preallocate space for the stream. If the <i>libNewSize</i> parameter is larger than the current stream size, the stream is extended to the indicated size by filling the intervening space with bytes of undefined value. This operation is similar to the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-isequentialstream-write">ISequentialStream::Write</a> method if the seek pointer is past the current end of the stream. If the <i>libNewSize</i> parameter is smaller than the current stream, the stream is truncated to the indicated size. The seek pointer is not affected by the change in stream size. Calling <b>IStream::SetSize</b> can be an effective way to obtain a large chunk of contiguous space.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-setsize#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.CopyTo(Windows.Win32.System.Com.IStream*,System.UInt64,System.UInt64*,System.UInt64*)">
            <summary>Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.</summary>
            <param name="pstm">A pointer to the destination stream. The stream pointed to by <i>pstm</i> can be a new stream or a clone of the source stream.</param>
            <param name="cb">The number of bytes to copy from the source stream.</param>
            <param name="pcbRead">A pointer to the location where this method writes the actual number of bytes read from the source. You can set this pointer to <b>NULL</b>. In this case, this method does not provide the actual number of bytes read.</param>
            <param name="pcbWritten">A pointer to the location where this method writes the actual number of bytes written to the destination. You can set this pointer to <b>NULL</b>. In this case, this method does not provide the actual number of bytes written.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The stream object was successfully copied.| |E_PENDING | Asynchronous Storage only: Part or all of the data to be copied is currently unavailable. | |STG_E_INVALIDPOINTER | The value of one of the pointer parameters is invalid.| |STG_E_MEDIUMFULL | The stream is not copied because there is no space left on the storage device.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>The <b>CopyTo</b> method copies the specified bytes from one stream to another. It can also be used to copy a stream to itself. The seek pointer in each stream instance is adjusted for the number of bytes read or written. This method is equivalent to reading <i>cb</i> bytes into memory using <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-isequentialstream-read">ISequentialStream::Read</a> and then immediately writing them to the destination stream using <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-isequentialstream-write">ISequentialStream::Write</a>, although <b>IStream::CopyTo</b> will be more efficient. The destination stream can be a clone of the source stream created by calling the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istream-clone">IStream::Clone</a> method. If <b>IStream::CopyTo</b> returns an error, you cannot assume that the seek pointers are valid for either the source or destination. Additionally, the values of <i>pcbRead</i> and <i>pcbWritten</i> are not meaningful even though they are returned. If <b>IStream::CopyTo</b> returns successfully, the actual number of bytes read and written are the same. To copy the remainder of the source from the current seek pointer, specify the maximum large integer value for the <i>cb</i> parameter. If the seek pointer is the beginning of the stream, this operation copies the entire stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-copyto#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.Commit(System.UInt32)">
            <summary>The Commit method ensures that any changes made to a stream object open in transacted mode are reflected in the parent storage.</summary>
            <param name="grfCommitFlags">
            <para>Controls how the changes for the stream object are committed. See the <a href="https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-stgc">STGC</a> enumeration for a definition of these values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-commit#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | Changes to the stream object were successfully committed to the parent level.| |E_PENDING | Asynchronous Storage only: Part or all of the stream's data is currently unavailable. | |STG_E_MEDIUMFULL | The commit operation failed due to lack of space on the storage device.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>The <b>Commit</b>  method ensures that changes to a stream object opened in transacted mode are reflected in the parent storage. Changes that have been made to the stream since it was opened or last committed are reflected to the parent storage object. If the parent is opened in transacted mode, the parent may revert at a later time, rolling back the changes to this stream object. The compound file implementation does not support the opening of streams in transacted mode, so this method has very little effect other than to flush memory buffers. For more information, see <a href="https://docs.microsoft.com/windows/desktop/Stg/istream-compound-file-implementation">IStream - Compound File Implementation</a>. If the stream is open in direct mode, this method ensures that any memory buffers have been flushed out to the underlying storage object. This is much like a flush in traditional file systems. The <b>IStream::Commit</b> method is useful on a direct mode stream when the implementation of the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> interface is a wrapper for underlying file system APIs. In this case, <b>IStream::Commit</b> would be connected to the file system's flush call.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-commit#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.Revert">
            <summary>The Revert method discards all changes that have been made to a transacted stream since the last IStream::Commit call. On streams open in direct mode and streams using the COM compound file implementation of IStream::Revert, this method has no effect.</summary>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The stream was successfully reverted to its previous version.| |E_PENDING | Asynchronous Storage only: Part or all of the stream's data is currently unavailable. |</para>
            </returns>
            <remarks>The <b>Revert</b> method discards changes made to a transacted stream since the last commit operation.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.LockRegion(System.UInt64,System.UInt64,System.UInt32)">
            <summary>The LockRegion method restricts access to a specified range of bytes in the stream.</summary>
            <param name="libOffset">Integer that specifies the byte offset for the beginning of the range.</param>
            <param name="cb">Integer that specifies the length of the range, in bytes, to be restricted.</param>
            <param name="dwLockType">Specifies the restrictions being requested on accessing the range.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The specified range of bytes was locked.| |E_PENDING | Asynchronous Storage only: Part or all of the stream's data is currently unavailable. | |STG_E_INVALIDFUNCTION | Locking is not supported at all or the specific type of lock requested is not supported.| |STG_E_LOCKVIOLATION | Requested lock is supported, but cannot be granted because of an existing lock.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>The byte range of the stream can be extended.  Locking an extended range for the stream is useful as a method of communication between different instances of the stream without changing data that is actually part of the stream. Three types of locking can be supported: locking to exclude other writers, locking to exclude other readers or writers, and locking that allows only one requester to obtain a lock on the given range, which is usually an alias for one of the other two lock types. A given stream instance might support either of the first two types, or both. The lock type is specified by <i>dwLockType</i>, using a value from the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ne-objidl-locktype">LOCKTYPE</a> enumeration. Any region locked with <b>IStream::LockRegion</b> must later be explicitly unlocked by calling <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istream-unlockregion">IStream::UnlockRegion</a> with exactly the same values for the <i>libOffset</i>, <i>cb</i>, and <i>dwLockType</i> parameters. The region must be unlocked before the stream is released. Two adjacent regions cannot be locked separately and then unlocked with a single unlock call. <h3><a id="Notes_to_Callers"></a><a id="notes_to_callers"></a><a id="NOTES_TO_CALLERS"></a>Notes to Callers</h3> Since the type of locking supported is optional and can vary in different implementations of <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>, you must provide code to deal with the STG_E_INVALIDFUNCTION error. The <b>LockRegion</b> method has no effect in the compound file implementation, because the implementation does not support range locking. <h3><a id="Notes_to_Implementers"></a><a id="notes_to_implementers"></a><a id="NOTES_TO_IMPLEMENTERS"></a>Notes to Implementers</h3> Support for this method is optional for implementations of stream objects since it may not be supported by the underlying file system. The type of locking supported is also optional. The STG_E_INVALIDFUNCTION error is returned if the requested type of locking is not supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-lockregion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.UnlockRegion(System.UInt64,System.UInt64,System.UInt32)">
            <summary>The UnlockRegion method removes the access restriction on a range of bytes previously restricted with IStream::LockRegion.</summary>
            <param name="libOffset">Specifies the byte offset for the beginning of the range.</param>
            <param name="cb">Specifies, in bytes, the length of the range to be restricted.</param>
            <param name="dwLockType">Specifies the access restrictions previously placed on the range.</param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The byte range was unlocked.| |E_PENDING | Asynchronous Storage only: Part or all of the stream's data is currently unavailable.| |STG_E_INVALIDFUNCTION | Locking is not supported at all or the specific type of lock requested is not supported.| |STG_E_LOCKVIOLATION | The requested unlock operation cannot be granted.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para><b>IStream::UnlockRegion</b> unlocks a region previously locked with the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istream-lockregion">IStream::LockRegion</a> method. Locked regions must later be explicitly unlocked by calling <b>IStream::UnlockRegion</b> with exactly the same values for the <i>libOffset</i>, <i>cb</i>, and <i>dwLockType</i> parameters. The region must be unlocked before the stream is released. Two adjacent regions cannot be locked separately and then unlocked with a single unlock call.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-unlockregion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.Stat(Windows.Win32.System.Com.STATSTG@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IStream.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)">
            <summary>The Stat method retrieves the STATSTG structure for this stream.</summary>
            <param name="pstatstg">
            <para>Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure where this method places information about this stream object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="grfStatFlag">
            <para>Specifies that this method does not return some of the members in the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure, thus saving a memory allocation operation. Values are taken from the <a href="https://docs.microsoft.com/windows/desktop/api/wtypes/ne-wtypes-statflag">STATFLAG</a> enumeration.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-stat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The STATSTG structure was successfully returned at the specified location.| |E_PENDING | Asynchronous Storage only: Part or all of the stream's data is currently unavailable. | |STG_E_ACCESSDENIED | The caller does not have enough permissions for accessing statistics for this storage object.| |STG_E_INSUFFICIENTMEMORY | The STATSTG structure was not returned due to a lack of memory.| |STG_E_INVALIDFLAG | The value for the *grfStateFlag* parameter is not valid.| |STG_E_INVALIDPOINTER | The *pStatStg* pointer is not valid.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para><b>IStream::Stat</b> retrieves a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ns-objidl-statstg">STATSTG</a> structure that contains information about this open stream. When this stream is within a structured storage and <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-enumelements">IStorage::EnumElements</a> is called, it creates an enumerator object with the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstatstg">IEnumSTATSTG</a> interface on it, which can be called to enumerate the storages and streams through the <b>STATSTG</b> structures associated with each of them.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-stat#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IStream.Clone(Windows.Win32.System.Com.IStream**)">
            <summary>The Clone method creates a new stream object with its own seek pointer that references the same bytes as the original stream.</summary>
            <param name="ppstm">
            <para>When successful, pointer to the location of an <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> pointer to the new stream object. If an error occurs, this parameter is <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-clone#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. | Return code | Description | |----------------|---------------| |S_OK | The stream was successfully cloned.| |E_PENDING | Asynchronous Storage only: Part or all of the stream's data is currently unavailable. | |STG_E_INSUFFICIENTMEMORY | The stream was not cloned due to a lack of memory.| |STG_E_INVALIDPOINTER | The ppStm pointer is not valid.| |STG_E_REVERTED | The object has been invalidated by a revert operation above it in the transaction tree.|</para>
            </returns>
            <remarks>
            <para>The <b>Clone</b> method creates a new stream object for accessing the same bytes but using a separate seek pointer. The new stream object sees the same data as the source-stream object. Changes written to one object are immediately visible in the other. Range locking is shared between the stream objects. The initial setting of the seek pointer in the cloned stream instance is the same as the current setting of the seek pointer in the original stream at the time of the clone operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/nf-objidl-istream-clone#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.IStream.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{0000000c-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeComp.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeComp.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeComp.Bind(Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt16,Windows.Win32.System.Com.ITypeInfo**,Windows.Win32.System.Com.DESCKIND@,Windows.Win32.System.Com.BINDPTR@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeComp.Bind(Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt16,Windows.Win32.System.Com.ITypeInfo**,Windows.Win32.System.Com.DESCKIND*,Windows.Win32.System.Com.BINDPTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeComp.Bind(Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt16,Windows.Win32.System.Com.ITypeInfo**,Windows.Win32.System.Com.DESCKIND*,Windows.Win32.System.Com.BINDPTR*)">
            <summary>Maps a name to a member of a type, or binds global variables and functions contained in a type library.</summary>
            <param name="szName">The name to be bound.</param>
            <param name="lHashVal">The hash value for the name computed by <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-lhashvalofnamesys">LHashValOfNameSys</a>.</param>
            <param name="wFlags">One or more of the flags defined in the INVOKEKIND enumeration. Specifies whether the name was referenced as a method or a property. When binding to a variable, specify the flag INVOKE_PROPERTYGET. Specify zero to bind to any type of member.</param>
            <param name="ppTInfo">If a FUNCDESC or VARDESC was returned, then <i>ppTInfo</i> points to a pointer to the type description that contains the item to which it is bound.</param>
            <param name="pDescKind">Indicates whether the name bound to is a VARDESC, FUNCDESC, or TYPECOMP. If there was no match, DESCKIND_NONE.</param>
            <param name="pBindPtr">The bound-to VARDESC, FUNCDESC, or <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> interface.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Use <b>Bind</b> for binding to the variables and methods of a type, or for binding to the global variables and methods in a type library. The returned DESCKIND pointer <i>pDescKind</i> indicates whether the name was bound to a VARDESC, a FUNCDESC, or to an <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> instance. The returned <i>pBindPtr</i> points to the VARDESC, FUNCDESC, or <b>ITypeComp</b>. If a data member or method is bound to, then ppTInfopoints to the type description that contains the method or data member.</para>
            <para>If <b>Bind</b> binds the name to a nested binding context, it returns a pointer to an <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> instance in <i>pBindPtr</i> and a null type description pointer in <i>ppTInfo</i>. For example, if the name of a type description is passed for a module (TKIND_MODULE), enumeration (TKIND_ENUM), or coclass (TKIND_COCLASS), Bind returns the <b>ITypeComp</b> instance of the type description for the module, enumeration, or coclass. This feature supports languages such as Visual Basic that allow references to members of a type description to be qualified by the name of the type description. For example, a function in a module can be referenced by <i>modulename</i>.<i>functionname.</i> The members of TKIND_ENUM, TKIND_MODULE, and TKIND_COCLASS types marked as Application objects can be bound to directly from <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a>, without specifying the name of the module. The <b>ITypeComp</b> of a coclass defers to the <b>ITypeComp</b> of its default interface.</para>
            <para>As with other methods of <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a>, <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a>, and <b>ITypeInfo</b>, the calling code is responsible for releasing the returned object instances or structures. If a VARDESC or FUNCDESC is returned, the caller is responsible for deleting it with the returned type description and releasing the type description instance itself. Otherwise, if an <b>ITypeComp</b> instance is returned, the caller must release it.</para>
            <para>Special rules apply if you call a type library's <b>Bind</b> method, passing it the name of a member of an Application object class (a class that has the TYPEFLAG_FAPPOBJECT flag set). In this case, Bind returns DESCKIND_IMPLICITAPPOBJ in <i>pDescKind</i>, a VARDESC that describes the Application object in <i>pBindPtr</i>, and the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> of the Application object class in <i>ppTInfo</i>. To bind to the object, <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-gettypecomp">ITypeInfo::GetTypeComp</a> must make a call to get the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> of the Application object class, and then reinvoke its <b>Bind</b> method with the name initially passed to the type library's <b>ITypeComp</b>.</para>
            <para>The caller should use the returned <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> pointer (<i>ppTInfo</i>) to get the address of the member.</para>
            <para><div class="alert"><b>Note</b>  The <i>wflags</i> parameter is the same as the <i>wflags</i> parameter in <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-invoke">IDispatch::Invoke</a>. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypecomp-bind#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeComp.BindType(Windows.Win32.Foundation.PWSTR,System.UInt32,Windows.Win32.System.Com.ITypeInfo**,Windows.Win32.System.Com.ITypeComp**)">
            <summary>Binds to the type descriptions contained within a type library.</summary>
            <param name="szName">The name to be bound.</param>
            <param name="lHashVal">The hash value for the name computed by <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-lhashvalofname">LHashValOfName</a>.</param>
            <param name="ppTInfo">An <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> of the type to which the name was bound.</param>
            <param name="ppTComp">Passes a valid pointer, such as the address of an <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> variable.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>Use the function <b>BindType</b> for binding a type name to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> that describes the type. This function is invoked on the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> that is returned by <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypelib-gettypecomp">ITypeLib::GetTypeComp</a> to bind to types defined within that library. It can also be used in the future for binding to nested types.</remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.ITypeComp.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00020403-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetTypeAttr(Windows.Win32.System.Com.TYPEATTR*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetTypeAttr(Windows.Win32.System.Com.TYPEATTR**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetTypeAttr(Windows.Win32.System.Com.TYPEATTR**)">
            <summary>Retrieves a TYPEATTR structure that contains the attributes of the type description.</summary>
            <param name="ppTypeAttr">The attributes of this type description.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>To free the TYPEATTR structure, use <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-releasetypeattr">ITypeInfo::ReleaseTypeAttr</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetTypeComp(Windows.Win32.System.Com.ITypeComp**)">
            <summary>Retrieves the ITypeComp interface for the type description, which enables a client compiler to bind to the type description's members.</summary>
            <param name="ppTComp">The <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> of the containing type library.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>A client compiler can use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> interface to bind to members of the type.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetFuncDesc(System.UInt32,Windows.Win32.System.Com.FUNCDESC*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetFuncDesc(System.UInt32,Windows.Win32.System.Com.FUNCDESC**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetFuncDesc(System.UInt32,Windows.Win32.System.Com.FUNCDESC**)">
            <summary>Retrieves the FUNCDESC structure that contains information about a specified function.</summary>
            <param name="index">The index of the function whose description is to be returned. The <i>index</i> should be in the range of 0 to 1 less than the number of functions in this type.</param>
            <param name="ppFuncDesc">A FUNCDESC structure that describes the specified function.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The function <b>ITypeInfo::GetFuncDesc</b> provides access to a FUNCDESC structure that describes the function with the specified <i>index</i>. The FUNCDESC structure should be freed with <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-releasefuncdesc">ITypeInfo::ReleaseFuncDesc</a>. The number of functions in the type is one of the attributes contained in the TYPEATTR structure.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetVarDesc(System.UInt32,Windows.Win32.System.Com.VARDESC*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetVarDesc(System.UInt32,Windows.Win32.System.Com.VARDESC**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetVarDesc(System.UInt32,Windows.Win32.System.Com.VARDESC**)">
            <summary>Retrieves a VARDESC structure that describes the specified variable.</summary>
            <param name="index">The index of the variable whose description is to be returned. The index should be in the range of 0 to 1 less than the number of variables in this type.</param>
            <param name="ppVarDesc">A VARDESC that describes the specified variable.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>To free the VARDESC structure, use <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-releasevardesc">ReleaseVarDesc</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetNames(System.Int32,Windows.Win32.SysFreeStringSafeHandle@,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetNames(System.Int32,Windows.Win32.Foundation.BSTR*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetNames(System.Int32,Windows.Win32.Foundation.BSTR*,System.UInt32,System.UInt32*)">
            <summary>Retrieves the variable with the specified member ID or the name of the property or method and the parameters that correspond to the specified function ID.</summary>
            <param name="memid">The ID of the member whose name (or names) is to be returned.</param>
            <param name="rgBstrNames">The caller-allocated array. On return, each of the elements contains the name (or names) associated with the member.</param>
            <param name="cMaxNames">The length of the passed-in <i>rgBstrNames</i> array.</param>
            <param name="pcNames">The number of names in the <i>rgBstrNames</i> array.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The caller must release the returned BSTR array.</para>
            <para>If the member ID identifies a property that is implemented with property functions, the property name is returned. For property get functions, the names of the function and its parameters are always returned.</para>
            <para>For property put and put reference functions, the right side of the assignment is unnamed. If <i>cMaxNames</i> is less than is required to return all of the names of the parameters of a function, then only the names of the first <i>cMaxNames</i> - 1 parameters are returned. The names of the parameters are returned in the array in the same order that they appear elsewhere in the interface (for example, the same order in the parameter array associated with the FUNCDESC enumeration).</para>
            <para>If the type description inherits from another type description, this function is recursive to the base type description, if necessary, to find the item with the requested member ID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-getnames#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetRefTypeOfImplType(System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetRefTypeOfImplType(System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetRefTypeOfImplType(System.UInt32,System.UInt32*)">
            <summary>If a type description describes a COM class, it retrieves the type description of the implemented interface types.</summary>
            <param name="index">The index of the implemented type whose handle is returned. The valid range is 0 to the <b>cImplTypes</b> field in the TYPEATTR structure.</param>
            <param name="pRefType">A handle for the implemented interface (if any). This handle can be passed to <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-getreftypeinfo">ITypeInfo::GetRefTypeInfo</a> to get the type description.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>If the TKIND_DISPATCH type description is for a dual interface, the TKIND_INTERFACE type description can be obtained by calling <b>GetRefTypeOfImplType</b> with an <i>index</i> of –1, and by passing the returned <i>pRefTypehandle</i> to <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-getreftypeinfo">GetRefTypeInfo</a> to retrieve the type information.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetImplTypeFlags(System.UInt32,Windows.Win32.System.Com.IMPLTYPEFLAGS@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetImplTypeFlags(System.UInt32,Windows.Win32.System.Com.IMPLTYPEFLAGS*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetImplTypeFlags(System.UInt32,Windows.Win32.System.Com.IMPLTYPEFLAGS*)">
            <summary>Retrieves the IMPLTYPEFLAGS enumeration for one implemented interface or base interface in a type description.</summary>
            <param name="index">The index of the implemented interface or base interface for which to get the flags.</param>
            <param name="pImplTypeFlags">The IMPLTYPEFLAGS enumeration value.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The flags are associated with the act of inheritance, and not with the inherited interface.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetIDsOfNames(System.Span{Windows.Win32.Foundation.PWSTR},System.Span{System.Int32})">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetIDsOfNames(Windows.Win32.Foundation.PWSTR*,System.UInt32,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetIDsOfNames(Windows.Win32.Foundation.PWSTR*,System.UInt32,System.Int32*)">
            <summary>Maps between member names and member IDs, and parameter names and parameter IDs.</summary>
            <param name="rgszNames">An array of names to be mapped.</param>
            <param name="cNames">The count of the names to be mapped.</param>
            <param name="pMemId">Caller-allocated array in which name mappings are placed.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The function <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-getidsofnames">GetIDsOfNames</a> maps the name of a member (<b>rgszNames</b>[0]) and its parameters (<b>rgszNames</b>[1] ...<b>rgszNames</b>[<b>cNames</b>- 1]) to the ID of the member (<b>pMemId</b>[0]), and to the IDs of the specified parameters (<b>pMemId</b>[1] ... <b>pMemId</b>[<b>cNames</b>- 1]). The IDs of parameters are 0 for the first parameter in the member function's argument list, 1 for the second, and so on.</para>
            <para>If the type description inherits from another type description, this function is recursive to the base type description, if necessary, to find the item with the requested member ID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-getidsofnames#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.Invoke(System.Void*,System.Int32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS@,Windows.Win32.System.Variant.VARIANT@,Windows.Win32.System.Com.EXCEPINFO@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Invoke(System.Void*,System.Int32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS*,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.System.Com.EXCEPINFO*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.Invoke(System.Void*,System.Int32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS*,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.System.Com.EXCEPINFO*,System.UInt32*)">
            <summary>Invokes a method, or accesses a property of an object, that implements the interface described by the type description.</summary>
            <param name="pvInstance">An instance of the interface described by this type description.</param>
            <param name="memid">The interface member.</param>
            <param name="wFlags">
            <para>Flags describing the context of the invoke call. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-invoke#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDispParams">An array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.</param>
            <param name="pVarResult">The result. Should be null if the caller does not expect any result. If <i>wFlags</i> specifies DISPATCH_PROPERTYPUT or DISPATCH_PROPERTYPUTREF, <i>pVarResultis</i> is ignored.</param>
            <param name="pExcepInfo">An exception information structure, which is filled in only if DISP_E_EXCEPTION is returned. If <i>pExcepInfo</i> is null on input, only an HRESULT error will be returned.</param>
            <param name="puArgErr">If Invoke returns DISP_E_TYPEMISMATCH, <i>puArgErr</i> indicates the index (within <i>rgvarg</i>) of the argument with incorrect type. If more than one argument returns an error, <i>puArgErr</i> indicates only the first argument with an error. Arguments in pDispParams-&gt;rgvarg appear in reverse order, so the first argument is the one having the highest index in the array. This parameter cannot be null.</param>
            <returns>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Use the function <b>ITypeInfo::Invoke</b> to access a member of an object or invoke a method that implements the interface described by this type description. For objects that support the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> interface, you can use <b>Invoke</b> to implement <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-invoke">IDispatch::Invoke</a>.</para>
            <para><b>ITypeInfo::Invoke</b> takes a pointer to an instance of the class. Otherwise, its parameters are the same as <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-invoke">IDispatch::Invoke</a>, except that <b>ITypeInfo::Invoke</b> omits the <i>refiid</i> and <i>lcid</i> parameters. When called, <b>ITypeInfo::Invoke</b> performs the actions described by the <b>IDispatch::Invoke</b> parameters on the specified instance.</para>
            <para>For VTBL interface members, <b>ITypeInfo::Invoke</b> passes the LCID of the type information into parameters tagged with the lcid attribute, and the returned value into the retval attribute.</para>
            <para>If the type description inherits from another type description, this function recurses on the base type description to find the item with the requested member ID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-invoke#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetDocumentation(System.Int32,Windows.Win32.SysFreeStringSafeHandle@,Windows.Win32.SysFreeStringSafeHandle@,System.UInt32@,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetDocumentation(System.Int32,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt32*,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetDocumentation(System.Int32,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt32*,Windows.Win32.Foundation.BSTR*)">
            <summary>Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.</summary>
            <param name="memid">The ID of the member whose documentation is to be returned.</param>
            <param name="pBstrName">The name of the specified item. If the caller does not need the item name, <i>pBstrName</i> can be null.</param>
            <param name="pBstrDocString">The documentation string for the specified item. If the caller does not need the documentation string, <i>pBstrDocString</i> can be null.</param>
            <param name="pdwHelpContext">The Help localization context. If the caller does not need the Help context, it can be null.</param>
            <param name="pBstrHelpFile">The fully qualified name of the file containing the DLL used for Help file. If the caller does not need the file name, it can be null.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The function <b>GetDocumentation</b> provides access to the documentation for the member specified by the <i>memid</i> parameter. If the passed-in <i>memid</i> is MEMBERID_NIL, then the documentation for the type description is returned.</para>
            <para>If the type description inherits from another type description, this function is recursive to the base type description, if necessary, to find the item with the requested member ID.</para>
            <para>The caller should use <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a> to free the BSTRs referenced by <i>pBstrName</i>, <i>pBstrDocString</i>, and <i>pBstrHelpFile</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-getdocumentation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetDllEntry(System.Int32,Windows.Win32.System.Com.INVOKEKIND,Windows.Win32.SysFreeStringSafeHandle@,Windows.Win32.SysFreeStringSafeHandle@,System.UInt16@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetDllEntry(System.Int32,Windows.Win32.System.Com.INVOKEKIND,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt16*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetDllEntry(System.Int32,Windows.Win32.System.Com.INVOKEKIND,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt16*)">
            <summary>Retrieves a description or specification of an entry point for a function in a DLL.</summary>
            <param name="memid">The ID of the member function whose DLL entry description is to be returned.</param>
            <param name="invKind">The kind of member identified by <i>memid</i>. This is important for properties, because one <i>memid</i> can identify up to three separate functions.</param>
            <param name="pBstrDllName">If not null, the function sets <i>pBstrDllName</i> to the name of the DLL.</param>
            <param name="pBstrName">If not null, the function sets <i>pBstrName</i> to the name of the entry point. If the entry point is specified by an ordinal, this argument is null.</param>
            <param name="pwOrdinal">If not null, and if the function is defined by an ordinal, the function sets <i>pwOrdinal</i> to the ordinal.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The caller passes in a member ID, which represents the member function whose entry description is desired. If the function has a DLL entry point, the name of the DLL that contains the function, as well as its name or ordinal identifier, are placed in the passed-in pointers allocated by the caller. If there is no DLL entry point for the function, an error is returned.</para>
            <para>If the type description inherits from another type description, this function is recursive to the base type description, if necessary, to find the item with the requested member ID.</para>
            <para>The caller should use <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a> to free the BSTRs referenced by <i>pBstrName</i> and <i>pBstrDllName</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-getdllentry#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetRefTypeInfo(System.UInt32,Windows.Win32.System.Com.ITypeInfo**)">
            <summary>If a type description references other type descriptions, it retrieves the referenced type descriptions.</summary>
            <param name="hRefType">A handle to the referenced type description to return.</param>
            <param name="ppTInfo">The referenced type description.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>On return, the second parameter contains a pointer to a pointer to a type description that is referenced by this type description. A type description must have a reference to each type description that occurs as the type of any of its variables, function parameters, or function return types. For example, if the type of a data member is a record type, the type description for that data member contains the <i>hRefType</i> of a referenced type description. To get a pointer to the type description, the reference is passed to <b>GetRefTypeInfo</b>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.AddressOfMember(System.Int32,Windows.Win32.System.Com.INVOKEKIND,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.AddressOfMember(System.Int32,Windows.Win32.System.Com.INVOKEKIND,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.AddressOfMember(System.Int32,Windows.Win32.System.Com.INVOKEKIND,System.Void**)">
            <summary>Retrieves the addresses of static functions or variables, such as those defined in a DLL.</summary>
            <param name="memid">The member ID of the static member whose address is to be retrieved. The member ID is defined by the DISPID.</param>
            <param name="invKind">Indicates whether the member is a property, and if so, what kind.</param>
            <param name="ppv">The static member.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The addresses are valid until the caller releases its reference to the type description. The <i>invKind</i> parameter can be ignored unless the address of a property function is being requested. If the type description inherits from another type description, this function is recursive to the base type description, if necessary, to find the item with the requested member ID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-addressofmember#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.CreateInstance(Windows.Win32.System.Com.IUnknown*,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.CreateInstance(Windows.Win32.System.Com.IUnknown*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.CreateInstance(Windows.Win32.System.Com.IUnknown*,System.Guid*,System.Void**)">
            <summary>Creates a new instance of a type that describes a component object class (coclass).</summary>
            <param name="pUnkOuter">The controlling <b>IUnknown</b>. If Null, then a stand-alone instance is created. If valid, then an aggregate object is created.</param>
            <param name="riid">An ID for the interface that the caller will use to communicate with the resulting object.</param>
            <param name="ppvObj">An instance of the created object.</param>
            <returns>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>For types that describe a component object class (coclass), <b>CreateInstance</b> creates a new instance of the class. Normally, <b>CreateInstance</b> calls <b>CoCreateInstance</b> with the type description's GUID. For an Application object, it first calls <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-getactiveobject">GetActiveObject</a>. If the application is active, <b>GetActiveObject</b> returns the active object; otherwise, if <b>GetActiveObject</b> fails, <b>CreateInstance</b> calls <b>CoCreateInstance</b>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetMops(System.Int32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetMops(System.Int32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetMops(System.Int32,Windows.Win32.Foundation.BSTR*)">
            <summary>Retrieves marshaling information.</summary>
            <param name="memid">The member ID that indicates which marshaling information is needed.</param>
            <param name="pBstrMops">The opcode string used in marshaling the fields of the structure described by the referenced type description, or null if there is no information to return.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the passed-in member ID is MEMBERID_NIL, the function returns the opcode string for marshaling the fields of the structure described by the type description. Otherwise, it returns the opcode string for marshaling the function specified by the index.</para>
            <para>If the type description inherits from another type description, this function recurses on the base type description, if necessary, to find the item with the requested member ID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-getmops#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetContainingTypeLib(Windows.Win32.System.Com.ITypeLib**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.GetContainingTypeLib(Windows.Win32.System.Com.ITypeLib**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.GetContainingTypeLib(Windows.Win32.System.Com.ITypeLib**,System.UInt32*)">
            <summary>Retrieves the containing type library and the index of the type description within that type library.</summary>
            <param name="ppTLib">The containing type library.</param>
            <param name="pIndex">The index of the type description within the containing type library.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-getcontainingtypelib">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.ReleaseTypeAttr(Windows.Win32.System.Com.TYPEATTR@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.ReleaseTypeAttr(Windows.Win32.System.Com.TYPEATTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.ReleaseTypeAttr(Windows.Win32.System.Com.TYPEATTR*)">
            <summary>Releases a TYPEATTR previously returned by ITypeInfo::GetTypeAttr.</summary>
            <param name="pTypeAttr">The TYPEATTR to be freed.</param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-releasetypeattr">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.ReleaseFuncDesc(Windows.Win32.System.Com.FUNCDESC@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.ReleaseFuncDesc(Windows.Win32.System.Com.FUNCDESC*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.ReleaseFuncDesc(Windows.Win32.System.Com.FUNCDESC*)">
            <summary>Releases a FUNCDESC previously returned by ITypeInfo::GetFuncDesc.</summary>
            <param name="pFuncDesc">The FUNCDESC to be freed.</param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-releasefuncdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.ReleaseVarDesc(Windows.Win32.System.Com.VARDESC@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.ReleaseVarDesc(Windows.Win32.System.Com.VARDESC*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeInfo.ReleaseVarDesc(Windows.Win32.System.Com.VARDESC*)">
            <summary>Releases a VARDESC previously returned by ITypeInfo::GetVarDesc.</summary>
            <param name="pVarDesc">The VARDESC to be freed.</param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypeinfo-releasevardesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.ITypeInfo.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00020401-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfoCount">
            <summary>Provides the number of type descriptions that are in a type library.</summary>
            <returns>The number of type descriptions in the type library.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypelib-gettypeinfocount">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfo(System.UInt32,Windows.Win32.System.Com.ITypeInfo**)">
            <summary>Retrieves the specified type description in the library.</summary>
            <param name="index">The index of the interface to be returned.</param>
            <param name="ppTInfo">If successful, returns a pointer to the pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> interface.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>For dual interfaces, <b>GetTypeInfo</b> returns only the TKIND_DISPATCH type information. To get the TKIND_INTERFACE type information, <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-getreftypeofimpltype">GetRefTypeOfImplType</a> can be called on the TKIND_DISPATCH type information, passing an index of –1. Then, the returned type information handle can be passed to <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-getreftypeinfo">GetRefTypeInfo</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfoType(System.UInt32,Windows.Win32.System.Com.TYPEKIND@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfoType(System.UInt32,Windows.Win32.System.Com.TYPEKIND*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfoType(System.UInt32,Windows.Win32.System.Com.TYPEKIND*)">
            <summary>Retrieves the type of a type description.</summary>
            <param name="index">The index of the type description within the type library.</param>
            <param name="pTKind">The <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/ne-oaidl-typekind">TYPEKIND</a> enumeration value for the type description.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypelib-gettypeinfotype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfoOfGuid(System.Guid@,Windows.Win32.System.Com.ITypeInfo**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfoOfGuid(System.Guid*,Windows.Win32.System.Com.ITypeInfo**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetTypeInfoOfGuid(System.Guid*,Windows.Win32.System.Com.ITypeInfo**)">
            <summary>Retrieves the type description that corresponds to the specified GUID.</summary>
            <param name="guid">The GUID of the type description.</param>
            <param name="ppTinfo">The <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</a> interface.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypelib-gettypeinfoofguid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetLibAttr(Windows.Win32.System.Com.TLIBATTR*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.GetLibAttr(Windows.Win32.System.Com.TLIBATTR**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetLibAttr(Windows.Win32.System.Com.TLIBATTR**)">
            <summary>Retrieves the structure that contains the library's attributes.</summary>
            <param name="ppTLibAttr">The library's attributes.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>Use <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypelib-releasetlibattr">ITypeLib::ReleaseTLibAttr</a> to free the memory occupied by the TLIBATTR structure.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetTypeComp(Windows.Win32.System.Com.ITypeComp**)">
            <summary>Enables a client compiler to bind to the types, variables, constants, and global functions for a library.</summary>
            <param name="ppTComp">The <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> instance for this <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypelib">ITypeLib</a>. A client compiler uses the methods in the <b>ITypeComp</b> interface to bind to types in <b>ITypeLib</b>, as well as to the global functions, variables, and constants defined in <b>ITypeLib</b></param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/nf-oaidl-itypecomp-bind">Bind</a> function of the returned <b>TypeComp</b> binds to global functions, variables, constants, enumerated values, and coclass members. The <b>Bind</b> function also binds the names of the TYPEKIND enumerations of TKIND_MODULE, TKIND_ENUM, and TKIND_COCLASS. These names shadow any global names defined within the type information. The members of TKIND_ENUM, TKIND_MODULE, and TKIND_COCLASS types marked as Application objects can be directly bound to from <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> without specifying the name of the module.</para>
            <para><a href="https://docs.microsoft.com/windows/desktop/api/oaidl/nf-oaidl-itypecomp-bind">ITypeComp::Bind</a> and <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypecomp-bindtype">ITypeComp::BindType</a> accept only unqualified names. <b>ITypeLib::GetTypeComp</b> returns a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> interface, which is then used to bind to global elements in the library. The names of some types (TKIND_ENUM, TKIND_MODULE, and TKIND_COCLASS) share the name space with variables, functions, constants, and enumerators. If a member requires qualification to differentiate it from other items in the name space, <b>GetTypeComp</b> can be called successively for each qualifier in order to bind to the desired member. This allows programming language compilers to access members of modules, enumerations, and coclasses, even though the member can't be bound to with a qualified name.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypelib-gettypecomp#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetDocumentation(System.Int32,Windows.Win32.SysFreeStringSafeHandle@,Windows.Win32.SysFreeStringSafeHandle@,System.UInt32@,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.GetDocumentation(System.Int32,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt32*,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.GetDocumentation(System.Int32,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt32*,Windows.Win32.Foundation.BSTR*)">
            <summary>Retrieves the documentation string for the library, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.</summary>
            <param name="index">The index of the type description whose documentation is to be returned. If <i>index</i> is -1, then the documentation for the library itself is returned.</param>
            <param name="pBstrName">The name of the specified item. If the caller does not need the item name, then <i>pBstrName</i> can be null.</param>
            <param name="pBstrDocString">The documentation string for the specified item. If the caller does not need the documentation string, then <i>pBstrDocString</i> can be null..</param>
            <param name="pdwHelpContext">The Help context identifier (ID) associated with the specified item. If the caller does not need the Help context ID, then <i>pdwHelpContext</i> can be null.</param>
            <param name="pBstrHelpFile">The fully qualified name of the Help file. If the caller does not need the Help file name, then <i>pBstrHelpFile</i> can be null.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The caller should free the parameters <i>pBstrName</i>, <i>pBstrDocString</i>, and <i>pBstrHelpFile</i>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.IsName(System.Span{System.Char}@,System.UInt32,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.IsName(Windows.Win32.Foundation.PWSTR,System.UInt32,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.IsName(Windows.Win32.Foundation.PWSTR,System.UInt32,Windows.Win32.Foundation.BOOL*)">
            <summary>Indicates whether a passed-in string contains the name of a type or member described in the library.</summary>
            <param name="szNameBuf">The string to test. If this method is successful, <i>szNameBuf</i> is modified to match the case (capitalization) found in the type library.</param>
            <param name="lHashVal">The hash value of <i>szNameBuf</i>.</param>
            <param name="pfName">True if <i>szNameBuf</i> was found in the type library; otherwise false.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypelib-isname">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.FindName(System.Span{System.Char}@,System.UInt32,Windows.Win32.System.Com.ITypeInfo**,System.Int32*,System.UInt16@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.FindName(Windows.Win32.Foundation.PWSTR,System.UInt32,Windows.Win32.System.Com.ITypeInfo**,System.Int32*,System.UInt16*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.FindName(Windows.Win32.Foundation.PWSTR,System.UInt32,Windows.Win32.System.Com.ITypeInfo**,System.Int32*,System.UInt16*)">
            <summary>Finds occurrences of a type description in a type library. This may be used to quickly verify that a name exists in a type library.</summary>
            <param name="szNameBuf">The name to search for.</param>
            <param name="lHashVal">A hash value to speed up the search, computed by the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-lhashvalofnamesys">LHashValOfNameSys</a> function. If <i>lHashVal</i> = 0, a value is computed.</param>
            <param name="ppTInfo">An array of pointers to the type descriptions that contain the name specified in <i>szNameBuf</i>. This parameter cannot be null.</param>
            <param name="rgMemId">An array of the found items; <i>rgMemId</i>[<i>i</i>] is the MEMBERID that indexes into the type description specified by <i>ppTInfo</i>[<i>i</i>]. This parameter cannot be null.</param>
            <param name="pcFound">
            <para>On entry, indicates how many instances to look for. For example, *<i>pcFound</i> = 1 can be called to find the first occurrence. The search stops when one is found. On exit, indicates the number of instances that were found. If the in and out values of *<i>pcFound</i> are identical, there may be more type descriptions that contain the name.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypelib-findname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>Passing *<i>pcFound</i> = <i>n</i> indicates that there is enough room in the <i>ppTInfo</i> and <i>rgMemId</i> arrays for <i>n</i> (<i>ptinfo</i>, <i>memid</i>) pairs. The function returns MEMBERID_NIL in <i>rgMemId</i>[<i>i</i>], if the name in <i>szNameBuf</i> is the name of the type information in <i>ppTInfo</i>[<i>i</i>].</remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.ReleaseTLibAttr(Windows.Win32.System.Com.TLIBATTR@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.ReleaseTLibAttr(Windows.Win32.System.Com.TLIBATTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.ITypeLib.ReleaseTLibAttr(Windows.Win32.System.Com.TLIBATTR*)">
            <summary>Releases the TLIBATTR originally obtained from GetLibAttr.</summary>
            <param name="pTLibAttr">The TLIBATTR to be freed.</param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-itypelib-releasetlibattr">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.ITypeLib.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00020402-0000-0000-c000-000000000046}</value>
        </member>
        <member name="M:Windows.Win32.System.Com.IUnknown.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IUnknown.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Com.IUnknown.QueryInterface(System.Guid*,System.Void**)">
            <summary>A helper function template that infers an interface identifier, and calls [QueryInterface(REFIID,void)](/windows/desktop/api/unknwn/nf-unknwn-iunknown-queryinterface(refiid_void)).</summary>
            <returns>The function passes the return value back from [QueryInterface(REFIID,void)](/windows/desktop/api/unknwn/nf-unknwn-iunknown-queryinterface(refiid_void)).</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/unknwn/nf-unknwn-iunknown-queryinterface(q)">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IUnknown.AddRef">
            <summary>Increments the reference count for an interface pointer to a COM object. You should call this method whenever you make a copy of an interface pointer.</summary>
            <returns>The method returns the new reference count. This value is intended to be used only for test purposes.</returns>
            <remarks>
            <para>A COM object uses a per-interface reference-counting mechanism to ensure that the object doesn't outlive references to it. You use **AddRef** to stabilize a copy of an interface pointer. It can also be called when the life of a cloned pointer must extend beyond the lifetime of the original pointer. The cloned pointer must be released by calling [IUnknown::Release](/windows/desktop/api/unknwn/nf-unknwn-iunknown-queryinterface(refiid_void)) on it. The internal reference counter that **AddRef** maintains should be a 32-bit unsigned integer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/unknwn/nf-unknwn-iunknown-addref#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.IUnknown.Release">
            <summary>Decrements the reference count for an interface on a COM object.</summary>
            <returns>The method returns the new reference count. This value is intended to be used only for test purposes.</returns>
            <remarks>
            <para>When the reference count on an object reaches zero, **Release** must cause the interface pointer to free itself. When the released pointer is the only (formerly) outstanding reference to an object (whether the object supports single or multiple interfaces), the implementation must free the object. Note that aggregation of objects restricts the ability to recover interface pointers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/unknwn/nf-unknwn-iunknown-release#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.IUnknown.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000000-0000-0000-c000-000000000046}</value>
        </member>
        <member name="T:Windows.Win32.System.Com.LOCKTYPE">
            <summary>The LOCKTYPE enumeration values indicate the type of locking requested for the specified range of bytes. The values are used in the ILockBytes::LockRegion and IStream::LockRegion methods.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/ne-objidl-locktype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.LOCKTYPE.LOCK_WRITE">
            <summary>If this lock is granted, the specified range of bytes can be opened and read any number of times, but writing to the locked range is prohibited except for the owner that was granted this lock.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.LOCKTYPE.LOCK_EXCLUSIVE">
            <summary>If this lock is granted, writing to the specified range of bytes is prohibited except by the owner that was granted this lock.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.LOCKTYPE.LOCK_ONLYONCE">
            <summary>If this lock is granted, no other <b>LOCK_ONLYONCE</b> lock can be obtained on the range. Usually this lock type is an alias for some other lock type. Thus, specific implementations can have additional behavior associated with this lock type.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.SAFEARRAY">
            <summary>Represents a safe array.</summary>
            <remarks>
            <para>The array <b>rgsabound</b> is stored with the left-most dimension in rgsabound[0] and the right-most dimension in <c>rgsabound[cDims - 1]</c>. If an array was specified in a C-like syntax as a [2][5], it would have two elements in the <b>rgsabound</b> vector. Element 0 has an <b>lLbound</b> of 0 and a <b>cElements</b> of 2. Element 1 has an <b>lLbound</b> of 0 and a <b>cElements</b> of 5.</para>
            <para>The <b>fFeatures</b> flags describe attributes of an array that can affect how the array is released. The <b>fFeatures</b> field describes what type of data is stored in the <b>SAFEARRAY</b> and how the array is allocated. This allows freeing the array without referencing its containing variant.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-safearray#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAY.cDims">
            <summary>The number of dimensions.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAY.fFeatures">
            <summary>
            <para>Flags. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-safearray#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAY.cbElements">
            <summary>The size of an array element.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAY.cLocks">
            <summary>The number of times the array has been locked without a corresponding unlock.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAY.pvData">
            <summary>The data.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAY.rgsabound">
            <summary>One bound for each dimension.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.SAFEARRAYBOUND">
            <summary>Represents the bounds of one dimension of the array.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-safearraybound">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAYBOUND.cElements">
            <summary>The number of elements in the dimension.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SAFEARRAYBOUND.lLbound">
            <summary>The lower bound of the dimension.</summary>
        </member>
        <member name="P:Windows.Win32.System.Com.__SAFEARRAYBOUND_1.Length">
            <summary>The length of the inline array.</summary>
        </member>
        <member name="M:Windows.Win32.System.Com.__SAFEARRAYBOUND_1.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Com.__SAFEARRAYBOUND_1.AsReadOnlySpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.System.Com.STATSTG">
            <summary>Contains statistical data about an open storage, stream, or byte-array object.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/ns-objidl-statstg">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.pwcsName">
            <summary>
            <para>A pointer to a <b>NULL</b>-terminated Unicode string that contains the name. Space for this string is allocated by the method called and freed by the caller (for more information, see <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cotaskmemfree">CoTaskMemFree</a>). To  not return this member, specify the STATFLAG_NONAME value when you call a method that returns a <b>STATSTG</b> structure, except for calls to <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstatstg">IEnumSTATSTG::Next</a>, which provides no way to specify this value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/ns-objidl-statstg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.type">
            <summary>
            <para>Indicates the type of storage object. This is one of the values from the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/ne-objidl-stgty">STGTY</a> enumeration.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/ns-objidl-statstg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.cbSize">
            <summary>Specifies the size, in bytes, of the stream or byte array.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.mtime">
            <summary>Indicates the last modification time for this storage, stream, or byte array.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.ctime">
            <summary>Indicates the creation time for this storage, stream, or byte array.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.atime">
            <summary>Indicates the last access time for this storage, stream, or byte array.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.grfMode">
            <summary>
            <para>Indicates the access mode specified when the object was opened. This member is only valid in calls to <b>Stat</b> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/ns-objidl-statstg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.clsid">
            <summary>Indicates the class identifier for the storage object; set to CLSID_NULL for new storage objects. This member is not used for streams or byte arrays.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.grfStateBits">
            <summary>
            <para>Indicates the current state bits of the storage object; that is, the value most recently set by the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nf-objidl-istorage-setstatebits">IStorage::SetStateBits</a> method. This member is not valid for streams or byte arrays.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/objidl/ns-objidl-statstg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.System.Com.STATSTG.reserved">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.STGM">
            <summary>Flags that indicate conditions for creating and deleting the object and access modes for the object.</summary>
            <remarks>You can combine these flags, but you can only choose one flag from each group of related flags. Typically one flag from each of the access and sharing groups must be specified for all functions and methods which use these constants. Flags from other groups are optional.</remarks>
        </member>
        <member name="T:Windows.Win32.System.Com.SYSKIND">
            <summary>Identifies the target operating system platform.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-syskind">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.SYSKIND.SYS_WIN16">
            <summary>The target operating system for the type library is 16-bit Windows. By default, data members are packed.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SYSKIND.SYS_WIN32">
            <summary>The target operating system for the type library is 32-bit Windows. By default, data members are naturally aligned (for example, 2-byte integers are aligned on even-byte boundaries; 4-byte integers are aligned on quad-word boundaries, and so on).</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SYSKIND.SYS_MAC">
            <summary>The target operating system for the type library is Apple Macintosh. By default, all data members are aligned on even-byte boundaries.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.SYSKIND.SYS_WIN64">
            <summary>The target operating system for the type library is 64-bit Windows.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.TLIBATTR">
            <summary>Contains information about a type library. Information from this structure is used to identify the type library and to provide national language support for member names.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-tlibattr">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.TLIBATTR.guid">
            <summary>The globally unique identifier.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TLIBATTR.lcid">
            <summary>The locale identifier.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TLIBATTR.syskind">
            <summary>The target hardware platform.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TLIBATTR.wMajorVerNum">
            <summary>The major version number.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TLIBATTR.wMinorVerNum">
            <summary>The minor version number.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TLIBATTR.wLibFlags">
            <summary>The library flags.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.TYPEATTR">
            <summary>Contains attributes of a type.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-typeattr">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.guid">
            <summary>The GUID of the type information.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.lcid">
            <summary>The locale of member names and documentation strings.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.dwReserved">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.memidConstructor">
            <summary>The constructor ID, or MEMBERID_NIL if none.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.memidDestructor">
            <summary>The destructor ID, or MEMBERID_NIL if none.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.lpstrSchema">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.cbSizeInstance">
            <summary>The size of an instance of this type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.typekind">
            <summary>The kind of type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.cFuncs">
            <summary>The number of functions.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.cVars">
            <summary>The number of variables or data members.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.cImplTypes">
            <summary>The number of implemented interfaces.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.cbSizeVft">
            <summary>The size of this type's VTBL.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.cbAlignment">
            <summary>The byte alignment for an instance of this type. A value of 0 indicates alignment on the 64K boundary; 1 indicates no special alignment. For other values, <i>n</i> indicates aligned on byte <i>n</i>.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.wTypeFlags">
            <summary>The type flags. See <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/ne-oaidl-typeflags">TYPEFLAGS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.wMajorVerNum">
            <summary>The major version number.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.wMinorVerNum">
            <summary>The minor version number.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.tdescAlias">
            <summary>If <b>typekind</b> is TKIND_ALIAS, specifies the type for which this type is an alias.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEATTR.idldescType">
            <summary>The IDL attributes of the described type.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.TYPEDESC">
            <summary>Describes the type of a variable, the return type of a function, or the type of a function parameter.</summary>
            <remarks>If the variable is VT_SAFEARRAY or VT_PTR, the union portion of the TYPEDESC contains a pointer to a TYPEDESC that specifies the element type.</remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEDESC.vt">
            <summary>The variant type.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.TYPEKIND">
            <summary>Specifies a type.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-typekind">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_ENUM">
            <summary>A set of enumerators.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_RECORD">
            <summary>A structure with no methods.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_MODULE">
            <summary>A module that can only have static functions and data (for example, a DLL).</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_INTERFACE">
            <summary>A type that has virtual and pure functions.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_DISPATCH">
            <summary>A set of methods and properties that are accessible through <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-invoke">IDispatch::Invoke</a>. By default, dual interfaces return TKIND_DISPATCH.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_COCLASS">
            <summary>A set of implemented component object interfaces.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_ALIAS">
            <summary>A type that is an alias for another type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_UNION">
            <summary>A union, all of whose members have an offset of zero.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.TYPEKIND.TKIND_MAX">
            <summary>End of enum marker.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.VARDESC">
            <summary>Describes a variable, constant, or data member.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-vardesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.VARDESC.memid">
            <summary>The member ID.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARDESC.lpstrSchema">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARDESC.elemdescVar">
            <summary>The variable type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARDESC.wVarFlags">
            <summary>The variable flags. See <a href="https://docs.microsoft.com/windows/desktop/api/oaidl/ne-oaidl-varflags">VARFLAGS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARDESC.varkind">
            <summary>The variable type.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.VARFLAGS">
            <summary>Specifies variable flags.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-varflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FREADONLY">
            <summary>Assignment to the variable should not be allowed.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FSOURCE">
            <summary>The variable returns an object that is a source of events.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FBINDABLE">
            <summary>The variable supports data binding.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FREQUESTEDIT">
            <summary>When set, any attempt to directly change the property results in a call to <b>IPropertyNotifySink::OnRequestEdit</b>. The implementation of <b>OnRequestEdit</b> determines if the change is accepted.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FDISPLAYBIND">
            <summary>The variable is displayed to the user as bindable. VARFLAG_FBINDABLE must also be set.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FDEFAULTBIND">
            <summary>The variable is the single property that best represents the object. Only one variable in type information can have this attribute.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FHIDDEN">
            <summary>The variable should not be displayed to the user in a browser, although it exists and is bindable.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FRESTRICTED">
            <summary>The variable should not be accessible from macro languages. This flag is intended for system-level variables or variables that you do not want type browsers to display.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FDEFAULTCOLLELEM">
            <summary>Permits an optimization in which the compiler looks for a member named "xyz" on the type of abc. If such a member is found and is flagged as an accessor function for an element of the default collection, then a call is generated to that member function. Permitted on members in dispinterfaces and interfaces; not permitted on modules.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FUIDEFAULT">
            <summary>The variable is the default display in the user interface.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FNONBROWSABLE">
            <summary>The variable appears in an object browser, but not in a properties browser.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FREPLACEABLE">
            <summary>Tags the interface as having default behaviors.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARFLAGS.VARFLAG_FIMMEDIATEBIND">
            <summary>The variable is mapped as individual bindable properties.</summary>
        </member>
        <member name="T:Windows.Win32.System.Com.VARKIND">
            <summary>Specifies the variable type.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ne-oaidl-varkind">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Com.VARKIND.VAR_PERINSTANCE">
            <summary>The variable is a field or member of the type. It exists at a fixed offset within each instance of the type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARKIND.VAR_STATIC">
            <summary>There is only one instance of the variable.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARKIND.VAR_CONST">
            <summary>The VARDESC describes a symbolic constant. There is no memory associated with it.</summary>
        </member>
        <member name="F:Windows.Win32.System.Com.VARKIND.VAR_DISPATCH">
            <summary>The variable can only be accessed through <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-invoke">IDispatch::Invoke</a>.</summary>
        </member>
        <member name="T:Windows.Win32.System.Ole.ARRAYDESC">
            <summary>Describes an array, its element type, and its dimension.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-arraydesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Ole.ARRAYDESC.tdescElem">
            <summary>The element type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Ole.ARRAYDESC.cDims">
            <summary>The dimension count.</summary>
        </member>
        <member name="F:Windows.Win32.System.Ole.ARRAYDESC.rgbounds">
            <summary>A variable-length array containing one element for each dimension.</summary>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.RecordInit(System.Void*)">
            <summary>Initializes a new instance of a record.</summary>
            <param name="pvNew">An instance of a record.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The caller must allocate the memory of the record by its appropriate size using the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-getsize">GetSize</a> method. <b>RecordInit</b> sets all contents of the record to 0 and the record should hold no resources.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-recordinit#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.RecordClear(System.Void*)">
            <summary>Releases object references and other values of a record without deallocating the record.</summary>
            <param name="pvExisting">The record to be cleared.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks><b>RecordClear</b> releases memory blocks held by VT_PTR or VT_SAFEARRAY instance fields. The caller needs to free the instance fields memory, <b>RecordClear</b> will do nothing if there are no resources held.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.RecordCopy(System.Void*,System.Void*)">
            <summary>Copies an existing record into the passed in buffer.</summary>
            <param name="pvExisting">The current record instance.</param>
            <param name="pvNew">The destination where the record will be copied.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks><b>RecordCopy</b> will release the resources in the destination first. The caller is responsible for allocating sufficient memory in the destination by calling <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-getsize">GetSize</a> or  <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordcreate">RecordCreate</a>. If <b>RecordCopy</b> fails to copy any of the fields then all fields will be cleared, as though <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordclear">RecordClear</a> had been called.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetGuid(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.GetGuid(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetGuid(System.Guid*)">
            <summary>Gets the GUID of the record type.</summary>
            <param name="pguid">The class GUID of the TypeInfo that describes the UDT.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-getguid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetName(Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.GetName(Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetName(Windows.Win32.Foundation.BSTR*)">
            <summary>Gets the name of the record type.</summary>
            <param name="pbstrName">The name.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The caller must free the BSTR by calling <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetSize(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.GetSize(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetSize(System.UInt32*)">
            <summary>Gets the number of bytes of memory necessary to hold the record instance.</summary>
            <param name="pcbSize">The size of a record instance, in bytes.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-getsize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetTypeInfo(Windows.Win32.System.Com.ITypeInfo**)">
            <summary>Retrieves the type information that describes a UDT or safearray of UDTs.</summary>
            <param name="ppTypeInfo">The information type of the record.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks><b>AddRef</b> is called on the pointer <i>ppTypeInfo</i>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetField(System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.GetField(System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetField(System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)">
            <summary>Returns a pointer to the VARIANT containing the value of a given field name.</summary>
            <param name="pvData">The instance of a record.</param>
            <param name="szFieldName">The field name.</param>
            <param name="pvarField">The VARIANT that you want to hold the value of the field name, <i>szFieldName</i>. On return, places a copy of the field's value in the variant.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The VARIANT that you pass in contains a copy of the field's value upon return. If you modify the VARIANT then the underlying record field does not change. The caller allocates memory of the VARIANT. The method <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> is called for <i>pvarField</i> before copying.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-getfield#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetFieldNoCopy(System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.GetFieldNoCopy(System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetFieldNoCopy(System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*,System.Void**)">
            <summary>Returns a pointer to the value of a given field name without copying the value and allocating resources.</summary>
            <param name="pvData">The instance of a record.</param>
            <param name="szFieldName">The name of the field.</param>
            <param name="pvarField">The VARIANT that will contain the UDT upon return.</param>
            <param name="ppvDataCArray">Receives the value of the field upon return.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Upon return, the VARIANT you pass contains a direct pointer to the record's field, <i>ppvDataCArray</i>. If you modify the VARIANT, then the underlying record field will change. The caller allocates memory of the VARIANT, but does not own the memory so cannot free <i>pvarField</i>. This method calls <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> for <i>pvarField</i> before filling in the requested field.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-getfieldnocopy#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.PutField(System.UInt32,System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.PutField(System.UInt32,System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.PutField(System.UInt32,System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)">
            <summary>Puts a variant into a field.</summary>
            <param name="wFlags">
            <para>The only legal values for the wFlags parameter is INVOKE_PROPERTYPUT or INVOKE_PROPERTYPUTREF. If INVOKE_PROPERTYPUTREF is passed in then <b>PutField</b> just assigns the value of the variant that is passed in to the field using normal coercion rules. If INVOKE_PROPERTYPUT is passed in then specific rules apply. If the field is declared as a class that derives from <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> and the field's value is NULL then an error will be returned. If the field's value is not NULL then the variant will be passed to the default property supported by the object referenced by the field. If the field is not declared as a class derived from <b>IDispatch</b> then an error will be returned. If the field is declared as a variant of type VT_Dispatch then the default value of the object is assigned to the field. Otherwise, the variant's value is assigned to the field.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-putfield#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pvData">The pointer to an instance of the record.</param>
            <param name="szFieldName">The name of the field of the record.</param>
            <param name="pvarField">The pointer to the variant.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-putfield">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.PutFieldNoCopy(System.UInt32,System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.PutFieldNoCopy(System.UInt32,System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.PutFieldNoCopy(System.UInt32,System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)">
            <summary>Passes ownership of the data to the assigned field by placing the actual data into the field.</summary>
            <param name="wFlags">The only legal values for the wFlags parameter is INVOKE_PROPERTYPUT or INVOKE_PROPERTYPUTREF.</param>
            <param name="pvData">An instance of the record described by <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</a>.</param>
            <param name="szFieldName">The name of the field of the record.</param>
            <param name="pvarField">The variant to be put into the field.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-putfieldnocopy">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetFieldNames(System.UInt32@,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.GetFieldNames(System.UInt32*,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.GetFieldNames(System.UInt32*,Windows.Win32.Foundation.BSTR*)">
            <summary>Gets the names of the fields of the record.</summary>
            <param name="pcNames">The number of names to return.</param>
            <param name="rgBstrNames">
            <para>The name of the array of type BSTR. If the <i>rgBstrNames</i> parameter is NULL, then <i>pcNames</i> is returned with the number of field names. It the <i>rgBstrNames</i> parameter is not NULL, then the string names contained in <i>rgBstrNames</i> are returned. If the number of names in <i>pcNames</i> and <i>rgBstrNames</i> are not equal then the lesser number of the two is the number of returned field names. The caller needs to free the BSTRs inside the array returned in <i>rgBstrNames</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-getfieldnames#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The caller should allocate memory for the array of BSTRs. If the array is larger than needed, set the unused portion to 0. On return, the caller will need to free each contained BSTR using <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a>. In case of out of memory, <i>pcNames</i> points to error code.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-getfieldnames#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.IsMatchingType(Windows.Win32.System.Ole.IRecordInfo*)">
            <summary>Determines whether the record that is passed in matches that of the current record information.</summary>
            <param name="pRecordInfo">The information of the record.</param>
            <returns>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-ismatchingtype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.RecordCreate">
            <summary>Allocates memory for a new record, initializes the instance and returns a pointer to the record.</summary>
            <returns>This method returns a pointer to the created record.</returns>
            <remarks>
            <para>The memory is set to zeros before it is returned. The records created must be freed by calling <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recorddestroy">RecordDestroy</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-recordcreate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.RecordCreateCopy(System.Void*,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.RecordCreateCopy(System.Void*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.RecordCreateCopy(System.Void*,System.Void**)">
            <summary>Creates a copy of an instance of a record to the specified location.</summary>
            <param name="pvSource">An instance of the record to be copied.</param>
            <param name="ppvDest">The new record with data copied from <i>pvSource</i>.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The records created must be freed by calling <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recorddestroy">RecordDestroy</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.System.Ole.IRecordInfo.RecordDestroy(System.Void*)">
            <summary>Releases the resources and deallocates the memory of the record.</summary>
            <param name="pvRecord">An instance of the record to be destroyed.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordclear">RecordClear</a> is called to release the resources held by the instance of a record without deallocating memory. <div class="alert"><b>Note</b>  This method can only be called on records allocated through <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordcreate">RecordCreate</a> and <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordcreatecopy">RecordCreateCopy</a>. If you allocate the record yourself, you cannot call this method.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/nf-oaidl-irecordinfo-recorddestroy#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Ole.IRecordInfo.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{0000002f-0000-0000-c000-000000000046}</value>
        </member>
        <member name="T:Windows.Win32.System.Ole.PARAMDESC">
            <summary>Contains information needed for transferring a structure element, parameter, or function return value between processes.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-paramdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Ole.PARAMDESC.pparamdescex">
            <summary>The default value for the parameter, if PARAMFLAG_FHASDEFAULT is specified in <b>wParamFlags</b>.</summary>
        </member>
        <member name="F:Windows.Win32.System.Ole.PARAMDESC.wParamFlags">
            <summary>The parameter flags. See <a href="https://docs.microsoft.com/previous-versions/windows/desktop/automat/paramflags">PARAMFLAG Constants</a>.</summary>
        </member>
        <member name="T:Windows.Win32.System.Ole.PARAMDESCEX">
            <summary>Contains information about the default value of a parameter.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-paramdescex">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Ole.PARAMDESCEX.cBytes">
            <summary>The size of the structure.</summary>
        </member>
        <member name="F:Windows.Win32.System.Ole.PARAMDESCEX.varDefaultValue">
            <summary>The default value of the parameter.</summary>
        </member>
        <member name="T:Windows.Win32.System.Variant.VARENUM">
            <summary>Specifies the variant types.</summary>
            <remarks>
            <para>The following table shows where these values can be used. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wtypes/ne-wtypes-varenum#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_EMPTY">
            <summary>Not specified.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_NULL">
            <summary>Null.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_I2">
            <summary>A 2-byte integer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_I4">
            <summary>A 4-byte integer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_R4">
            <summary>A 4-byte real.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_R8">
            <summary>An 8-byte real.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_CY">
            <summary>Currency.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_DATE">
            <summary>A date.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_BSTR">
            <summary>A string.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_DISPATCH">
            <summary>An <a href="https://docs.microsoft.com/previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> pointer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_ERROR">
            <summary>An SCODE value.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_BOOL">
            <summary>A Boolean value. True is -1 and false is 0.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_VARIANT">
            <summary>A variant pointer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_UNKNOWN">
            <summary>An <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> pointer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_DECIMAL">
            <summary>A 16-byte fixed-pointer value.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_I1">
            <summary>A character.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_UI1">
            <summary>An unsigned character.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_UI2">
            <summary>An unsigned short.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_UI4">
            <summary>An unsigned long.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_I8">
            <summary>A 64-bit integer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_UI8">
            <summary>A 64-bit unsigned integer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_INT">
            <summary>An integer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_UINT">
            <summary>An unsigned integer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_VOID">
            <summary>A C-style void.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_HRESULT">
            <summary>An HRESULT value.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_PTR">
            <summary>A pointer type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_SAFEARRAY">
            <summary>A safe array. Use VT_ARRAY in VARIANT.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_CARRAY">
            <summary>A C-style array.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_USERDEFINED">
            <summary>A user-defined type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_LPSTR">
            <summary>A null-terminated string.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_LPWSTR">
            <summary>A wide null-terminated string.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_RECORD">
            <summary>A user-defined type.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_INT_PTR">
            <summary>A signed machine register size width.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_UINT_PTR">
            <summary>An unsigned machine register size width.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_FILETIME">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/minwinbase/ns-minwinbase-filetime">FILETIME</a> value.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_BLOB">
            <summary>Length-prefixed bytes.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_STREAM">
            <summary>The name of the stream follows.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_STORAGE">
            <summary>The name of the storage follows.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_STREAMED_OBJECT">
            <summary>The stream contains an object.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_STORED_OBJECT">
            <summary>The storage contains an object.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_BLOB_OBJECT">
            <summary>The blob contains an object.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_CF">
            <summary>A clipboard format.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_CLSID">
            <summary>A class ID.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_VERSIONED_STREAM">
            <summary>A stream with a GUID version.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_BSTR_BLOB">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_VECTOR">
            <summary>A simple counted array.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_ARRAY">
            <summary>A SAFEARRAY pointer.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_BYREF">
            <summary>A void pointer for local use.</summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_RESERVED">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_ILLEGAL">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_ILLEGALMASKED">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.System.Variant.VARENUM.VT_TYPEMASK">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.System.Variant.VARIANT">
            <summary>VARIANTARG describes arguments passed within DISPPARAMS, and VARIANT to specify variant data that cannot be passed by reference.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oaidl/ns-oaidl-variant">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY">
            <summary>Specifies the category of an audio stream.</summary>
            <remarks>
            <para>Note that only a subset of the audio stream categories are valid for certain stream types. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/audiosessiontypes/ne-audiosessiontypes-audio_stream_category#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_Other">
            <summary>Other audio stream.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_ForegroundOnlyMedia">
            <summary>Media that will only stream when the app is in the foreground. This enumeration value has been deprecated. For more information, see the Remarks section.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_Communications">
            <summary>Real-time communications, such as VOIP or chat.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_Alerts">
            <summary>Alert sounds.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_SoundEffects">
            <summary>Sound effects.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_GameEffects">
            <summary>Game sound effects.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_GameMedia">
            <summary>Background audio for games.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_GameChat">
            <summary>Game chat audio. Similar to <b>AudioCategory_Communications</b> except that <b>AudioCategory_GameChat</b> will not attenuate other streams.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_Speech">
            <summary>Speech.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_Movie">
            <summary>Stream that includes audio with dialog.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_Media">
            <summary>Stream that includes audio without dialog.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_FarFieldSpeech">
            <summary>Media is audio captured with the intent of capturing voice sources located in the ‘far field’. (Far away from the microphone.)</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_UniformSpeech">
            <summary>Media is captured audio that requires consistent speech processing for the captured audio stream across all Windows devices. Used by applications that process speech data using machine learning algorithms.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.AUDIO_STREAM_CATEGORY.AudioCategory_VoiceTyping">
            <summary>Media is audio captured with the intent of enabling dictation or typing by voice.</summary>
        </member>
        <member name="T:Windows.Win32.Media.Audio.ERole">
            <summary>The ERole enumeration defines constants that indicate the role that the system has assigned to an audio endpoint device.</summary>
            <remarks>
            <para>The <a href="https://docs.microsoft.com/windows/win32/api/mmdeviceapi/ne-mmdeviceapi-erole">IMMDeviceEnumerator::GetDefaultAudioEndpoint</a> and <a href="https://docs.microsoft.com/windows/desktop/api/mmdeviceapi/nf-mmdeviceapi-immnotificationclient-ondefaultdevicechanged">IMMNotificationClient::OnDefaultDeviceChanged</a> methods use the constants defined in the <b>ERole</b> enumeration. For more information, see <a href="https://docs.microsoft.com/windows/desktop/CoreAudio/device-roles">Device Roles</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mmdeviceapi/ne-mmdeviceapi-erole#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.Audio.ERole.eConsole">
            <summary>Games, system notification sounds, and voice commands.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.ERole.eMultimedia">
            <summary>Music, movies, narration, and live music recording.</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.ERole.eCommunications">
            <summary>Voice communications (talking to another person).</summary>
        </member>
        <member name="F:Windows.Win32.Media.Audio.ERole.ERole_enum_count">
            <summary>The number of members in the <a href="https://docs.microsoft.com/windows/win32/api/mmdeviceapi/ne-mmdeviceapi-erole">ERole</a> enumeration (not counting the ERole_enum_count member).</summary>
        </member>
        <member name="T:Windows.Win32.Media.DirectShow.CameraControlFlags">
            <summary>The CameraControlFlags enumeration defines whether a camera setting is controlled manually or automatically.</summary>
            <remarks>
            <para>In addition, the following flags are defined in Ksmedia.h: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/ne-strmif-cameracontrolflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlFlags.CameraControl_Flags_Auto">
            <summary>The setting is controlled automatically.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlFlags.CameraControl_Flags_Manual">
            <summary>The setting is controlled manually.</summary>
        </member>
        <member name="T:Windows.Win32.Media.DirectShow.CameraControlProperty">
            <summary>The CameraControlProperty enumeration specifies a setting on a camera.</summary>
            <remarks>For a given property, a particular device might implement only a subset of the listed range.</remarks>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlProperty.CameraControl_Pan">
            <summary>Specifies the camera's pan setting, in degrees. Values range from –180 to +180, with the default set to zero. Positive values are clockwise from the origin (the camera rotates clockwise when viewed from above), and negative values are counterclockwise from the origin.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlProperty.CameraControl_Tilt">
            <summary>Specifies the camera's tilt setting, in degrees. Values range from –180 to +180, with the default set to zero. Positive values point the imaging plane up, and negative values point the imaging plane down.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlProperty.CameraControl_Roll">
            <summary>Specifies the camera's roll setting, in degrees. Values range from –180 to +180, with the default set to zero. Positive values cause a clockwise rotation of the camera along the image-viewing axis, and negative values cause a counterclockwise rotation of the camera.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlProperty.CameraControl_Zoom">
            <summary>Specifies the camera's zoom setting, in millimeters. Values range from 10 to 600, and the default is specific to the device.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlProperty.CameraControl_Exposure">
            <summary>
            <para>Specifies the exposure setting, in log base 2 seconds. In other words, for values less than zero, the exposure time is 1/2^n seconds, and for values zero or above, the exposure time is 2^n seconds. For example: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/ne-strmif-cameracontrolproperty#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlProperty.CameraControl_Iris">
            <summary>Specifies the camera's iris setting, in units of fₛₜₒₚ* 10.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.CameraControlProperty.CameraControl_Focus">
            <summary>Specifies the camera's focus setting, as the distance to the optimally focused target, in millimeters. The range and default value are specific to the device.</summary>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMCameraControl.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMCameraControl.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMCameraControl.GetRange(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMCameraControl.GetRange(System.Int32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMCameraControl.GetRange(System.Int32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>The GetRange method gets the range and default value of a specified camera property.</summary>
            <param name="Property">Specifies the property to query, as a value from the [CameraControlProperty](/windows/desktop/api/strmif/ne-strmif-cameracontrolproperty) enumeration.</param>
            <param name="pMin">Receives the minimum value of the property.</param>
            <param name="pMax">Receives the maximum value of the property.</param>
            <param name="pSteppingDelta">Receives the step size for the property. The step size is the smallest increment by which the property can change.</param>
            <param name="pDefault">Receives the default value of the property.</param>
            <param name="pCapsFlags">Receives a member of the [CameraControlFlags](/windows/desktop/api/strmif/ne-strmif-cameracontrolflags) enumeration, indicating whether the property is controlled automatically or manually.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/nf-strmif-iamcameracontrol-getrange">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMCameraControl.Set(System.Int32,System.Int32,System.Int32)">
            <summary>The Set method sets a specified property on the camera.</summary>
            <param name="Property">Specifies the property to set, as a value from the [CameraControlProperty](/windows/desktop/api/strmif/ne-strmif-cameracontrolproperty) enumeration.</param>
            <param name="lValue">Specifies the new value of the property.</param>
            <param name="Flags">Specifies the desired control setting, as a member of the [CameraControlFlags](/windows/desktop/api/strmif/ne-strmif-cameracontrolflags) enumeration.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>If the <i>Flags</i> parameter is <b>CameraControl_Flags_Auto</b>, the method ignores the <i>lValue</i> parameter.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMCameraControl.Get(System.Int32,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMCameraControl.Get(System.Int32,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMCameraControl.Get(System.Int32,System.Int32*,System.Int32*)">
            <summary>The Get method gets the current setting of a camera property.</summary>
            <param name="Property">Specifies the property to retrieve, as a value from the [CameraControlProperty](/windows/desktop/api/strmif/ne-strmif-cameracontrolproperty) enumeration.</param>
            <param name="lValue">Receives the value of the property.</param>
            <param name="Flags">Receives a member of the [CameraControlFlags](/windows/desktop/api/strmif/ne-strmif-cameracontrolflags) enumeration. The returned value indicates whether the setting is controlled manually or automatically.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/nf-strmif-iamcameracontrol-get">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.IAMCameraControl.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{c6e13370-30ac-11d0-a18c-00a0c9118956}</value>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.GetRange(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.GetRange(System.Int32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.GetRange(System.Int32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>The GetRange method gets the range and default value of a specified video property.</summary>
            <param name="Property">Specifies the property to query, as a value from the [VideoProcAmpProperty](/windows/desktop/api/strmif/ne-strmif-videoprocampproperty) enumeration.</param>
            <param name="pMin">Receives the minimum value of the property.</param>
            <param name="pMax">Receives the maximum value of the property.</param>
            <param name="pSteppingDelta">Receives the step size for the property. The step size is the smallest increment by which the property can change.</param>
            <param name="pDefault">Receives the default value of the property.</param>
            <param name="pCapsFlags">Receives a member of the [VideoProcAmpFlags](/windows/desktop/api/strmif/ne-strmif-videoprocampflags) enumeration, indicating whether the property is controlled automatically or manually.</param>
            <returns>
            <para>Returns an <b>HRESULT</b> value. Possible values include the following. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/nf-strmif-iamvideoprocamp-getrange">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Set(System.Int32,System.Int32,System.Int32)">
            <summary>The Set method sets video quality for a specified property.</summary>
            <param name="Property">The property to set, specified as a [VideoProcAmpProperty](/windows/desktop/api/strmif/ne-strmif-videoprocampproperty) enumeration value.</param>
            <param name="lValue">The new value of the property.</param>
            <param name="Flags">
            <para>The desired control setting, specified as a [VideoProcAmpFlags](/windows/desktop/api/strmif/ne-strmif-videoprocampflags) enumeration value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/nf-strmif-iamvideoprocamp-set#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>If the <i>pCapsFlags</i> parameter is <b>VideoProcAmp_Flags_Auto</b>, the <i>lValue</i> parameter is ignored.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Get(System.Int32,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Get(System.Int32,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Get(System.Int32,System.Int32*,System.Int32*)">
            <summary>The Get method gets the current setting of a video property.</summary>
            <param name="Property">Specifies the property to retrieve, as a value from the [VideoProcAmpProperty](/windows/desktop/api/strmif/ne-strmif-videoprocampproperty) enumeration.</param>
            <param name="lValue">Receives the value of the property.</param>
            <param name="Flags">Receives a member of the [VideoProcAmpFlags](/windows/desktop/api/strmif/ne-strmif-videoprocampflags) enumeration. The returned value indicates whether the setting is controlled manually or automatically.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/nf-strmif-iamvideoprocamp-get">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{c6e13360-30ac-11d0-a18c-00a0c9118956}</value>
        </member>
        <member name="T:Windows.Win32.Media.DirectShow.VideoProcAmpFlags">
            <summary>The VideoProcAmpFlags enumeration indicates whether a particular video property is controlled manually or automatically.</summary>
            <remarks>
            <para>The following flags defined in KsMedia.h are equivalent to the values in <b>VideoProcAmpFlags</b>:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/ne-strmif-videoprocampflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpFlags.VideoProcAmp_Flags_Auto">
            <summary>The setting is controlled automatically.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpFlags.VideoProcAmp_Flags_Manual">
            <summary>The setting is controlled manually.</summary>
        </member>
        <member name="T:Windows.Win32.Media.DirectShow.VideoProcAmpProperty">
            <summary>The VideoProcAmpProperty enumeration specifies video properties on a video capture device.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/strmif/ne-strmif-videoprocampproperty">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_Brightness">
            <summary>Specifies the brightness, also called the <i>black level</i>. For NTSC, the value is expressed in IRE units * 100. For non-NTSC sources, the units are arbitrary, with zero representing blanking and 10,000 representing pure white. Values range from –10,000 to 10,000.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_Contrast">
            <summary>Specifies the contrast, expressed as gain factor * 100. Values range from zero to 10,000.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_Hue">
            <summary>Specifies the hue, in degrees * 100. Values range from -180,000 to 180,000 (-180 to +180 degrees).</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_Saturation">
            <summary>Specifies the saturation. Values range from 0 to 10,000.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_Sharpness">
            <summary>Specifies the sharpness. Values range from 0 to 100.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_Gamma">
            <summary>Specifies the gamma, as gamma * 100. Values range from 1 to 500.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_ColorEnable">
            <summary>Specifies the color enable setting. The possible values are 0 (off) and 1 (on).</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_WhiteBalance">
            <summary>Specifies the white balance, as a color temperature in degrees Kelvin. The range of values depends on the device.</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_BacklightCompensation">
            <summary>Specifies the backlight compensation setting. Possible values are 0 (off) and 1 (on).</summary>
        </member>
        <member name="F:Windows.Win32.Media.DirectShow.VideoProcAmpProperty.VideoProcAmp_Gain">
            <summary>Specifies the gain adjustment. Zero is normal. Positive values are brighter and negative values are darker. The range of values depends on the device.</summary>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Lock2D(System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Lock2D(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Lock2D(System.Byte**,System.Int32*)">
            <summary>Gives the caller access to the memory in the buffer. (IMF2DBuffer.Lock2D)</summary>
            <param name="ppbScanline0">Receives a pointer to the first byte of the top row of pixels in the image. The top row is defined as the top row when the image is presented to the viewer, and might not be the first row in memory.</param>
            <param name="plPitch">Receives the surface stride, in bytes. The stride might be negative, indicating that the image is oriented from the bottom up in memory.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If <i>p</i> is a pointer to the first byte in a row of pixels, <i>p</i> + (*<i>plPitch</i>) points to the first byte in the next row of pixels. A buffer might contain padding after each row of pixels, so the stride might be wider than the width of the image in bytes. Do not access the memory that is reserved for padding bytes, because it might not be read-accessible or write-accessible. For more information, see <a href="https://docs.microsoft.com/windows/desktop/medfound/image-stride">Image Stride</a>. The pointer returned in <i>pbScanline0</i> remains valid as long as the caller holds the lock. When you are done accessing the memory, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-unlock2d">IMF2DBuffer::Unlock2D</a> to unlock the buffer. You must call <b>Unlock2D</b> once for each call to <b>Lock2D</b>. After you unlock the buffer, the pointer returned in <i>pbScanline0</i> is no longer valid and should not be used. Generally, it is best to call <b>Lock2D</b> only when you need to access the buffer memory, and not earlier. The values returned by the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-getcurrentlength">IMFMediaBuffer::GetCurrentLength</a> and <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-getmaxlength">IMFMediaBuffer::GetMaxLength</a> methods do not apply to the buffer that is returned by the <b>Lock2D</b> method. For the same reason, you do not need to call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-setcurrentlength">IMFMediaBuffer::SetCurrentLength</a> after manipulating the data in the buffer returned by the <b>Lock2D</b> method. The <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-lock">IMFMediaBuffer::Lock</a> method fails while the <b>Lock2D</b> lock is held, and vice-versa. Applications should use only one of these methods at a time. When the underlying buffer is a Direct3D surface, the method fails if the surface is not lockable.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imf2dbuffer-lock2d#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Unlock2D">
            <summary>Unlocks a buffer that was previously locked. Call this method once for each call to IMF2DBuffer::Lock2D.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imf2dbuffer-unlock2d">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.GetScanline0AndPitch(System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.GetScanline0AndPitch(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.GetScanline0AndPitch(System.Byte**,System.Int32*)">
            <summary>Retrieves a pointer to the buffer memory and the surface stride.</summary>
            <param name="pbScanline0">Receives a pointer to the first byte of the top row of pixels in the image.</param>
            <param name="plPitch">Receives the stride, in bytes. For more information, see <a href="https://docs.microsoft.com/windows/desktop/medfound/image-stride">Image Stride</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>Before calling this method, you must lock the buffer by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-lock2d">IMF2DBuffer::Lock2D</a>. The pointer returned in <i>plPitch</i> is valid only while the buffer remains locked.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.IsContiguousFormat(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.IsContiguousFormat(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.IsContiguousFormat(Windows.Win32.Foundation.BOOL*)">
            <summary>Queries whether the buffer is contiguous in its native format.</summary>
            <param name="pfIsContiguous">Receives a Boolean value. The value is <b>TRUE</b> if the buffer is contiguous, and <b>FALSE</b> otherwise.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer">IMF2DBuffer</a> interface. For non-contiguous buffers, the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-lock">IMFMediaBuffer::Lock</a> method must perform an internal copy.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.GetContiguousLength(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.GetContiguousLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.GetContiguousLength(System.UInt32*)">
            <summary>Retrieves the number of bytes needed to store the contents of the buffer in contiguous format.</summary>
            <param name="pcbLength">Receives the number of bytes needed to store the contents of the buffer in contiguous format.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer">IMF2DBuffer</a> interface.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.ContiguousCopyTo(System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.ContiguousCopyTo(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.ContiguousCopyTo(System.Byte*,System.UInt32)">
            <summary>Copies this buffer into the caller's buffer, converting the data to contiguous format.</summary>
            <param name="pbDestBuffer">Pointer to the destination buffer where the data will be copied. The caller allocates the buffer.</param>
            <param name="cbDestBuffer">Size of the destination buffer, in bytes. To get the required size, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-getcontiguouslength">IMF2DBuffer::GetContiguousLength</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>If the original buffer is not contiguous, this method converts the contents into contiguous format during the copy. For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer">IMF2DBuffer</a> interface.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.ContiguousCopyFrom(System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.ContiguousCopyFrom(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.ContiguousCopyFrom(System.Byte*,System.UInt32)">
            <summary>Copies data to this buffer from a buffer that has a contiguous format.</summary>
            <param name="pbSrcBuffer">Pointer to the source buffer. The caller allocates the buffer.</param>
            <param name="cbSrcBuffer">Size of the source buffer, in bytes. To get the maximum size of the buffer, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-getcontiguouslength">IMF2DBuffer::GetContiguousLength</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method copies the contents of the source buffer into the buffer that is managed by this <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer">IMF2DBuffer</a> object. The source buffer must be in contiguous format. While copying, the method converts the contents into the destination buffer's native format, correcting for the buffer's pitch if necessary. For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer">IMF2DBuffer</a> interface topic.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imf2dbuffer-contiguouscopyfrom#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{7dc9d5f9-9ed9-44ec-9bbf-0600bb589fbb}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Lock2D(System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Lock2D(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.GetScanline0AndPitch(System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.GetScanline0AndPitch(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.IsContiguousFormat(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.IsContiguousFormat(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.GetContiguousLength(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.GetContiguousLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.ContiguousCopyTo(System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.ContiguousCopyTo(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.ContiguousCopyFrom(System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.ContiguousCopyFrom(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Lock2DSize(Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags,System.Byte*@,System.Int32@,System.Byte*@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Lock2DSize(Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags,System.Byte**,System.Int32*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Lock2DSize(Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags,System.Byte**,System.Int32*,System.Byte**,System.UInt32*)">
            <summary>Gives the caller access to the memory in the buffer. (IMF2DBuffer2.Lock2DSize)</summary>
            <param name="lockFlags">A member of the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/ne-mfobjects-mf2dbuffer_lockflags">MF2DBuffer_LockFlags</a> enumeration that specifies whether to lock the buffer for reading, writing, or both.</param>
            <param name="ppbScanline0">Receives a pointer to the first byte of the top row of pixels in the image. The top row is defined as the top row when the image is presented to the viewer, and might not be the first row in memory.</param>
            <param name="plPitch">Receives the surface stride, in bytes. The stride might be negative, indicating that the image is oriented from the bottom up in memory.</param>
            <param name="ppbBufferStart">Receives a pointer to the start of the accessible buffer in memory.</param>
            <param name="pcbBufferLength">Receives the length of the buffer, in bytes.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>When you are done accessing the memory, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-unlock2d">IMF2DBuffer::Unlock2D</a> to unlock the buffer. You must call <b>Unlock2D</b> once for each call to <b>Lock2DSize</b>. This method is equivalent to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-lock2d">IMF2DBuffer::Lock2D</a> method. However, <b>Lock2DSize</b> is preferred because it enables the caller to validate memory pointers, and because it supports read-only locks. A buffer is not guaranteed to support the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer2">IMF2DBuffer2</a> interface. To access a buffer, you should try the following methods in the order listed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imf2dbuffer2-lock2dsize#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Copy2DTo(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2*)">
            <summary>Copies the buffer to another 2D buffer object.</summary>
            <param name="pDestBuffer">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer2">IMF2DBuffer2</a> interface of the destination buffer.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>The destination buffer must be at least as large as the source buffer.</remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{33ae5ea6-4316-436f-8ddd-d73d22f829ec}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetItemType(System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.CompareItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetUINT32(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetUINT64(System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetDouble(System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetDouble(System.Guid*,System.Double*)">
            <summary>Retrieves a double value associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_DOUBLE</b>.</param>
            <param name="pfValue">Receives a <b>double</b> value. If the key is found and the data type is <b>double</b>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getdouble#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetStringLength(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetString(System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetAllocatedString(System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetBlobSize(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetBlob(System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetAllocatedBlob(System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.DeleteItem(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetUINT32(System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetUINT64(System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetDouble(System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetString(System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetBlob(System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetItemByIndex(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.ActivateObject(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.ActivateObject(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.ActivateObject(System.Guid*)">
            <summary>Creates the object associated with this activation object.</summary>
            <param name="riid">Interface identifier (IID) of the requested interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>Some Microsoft Media Foundation objects must be shut down before being released. If so, the caller is responsible for shutting down the object that is returned in <i>ppv</i>. To shut down the object, do one of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfactivate-activateobject#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.ShutdownObject">
            <summary>Shuts down the created object.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If you create an object by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject">IMFActivate::ActivateObject</a>, call <b>ShutdownObject</b> when you are done using the object. The component that calls <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject">ActivateObject</a>—not the component that creates the activation object—is responsible for calling <b>ShutdownObject</b>. For example, in a typical playback application, the application creates activation objects for the media sinks, but the Media Session calls <b>ActivateObject</b>. Therefore the Media Session, not the application, calls <b>ShutdownObject</b>. After <b>ShutdownObject</b> is called, the activation object releases all of its internal references to the created object. If you call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject">ActivateObject</a> again, the activation object will create a new instance of the other object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfactivate-shutdownobject#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFActivate.DetachObject">
            <summary>Detaches the created object from the activation object.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The activation object releases all of its internal references to the created object. If you call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject">ActivateObject</a> again, the activation object will create a new instance of the other object. The <b>DetachObject</b> method does not shut down the created object. If the <b>DetachObject</b> method succeeds, the client must shut down the created object. This rule applies only to objects that have a shutdown method or that support the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfshutdown">IMFShutdown</a> interface. See the remarks for <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject">IMFActivate::ActivateObject</a>. Implementation of this method is optional. If the activation object does not support this method, the method returns E_NOTIMPL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfactivate-detachobject#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFActivate.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{7fee9e9a-4a89-47a6-899c-b6a53a70fb67}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.GetParameters(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.GetParameters(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.GetParameters(System.UInt32*,System.UInt32*)">
            <summary>Provides configuration information to the dispatching thread for a callback. (IMFAsyncCallback.GetParameters)</summary>
            <param name="pdwFlags">
            <para>Receives a flag indicating the behavior of the callback object's <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfasynccallback-invoke">IMFAsyncCallback::Invoke</a> method. The following values are defined. The default value is zero. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasynccallback-getparameters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pdwQueue">
            <para>Receives the identifier of the work queue on which the callback is dispatched.</para>
            <para>This value can specify one of the standard Media Foundation work queues, or a work queue created by the application. For list of standard Media Foundation work queues, see <a href="https://docs.microsoft.com/windows/desktop/medfound/work-queue-identifiers">Work Queue Identifiers</a>. To create a new work queue, call <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfallocateworkqueue">MFAllocateWorkQueue</a>. The default value is <b>MFASYNC_CALLBACK_QUEUE_STANDARD</b>. If the work queue is not compatible with the value returned in <i>pdwFlags</i>, the Media Foundation platform returns <b>MF_E_INVALID_WORKQUEUE</b> when it tries to dispatch the callback. (See <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfputworkitem">MFPutWorkItem</a>.)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasynccallback-getparameters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The <b>GetParameters</b> method returns information about the callback so that the dispatching thread can optimize the process that it uses to invoke the callback.</para>
            <para>If the method returns a value other than zero in the <i>pdwFlags</i> parameter, your <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfasynccallback-invoke">Invoke</a> method must meet the requirements described here. Otherwise, the callback might delay the pipeline. If you want default values for both parameters, return <b>E_NOTIMPL</b>. The default values are given in the parameter descriptions on this page. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasynccallback-getparameters#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.Invoke(Windows.Win32.Media.MediaFoundation.IMFAsyncResult*)">
            <summary>Called when an asynchronous operation is completed. (IMFAsyncCallback.Invoke)</summary>
            <param name="pAsyncResult">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfasyncresult">IMFAsyncResult</a> interface. Pass this pointer to the asynchronous <b>End...</b> method to complete the asynchronous call.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Within your implementation of <b>Invoke</b>, call the corresponding <b>End...</b> method. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasynccallback-invoke#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{a27003cf-2354-4f2a-8d6a-ab7cff15437e}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.GetState(Windows.Win32.System.Com.IUnknown**)">
            <summary>Returns the state object specified by the caller in the asynchronous Begin method. (IMFAsyncResult.GetState)</summary>
            <param name="ppunkState">Receives a pointer to the state object's <b>IUnknown</b> interface. If the value is not <b>NULL</b>, the caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The caller of the asynchronous method specifies the state object, and can use it for any caller-defined purpose. The state object can be <b>NULL</b>. If the state object is <b>NULL</b>, <b>GetState</b> returns <b>E_POINTER</b>. If you are implementing an asynchronous method, set the state object on the through the <i>punkState</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfcreateasyncresult">MFCreateAsyncResult</a> function. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasyncresult-getstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.GetStatus">
            <summary>Returns the status of the asynchronous operation. (IMFAsyncResult.GetStatus)</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasyncresult-getstatus#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.SetStatus(Windows.Win32.Foundation.HRESULT)">
            <summary>Sets the status of the asynchronous operation. (IMFAsyncResult.SetStatus)</summary>
            <param name="hrStatus">The status of the asynchronous operation.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If you implement an asynchronous method, call <b>SetStatus</b> to set the status code for the operation. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasyncresult-setstatus#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.GetObject(Windows.Win32.System.Com.IUnknown**)">
            <summary>Returns an object associated with the asynchronous operation. The type of object, if any, depends on the asynchronous method that was called. (IMFAsyncResult.GetObject)</summary>
            <param name="ppObject">Receives a pointer to the object's <b>IUnknown</b> interface. If no object is associated with the operation, this parameter receives the value <b>NULL</b>. If the value is not <b>NULL</b>, the caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Typically, this object is used by the component that implements the asynchronous method. It provides a way for the function that invokes the callback to pass information to the asynchronous <b>End...</b> method that completes the operation. If you are implementing an asynchronous method, you can set the object through the <i>punkObject</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfcreateasyncresult">MFCreateAsyncResult</a> function. If the asynchronous result object's internal <b>IUnknown</b> pointer is <b>NULL</b>, the method returns <b>E_POINTER</b>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasyncresult-getobject#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.GetStateNoAddRef">
            <summary>Returns the state object specified by the caller in the asynchronous Begin method, without incrementing the object's reference count. (IMFAsyncResult.GetStateNoAddRef)</summary>
            <returns>Returns a pointer to the state object's <b>IUnknown</b> interface, or <b>NULL</b> if no object was set. This pointer does not have an outstanding reference count. If you store this pointer, you must call <b>AddRef</b> on the pointer.</returns>
            <remarks>
            <para>This method cannot be called remotely. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfasyncresult-getstatenoaddref#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFAsyncResult.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{ac6b7889-0740-4d51-8619-905994a55cc6}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Retrieves the value associated with a key.</summary>
            <param name="guidKey">A GUID that identifies which value to retrieve.</param>
            <param name="pValue">A pointer to a <b>PROPVARIANT</b> that receives the value. The method fills the <b>PROPVARIANT</b> with a copy of the stored value, if the value is found. Call <b>PropVariantClear</b> to free the memory allocated by this method. This parameter can be <b>NULL</b>. If this parameter is <b>NULL</b>, the method searches for the key and returns S_OK if the key is found, but does not copy the value.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getitem#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItemType(System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)">
            <summary>Retrieves the data type of the value associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to query.</param>
            <param name="pType">Receives a member of the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/ne-mfobjects-mf_attribute_type">MF_ATTRIBUTE_TYPE</a> enumeration.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getitemtype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.CompareItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)">
            <summary>Queries whether a stored attribute value equals to a specified PROPVARIANT.</summary>
            <param name="guidKey">GUID that identifies which value to query.</param>
            <param name="Value"><b>PROPVARIANT</b> that contains the value to compare.</param>
            <param name="pbResult">Receives a Boolean value indicating whether the attribute matches the value given in <i>Value</i>. See Remarks. This parameter must not be <b>NULL</b>. If this parameter is <b>NULL</b>, an access violation occurs.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The method sets <i>pbResult</i> to <b>FALSE</b> for any of the following reasons: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-compareitem#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)">
            <summary>Compares the attributes on this object with the attributes on another object.</summary>
            <param name="pTheirs">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes">IMFAttributes</a> interface of the object to compare with this object.</param>
            <param name="MatchType">Member of the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/ne-mfobjects-mf_attributes_match_type">MF_ATTRIBUTES_MATCH_TYPE</a> enumeration, specifying the type of comparison to make.</param>
            <param name="pbResult">Receives a Boolean value. The value is <b>TRUE</b> if the two sets of attributes match in the way specified by the <i>MatchType</i> parameter. Otherwise, the value is <b>FALSE</b>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If <i>pThis</i> is the object whose <b>Compare</b> method is called, and <i>pTheirs</i> is the object passed in as the <i>pTheirs</i> parameter, the following comparisons are defined by <i>MatchType</i>. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-compare#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUINT32(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUINT32(System.Guid*,System.UInt32*)">
            <summary>Retrieves a UINT32 value associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_UINT32</b>.</param>
            <param name="punValue">Receives a <b>UINT32</b> value. If the key is found and the data type is <b>UINT32</b>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getuint32#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUINT64(System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUINT64(System.Guid*,System.UInt64*)">
            <summary>Retrieves a UINT64 value associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_UINT64</b>.</param>
            <param name="punValue">Receives a <b>UINT64</b> value. If the key is found and the data type is <b>UINT64</b>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getuint64#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetDouble(System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetDouble(System.Guid*,System.Double*)">
            <summary>Retrieves a double value associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_DOUBLE</b>.</param>
            <param name="pfValue">Receives a <b>double</b> value. If the key is found and the data type is <b>double</b>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getdouble#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetGUID(System.Guid*,System.Guid*)">
            <summary>Retrieves a GUID value associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_GUID</b>.</param>
            <param name="pguidValue">Receives a GUID value. If the key is found and the data type is GUID, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getguid#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetStringLength(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetStringLength(System.Guid*,System.UInt32*)">
            <summary>Retrieves the length of a string value associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_STRING</b>.</param>
            <param name="pcchLength">If the key is found and the value is a string type, this parameter receives the number of characters in the string, not including the terminating <b>NULL</b> character. To get the string value, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getstring">IMFAttributes::GetString</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getstringlength#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetString(System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <summary>Retrieves a wide-character string associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_STRING</b>.</param>
            <param name="pwszValue">Pointer to a wide-character array allocated by the caller. The array must be large enough to hold the string, including the terminating <b>NULL</b> character. If the key is found and the value is a string type, the method copies the string into this buffer. To find the length of the string, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getstringlength">IMFAttributes::GetStringLength</a>.</param>
            <param name="cchBufSize">The size of the <i>pwszValue</i> array, in characters. This value includes the terminating NULL character.</param>
            <param name="pcchLength">Receives the number of characters in the string, excluding the terminating <b>NULL</b> character. This parameter can be <b>NULL</b>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>You can also use the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getallocatedstring">IMFAttributes::GetAllocatedString</a> method, which allocates the buffer to hold the string. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getstring#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetAllocatedString(System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)">
            <summary>Gets a wide-character string associated with a key. This method allocates the memory for the string.</summary>
            <param name="guidKey">A GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_STRING</b>.</param>
            <param name="ppwszValue">If the key is found and the value is a string type, this parameter receives a copy of the string. The caller must free the memory for the string by calling <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cotaskmemfree">CoTaskMemFree</a>.</param>
            <param name="pcchLength">Receives the number of characters in the string, excluding the terminating <b>NULL</b> character. This parameter must not be <b>NULL</b>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To copy a string value into a caller-allocated buffer, use the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getstring">IMFAttributes::GetString</a> method. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getallocatedstring#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetBlobSize(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetBlobSize(System.Guid*,System.UInt32*)">
            <summary>Retrieves the length of a byte array associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_BLOB</b>.</param>
            <param name="pcbBlobSize">If the key is found and the value is a byte array, this parameter receives the size of the array, in bytes.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To get the byte array, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getblob">IMFAttributes::GetBlob</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getblobsize#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetBlob(System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)">
            <summary>Retrieves a byte array associated with a key. This method copies the array into a caller-allocated buffer.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_BLOB</b>.</param>
            <param name="pBuf">Pointer to a buffer allocated by the caller. If the key is found and the value is a byte array, the method copies the array into this buffer. To find the required size of the buffer, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getblobsize">IMFAttributes::GetBlobSize</a>.</param>
            <param name="cbBufSize">The size of the <i>pBuf</i> buffer, in bytes.</param>
            <param name="pcbBlobSize">Receives the size of the byte array. This parameter can be <b>NULL</b>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>You can also use the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getallocatedblob">IMFAttributes::GetAllocatedBlob</a> method, which allocates the buffer to hold the byte array. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getblob#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetAllocatedBlob(System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)">
            <summary>Retrieves a byte array associated with a key. This method allocates the memory for the array.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_BLOB</b>.</param>
            <param name="ppBuf">If the key is found and the value is a byte array, this parameter receives a copy of the array. The caller must free the memory for the array by calling <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cotaskmemfree">CoTaskMemFree</a>.</param>
            <param name="pcbSize">Receives the size of the array, in bytes.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To copy a byte array value into a caller-allocated buffer, use the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getblob">IMFAttributes::GetBlob</a> method. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getallocatedblob#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetUnknown(System.Guid*,System.Guid*,System.Void**)">
            <summary>Retrieves an interface pointer associated with a key.</summary>
            <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_IUNKNOWN</b>.</param>
            <param name="riid">Interface identifier (IID) of the interface to retrieve.</param>
            <param name="ppv">Receives a pointer to the requested interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getunknown#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Adds an attribute value with a specified key.</summary>
            <param name="guidKey">A GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="Value">A <b>PROPVARIANT</b> that contains the attribute value. The method copies the value. The <b>PROPVARIANT</b> type must be one of the types listed in the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/ne-mfobjects-mf_attribute_type">MF_ATTRIBUTE_TYPE</a> enumeration.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method checks whether the <b>PROPVARIANT</b> type is one of the attribute types defined in <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/ne-mfobjects-mf_attribute_type">MF_ATTRIBUTE_TYPE</a>, and fails if an unsupported type is used. However, this method does not check whether the <b>PROPVARIANT</b> is the correct type for the specified attribute GUID. (There is no programmatic way to associate attribute GUIDs with property types.) For a list of Media Foundation attributes and their data types, see <a href="https://docs.microsoft.com/windows/desktop/medfound/media-foundation-attributes">Media Foundation Attributes</a>.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setitem#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.DeleteItem(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.DeleteItem(System.Guid*)">
            <summary>Removes a key/value pair from the object's attribute list.</summary>
            <param name="guidKey">GUID that identifies the value to delete.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the specified key does not exist, the method returns <b>S_OK</b>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-deleteitem#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.DeleteAllItems">
            <summary>Removes all key/value pairs from the object's attribute list.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-deleteallitems#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUINT32(System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUINT32(System.Guid*,System.UInt32)">
            <summary>Associates a UINT32 value with a key.</summary>
            <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="unValue">New value for this key.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To retrieve the <b>UINT32</b> value, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32">IMFAttributes::GetUINT32</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setuint32#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUINT64(System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUINT64(System.Guid*,System.UInt64)">
            <summary>Associates a UINT64 value with a key.</summary>
            <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="unValue">New value for this key.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To retrieve the <b>UINT64</b> value, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint64">IMFAttributes::GetUINT64</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setuint64#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetDouble(System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetDouble(System.Guid*,System.Double)">
            <summary>Associates a double value with a key.</summary>
            <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="fValue">New value for this key.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To retrieve the double value, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getdouble">IMFAttributes::GetDouble</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setdouble#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetGUID(System.Guid*,System.Guid*)">
            <summary>Associates a GUID value with a key.</summary>
            <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="guidValue">New value for this key.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To retrieve the GUID value, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getguid">IMFAttributes::GetGUID</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setguid#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetString(System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)">
            <summary>Associates a wide-character string with a key.</summary>
            <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="wszValue">Null-terminated wide-character string to associate with this key. The method stores a copy of the string.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To retrieve the string, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getstring">IMFAttributes::GetString</a> or <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getallocatedstring">IMFAttributes::GetAllocatedString</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setstring#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetBlob(System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetBlob(System.Guid*,System.Byte*,System.UInt32)">
            <summary>Associates a byte array with a key.</summary>
            <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="pBuf">Pointer to a byte array to associate with this key. The method stores a copy of the array.</param>
            <param name="cbBufSize">Size of the array, in bytes.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To retrieve the byte array, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getblob">IMFAttributes::GetBlob</a> or <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getallocatedblob">IMFAttributes::GetAllocatedBlob</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setblob#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)">
            <summary>Associates an IUnknown pointer with a key.</summary>
            <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
            <param name="pUnknown"><b>IUnknown</b> pointer to be associated with this key.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To retrieve the <b>IUnknown</b> pointer, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getunknown">IMFAttributes::GetUnknown</a>. It is not an error to call <b>SetUnknown</b> with <i>pUnknown</i> equal to <b>NULL</b>. However, <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getunknown">GetUnknown</a> will return <b>MF_E_INVALIDTYPE</b>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-setunknown#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.LockStore">
            <summary>Locks the attribute store so that no other thread can access it.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method can cause a deadlock if a thread that calls <b>LockStore</b> waits on a thread that calls any other <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes">IMFAttributes</a> methods on the same object. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-lockstore#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.UnlockStore">
            <summary>Unlocks the attribute store after a call to the IMFAttributes::LockStore method. While the object is unlocked, multiple threads can access the object's attributes.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-unlockstore#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetCount(System.UInt32*)">
            <summary>Retrieves the number of attributes that are set on this object.</summary>
            <param name="pcItems">Receives the number of attributes. This parameter must not be <b>NULL</b>. If this parameter is <b>NULL</b>, an access violation occurs.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To enumerate all of the attributes, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getitembyindex">IMFAttributes::GetItemByIndex</a> for each index value. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getcount#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItemByIndex(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Retrieves an attribute at the specified index.</summary>
            <param name="unIndex">Index of the attribute to retrieve. To get the number of attributes, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getcount">IMFAttributes::GetCount</a>.</param>
            <param name="pguidKey">Receives the GUID that identifies this attribute.</param>
            <param name="pValue">Pointer to a <b>PROPVARIANT</b> that receives the value. This parameter can be <b>NULL</b>. If it is not <b>NULL</b>, the method fills the <b>PROPVARIANT</b> with a copy of the attribute value. Call <b>PropVariantClear</b> to free the memory allocated by this method.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To enumerate all of an object's attributes in a thread-safe way, do the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfattributes-getitembyindex#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Media.MediaFoundation.IMFAttributes.CopyAllItems(Windows.Win32.Media.MediaFoundation.IMFAttributes*)" -->
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFAttributes.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{2cd2d921-c447-44a7-a13c-4adabfc247e3}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetResource(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetResource(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetResource(System.Guid*,System.Void**)">
            <summary>Queries the Microsoft DirectX Graphics Infrastructure (DXGI)surface for an interface.</summary>
            <param name="riid">The interface identifier (IID) of the interface being requested.</param>
            <param name="ppvObject">Receives a pointer to the interface. The caller must release the interface.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>You can use this method to get a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a> interface of the surface. If the buffer is locked, the method returns <b>MF_E_INVALIDREQUEST</b>.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetSubresourceIndex(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetSubresourceIndex(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetSubresourceIndex(System.UInt32*)">
            <summary>Gets the index of the subresource that is associated with this media buffer.</summary>
            <param name="puSubresource">Receives the zero-based index of the subresource.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>The subresource index is specified when you create the media buffer object. See <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfcreatedxgisurfacebuffer">MFCreateDXGISurfaceBuffer</a>. For more information about texture subresources, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgibuffer-getsubresourceindex#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.GetUnknown(System.Guid*,System.Guid*,System.Void**)">
            <summary>Gets an IUnknown pointer that was previously stored in the media buffer object.</summary>
            <param name="guid">The identifier of the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> pointer.</param>
            <param name="riid">The interface identifier (IID) of the interface being requested.</param>
            <param name="ppvObject">Receives a pointer to the interface. The caller must release the interface.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgibuffer-getunknown">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)">
            <summary>Stores an arbitrary IUnknown pointer in the media buffer object.</summary>
            <param name="guid">The identifier for the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> pointer. This identifier is used as a key to retrieve the value. It can be any <b>GUID</b> value.</param>
            <param name="pUnkData">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface. Set this parameter to <b>NULL</b> to clear a pointer that was previously set.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>To retrieve the pointer from the object, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgibuffer-getunknown">IMFDXGIBuffer::GetUnknown</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{e7174cfa-1c9e-48b1-8866-626226bfc258}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.CloseDeviceHandle(System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.CloseDeviceHandle(Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.CloseDeviceHandle(Windows.Win32.Foundation.HANDLE)">
            <summary>Closes a Microsoft Direct3D device handle.</summary>
            <param name="hDevice">A handle to the Direct3D device.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>Call this method to release a device handle that was retrieved by the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">IMFDXGIDeviceManager::OpenDeviceHandle</a> method.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.GetVideoService(System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.GetVideoService(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.GetVideoService(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**)">
            <summary>Queries the Microsoft Direct3D device for an interface.</summary>
            <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">IMFDXGIDeviceManager::OpenDeviceHandle</a>.</param>
            <param name="riid">
            <para>The interface identifier (IID) of the requested interface. The Direct3D device supports the following interfaces: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-getvideoservice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppService">Receives a pointer to the requested interface. The caller must release the interface.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the method returns <b>MF_E_DXGI_NEW_VIDEO_DEVICE</b>, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-closedevicehandle">IMFDXGIDeviceManager::CloseDeviceHandle</a> to close the handle and then call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">OpenDeviceHandle</a> again to get a new handle. The  <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-resetdevice">IMFDXGIDeviceManager::ResetDevice</a> method invalidates all open device handles. For more info see, <a href="https://docs.microsoft.com/windows/desktop/medfound/supporting-direct3d-11-video-decoding-in-media-foundation">Supporting Direct3D 11 Video Decoding in Media Foundation</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-getvideoservice#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.LockDevice(System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Void*@,Windows.Win32.Foundation.BOOL)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.LockDevice(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**,Windows.Win32.Foundation.BOOL)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.LockDevice(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**,Windows.Win32.Foundation.BOOL)">
            <summary>Gives the caller exclusive access to the Microsoft Direct3D device.</summary>
            <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">IMFDXGIDeviceManager::OpenDeviceHandle</a>.</param>
            <param name="riid">
            <para>The interface identifier (IID) of the requested interface. The Direct3D device will support the following interfaces: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-lockdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnkDevice">Receives a pointer to the requested interface. The caller must release the interface.</param>
            <param name="fBlock">Specifies whether to wait for the device lock. If the device is already locked and this parameter is <b>TRUE</b>, the method blocks until the device is unlocked. Otherwise, if the device is locked and this parameter is <b>FALSE</b>, the method returns immediately with the error code <b>DXVA2_E_VIDEO_DEVICE_LOCKED</b>.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>When you are done using the Direct3D device, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-unlockdevice">IMFDXGIDeviceManager::UnlockDevice</a> to unlock the device. If the method returns <b>MF_E_DXGI_NEW_VIDEO_DEVICE</b>, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-closedevicehandle">IMFDXGIDeviceManager::CloseDeviceHandle</a> to close the handle and then call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">OpenDeviceHandle</a> again to get a new handle. The  <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-resetdevice">IMFDXGIDeviceManager::ResetDevice</a> method invalidates all open device handles. If <i>fBlock</i> is <b>TRUE</b>, this method can potentially deadlock. For example, it will deadlock if a thread calls <b>LockDevice</b> and then waits on another thread that calls <b>LockDevice</b>. It will also deadlock if a thread calls <b>LockDevice</b> twice without calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-unlockdevice">UnlockDevice</a> in between.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-lockdevice#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.OpenDeviceHandle(Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.OpenDeviceHandle(Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.OpenDeviceHandle(Windows.Win32.Foundation.HANDLE*)">
            <summary>Gets a handle to the Microsoft Direct3D device.</summary>
            <param name="phDevice">Receives the device handle.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.ResetDevice(Windows.Win32.System.Com.IUnknown*,System.UInt32)">
            <summary>Sets the Microsoft Direct3D device or notifies the device manager that the Direct3D device was reset.</summary>
            <param name="pUnkDevice">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface of the DXGI device.</param>
            <param name="resetToken">The token that was received in the <i>pResetToken</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfcreatedxgidevicemanager">MFCreateDXGIDeviceManager</a> function.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>When you first create the DXGI Device Manager, call this method with a pointer to the Direct3D device. (The device manager does not create the device; the caller must provide the device pointer initially.) Also call this method if the Direct3D device becomes lost and you need to reset the device or create a new device. The <i>resetToken</i> parameter ensures that only the component that originally created the device manager can invalidate the current device. If this method succeeds, all open device handles become invalid. To create a Microsoft Direct3D 11 device, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a>. The device should be created with the <b>D3D11_CREATE_DEVICE_VIDEO_SUPPORT</b> device creation flag which is defined in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a> enumeration. It is recommended that you use multi-thread protection on the device context to prevent deadlock issues that can sometimes happen when you call<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-getdecoderbuffer"> ID3D11VideoContext::GetDecoderBuffer</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11videocontext-releasedecoderbuffer">ID3D11VideoContext::ReleaseDecoderBuffer</a>. To set multi-thread protection, first call <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-queryinterface(q)">QueryInterface</a> on <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> to get an <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10multithread">ID3D10Multithread</a> pointer. Then call <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nf-d3d10-id3d10multithread-setmultithreadprotected">ID3D10Multithread::SetMultithreadProtected</a>, passing in <b>true</b> for <i>bMTProtect</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-resetdevice#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.TestDevice(System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.TestDevice(Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.TestDevice(Windows.Win32.Foundation.HANDLE)">
            <summary>Tests whether a Microsoft Direct3D device handle is valid.</summary>
            <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">IMFDXGIDeviceManager::OpenDeviceHandle</a>.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>If the method returns <b>MF_E_DXGI_NEW_VIDEO_DEVICE</b>, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-closedevicehandle">IMFDXGIDeviceManager::CloseDeviceHandle</a> to close the handle and then call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">OpenDeviceHandle</a> again to get a new handle. The  <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-resetdevice">IMFDXGIDeviceManager::ResetDevice</a> method invalidates all open device handles.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.UnlockDevice(System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.BOOL)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.UnlockDevice(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.BOOL)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.UnlockDevice(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.BOOL)">
            <summary>Unlocks the Microsoft Direct3D device.</summary>
            <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-opendevicehandle">IMFDXGIDeviceManager::OpenDeviceHandle</a>.</param>
            <param name="fSaveState">Reserved.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>Call this method to release the device after calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-lockdevice">IMFDXGIDeviceManager::LockDevice</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{eb533d5d-2db6-40f8-97a9-494692014f07}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Lock(System.Byte*@,System.UInt32*,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Lock(System.Byte**,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Lock(System.Byte**,System.UInt32*,System.UInt32*)">
            <summary>Gives the caller access to the memory in the buffer, for reading or writing.</summary>
            <param name="ppbBuffer">Receives a pointer to the start of the buffer.</param>
            <param name="pcbMaxLength">Receives the maximum amount of data that can be written to the buffer. This parameter can be <b>NULL</b>. The same value is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-getmaxlength">IMFMediaBuffer::GetMaxLength</a> method.</param>
            <param name="pcbCurrentLength">Receives the length of the valid data in the buffer, in bytes. This parameter can be <b>NULL</b>. The same value is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-getcurrentlength">IMFMediaBuffer::GetCurrentLength</a> method.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method gives the caller access to the entire buffer, up to the maximum size returned in the <i>pcbMaxLength</i> parameter. The value returned in <i>pcbCurrentLength</i> is the size of any valid data already in the buffer, which might be less than the total buffer size. The pointer returned in <i>ppbBuffer</i> is guaranteed to be valid, and can safely be accessed across the entire buffer for as long as the lock is held. When you are done accessing the buffer, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-unlock">IMFMediaBuffer::Unlock</a> to unlock the buffer. You must call <b>Unlock</b> once for each call to <b>Lock</b>. After you unlock the buffer, the pointer returned in <i>ppbBuffer</i> is no longer valid, and should not be used. Generally, it is best to call <b>Lock</b> only when you need to access the buffer memory, and not earlier. Locking the buffer does not prevent other threads from calling <b>Lock</b>, so you should not rely on this method to synchronize threads. This method may allocate memory, but does not transfer ownership of the memory to the caller. Do not release or free the memory; the media buffer will free the memory when the media buffer is destroyed.</para>
            <para>If you modify the contents of the buffer, update the current length by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-setcurrentlength">IMFMediaBuffer::SetCurrentLength</a>.</para>
            <para>This method may internally allocate some memory, so if the buffer supports the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer">IMF2DBuffer</a> interface, you should use the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-lock2d">IMF2DBuffer::Lock2D</a> method to lock the buffer instead. For 2-D buffers, the **Lock2DSize** method can be more efficient than the **Lock** method, depending on the **MF2DBuffer_LockFlags** value you specify.  Calling **Lock2DSize** with **MF2DBuffer_LockFlags_Read** won’t incur a copy back when the buffer is unlocked and calling it with **MF2DBuffer_LockFlags_Write** won’t incur a copy from the internal buffer. Calling **Lock2DSize** with **LockFlags_ReadWrite**  behaves the same as **Lock** and **Lock2D** and will incur a both copy from and copy back when unlocked. The general guidance for best performance is to avoid using **IMFMediaBuffer** and **IMF2DBuffer** whenever possible and instead use **IMF2DBuffer2** with the minimum required lock flags. Note that if the buffer is locked using **Lock2D**, the **Lock** method might return MF_E_INVALIDREQUEST. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediabuffer-lock#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Unlock">
            <summary>Unlocks a buffer that was previously locked. Call this method once for every call to IMFMediaBuffer::Lock.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>It is an error to call <b>Unlock</b> if you did not call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-lock">Lock</a> previously. After calling this method, do not use the pointer returned by the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-lock">Lock</a> method. It is no longer guaranteed to be valid. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediabuffer-unlock#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.GetCurrentLength(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.GetCurrentLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.GetCurrentLength(System.UInt32*)">
            <summary>Retrieves the length of the valid data in the buffer.</summary>
            <param name="pcbCurrentLength">Receives the length of the valid data, in bytes. If the buffer does not contain any valid data, the value is zero.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediabuffer-getcurrentlength#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.SetCurrentLength(System.UInt32)">
            <summary>Sets the length of the valid data in the buffer.</summary>
            <param name="cbCurrentLength">Length of the valid data, in bytes. This value cannot be greater than the allocated size of the buffer, which is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-getmaxlength">IMFMediaBuffer::GetMaxLength</a> method.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Call this method if you write data into the buffer. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediabuffer-setcurrentlength#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.GetMaxLength(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.GetMaxLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.GetMaxLength(System.UInt32*)">
            <summary>Retrieves the allocated size of the buffer.</summary>
            <param name="pcbMaxLength">Receives the allocated size of the buffer, in bytes.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The buffer might or might not contain any valid data, and if there is valid data in the buffer, it might be smaller than the buffer's allocated size. To get the length of the valid data, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediabuffer-getcurrentlength">IMFMediaBuffer::GetCurrentLength</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediabuffer-getmaxlength#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{045fa593-8799-42b8-bc8d-8968c6453507}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetError(Windows.Win32.Media.MediaFoundation.IMFMediaError**)">
            <summary>Gets the most recent error status.</summary>
            <param name="ppError">Receives either a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaerror">IMFMediaError</a> interface, or the value <b>NULL</b>. If the value is <b>non-NULL</b>, the caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method returns the last error status, if any, that resulted from loading the media source. If there has not been an error, <i>ppError</i> receives the value <b>NULL</b>. This method corresponds to the <b>error</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-geterror#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetErrorCode(Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR)">
            <summary>Sets the current error code.</summary>
            <param name="error">The error code, as an <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_err">MF_MEDIA_ENGINE_ERR</a> value.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-seterrorcode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetSourceElements(Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements*)">
            <summary>Sets a list of media sources.</summary>
            <param name="pSrcElements">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaenginesrcelements">IMFMediaEngineSrcElements</a> interface. The caller must implement this interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to adding a list of <b>source</b> elements to a media element in HTML5. The Media Engine tries to load each item in the <i>pSrcElements</i> list, until it finds one that loads successfully. After this method is called, the application can use the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaenginesrcelements">IMFMediaEngineSrcElements</a> interface to update the list at any time. To reload the list, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">IMFMediaEngine::Load</a>. This method completes asynchronously. When the operation starts, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_LOADSTART</b> event. If no errors occur during the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">Load</a> operation, several other events are generated, including the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setsourceelements#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetSource(System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetSource(Windows.Win32.Foundation.BSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetSource(Windows.Win32.Foundation.BSTR)">
            <summary>Sets the URL of a media resource.</summary>
            <param name="pUrl">The URL of the media resource.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to setting the <b>src</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. The URL specified by this method takes precedence over media resources specified in the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setsourceelements">IMFMediaEngine::SetSourceElements</a> method. To load the URL, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">IMFMediaEngine::Load</a>. This method asynchronously loads the URL. When the operation starts, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_LOADSTART</b> event. If no errors occur during the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">Load</a> operation, several other events are generated, including the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setsource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetCurrentSource(Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetCurrentSource(Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetCurrentSource(Windows.Win32.Foundation.BSTR*)">
            <summary>Gets the URL of the current media resource, or an empty string if no media resource is present.</summary>
            <param name="ppUrl">Receives a <b>BSTR</b> that contains the URL of the current media resource. If there is no media resource, <i>ppUrl</i> receives an empty string. The caller must free the  <b>BSTR</b> by calling <b>SysFreeString</b>.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to the <b>currentSrc</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. Initially, the current media resource is empty. It is updated when the Media Engine performs the resource selection algorithm.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getcurrentsource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetNetworkState">
            <summary>Gets the current network state of the media engine.</summary>
            <returns>Returns an <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_network">MF_MEDIA_ENGINE_NETWORK</a> enumeration value.</returns>
            <remarks>This method corresponds to the <b>networkState</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetPreload">
            <summary>Gets the preload flag.</summary>
            <returns>Returns an <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_preload">MF_MEDIA_ENGINE_PRELOAD</a> enumeration value.</returns>
            <remarks>This method corresponds to the <b>preload</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. The value is a hint to the user-agent whether to preload the media resource.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetPreload(Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_PRELOAD)">
            <summary>Sets the preload flag.</summary>
            <param name="Preload">An <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_preload">MF_MEDIA_ENGINE_PRELOAD</a> value equal to  the preload flag.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This method corresponds to setting the <b>preload</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. The value is a hint to the user-agent whether to preload the media resource.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetBuffered(Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange**)">
            <summary>Queries how much resource data the media engine has buffered.</summary>
            <param name="ppBuffered">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediatimerange">IMFMediaTimeRange</a> interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to the <b>buffered</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. The returned  <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediatimerange">IMFMediaTimeRange</a> interface represents a list of time ranges. The time ranges indicate which portions of the media resource have been downloaded. The time range list can be empty.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getbuffered#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Load">
            <summary>Loads the current media source.</summary>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>The main purpose of this method is to reload a list of source elements after updating the list. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setsourceelements">SetSourceElements</a>. Otherwise, calling this method is generally not required. To load a new media source, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setsource">IMFMediaEngine::SetSource</a> or <b>IMFMediaEngine::SetSourceElements</b>. The <b>Load</b> method explicitly invokes the Media Engine's media resource loading algorithm. Before calling this method, you must set the media resource by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setsource">IMFMediaEngine::SetSource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setsourceelements">IMFMediaEngine::SetSourceElements</a>. This method completes asynchronously. When the <b>Load</b> operation starts, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_LOADSTART</b> event. If no errors occur during the <b>Load</b> operation, several other events are generated, including the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.CanPlayType(System.Runtime.InteropServices.SafeHandle,Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.CanPlayType(Windows.Win32.Foundation.BSTR,Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.CanPlayType(Windows.Win32.Foundation.BSTR,Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY*)">
            <summary>Queries how likely it is that the Media Engine can play a specified type of media resource.</summary>
            <param name="type">A string that contains a MIME type with an optional codecs parameter, as defined in RFC 4281.</param>
            <param name="pAnswer">Receives an <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_canplay">MF_MEDIA_ENGINE_CANPLAY</a> enumeration value.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to the <b>canPlayType</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. The <b>canPlayType</b> attribute defines the following values. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-canplaytype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetReadyState">
            <summary>Gets the ready state, which indicates whether the current media resource can be rendered.</summary>
            <returns>Returns an <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_ready">MF_MEDIA_ENGINE_READY</a> enumeration value.</returns>
            <remarks>This method corresponds to the <b>readyState</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.IsSeeking">
            <summary>Queries whether the Media Engine is currently seeking to a new playback position.</summary>
            <returns>Returns <b>TRUE</b> if the Media Engine is seeking, or <b>FALSE</b> otherwise.</returns>
            <remarks>This method corresponds to the <b>seeking</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetCurrentTime">
            <summary>Gets the current playback position. (IMFMediaEngine.GetCurrentTime)</summary>
            <returns>Returns the playback position, in seconds.</returns>
            <remarks>
            <para>This method corresponds to the <b>currentTime</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. Note that after you call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-pause">Pause</a>, the time returned by <b>GetCurrentTime</b> may not be precisely accurate. Apps that need a frame-accurate position value, such as media editors, should call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineex-framestep">FrameStep</a> immediately after calling **Pause** before calling <b>GetCurrentTime</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getcurrenttime#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetCurrentTime(System.Double)">
            <summary>Seeks to a new playback position.</summary>
            <param name="seekTime">The new playback position, in seconds.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to setting the <b>currentTime</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. The method completes asynchronously. When the seek operation starts, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_SEEKING</b> event. When the seek operation completes, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_SEEKED</b> event. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginenotify-eventnotify">IMFMediaEventNotify::EventNotify</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setcurrenttime#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetStartTime">
            <summary>Gets the initial playback position.</summary>
            <returns>Returns the initial playback position, in seconds.</returns>
            <remarks>This method corresponds to the <b>initialTime</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetDuration">
            <summary>Gets the duration of the media resource.</summary>
            <returns>Returns the duration, in seconds. If no media data is available, the method returns not-a-number (NaN). If the duration is unbounded, the method returns an infinite value.</returns>
            <remarks>
            <para>This method corresponds to the <b>duration</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. If the duration changes, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE</b> event. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginenotify-eventnotify">IMFMediaEngineNotify::EventNotify</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getduration#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.IsPaused">
            <summary>Queries whether playback is currently paused.</summary>
            <returns>Returns <b>TRUE</b> if playback is paused, or  <b>FALSE</b> otherwise.</returns>
            <remarks>This method corresponds to the <b>paused</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetDefaultPlaybackRate">
            <summary>Gets the default playback rate.</summary>
            <returns>Returns the default playback rate, as a multiple of normal (1×) playback. A negative value indicates reverse playback.</returns>
            <remarks>
            <para>This method corresponds to getting the <b>defaultPlaybackRate</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. The default playback rate is used for the next call to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-play">IMFMediaEngine::Play</a> method. To change the current playback rate, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setplaybackrate">IMFMediaEngine::SetPlaybackRate</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getdefaultplaybackrate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetDefaultPlaybackRate(System.Double)">
            <summary>Sets the default playback rate.</summary>
            <param name="Rate">The default playback rate, as a multiple of normal (1×) playback. A negative value indicates reverse playback.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This method corresponds to setting the <b>defaultPlaybackRate</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetPlaybackRate">
            <summary>Gets the current playback rate. (IMFMediaEngine.GetPlaybackRate)</summary>
            <returns>Returns the playback rate, as a multiple of normal (1×) playback. A negative value indicates reverse playback.</returns>
            <remarks>This method corresponds to getting the <b>playbackRate</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetPlaybackRate(System.Double)">
            <summary>Sets the current playback rate.</summary>
            <param name="Rate">The playback rate, as a multiple of normal (1×) playback. A negative value indicates reverse playback.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This method corresponds to setting the <b>playbackRate</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetPlayed(Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange**)">
            <summary>Gets the time ranges that have been rendered.</summary>
            <param name="ppPlayed">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediatimerange">IMFMediaTimeRange</a> interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This method corresponds to the <b>played</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetSeekable(Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange**)">
            <summary>Gets the time ranges to which the Media Engine can currently seek.</summary>
            <param name="ppSeekable">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediatimerange">IMFMediaTimeRange</a> interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to the <b>seekable</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. To find out whether the media source supports seeking, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineex-getresourcecharacteristics">IMFMediaEngineEx::GetResourceCharacteristics</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getseekable#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.IsEnded">
            <summary>Queries whether playback has ended.</summary>
            <returns>Returns <b>TRUE</b> if the direction of playback is forward and playback has reached the end of the media resource. Returns <b>FALSE</b> otherwise.</returns>
            <remarks>This method corresponds to the <b>ended</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetAutoPlay">
            <summary>Queries whether the Media Engine automatically begins playback.</summary>
            <returns>Returns <b>TRUE</b> if the Media Engine automatically begins playback, or <b>FALSE</b> otherwise.</returns>
            <remarks>
            <para>This method corresponds to the <b>autoplay</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. If this method returns <b>TRUE</b>, playback begins automatically after the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">IMFMediaEngine::Load</a> method completes. Otherwise, playback begins when the application calls <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-play">IMFMediaEngine::Play</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getautoplay#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetAutoPlay(Windows.Win32.Foundation.BOOL)">
            <summary>Specifies whether the Media Engine automatically begins playback.</summary>
            <param name="AutoPlay">If <b>TRUE</b>, the Media Engine automatically begins playback after it loads a media source. Otherwise, playback does not begin until the application calls <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-play">IMFMediaEngine::Play</a>.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This method corresponds to setting the <b>autoplay</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetLoop">
            <summary>Queries whether the Media Engine will loop playback.</summary>
            <returns>Returns <b>TRUE</b> if looping is enabled, or <b>FALSE</b> otherwise.</returns>
            <remarks>
            <para>This method corresponds to getting the <b>loop</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5. If looping is enabled, the Media Engine seeks to the start of the content when playback reaches the end.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getloop#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetLoop(Windows.Win32.Foundation.BOOL)">
            <summary>Specifies whether the Media Engine loops playback.</summary>
            <param name="Loop">Specify <b>TRUE</b> to enable looping, or <b>FALSE</b> to disable looping.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>If <i>Loop</i> is <b>TRUE</b>, playback loops back to the beginning when it reaches the end of the source. This method corresponds to setting the <b>loop</b> attribute of the <b>HTMLMediaElement</b> interface in HTML5.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setloop#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Play">
            <summary>Starts playback. (IMFMediaEngine.Play)</summary>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to the <b>play</b> method of the <b>HTMLMediaElement</b> interface in HTML5. The method completes asynchronously. When the operation starts, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_PLAY</b> event. When playback is under way, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_PLAYING</b> event. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginenotify-eventnotify">IMFMediaEventNotify::EventNotify</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-play#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Pause">
            <summary>Pauses playback. (IMFMediaEngine.Pause)</summary>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method corresponds to the <b>pause</b> method of the <b>HTMLMediaElement</b> interface in HTML5. The method completes asynchronously. When the transition to paused is complete, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_PAUSE                </b> event. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginenotify-eventnotify">IMFMediaEventNotify::EventNotify</a>. Note that after you call <b>Pause</b>, the time returned by <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getcurrenttime">GetCurrentTime</a> may not be precisely accurate. Apps that need a frame-accurate position value, such as media editors, should call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineex-framestep">FrameStep</a> immediately after calling **Pause** before calling <b>GetCurrentTime</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-pause#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetMuted">
            <summary>Queries whether the audio is muted. (IMFMediaEngine.GetMuted)</summary>
            <returns>Returns <b>TRUE</b> if the audio is muted, or <b>FALSE</b> otherwise.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getmuted">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetMuted(Windows.Win32.Foundation.BOOL)">
            <summary>Mutes or unmutes the audio. (IMFMediaEngine.SetMuted)</summary>
            <param name="Muted">Specify <b>TRUE</b> to mute the audio, or <b>FALSE</b> to unmute the audio.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setmuted">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetVolume">
            <summary>Gets the audio volume level.</summary>
            <returns>Returns the volume level. Volume is expressed as an attenuation level, where 0.0 indicates silence and 1.0 indicates full volume (no attenuation).</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getvolume">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.SetVolume(System.Double)">
            <summary>Sets the audio volume level.</summary>
            <param name="Volume">The volume level. Volume is expressed as an attenuation level, where 0.0 indicates silence and 1.0 indicates full volume (no attenuation).</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>When the audio balance changes, the Media Engine sends an <b>MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE</b> event. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginenotify-eventnotify">IMFMediaEventNotify::EventNotify</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.HasVideo">
            <summary>Queries whether the current media resource contains a video stream.</summary>
            <returns>Returns <b>TRUE</b> if the current media resource contains a video stream. Returns <b>FALSE</b> if there is no media resource or the media resource does not contain a video stream.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-hasvideo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.HasAudio">
            <summary>Queries whether the current media resource contains an audio stream.</summary>
            <returns>Returns <b>TRUE</b> if the current media resource contains an audio stream. Returns <b>FALSE</b> if there is no media resource or the media resource does not contain an audio stream.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-hasaudio">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetNativeVideoSize(System.UInt32*,System.UInt32*)">
            <summary>Gets the size of the video frame, adjusted for aspect ratio.</summary>
            <param name="cx">Receives the width in pixels.</param>
            <param name="cy">Receives the height in pixels.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method adjusts for the correct picture aspect ratio. For example, if the encoded frame is 720 × 420 and the picture aspect ratio is 4:3, the method will return a size equal to 640 × 480 pixels.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getnativevideosize#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.GetVideoAspectRatio(System.UInt32*,System.UInt32*)">
            <summary>Gets the picture aspect ratio of the video stream.</summary>
            <param name="cx">Receives the x component of the aspect ratio.</param>
            <param name="cy">Receives the y component of the aspect ratio.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>The Media Engine automatically converts the pixel aspect ratio to 1:1 (square pixels).</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Shutdown">
            <summary>Shuts down the Media Engine and releases the resources it is using.</summary>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-shutdown">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.TransferVideoFrame(Windows.Win32.System.Com.IUnknown*,System.Nullable{Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect},Windows.Win32.Foundation.RECT@,System.Nullable{Windows.Win32.Media.MediaFoundation.MFARGB})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.TransferVideoFrame(Windows.Win32.System.Com.IUnknown*,Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect*,Windows.Win32.Foundation.RECT*,Windows.Win32.Media.MediaFoundation.MFARGB*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.TransferVideoFrame(Windows.Win32.System.Com.IUnknown*,Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect*,Windows.Win32.Foundation.RECT*,Windows.Win32.Media.MediaFoundation.MFARGB*)">
            <summary>Copies the current video frame to a DXGI surface or WIC bitmap.</summary>
            <param name="pDstSurf">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface of the destination surface.</param>
            <param name="pSrc">A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/evr/ns-evr-mfvideonormalizedrect">MFVideoNormalizedRect</a> structure that specifies the source rectangle.</param>
            <param name="pDst">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure that specifies the destination rectangle.</param>
            <param name="pBorderClr">A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/ns-mfobjects-mfargb">MFARGB</a> structure that specifies the border color.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>In frame-server mode, call this method to blit the video frame to a DXGI or WIC surface. The application can call this method at any time after the Media Engine loads a video resource. Typically, however, the application calls <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-onvideostreamtick">IMFMediaEngine::OnVideoStreamTick</a> first, to determine whether a new frame is available. If <b>OnVideoStreamTick</b> returns <b>S_OK</b>, the application then calls <b>TransferVideoFrame</b>. The Media Engine scales and letterboxes the video to fit the destination rectangle. It fills the letterbox area with the border color. For protected content, call the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineprotectedcontent-transfervideoframe">IMFMediaEngineProtectedContent::TransferVideoFrame</a> method instead of this method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-transfervideoframe#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.OnVideoStreamTick(System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.OnVideoStreamTick(System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.OnVideoStreamTick(System.Int64*)">
            <summary>Queries the Media Engine to find out whether a new video frame is ready.</summary>
            <param name="pPts">If a new frame is ready, receives the presentation time of the frame.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>In frame-server mode, the application should call this method whenever a vertical blank occurs in the display device. If the method returns <b>S_OK</b>, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-transfervideoframe">IMFMediaEngine::TransferVideoFrame</a> to blit the frame to the render target. If the method returns <b>S_FALSE</b>, wait for the next vertical blank and call the method again. Do not call this method in rendering mode or audio-only mode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-onvideostreamtick#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{98a1b0bb-03eb-4935-ae7c-93c1fa0e1c93}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineClassFactory.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineClassFactory.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineClassFactory.CreateInstance(System.UInt32,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFMediaEngine**)">
            <summary>Creates a new instance of the Media Engine.</summary>
            <param name="dwFlags">A bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_createflags">MF_MEDIA_ENGINE_CREATEFLAGS</a> enumeration.</param>
            <param name="pAttr">
            <para>A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes">IMFAttributes</a> interface of an attribute store. This parameter  specifies configuration attributes for the Media Engine. Call <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfcreateattributes">MFCreateAttributes</a> to create the attribute store. Then, set one or more attributes from the list of <a href="https://docs.microsoft.com/windows/desktop/medfound/media-engine-attributes">Media Engine Attributes</a>. For details, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPlayer">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaengine">IMFMediaEngine</a> interface. The caller must release the interface.</param>
            <returns>
            <para>This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Before calling this method, call <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfstartup">MFStartup</a>. The Media Engine supports three distinct modes: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineClassFactory.CreateTimeRange(Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange**)">
            <summary>Creates a time range object.</summary>
            <param name="ppTimeRange">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediatimerange">IMFMediaTimeRange</a> interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createtimerange">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineClassFactory.CreateError(Windows.Win32.Media.MediaFoundation.IMFMediaError**)">
            <summary>Creates a media error object.</summary>
            <param name="ppError">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaerror">IMFMediaError</a> interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createerror">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaEngineClassFactory.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{4d645ace-26aa-4688-9be1-df3516990b93}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineNotify.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineNotify.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineNotify.EventNotify(System.UInt32,System.UIntPtr,System.UInt32)">
            <summary>Notifies the application when a playback event occurs.</summary>
            <param name="param1">The first event parameter. The meaning of this parameter depends on the event code.</param>
            <param name="param2">The second event parameter. The meaning of this parameter depends on the event code.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaenginenotify-eventnotify">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaEngineNotify.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{fee7c112-e776-42b5-9bbf-0048524e2bd5}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetLength">
            <summary>Gets the number of source elements in the list.</summary>
            <returns>Returns the number of source elements.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-getlength">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetURL(System.UInt32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetURL(System.UInt32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetURL(System.UInt32,Windows.Win32.Foundation.BSTR*)">
            <summary>Gets the URL of an element in the list.</summary>
            <param name="index">The zero-based index of the source element. To get the number of source elements, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-getlength">IMFMediaEngineSrcElements::GetLength</a>.</param>
            <param name="pURL">Receives a <b>BSTR</b> that contains the URL of the source element. The caller must free the  <b>BSTR</b> by calling <b>SysFreeString</b>. If no URL is set, this parameter receives the value <b>NULL</b>.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-geturl">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetType(System.UInt32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetType(System.UInt32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetType(System.UInt32,Windows.Win32.Foundation.BSTR*)">
            <summary>Gets the MIME type of an element in the list.</summary>
            <param name="index">The zero-based index of the source element. To get the number of source elements, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-getlength">IMFMediaEngineSrcElements::GetLength</a>.</param>
            <param name="pType">Receives a <b>BSTR</b> that contains the MIME type. The caller must free the  <b>BSTR</b> by calling <b>SysFreeString</b>. If no MIME type is set, this parameter receives the value <b>NULL</b>.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-gettype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetMedia(System.UInt32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetMedia(System.UInt32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.GetMedia(System.UInt32,Windows.Win32.Foundation.BSTR*)">
            <summary>Gets the intended media type of an element in the list.</summary>
            <param name="index">The zero-based index of the source element. To get the number of source elements, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-getlength">IMFMediaEngineSrcElements::GetLength</a>.</param>
            <param name="pMedia">Receives a <b>BSTR</b> that contains a media-query string. The caller must free the  <b>BSTR</b> by calling <b>SysFreeString</b>. If no media type is set, this parameter receives the value <b>NULL</b>.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>The string returned in <i>pMedia</i> should be a media-query string that conforms to the W3C <i>Media Queries</i> specification.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.AddElement(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.AddElement(Windows.Win32.Foundation.BSTR,Windows.Win32.Foundation.BSTR,Windows.Win32.Foundation.BSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.AddElement(Windows.Win32.Foundation.BSTR,Windows.Win32.Foundation.BSTR,Windows.Win32.Foundation.BSTR)">
            <summary>Adds a source element to the end of the list.</summary>
            <param name="pURL">The URL of the source element, or <b>NULL</b>.</param>
            <param name="pType">The MIME type of the source element, or <b>NULL</b>.</param>
            <param name="pMedia">A media-query string that specifies the intended media type, or <b>NULL</b>. If specified, the string should conform to the W3C <i>Media Queries</i> specification.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>Any of the parameters to this method can be <b>NULL</b>. This method allocates copies of the <b>BSTR</b>s that are passed in.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-addelement#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.RemoveAllElements">
            <summary>Removes all of the source elements from the list.</summary>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaenginesrcelements-removeallelements">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{7a5e5354-b114-4c72-b991-3131d75032ea}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaError.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaError.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaError.GetErrorCode">
            <summary>Gets the error code.</summary>
            <returns>Returns a value from the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_err">MF_MEDIA_ENGINE_ERR</a> enumeration.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaerror-geterrorcode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaError.GetExtendedErrorCode">
            <summary>Gets the extended error code.</summary>
            <returns>Returns an <b>HRESULT</b> value that gives additional information about the last error.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaerror-getextendederrorcode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaError.SetErrorCode(Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR)">
            <summary>Sets the error code.</summary>
            <param name="error">The error code, specified as an <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_err">MF_MEDIA_ENGINE_ERR</a> value.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaerror-seterrorcode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaError.SetExtendedErrorCode(Windows.Win32.Foundation.HRESULT)">
            <summary>Sets the extended error code.</summary>
            <param name="error">An <b>HRESULT</b> value that gives additional information about the last error.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediaerror-setextendederrorcode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaError.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{fc0e10d2-ab2a-4501-a951-06bb1075184c}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetItemType(System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.CompareItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetUINT32(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetUINT64(System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetDouble(System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetStringLength(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetString(System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetAllocatedString(System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetBlobSize(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetBlob(System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetAllocatedBlob(System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.DeleteItem(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetUINT32(System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetUINT64(System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetDouble(System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetString(System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetBlob(System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetItemByIndex(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetType(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetType(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetType(System.UInt32*)">
            <summary>Retrieves the event type. The event type indicates what happened to trigger the event. It also defines the meaning of the event value.</summary>
            <param name="pmet">Receives the event type. For a list of event types, see <a href="https://docs.microsoft.com/windows/desktop/medfound/media-foundation-events">Media Foundation Events</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediaevent-gettype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetExtendedType(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetExtendedType(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetExtendedType(System.Guid*)">
            <summary>Retrieves the extended type of the event.</summary>
            <param name="pguidExtendedType">Receives a <b>GUID</b> that identifies the extended type.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>To define a custom event, create a new extended-type GUID and send an <a href="https://docs.microsoft.com/windows/desktop/medfound/meextendedtype">MEExtendedType</a> event with that GUID. Some standard Media Foundation events also use the extended type to differentiate between types of event data. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediaevent-getextendedtype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetStatus(Windows.Win32.Foundation.HRESULT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetStatus(Windows.Win32.Foundation.HRESULT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetStatus(Windows.Win32.Foundation.HRESULT*)">
            <summary>Retrieves an HRESULT that specifies the event status.</summary>
            <param name="phrStatus">Receives the event status. If the operation that generated the event was successful, the value is a success code. A failure code means that an error condition triggered the event.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediaevent-getstatus#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetValue(Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetValue(Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.GetValue(Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Retrieves the value associated with the event, if any. The value is retrieved as a PROPVARIANT structure. The actual data type and the meaning of the value depend on the event.</summary>
            <param name="pvValue">Pointer to a <b>PROPVARIANT</b> structure. The method fills this structure with the data.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Before calling this method, call <b>PropVariantInit</b> to initialize the <b>PROPVARIANT</b> structure. After the method returns, call <b>PropVariantClear</b> to free the memory that was allocated for the <b>PROPVARIANT</b> data. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediaevent-getvalue#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{df598932-f10c-4e39-bba2-c308f101daa3}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.GetEvent(Windows.Win32.Media.MediaFoundation.MEDIA_EVENT_GENERATOR_GET_EVENT_FLAGS,Windows.Win32.Media.MediaFoundation.IMFMediaEvent**)">
            <summary>Retrieves the next event in the queue. This method is synchronous.</summary>
            <param name="dwFlags"></param>
            <param name="ppEvent">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediaevent">IMFMediaEvent</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method executes synchronously. If the queue already contains an event, the method returns S_OK immediately. If the queue does not contain an event, the behavior depends on the value of <i>dwFlags</i>: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediaeventgenerator-getevent#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.BeginGetEvent(Windows.Win32.Media.MediaFoundation.IMFAsyncCallback*,Windows.Win32.System.Com.IUnknown*)">
            <summary>Begins an asynchronous request for the next event in the queue.</summary>
            <param name="pCallback">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfasynccallback">IMFAsyncCallback</a> interface of a callback object. The client must implement this interface.</param>
            <param name="punkState">Pointer to the <b>IUnknown</b> interface of a state object, defined by the caller. This parameter can be <b>NULL</b>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>When a new event is available, the event generator calls the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfasynccallback-invoke">IMFAsyncCallback::Invoke</a> method. The <b>Invoke</b> method should call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaeventgenerator-endgetevent">IMFMediaEventGenerator::EndGetEvent</a> to get a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediaevent">IMFMediaEvent</a> interface, and use that interface to examine the event. Do not call <b>BeginGetEvent</b> a second time before calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaeventgenerator-endgetevent">EndGetEvent</a>. While the first call is still pending, additional calls to the same object will fail. Also, the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaeventgenerator-getevent">IMFMediaEventGenerator::GetEvent</a> method fails if an asynchronous request is still pending.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediaeventgenerator-begingetevent#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.EndGetEvent(Windows.Win32.Media.MediaFoundation.IMFAsyncResult*,Windows.Win32.Media.MediaFoundation.IMFMediaEvent**)">
            <summary>Completes an asynchronous request for the next event in the queue.</summary>
            <param name="pResult">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfasyncresult">IMFAsyncResult</a> interface. Pass in the same pointer that your callback object received in the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfasynccallback-invoke">Invoke</a> method.</param>
            <param name="ppEvent">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediaevent">IMFMediaEvent</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>Call this method from inside your application's <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfasynccallback-invoke">IMFAsyncCallback::Invoke</a> method. For example code, see <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaeventgenerator-begingetevent">IMFMediaEventGenerator::BeginGetEvent</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.QueueEvent(System.UInt32,System.Guid@,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.QueueEvent(System.UInt32,System.Guid*,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.QueueEvent(System.UInt32,System.Guid*,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Puts a new event in the object's queue.</summary>
            <param name="met">Specifies the event type. The event type is returned by the event's <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaevent-gettype">IMFMediaEvent::GetType</a> method. For a list of event types, see <a href="https://docs.microsoft.com/windows/desktop/medfound/media-foundation-events">Media Foundation Events</a>.</param>
            <param name="guidExtendedType">The extended type. If the event does not have an extended type, use the value GUID_NULL. The extended type is returned by the event's <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaevent-getextendedtype">IMFMediaEvent::GetExtendedType</a> method.</param>
            <param name="hrStatus">A success or failure code indicating the status of the event. This value is returned by the event's <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaevent-getstatus">IMFMediaEvent::GetStatus</a> method.</param>
            <param name="pvValue">Pointer to a <b>PROPVARIANT</b> that contains the event value. This parameter can be <b>NULL</b>. This value is returned by the event's <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaevent-getvalue">IMFMediaEvent::GetValue</a> method.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediaeventgenerator-queueevent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{2cd0bd52-bcd5-4b89-b62c-eadc0c031e7d}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.QueueEvent(System.UInt32,System.Guid@,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.QueueEvent(System.UInt32,System.Guid*,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.GetCharacteristics(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.GetCharacteristics(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.GetCharacteristics(System.UInt32*)">
            <summary>Retrieves the characteristics of the media source.</summary>
            <param name="pdwCharacteristics">Receives a bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/ne-mfidl-mfmediasource_characteristics">MFMEDIASOURCE_CHARACTERISTICS</a> enumeration.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The characteristics of a media source can change at any time. If this happens, the source sends an <a href="https://docs.microsoft.com/windows/desktop/medfound/mesourcecharacteristicschanged">MESourceCharacteristicsChanged</a> event.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.CreatePresentationDescriptor(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor**)">
            <summary>Retrieves a copy of the media source's presentation descriptor. Applications use the presentation descriptor to select streams and to get information about the source content.</summary>
            <param name="ppPresentationDescriptor">Receives a pointer to the presentation descriptor's <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfpresentationdescriptor">IMFPresentationDescriptor</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The presentation descriptor contains the media source's default settings for the presentation. The application can change these settings by selecting or deselecting streams, or by changing the media type on a stream. Do not modify the presentation descriptor unless the source is stopped. The changes take affect when the source's <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-start">IMFMediaSource::Start</a> method is called.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Start(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor*,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Start(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor*,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Start(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor*,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Starts, seeks, or restarts the media source by specifying where to start playback.</summary>
            <param name="pPresentationDescriptor">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfpresentationdescriptor">IMFPresentationDescriptor</a> interface of the media source's presentation descriptor. To get the presentation descriptor, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-createpresentationdescriptor">IMFMediaSource::CreatePresentationDescriptor</a>. You can modify the presentation descriptor before calling <b>Start</b>, to select or deselect streams or change the media types.</param>
            <param name="pguidTimeFormat">Pointer to a GUID that specifies the time format. The time format defines the units for the <i>pvarStartPosition</i> parameter. If the value <i></i> is <b>GUID_NULL</b>, the time format is 100-nanosecond units. Some media sources might support additional time format GUIDs. This parameter can be <b>NULL</b>. If the value is <b>NULL</b>, it is equivalent to <b>GUID_NULL</b>.</param>
            <param name="pvarStartPosition">Specifies where to start playback. The units of this parameter are indicated by the time format given in <i>pguidTimeFormat</i>. If the time format is <b>GUID_NULL</b>, the variant type must be <b>VT_I8</b> or <b>VT_EMPTY</b>. Use <b>VT_I8</b> to specify a new starting position, in 100-nanosecond units. Use <b>VT_EMPTY</b> to start from the current position. Other time formats might use other <b>PROPVARIANT</b> types.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method is asynchronous. If the operation succeeds, the media source sends the following events: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediasource-start#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Stop">
            <summary>Stops all active streams in the media source.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method is asynchronous. When the operation completes, the media source sends and <a href="https://docs.microsoft.com/windows/desktop/medfound/mesourcestopped">MESourceStopped</a> event, and every active stream sends an <a href="https://docs.microsoft.com/windows/desktop/medfound/mestreamstopped">MEStreamStopped</a> event. If the method returns a failure code, no events are raised. When a media source is stopped, its current position reverts to zero. After that, if the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-start">Start</a> method is called with VT_EMPTY for the starting position, playback starts from the beginning of the presentation. While the source is stopped, no streams produce data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediasource-stop#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Pause">
            <summary>Pauses all active streams in the media source.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method is asynchronous. When the operation completes, the media source sends and <a href="https://docs.microsoft.com/windows/desktop/medfound/mesourcepaused">MESourcePaused</a> event, and every active stream sends an <a href="https://docs.microsoft.com/windows/desktop/medfound/mestreampaused">MEStreamPaused</a> event. If the method returns a failure code, no events are raised. The media source must be in the started state. The method fails if the media source is paused or stopped. While the source is paused, calls to <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediastream-requestsample">IMFMediaStream::RequestSample</a> succeed, but the streams will not deliver any samples until after the source is started again. Note that the source's event queue is not serialized with the stream event queues, so the client might receive some samples after the <a href="https://docs.microsoft.com/windows/desktop/medfound/mesourcepaused">MESourcePaused</a> event, due to multi-threading issues. But the client will not receive any samples from a stream after the <a href="https://docs.microsoft.com/windows/desktop/medfound/mestreampaused">MEStreamPaused</a> event. Not every media source can pause. If a media source can pause, the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-getcharacteristics">IMFMediaSource::GetCharacteristics</a> method returns the MFMEDIASOURCE_CAN_PAUSE flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediasource-pause#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Shutdown">
            <summary>Shuts down the media source and releases the resources it is using.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the application creates the media source, either directly or through the source resolver, the application is responsible for calling <b>Shutdown</b> to avoid memory or resource leaks. After this method is called, methods on the media source and all of its media streams return MF_E_SHUTDOWN (except for <b>IUnknown</b> methods).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediasource-shutdown#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaSource.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{279a808d-aec7-40c8-9c6b-a6b492c78a66}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.GetLength">
            <summary>Gets the number of time ranges contained in the object.</summary>
            <returns>Returns the number of time ranges.</returns>
            <remarks>This method corresponds to the <b>TimeRanges.length</b> attribute in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.GetStart(System.UInt32,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.GetStart(System.UInt32,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.GetStart(System.UInt32,System.Double*)">
            <summary>Gets the start time for a specified time range.</summary>
            <param name="index">The zero-based index of the time range to query. To get the  number of time ranges, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediatimerange-getlength">IMFMediaTimeRange::GetLength</a>.</param>
            <param name="pStart">Receives the start time, in seconds.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This method corresponds to the <b>TimeRanges.start</b> method in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.GetEnd(System.UInt32,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.GetEnd(System.UInt32,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.GetEnd(System.UInt32,System.Double*)">
            <summary>Gets the end time for a specified time range.</summary>
            <param name="index">The zero-based index of the time range to query. To get the  number of time ranges, call <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediatimerange-getlength">IMFMediaTimeRange::GetLength</a>.</param>
            <param name="pEnd">Receives the end time, in seconds.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This method corresponds to the <b>TimeRanges.end</b> method in HTML5.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.ContainsTime(System.Double)">
            <summary>Queries whether a specified time falls within any of the time ranges.</summary>
            <param name="time">The time, in seconds.</param>
            <returns>Returns <b>TRUE</b> if any time range contained in this object spans the value of the <i>time</i> parameter. Otherwise, returns <b>FALSE</b>.</returns>
            <remarks>
            <para>This method returns <b>TRUE</b> if the following condition holds for any time range in the list: <i>start</i> <i>time</i> <i>time</i> <i>end</i></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediatimerange-containstime#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.AddRange(System.Double,System.Double)">
            <summary>Adds a new range to the list of time ranges.</summary>
            <param name="startTime">The start time, in seconds.</param>
            <param name="endTime">The end time, in seconds.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>If the new range intersects a range already in the list, the two ranges are combined. Otherwise, the new range is added to the list.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.Clear">
            <summary>Clears the list of time ranges.</summary>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/nf-mfmediaengine-imfmediatimerange-clear">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{db71a2fc-078a-414e-9df9-8c2531b0aa6c}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetItemType(System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.CompareItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetUINT32(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetUINT64(System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetDouble(System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetStringLength(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetString(System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetAllocatedString(System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetBlobSize(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetBlob(System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetAllocatedBlob(System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.DeleteItem(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetUINT32(System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetUINT64(System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetDouble(System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetString(System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetBlob(System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetItemByIndex(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetMajorType(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetMajorType(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetMajorType(System.Guid*)">
            <summary>Gets the major type of the format.</summary>
            <param name="pguidMajorType">Receives the major type <b>GUID</b>. The major type describes the broad category of the format, such as audio or video. For a list of possible values, see <a href="https://docs.microsoft.com/windows/desktop/medfound/media-type-guids">Major Media Types</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method is equivalent to getting the <a href="https://docs.microsoft.com/windows/desktop/medfound/mf-mt-major-type-attribute">MF_MT_MAJOR_TYPE</a> attribute from the media type.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediatype-getmajortype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.IsCompressedFormat(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.IsCompressedFormat(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.IsCompressedFormat(Windows.Win32.Foundation.BOOL*)">
            <summary>Queries whether the media type is a temporally compressed format.</summary>
            <param name="pfCompressed">Receives a Boolean value. The value is <b>TRUE</b> if the format uses temporal compression, or <b>FALSE</b> if the format does not use temporal compression.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method returns <b>FALSE</b> in <i>pfCompressed</i> if the media type's <a href="https://docs.microsoft.com/windows/desktop/medfound/mf-mt-all-samples-independent-attribute">MF_MT_ALL_SAMPLES_INDEPENDENT</a> attribute is <b>TRUE</b>. If the <b>MF_MT_ALL_SAMPLES_INDEPENDENT</b> attribute is <b>FALSE</b> or not set, the method returns <b>TRUE</b>.</para>
            <para>If the method returns <b>TRUE</b> in <i>pfCompressed</i>, it is a hint that the format has temporal compression applied to it. If the method returns <b>FALSE</b>, the format does not use temporal compression, although it might use intra-frame compression.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediatype-iscompressedformat#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.IsEqual(Windows.Win32.Media.MediaFoundation.IMFMediaType*,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.IsEqual(Windows.Win32.Media.MediaFoundation.IMFMediaType*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.IsEqual(Windows.Win32.Media.MediaFoundation.IMFMediaType*,System.UInt32*)">
            <summary>Compares two media types and determines whether they are identical. If they are not identical, the method indicates how the two formats differ.</summary>
            <param name="pIMediaType">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface of the media type to compare.</param>
            <param name="pdwFlags">
            <para>Receives a bitwise <b>OR</b> of zero or more flags, indicating the degree of similarity between the two media types. The following flags are defined. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediatype-isequal#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Both of the media types must have a major type, or the method returns <b>E_INVALIDARG</b>.</para>
            <para>If the method succeeds and all of the comparison flags are set in <i>pdwFlags</i>, the return value is <b>S_OK</b>. If the method succeeds but one or more comparison flags are not set, the method returns <b>S_FALSE</b>.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediatype-isequal#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetRepresentation(System.Guid,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetRepresentation(System.Guid,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.GetRepresentation(System.Guid,System.Void**)">
            <summary>Retrieves an alternative representation of the media type. Currently only the DirectShow AM_MEDIA_TYPE structure is supported.</summary>
            <param name="guidRepresentation">
            <para>GUID that specifies the representation to retrieve. The following values are defined.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediatype-getrepresentation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvRepresentation">Receives a pointer to a structure that contains the representation. The method allocates the memory for the structure. The caller must release the memory by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediatype-freerepresentation">IMFMediaType::FreeRepresentation</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If you request a specific format structure in the <i>guidRepresentation</i> parameter, such as <b>VIDEOINFOHEADER</b>, you might lose some of the format information.</para>
            <para>You can also use the <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfinitammediatypefrommfmediatype">MFInitAMMediaTypeFromMFMediaType</a> function to convert a Media Foundation media type into a DirectShow media type.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediatype-getrepresentation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.FreeRepresentation(System.Guid,System.Void*)">
            <summary>Frees memory that was allocated by the IMFMediaType::GetRepresentation method.</summary>
            <param name="guidRepresentation">GUID that was passed to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediatype-getrepresentation">GetRepresentation</a> method.</param>
            <param name="pvRepresentation">Pointer to the buffer that was returned by the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfmediatype-getrepresentation">GetRepresentation</a> method.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfmediatype-freerepresentation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaType.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{44ae0fa8-ea31-4109-8d2e-4cae4997c555}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.IsMediaTypeSupported(Windows.Win32.Media.MediaFoundation.IMFMediaType*,Windows.Win32.Media.MediaFoundation.IMFMediaType**)">
            <summary>Queries whether the object supports a specified media type.</summary>
            <param name="pMediaType">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface of the media type to check.</param>
            <param name="ppMediaType">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface of the closest matching media type, or receives the value <b>NULL</b>. If non-<b>NULL</b>, the caller must release the interface. This parameter can be <b>NULL</b>. See Remarks.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the object supports the media type given in <i>pMediaType</i>, the method returns <b>S_OK</b>. For a media source, it means the source can generate data that conforms to that media type. For a media sink, it means the sink can receive data that conforms to that media type. If the object does not support the media type, the method fails.</para>
            <para>The <i>ppMediaType</i> parameter is optional. If the method fails, the object might use <i>ppMediaType</i> to return a media type that the object does support, and which closely matches the one given in <i>pMediaType</i>. The method is not guaranteed to return a media type in <i>ppMediaType</i>. If no type is returned, this parameter receives a <b>NULL</b> pointer. If the method succeeds, this parameter receives a <b>NULL</b> pointer. If the caller sets <i>ppMediaType</i> to <b>NULL</b>, this parameter is ignored.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediatypehandler-ismediatypesupported#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetMediaTypeCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetMediaTypeCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetMediaTypeCount(System.UInt32*)">
            <summary>Retrieves the number of media types in the object's list of supported media types.</summary>
            <param name="pdwTypeCount">Receives the number of media types in the list.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>To get the supported media types, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediatypehandler-getmediatypebyindex">IMFMediaTypeHandler::GetMediaTypeByIndex</a>.</para>
            <para>For a media source, the media type handler for each stream must contain at least one supported media type. For media sinks, the media type handler for each stream might contain zero media types. In that case, the application must provide the media type. To test whether a particular media type is supported, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediatypehandler-ismediatypesupported">IMFMediaTypeHandler::IsMediaTypeSupported</a>.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediatypehandler-getmediatypecount#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetMediaTypeByIndex(System.UInt32,Windows.Win32.Media.MediaFoundation.IMFMediaType**)">
            <summary>Retrieves a media type from the object's list of supported media types.</summary>
            <param name="dwIndex">Zero-based index of the media type to retrieve. To get the number of media types in the list, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediatypehandler-getmediatypecount">IMFMediaTypeHandler::GetMediaTypeCount</a>.</param>
            <param name="ppType">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Media types are returned in the approximate order of preference. The list of supported types is not guaranteed to be complete. To test whether a particular media type is supported, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediatypehandler-ismediatypesupported">IMFMediaTypeHandler::IsMediaTypeSupported</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediatypehandler-getmediatypebyindex#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.SetCurrentMediaType(Windows.Win32.Media.MediaFoundation.IMFMediaType*)">
            <summary>Sets the object's media type.</summary>
            <param name="pMediaType">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface of the new media type.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>For media sources, setting the media type means the source will generate data that conforms to that media type. For media sinks, setting the media type means the sink can receive data that conforms to that media type. Any implementation of this method should check whether <i>pMediaType</i> differs from the object's current media type. If the types are identical, the method should return S_OK but avoid releasing and recreating resources unnecessarily. If the types are not identical, the method should validate the new type. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediatypehandler-setcurrentmediatype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetCurrentMediaType(Windows.Win32.Media.MediaFoundation.IMFMediaType**)">
            <summary>Retrieves the current media type of the object.</summary>
            <param name="ppMediaType">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediatypehandler-getcurrentmediatype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetMajorType(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetMajorType(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.GetMajorType(System.Guid*)">
            <summary>Gets the major media type of the object.</summary>
            <param name="pguidMajorType">Receives a GUID that identifies the major type. For a list of possible values, see <a href="https://docs.microsoft.com/windows/desktop/medfound/media-type-guids">Major Media Types</a>.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>The major type identifies what kind of data is in the stream, such as audio or video. To get the specific details of the format, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediatypehandler-getcurrentmediatype">IMFMediaTypeHandler::GetCurrentMediaType</a>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfmediatypehandler-getmajortype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{e93dcf6c-4b07-4e1e-8123-aa16ed6eadf5}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetItemType(System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.CompareItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetUINT32(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetUINT64(System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetDouble(System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStringLength(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetString(System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetAllocatedString(System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetBlobSize(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetBlob(System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetAllocatedBlob(System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.DeleteItem(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetUINT32(System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetUINT64(System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetDouble(System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetString(System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetBlob(System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetItemByIndex(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStreamDescriptorCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStreamDescriptorCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStreamDescriptorCount(System.UInt32*)">
            <summary>Retrieves the number of stream descriptors in the presentation. Each stream descriptor contains information about one stream in the media source. To retrieve a stream descriptor, call the IMFPresentationDescriptor::GetStreamDescriptorByIndex method.</summary>
            <param name="pdwDescriptorCount">Receives the number of stream descriptors.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorcount#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStreamDescriptorByIndex(System.UInt32,Windows.Win32.Foundation.BOOL@,Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor**)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStreamDescriptorByIndex(System.UInt32,Windows.Win32.Foundation.BOOL*,Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.GetStreamDescriptorByIndex(System.UInt32,Windows.Win32.Foundation.BOOL*,Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor**)">
            <summary>Retrieves a stream descriptor for a stream in the presentation. The stream descriptor contains information about the stream.</summary>
            <param name="dwIndex">Zero-based index of the stream. To find the number of streams in the presentation, call the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorcount">IMFPresentationDescriptor::GetStreamDescriptorCount</a> method.</param>
            <param name="pfSelected">Receives a Boolean value. The value is <b>TRUE</b> if the stream is currently selected, or <b>FALSE</b> if the stream is currently deselected. If a stream is selected, the media source generates data for that stream when <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-start">IMFMediaSource::Start</a> is called. The media source will not generated data for deselected streams. To select a stream, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-selectstream">IMFPresentationDescriptor::SelectStream</a>.To deselect a stream, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-deselectstream">IMFPresentationDescriptor::DeselectStream</a>.</param>
            <param name="ppDescriptor">Receives a pointer to the stream descriptor's <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfstreamdescriptor">IMFStreamDescriptor</a> interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.SelectStream(System.UInt32)">
            <summary>Selects a stream in the presentation.</summary>
            <param name="dwDescriptorIndex">The stream number to select, indexed from zero. To find the number of streams in the presentation, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorcount">IMFPresentationDescriptor::GetStreamDescriptorCount</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If a stream is selected, the media source will generate data for that stream. The media source will not generated data for deselected streams. To deselect a stream, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-deselectstream">IMFPresentationDescriptor::DeselectStream</a>.</para>
            <para>To query whether a stream is selected, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex">IMFPresentationDescriptor::GetStreamDescriptorByIndex</a>.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfpresentationdescriptor-selectstream#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.DeselectStream(System.UInt32)">
            <summary>Deselects a stream in the presentation.</summary>
            <param name="dwDescriptorIndex">The stream number to deselect, indexed from zero. To find the number of streams in the presentation, call the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorcount">IMFPresentationDescriptor::GetStreamDescriptorCount</a> method.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If a stream is deselected, no data is generated for that stream. To select the stream again, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-selectstream">IMFPresentationDescriptor::SelectStream</a>.</para>
            <para>To query whether a stream is selected, call <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex">IMFPresentationDescriptor::GetStreamDescriptorByIndex</a>.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfpresentationdescriptor-deselectstream#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Clone(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor**)">
            <summary>Creates a copy of this presentation descriptor.</summary>
            <param name="ppPresentationDescriptor">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfpresentationdescriptor">IMFPresentationDescriptor</a> interface of the new presentation descriptor. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method performs a shallow copy of the presentation descriptor. The stream descriptors are not cloned. Therefore, use caution when modifying the presentation presentation descriptor or its stream descriptors.</para>
            <para>If the original presentation descriptor is from a media source, do not modify the presentation descriptor unless the source is stopped. If you use the presentation descriptor to configure a media sink, do not modify the presentation descriptor after the sink is configured.</para>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfpresentationdescriptor-clone#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{03cb2711-24d7-4db6-a17f-f3a7a479a536}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetItemType(System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.CompareItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetUINT32(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetUINT64(System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetDouble(System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetStringLength(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetString(System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetAllocatedString(System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBlobSize(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBlob(System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetAllocatedBlob(System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.DeleteItem(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetUINT32(System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetUINT64(System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetDouble(System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetString(System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetBlob(System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetItemByIndex(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleFlags(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleFlags(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleFlags(System.UInt32*)">
            <summary>Retrieves flags associated with the sample.Currently no flags are defined.</summary>
            <param name="pdwSampleFlags">Receives the value zero.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-getsampleflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetSampleFlags(System.UInt32)">
            <summary>Sets flags associated with the sample.Currently no flags are defined.</summary>
            <param name="dwSampleFlags">Reserved; must be zero.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-setsampleflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleTime(System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleTime(System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleTime(System.Int64*)">
            <summary>Retrieves the presentation time of the sample.</summary>
            <param name="phnsSampleTime">Receives the presentation time, in 100-nanosecond units.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-getsampletime#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetSampleTime(System.Int64)">
            <summary>Sets the presentation time of the sample.</summary>
            <param name="hnsSampleTime">The presentation time, in 100-nanosecond units.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Some pipeline components require samples that have time stamps. Generally the component that generates the data for the sample also sets the time stamp. The Media Session might modify the time stamps. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-setsampletime#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleDuration(System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleDuration(System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetSampleDuration(System.Int64*)">
            <summary>Retrieves the duration of the sample.</summary>
            <param name="phnsSampleDuration">Receives the duration, in 100-nanosecond units.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the sample contains more than one buffer, the duration includes the data from all of the buffers. If the retrieved duration is zero, or if the method returns <b>MF_E_NO_SAMPLE_DURATION</b>, the duration is unknown. In that case, it might be possible to calculate the duration from the media type—for example, by using the video frame rate or the audio sampling rate. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-getsampleduration#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.SetSampleDuration(System.Int64)">
            <summary>Sets the duration of the sample.</summary>
            <param name="hnsSampleDuration">Duration of the sample, in 100-nanosecond units.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This method succeeds if the duration is negative, although negative durations are probably not valid for most types of data. It is the responsibility of the object that consumes the sample to validate the duration. The duration can also be zero. This might be valid for some types of data. For example, the sample might contain stream metadata with no buffers. Until this method is called, the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfsample-getsampleduration">IMFSample::GetSampleDuration</a> method returns <b>MF_E_NO_SAMPLE_DURATION</b>. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-setsampleduration#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBufferCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBufferCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBufferCount(System.UInt32*)">
            <summary>Retrieves the number of buffers in the sample.</summary>
            <param name="pdwBufferCount">Receives the number of buffers in the sample. A sample might contain zero buffers.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-getbuffercount#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetBufferByIndex(System.UInt32,Windows.Win32.Media.MediaFoundation.IMFMediaBuffer**)">
            <summary>Gets a buffer from the sample, by index.</summary>
            <param name="dwIndex">Index of the buffer. To find the number of buffers in the sample, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfsample-getbuffercount">IMFSample::GetBufferCount</a>. Buffers are indexed from zero.</param>
            <param name="ppBuffer">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediabuffer">IMFMediaBuffer</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>A sample might contain more than one buffer. Use the <b>GetBufferByIndex</b> method to enumerate the individual buffers. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-getbufferbyindex#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.ConvertToContiguousBuffer(Windows.Win32.Media.MediaFoundation.IMFMediaBuffer**)">
            <summary>Converts a sample with multiple buffers into a sample with a single buffer.</summary>
            <param name="ppBuffer">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediabuffer">IMFMediaBuffer</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the sample contains more than one buffer, this method copies the data from the original buffers into a new buffer, and replaces the original buffer list with the new buffer. The new buffer is returned in the <i>ppBuffer</i> parameter. If the sample contains a single buffer, this method returns a pointer to the original buffer. In typical use, most samples do not contain multiple buffers. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-converttocontiguousbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.AddBuffer(Windows.Win32.Media.MediaFoundation.IMFMediaBuffer*)">
            <summary>Adds a buffer to the end of the list of buffers in the sample.</summary>
            <param name="pBuffer">Pointer to the buffer's <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediabuffer">IMFMediaBuffer</a> interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>For uncompressed video data, each buffer should contain a single video frame, and samples should not contain multiple frames. In general, storing multiple buffers in a sample is discouraged. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-addbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.RemoveBufferByIndex(System.UInt32)">
            <summary>Removes a buffer at a specified index from the sample.</summary>
            <param name="dwIndex">Index of the buffer. To find the number of buffers in the sample, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfsample-getbuffercount">IMFSample::GetBufferCount</a>. Buffers are indexed from zero.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-removebufferbyindex#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.RemoveAllBuffers">
            <summary>Removes all of the buffers from the sample.</summary>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-removeallbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetTotalLength(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetTotalLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.GetTotalLength(System.UInt32*)">
            <summary>Retrieves the total length of the valid data in all of the buffers in the sample. The length is calculated as the sum of the values retrieved by the IMFMediaBuffer::GetCurrentLength method.</summary>
            <param name="pcbTotalLength">Receives the total length of the valid data, in bytes.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-gettotallength#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSample.CopyToBuffer(Windows.Win32.Media.MediaFoundation.IMFMediaBuffer*)">
            <summary>Copies the sample data to a buffer. This method concatenates the valid data from all of the buffers of the sample, in order.</summary>
            <param name="pBuffer">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediabuffer">IMFMediaBuffer</a> interface of the destination buffer. The buffer must be large enough to hold the valid data in the sample. To get the size of the data in the sample, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfsample-gettotallength">IMFSample::GetTotalLength</a>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/nf-mfobjects-imfsample-copytobuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFSample.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{c40a00f2-b93a-4d80-ae8c-5a1c634f58e4}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetStreamSelection(System.UInt32,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetStreamSelection(System.UInt32,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetStreamSelection(System.UInt32,Windows.Win32.Foundation.BOOL*)">
            <summary>Queries whether a stream is selected.</summary>
            <param name="dwStreamIndex">
            <para>The stream to query. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getstreamselection#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pfSelected">Receives <b>TRUE</b> if the stream is selected and will generate data. Receives <b>FALSE</b> if the stream is not selected and will not generate data.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.SetStreamSelection(System.UInt32,Windows.Win32.Foundation.BOOL)">
            <summary>Selects or deselects one or more streams.</summary>
            <param name="dwStreamIndex">
            <para>The stream to set. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setstreamselection#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="fSelected">Specify <b>TRUE</b> to select streams or <b>FALSE</b> to deselect streams. If a stream is deselected, it will not generate data.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>There are two common uses for this method: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setstreamselection#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetNativeMediaType(System.UInt32,System.UInt32,Windows.Win32.Media.MediaFoundation.IMFMediaType**)">
            <summary>Gets a format that is supported natively by the media source.</summary>
            <param name="dwStreamIndex">
            <para>Specifies which stream to query. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getnativemediatype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dwMediaTypeIndex">
            <para>Specifies which media type to query. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getnativemediatype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppMediaType">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>This method queries the underlying media source for its native output format. Potentially, each source stream can produce more than one output format. Use the <i>dwMediaTypeIndex</i> parameter to loop through the available formats. Generally, file sources offer just one format per stream, but capture devices might offer several formats. The method returns a copy of the media type, so it is safe to modify the object received in the <i> ppMediaType</i> parameter. To set  the output type for a stream, call the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setcurrentmediatype">IMFSourceReader::SetCurrentMediaType</a> method. This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getnativemediatype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetCurrentMediaType(System.UInt32,Windows.Win32.Media.MediaFoundation.IMFMediaType**)">
            <summary>Gets the current media type for a stream.</summary>
            <param name="dwStreamIndex">
            <para>The stream to query. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getcurrentmediatype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppMediaType">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.SetCurrentMediaType(System.UInt32,Windows.Win32.Media.MediaFoundation.IMFMediaType*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.SetCurrentMediaType(System.UInt32,System.UInt32*,Windows.Win32.Media.MediaFoundation.IMFMediaType*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.SetCurrentMediaType(System.UInt32,System.UInt32*,Windows.Win32.Media.MediaFoundation.IMFMediaType*)">
            <summary>Sets the media type for a stream.</summary>
            <param name="dwStreamIndex">
            <para>The stream to configure. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setcurrentmediatype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pdwReserved">Reserved. Set to <b>NULL</b>.</param>
            <param name="pMediaType">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface of the media type.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>For each stream, you can set the media type to any of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setcurrentmediatype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.SetCurrentPosition(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.SetCurrentPosition(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.SetCurrentPosition(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Seeks to a new position in the media source.</summary>
            <param name="guidTimeFormat">
            <para>A GUID that specifies the <i>time format</i>. The time format defines the units for the <i>varPosition</i> parameter. The following value is defined for all media sources: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setcurrentposition#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="varPosition">The position from which playback will be started. The units are specified by the <i>guidTimeFormat</i> parameter. If the <i>guidTimeFormat</i> parameter is <b>GUID_NULL</b>, set the variant type to <b>VT_I8</b>.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The <b>SetCurrentPosition</b> method does not guarantee exact seeking. The accuracy of the seek depends on the media content. If the media content contains a video stream, the <b>SetCurrentPosition</b> method typically seeks to the nearest key frame before the desired position. The distance between key frames depends on several factors, including the encoder implementation, the video content, and the particular encoding settings used to encode the content. The distance between key frame can vary within a single video file (for example, depending on scene complexity). After seeking, the application should call <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-readsample">IMFSourceReader::ReadSample</a> and advance to the desired position. This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setcurrentposition#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.ReadSample(System.UInt32,System.UInt32,System.UInt32*,System.UInt32*,System.Int64*,Windows.Win32.Media.MediaFoundation.IMFSample**)">
            <summary>Reads the next sample from the media source.</summary>
            <param name="dwStreamIndex">
            <para>The stream to pull data from. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-readsample#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dwControlFlags">A bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/ne-mfreadwrite-mf_source_reader_control_flag">MF_SOURCE_READER_CONTROL_FLAG</a> enumeration.</param>
            <param name="pdwActualStreamIndex">Receives the zero-based index of the stream.</param>
            <param name="pdwStreamFlags">Receives a bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/ne-mfreadwrite-mf_source_reader_flag">MF_SOURCE_READER_FLAG</a> enumeration.</param>
            <param name="pllTimestamp">Receives the time stamp of the sample, or the time of the stream event indicated in <i>pdwStreamFlags</i>. The time is given in 100-nanosecond units.</param>
            <param name="ppSample">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfsample">IMFSample</a> interface or the value <b>NULL</b> (see Remarks). If this parameter receives a non-<b>NULL</b> pointer, the caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the requested stream is not selected, the return code is <b>MF_E_INVALIDREQUEST</b>. See <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setstreamselection">IMFSourceReader::SetStreamSelection</a>. This method can complete synchronously or asynchronously. If you provide a callback pointer when you create the source reader, the method is asynchronous. Otherwise, the method is synchronous. For more information about setting the callback pointer, see <a href="https://docs.microsoft.com/windows/desktop/medfound/mf-source-reader-async-callback">MF_SOURCE_READER_ASYNC_CALLBACK</a>. <h3><a id="Asynchronous_Mode"></a><a id="asynchronous_mode"></a><a id="ASYNCHRONOUS_MODE"></a>Asynchronous Mode</h3> In asynchronous mode: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-readsample#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.Flush(System.UInt32)">
            <summary>Flushes one or more streams. (IMFSourceReader.Flush)</summary>
            <param name="dwStreamIndex">
            <para>The stream to flush. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-flush#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>The <b>Flush</b> method discards all queued samples and cancels all pending sample requests. This method can complete either synchronously or asynchronously. If you provide a callback pointer when you create the source reader, the method is asynchronous. Otherwise, the method is synchronous. For more information about the setting the callback pointer, see <a href="https://docs.microsoft.com/windows/desktop/medfound/mf-source-reader-async-callback">MF_SOURCE_READER_ASYNC_CALLBACK</a>. In synchronous mode, the method blocks until the operation is complete. In asynchronous mode, the application's <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereadercallback-onflush">IMFSourceReaderCallback::OnFlush</a> method is called when the flush operation completes. While a flush operation is pending, the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-readsample">IMFSourceReader::ReadSample</a> method returns <b>MF_E_NOTACCEPTING</b>. <div class="alert"><b>Note</b>  In Windows 7, there was a bug in the implementation of this method, which causes <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereadercallback-onflush">OnFlush</a> to be called before the flush operation completes. A hotfix used to be available that fixed that bug.</div> <div> </div> This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-flush#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetServiceForStream(System.UInt32,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetServiceForStream(System.UInt32,System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetServiceForStream(System.UInt32,System.Guid*,System.Guid*,System.Void**)">
            <summary>Queries the underlying media source or decoder for an interface.</summary>
            <param name="dwStreamIndex">
            <para>The stream or object to query. If the value is <b>MF_SOURCE_READER_MEDIASOURCE</b>, the method queries the media source. Otherwise, it queries the decoder that is associated with the specified stream. The following values are possible. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getserviceforstream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="guidService">A service identifier GUID.  If the value is <b>GUID_NULL</b>, the method calls <b>QueryInterface</b> to get the requested interface. Otherwise, the method calls the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfgetservice-getservice">IMFGetService::GetService</a> method. For a list of service identifiers, see <a href="https://docs.microsoft.com/windows/desktop/medfound/service-interfaces">Service Interfaces</a>.</param>
            <param name="riid">The interface identifier (IID) of the interface being requested.</param>
            <param name="ppvObject">Receives a pointer to the requested interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetPresentationAttribute(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetPresentationAttribute(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.GetPresentationAttribute(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Gets an attribute from the underlying media source.</summary>
            <param name="dwStreamIndex">
            <para>The stream or object to query. The value can be any of the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getpresentationattribute#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="guidAttribute">
            <para>A GUID that identifies the attribute to retrieve. If the <i>dwStreamIndex</i> parameter equals  <b>MF_SOURCE_READER_MEDIASOURCE</b>, <i>guidAttribute</i> can specify one of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getpresentationattribute#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pvarAttribute">A pointer to a <b>PROPVARIANT</b> that receives the value of the attribute. Call the <b>PropVariantClear</b> function to free the <b>PROPVARIANT</b>.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFSourceReader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{70ae66f2-c809-4e4f-8915-bdcb406b7993}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReaderCallback.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReaderCallback.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReaderCallback.OnReadSample(Windows.Win32.Foundation.HRESULT,System.UInt32,System.UInt32,System.Int64,Windows.Win32.Media.MediaFoundation.IMFSample*)">
            <summary>Called when the IMFSourceReader::ReadSample method completes.</summary>
            <param name="hrStatus">The status code. If an error occurred while processing the next sample, this parameter contains the error code.</param>
            <param name="dwStreamIndex">The zero-based index of the stream that delivered the sample.</param>
            <param name="dwStreamFlags">A bitwise <b>OR</b> of zero or more flags from the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/ne-mfreadwrite-mf_source_reader_flag">MF_SOURCE_READER_FLAG</a> enumeration.</param>
            <param name="llTimestamp">The time stamp of the sample, or the time of the stream event indicated in <i>dwStreamFlags</i>. The time is given in 100-nanosecond units.</param>
            <param name="pSample">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfsample">IMFSample</a> interface of a media sample. This parameter might be <b>NULL</b>.</param>
            <returns>Returns an <b>HRESULT</b> value. Currently, the source reader ignores the return value.</returns>
            <remarks>
            <para>The <i>pSample</i> parameter might be <b>NULL</b>. For example, when the source reader reaches the end of a stream, <i>dwStreamFlags</i> contains the <b>MF_SOURCE_READERF_ENDOFSTREAM</b> flag, and <i>pSample</i> is <b>NULL</b>.</para>
            <para>If there is a gap in the stream, <i>dwStreamFlags</i> contains the <b>MF_SOURCE_READERF_STREAMTICK</b> flag, <i>pSample</i> is <b>NULL</b>, and <i>llTimestamp</i> indicates the time when the gap occurred.</para>
            <para>This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereadercallback-onreadsample#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReaderCallback.OnFlush(System.UInt32)">
            <summary>Called when the IMFSourceReader::Flush method completes.</summary>
            <param name="dwStreamIndex">The index of the stream that was flushed, or <b>MF_SOURCE_READER_ALL_STREAMS</b> if all streams were flushed.</param>
            <returns>Returns an <b>HRESULT</b> value. Currently, the source reader ignores the return value.</returns>
            <remarks>This interface is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFSourceReaderCallback.OnEvent(System.UInt32,Windows.Win32.Media.MediaFoundation.IMFMediaEvent*)">
            <summary>Called when the source reader receives certain events from the media source.</summary>
            <param name="dwStreamIndex">For stream events, the value is the zero-based index of the stream that sent the event. For source events, the value is <b>MF_SOURCE_READER_MEDIASOURCE</b>.</param>
            <param name="pEvent">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediaevent">IMFMediaEvent</a> interface of the event.</param>
            <returns>Returns an <b>HRESULT</b> value. Currently, the source reader ignores the return value.</returns>
            <remarks>
            <para>In the current implementation,  the source reader uses this method to forward the following events to the application: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-imfsourcereadercallback-onevent#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFSourceReaderCallback.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{deec8d99-fa1d-4d82-84c2-2c8969944867}</value>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetItemType(System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.CompareItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetUINT32(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetUINT64(System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetDouble(System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetStringLength(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetString(System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetAllocatedString(System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetBlobSize(System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetBlob(System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetAllocatedBlob(System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetUnknown(System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetItem(System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.DeleteItem(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetUINT32(System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetUINT64(System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetDouble(System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetGUID(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetString(System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetBlob(System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetUnknown(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetItemByIndex(System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetStreamIdentifier(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetStreamIdentifier(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetStreamIdentifier(System.UInt32*)">
            <summary>Retrieves an identifier for the stream.</summary>
            <param name="pdwStreamIdentifier">Receives the stream identifier.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>The stream identifier uniquely identifies a stream within a presentation. It does not change throughout the lifetime of the stream. For example, if the presentation changes while the source is running, the index number of the stream may change, but the stream identifier does not. In general, stream identifiers do not have a specific meaning, other than to identify the stream. Some media sources may assign stream identifiers based on meaningful values, such as packet identifiers, but this depends on the implementation. This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfstreamdescriptor-getstreamidentifier#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.GetMediaTypeHandler(Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler**)">
            <summary>Retrieves a media type handler for the stream. The media type handler can be used to enumerate supported media types for the stream, get the current media type, and set the media type.</summary>
            <param name="ppMediaTypeHandler">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfmediatypehandler">IMFMediaTypeHandler</a> interface. The caller must release the interface.</param>
            <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-imfstreamdescriptor-getmediatypehandler#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{56c03d9c-9dbb-45f5-ab4b-d80f47c05938}</value>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags">
            <summary>Contains flags for the IMF2DBuffer2::Lock2DSize method.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/ne-mfobjects-mf2dbuffer_lockflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags.MF2DBuffer_LockFlags_LockTypeMask">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags.MF2DBuffer_LockFlags_Read">
            <summary>Lock the buffer for reading.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags.MF2DBuffer_LockFlags_Write">
            <summary>Lock the buffer for writing.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags.MF2DBuffer_LockFlags_ReadWrite">
            <summary>Lock the buffer for both reading and writing.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags.MF2DBuffer_LockFlags_ForceDWORD">
            <summary>Reserved. This member forces the enumeration type to compile as a <b>DWORD</b> value.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MFARGB">
            <summary>Describes an ARGB color value.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/ns-mfobjects-mfargb">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFARGB.rgbBlue">
            <summary>Blue value.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFARGB.rgbGreen">
            <summary>Green value.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFARGB.rgbRed">
            <summary>Red value.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFARGB.rgbAlpha">
            <summary>Alpha value.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect">
            <summary>The MFVideoNormalizedRect (mfcaptureengine.h) structure defines a normalized rectangle, which is used to specify sub-rectangles in a video rectangle.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfcaptureengine/ns-mfcaptureengine-mfvideonormalizedrect">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect.left">
            <summary>X-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect.top">
            <summary>Y-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect.right">
            <summary>X-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect.bottom">
            <summary>Y-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE">
            <summary>Specifies how to compare the attributes on two objects.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/ne-mfobjects-mf_attributes_match_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE.MF_ATTRIBUTES_MATCH_OUR_ITEMS">
            <summary>Check whether all the attributes in <i>pThis</i> exist in <i>pTheirs</i> and have the same data, where <i>pThis</i> is the object whose <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-compare">Compare</a> method is being called and <i>pTheirs</i> is the object given in the <i>pTheirs</i> parameter.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE.MF_ATTRIBUTES_MATCH_THEIR_ITEMS">
            <summary>Check whether all the attributes in <i>pTheirs</i> exist in <i>pThis</i> and have the same data, where <i>pThis</i> is the object whose <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-compare">Compare</a> method is being called and <i>pTheirs</i> is the object given in the <i>pTheirs</i> parameter.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE.MF_ATTRIBUTES_MATCH_ALL_ITEMS">
            <summary>Check whether both objects have identical attributes with the same data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE.MF_ATTRIBUTES_MATCH_INTERSECTION">
            <summary>Check whether the attributes that exist in both objects have the same data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE.MF_ATTRIBUTES_MATCH_SMALLER">
            <summary>Find the object with the fewest number of attributes, and check if those attributes exist in the other object and have the same data.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE">
            <summary>Defines the data type for a key/value pair.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfobjects/ne-mfobjects-mf_attribute_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE.MF_ATTRIBUTE_UINT32">
            <summary>Unsigned 32-bit integer.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE.MF_ATTRIBUTE_UINT64">
            <summary>Unsigned 64-bit integer.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE.MF_ATTRIBUTE_DOUBLE">
            <summary>Floating-point number.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE.MF_ATTRIBUTE_GUID">
            <summary><b>GUID</b> value.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE.MF_ATTRIBUTE_STRING">
            <summary>NULL-terminated wide-character string.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE.MF_ATTRIBUTE_BLOB">
            <summary>Byte array.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE.MF_ATTRIBUTE_IUNKNOWN">
            <summary><b>IUnknown</b> pointer.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY">
            <summary>Specifies the likelihood that the Media Engine can play a specified type of media resource.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_canplay">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY.MF_MEDIA_ENGINE_CANPLAY_NOT_SUPPORTED">
            <summary>The Media Engine cannot play the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY.MF_MEDIA_ENGINE_CANPLAY_MAYBE">
            <summary>The Media Engine might be able to play the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY.MF_MEDIA_ENGINE_CANPLAY_PROBABLY">
            <summary>The Media Engine can probably play the resource.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CREATEFLAGS">
            <summary>Contains flags for the IMFMediaEngineClassFactory::CreateInstance method.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_createflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CREATEFLAGS.MF_MEDIA_ENGINE_AUDIOONLY">
            <summary>The Media Engine will play audio only. It will not play video.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CREATEFLAGS.MF_MEDIA_ENGINE_WAITFORSTABLE_STATE">
            <summary>The Media Engine's resource loading algorithm waits for the application to signal the thread that loads the resource. For more information, see the remarks for <b>MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE</b> in the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_event">MF_MEDIA_ENGINE_EVENT</a> enumeration.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CREATEFLAGS.MF_MEDIA_ENGINE_FORCEMUTE">
            <summary>Always mute the audio.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CREATEFLAGS.MF_MEDIA_ENGINE_REAL_TIME_MODE">
            <summary>Enable low-latency mode in the rendering pipeline. This can be changed at a later time by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineex-setrealtimemode">IMFMediaEngineEx::SetRealTimeMode</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CREATEFLAGS.MF_MEDIA_ENGINE_DISABLE_LOCAL_PLUGINS">
            <summary>Disable locally registered media plugins. If this flag is set, the Media Engine will not load decoders or other media plugins that the application registered for the local process.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CREATEFLAGS.MF_MEDIA_ENGINE_CREATEFLAGS_MASK">
            <summary>Reserved.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR">
            <summary>Defines error status codes for the Media Engine.</summary>
            <remarks>The values greater than zero correspond to error codes defined for the <b>MediaError</b> object  in HTML5.</remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR.MF_MEDIA_ENGINE_ERR_NOERROR">
            <summary>No error.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR.MF_MEDIA_ENGINE_ERR_ABORTED">
            <summary>The process of fetching the media resource was stopped at the user's request.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR.MF_MEDIA_ENGINE_ERR_NETWORK">
            <summary>A network error occurred while fetching the media resource.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR.MF_MEDIA_ENGINE_ERR_DECODE">
            <summary>An error occurred while decoding the media resource.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR.MF_MEDIA_ENGINE_ERR_SRC_NOT_SUPPORTED">
            <summary>The media resource is not supported.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_ERR.MF_MEDIA_ENGINE_ERR_ENCRYPTED">
            <summary>
            <para>An error occurred while encrypting the media resource. Supported in Windows 8.1 and later.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_err#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT">
            <summary>Defines event codes for the Media Engine.</summary>
            <remarks>
            <para>The application receives Media Engine events through the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaenginenotify-eventnotify">IMFMediaEngineNotify::EventNotify</a> method. The <b>EventNotify</b> method includes two event parameters, <i>param1</i> and <i>param2</i>. The meaning of the parameters depends on the event code. If the event description does not list any parameters, ignore the values of <i>param1</i> and <i>param2</i>. Values below 1000 correspond to events defined in HTML 5 for media elements.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_event#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_LOADSTART">
            <summary>The Media Engine has started to load the source. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">IMFMediaEngine::Load</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_PROGRESS">
            <summary>The Media Engine is loading the source.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_SUSPEND">
            <summary>The Media Engine has suspended a load operation.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_ABORT">
            <summary>The Media Engine cancelled a load operation that was in progress.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_ERROR">
            <summary>
            <para>An error occurred. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_event#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_EMPTIED">
            <summary>The Media Engine has switched to the <b>MF_MEDIA_ENGINE_NETWORK_EMPTY</b> state. This can occur when the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">IMFMediaEngine::Load</a> method is called, or if an error occurs during the <b>Load</b> method. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getnetworkstate">IMFMediaEngine::GetNetworkState</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_STALLED">
            <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">Load</a> algorithm is stalled, waiting for data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_PLAY">
            <summary>The Media Engine is switching to the playing state. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-play">IMFMediaEngine::Play</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_PAUSE">
            <summary>The media engine has paused. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-pause">IMFMediaEngine::Pause</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_LOADEDMETADATA">
            <summary>The Media Engine has loaded enough source data to determine the duration and dimensions  of the source.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_LOADEDDATA">
            <summary>The Media Engine has loaded enough data to render some content (for example, a video frame).</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_WAITING">
            <summary>Playback has stopped because the next frame is not available.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_PLAYING">
            <summary>Playback has started. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-play">IMFMediaEngine::Play</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_CANPLAY">
            <summary>Playback can start, but the Media Engine might need to stop to buffer more data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_CANPLAYTHROUGH">
            <summary>The Media Engine can probably play through to the end of the resource, without stopping to buffer data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_SEEKING">
            <summary>The Media Engine has started seeking to a new playback position. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setcurrenttime">IMFMediaEngine::SetCurrentTime</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_SEEKED">
            <summary>The Media Engine has seeked to a new playback position. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setcurrenttime">IMFMediaEngine::SetCurrentTime</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_TIMEUPDATE">
            <summary>The playback position has changed. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getcurrenttime">IMFMediaEngine::GetCurrentTime</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_ENDED">
            <summary>Playback has reached the end of the source. This event is not sent if the <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-getloop">GetLoop</a> is <b>TRUE</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_RATECHANGE">
            <summary>The playback rate has changed. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setplaybackrate">IMFMediaEngine::SetPlaybackRate</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE">
            <summary>The duration of the media source has changed. See <a href="https://docs.microsoft.com/windows/desktop/api/mfplay/nf-mfplay-imfpmediaitem-getduration">IMFMediaEngine::GetDuration</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE">
            <summary>The audio volume changed. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-setvolume">IMFMediaEngine::SetVolume</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_FORMATCHANGE">
            <summary>
            <para>The output format of the media source has changed. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_event#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_PURGEQUEUEDEVENTS">
            <summary>The Media Engine flushed any pending events from its 	queue.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_TIMELINE_MARKER">
            <summary>The playback position reached a timeline marker. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineex-settimelinemarkertimer">IMFMediaEngineEx::SetTimelineMarkerTimer</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_BALANCECHANGE">
            <summary>The audio balance changed. See <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineex-setbalance">IMFMediaEngineEx::SetBalance</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_DOWNLOADCOMPLETE">
            <summary>The Media Engine has finished downloading the source data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_BUFFERINGSTARTED">
            <summary>The media source has started to buffer data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_BUFFERINGENDED">
            <summary>The media source has stopped buffering data.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_FRAMESTEPCOMPLETED">
            <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineex-framestep">IMFMediaEngineEx::FrameStep</a> method completed.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE">
            <summary>
            <para>The Media Engine's <a href="https://docs.microsoft.com/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengine-load">Load</a> algorithm is waiting to start. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_event#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_FIRSTFRAMEREADY">
            <summary>The first frame of the media source is ready to render.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_TRACKSCHANGE">
            <summary>
            <para>Raised when a new track is added or removed. Supported in Windows 8.1 and later.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_event#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_OPMINFO">
            <summary>
            <para>Raised when there is new information about the <a href="https://docs.microsoft.com/windows/desktop/medfound/output-protection-manager">Output Protection Manager</a>  (OPM). This event will be raised when an OPM failure occurs, but ITA allows fallback without the OPM. In this case, constriction can be applied. This event will not be raised when there is an OPM failure and the fallback also fails. For example, if ITA blocks playback entirely when OPM cannot be established. Supported in Windows 8.1 and later.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_event#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_RESOURCELOST">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_DELAYLOADEVENT_CHANGED">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_STREAMRENDERINGERROR">
            <summary>Raised when one of the component streams of a media stream fails. This event is only raised if the media stream contains other component streams that did not fail.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_SUPPORTEDRATES_CHANGED">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_EVENT.MF_MEDIA_ENGINE_EVENT_AUDIOENDPOINTCHANGE">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_PRELOAD">
            <summary>Defines preload hints for the Media Engine.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_preload">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_PRELOAD.MF_MEDIA_ENGINE_PRELOAD_MISSING">
            <summary>The <b>preload</b> attribute is missing.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_PRELOAD.MF_MEDIA_ENGINE_PRELOAD_EMPTY">
            <summary>The <b>preload</b> attribute is an empty string. This value is equivalent to <b>MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_PRELOAD.MF_MEDIA_ENGINE_PRELOAD_NONE">
            <summary>The <b>preload</b> attribute is "none". This value is a hint to the user agent not to preload the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_PRELOAD.MF_MEDIA_ENGINE_PRELOAD_METADATA">
            <summary>The <b>preload</b> attribute is "metadata". This value is a hint to the user agent to fetch the resource metadata.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_PRELOAD.MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC">
            <summary>The <b>preload</b> attribute is "auto". This value is a hint to the user agent to preload the entire resource.</summary>
        </member>
        <member name="T:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG">
            <summary>Contains flags that indicate the status of the IMFSourceReader::ReadSample method.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/ne-mfreadwrite-mf_source_reader_flag">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_ERROR">
            <summary>An error occurred. If you receive this flag, do not make any further calls to <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nn-mfreadwrite-imfsourcereader">IMFSourceReader</a> methods.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_ENDOFSTREAM">
            <summary>The source reader reached the end of the stream.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_NEWSTREAM">
            <summary>
            <para>One or more new streams were created. Respond to this flag by doing at least one of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/ne-mfreadwrite-mf_source_reader_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED">
            <summary>The <i>native format</i> has changed for one or more streams. The native format is the format delivered by the media source before any decoders are inserted.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED">
            <summary>The current media has type changed for one or more streams. To get the current media type, call the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getcurrentmediatype">IMFSourceReader::GetCurrentMediaType</a> method.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_STREAMTICK">
            <summary>There is a gap in the stream. This flag corresponds to an <a href="https://docs.microsoft.com/windows/desktop/medfound/mestreamtick">MEStreamTick</a> event from the media source.</summary>
        </member>
        <member name="F:Windows.Win32.Media.MediaFoundation.MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_ALLEFFECTSREMOVED">
            <summary>All transforms inserted by the application have been removed for a particular stream. This could be due to a dynamic format change from a source or decoder that prevents custom transforms from being used because they cannot handle the new media type.</summary>
        </member>
        <member name="P:Windows.Win32.Foundation.BSTR.Length">
            <summary>
            Gets the length of the BSTR in characters.
            </summary>
        </member>
        <member name="T:Windows.Win32.Foundation.DECIMAL">
            <summary>The DECIMAL structure represents a decimal data type that provides a sign and scale for a number.</summary>
            <remarks></remarks>
        </member>
        <member name="F:Windows.Win32.Foundation.DECIMAL.wReserved">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.DECIMAL.Hi32">
            <summary>The high 32 bits of the number.</summary>
        </member>
        <member name="T:Windows.Win32.Foundation.HRESULT">
            <remarks>
            <para>The **HRESULT** data type is the same as the [SCODE](scode.md) data type. An **HRESULT** value consists of the following fields: - A 1-bit code indicating severity, where zero represents success and 1 represents failure. - A 4-bit reserved value. - An 11-bit code indicating responsibility for the error or warning, also known as a facility code. - A 16-bit code describing the error or warning. Most MAPI interface methods and functions return **HRESULT** values to provide detailed cause formation. **HRESULT** values are also used widely in OLE interface methods. OLE provides several macros for converting between **HRESULT** values and **SCODE** values, another common data type for error handling. > [!NOTE] > In 64-bit MAPI, **HRESULT** is still a 32-bit value. For information about the OLE use of **HRESULT** values, see the  *OLE Programmer's Reference*. For more information about the use of these values in MAPI, see [Error Handling](error-handling-in-mapi.md) and any of the following interface methods: [IABLogon::GetLastError](iablogon-getlasterror.md) [IMAPISupport::GetLastError](imapisupport-getlasterror.md) [IMAPIControl::GetLastError](imapicontrol-getlasterror.md) [IMAPITable::GetLastError](imapitable-getlasterror.md) [IMAPIProp::GetLastError](imapiprop-getlasterror.md) [IMAPIViewAdviseSink::OnPrint](imapiviewadvisesink-onprint.md)</para>
            <para><see href="https://docs.microsoft.com/office/client-developer/outlook/mapi/hresult#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.ThrowOnFailure(System.IntPtr)">
            <inheritdoc cref="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
            <param name="errorInfo">
            A pointer to the IErrorInfo interface that provides more information about the
            error. You can specify <see cref="F:System.IntPtr.Zero"/> to use the current IErrorInfo interface, or
            <c>new IntPtr(-1)</c> to ignore the current IErrorInfo interface and construct the exception
            just from the error code.
            </param>
            <returns><see langword="this"/> <see cref="T:Windows.Win32.Foundation.HRESULT"/>, if it does not reflect an error.</returns>
            <seealso cref="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)"/>
        </member>
        <member name="T:Windows.Win32.Foundation.PCSTR">
            <summary>
            A pointer to a null-terminated, constant, ANSI character string.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.PCSTR.Value">
            <summary>
            A pointer to the first character in the string. The content should be considered readonly, as it was typed as constant in the SDK.
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.PCSTR.Length">
            <summary>
            Gets the number of characters up to the first null character (exclusive).
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.PCSTR.ToString">
            <summary>
            Returns a <see langword="string"/> with a copy of this character array, decoding as UTF-8.
            </summary>
            <returns>A <see langword="string"/>, or <see langword="null"/> if <see cref="F:Windows.Win32.Foundation.PCSTR.Value"/> is <see langword="null"/>.</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.PCSTR.AsSpan">
            <summary>
            Returns a span of the characters in this string, up to the first null character (exclusive).
            </summary>
        </member>
        <member name="T:Windows.Win32.Foundation.PCWSTR">
            <summary>
            A pointer to a null-terminated, constant character string.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.PCWSTR.Value">
            <summary>
            A pointer to the first character in the string. The content should be considered readonly, as it was typed as constant in the SDK.
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.PCWSTR.Length">
            <summary>
            Gets the number of characters up to the first null character (exclusive).
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.PCWSTR.ToString">
            <summary>
            Returns a <see langword="string"/> with a copy of this character array, up to the first null character (exclusive).
            </summary>
            <returns>A <see langword="string"/>, or <see langword="null"/> if <see cref="F:Windows.Win32.Foundation.PCWSTR.Value"/> is <see langword="null"/>.</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.PCWSTR.AsSpan">
            <summary>
            Returns a span of the characters in this string, up to the first null character (exclusive).
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.PSTR.Length">
            <inheritdoc cref="P:Windows.Win32.Foundation.PCSTR.Length"/>
        </member>
        <member name="M:Windows.Win32.Foundation.PSTR.ToString">
            <inheritdoc cref="M:Windows.Win32.Foundation.PCSTR.ToString"/>
        </member>
        <member name="M:Windows.Win32.Foundation.PSTR.AsSpan">
            <summary>
            Returns a span of the characters in this string, up to the first null character (exclusive).
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.PWSTR.Length">
            <inheritdoc cref="P:Windows.Win32.Foundation.PCWSTR.Length"/>
        </member>
        <member name="M:Windows.Win32.Foundation.PWSTR.ToString">
            <inheritdoc cref="M:Windows.Win32.Foundation.PCWSTR.ToString"/>
        </member>
        <member name="M:Windows.Win32.Foundation.PWSTR.AsSpan">
            <summary>
            Returns a span of the characters in this string, up to the first null character (exclusive).
            </summary>
        </member>
        <member name="T:Windows.Win32.Foundation.RECT">
            <summary>The RECT structure defines a rectangle by the coordinates of its upper-left and lower-right corners.</summary>
            <remarks>The RECT structure is identical to the <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rectl">RECTL</a> structure.</remarks>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.left">
            <summary>Specifies the <i>x</i>-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.top">
            <summary>Specifies the <i>y</i>-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.right">
            <summary>Specifies the <i>x</i>-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.bottom">
            <summary>Specifies the <i>y</i>-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG">
            <summary>Identifies how to bind a resource to the pipeline. (D3D11_BIND_FLAG)</summary>
            <remarks>
            <para>In general, binding flags can be combined using a bitwise OR (except the constant-buffer flag); however, you should use a single flag to allow the device to optimize the resource usage. This enumeration is used by a: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_VERTEX_BUFFER">
            <summary>Bind a buffer as a vertex buffer to the input-assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_INDEX_BUFFER">
            <summary>Bind a buffer as an index buffer to the input-assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_CONSTANT_BUFFER">
            <summary>Bind a buffer as a constant buffer to a shader stage; this flag may NOT be combined with any other bind flag.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_SHADER_RESOURCE">
            <summary>
            <para>Bind a buffer or texture to a shader stage; this flag cannot be used with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a> flag. <div class="alert"><b>Note</b>  The Direct3D 11.1 runtime, which is available starting with Windows 8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a> with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE_D3D11_OPTIONS</a>. <b>CheckFeatureSupport</b> fills members of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a> structure with the device's features. The relevant members here are <b>MapNoOverwriteOnDynamicConstantBuffer</b> and <b>MapNoOverwriteOnDynamicBufferSRV</b>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_STREAM_OUTPUT">
            <summary>Bind an output buffer for the stream-output stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_RENDER_TARGET">
            <summary>Bind a texture as a render target for the output-merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_DEPTH_STENCIL">
            <summary>Bind a texture as a depth-stencil target for the output-merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_UNORDERED_ACCESS">
            <summary>Bind an <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">unordered access</a> resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_DECODER">
            <summary>
            <para>Set this flag to indicate that a  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-textures-intro">2D texture</a> is used to receive output from the decoder API. The common way to create resources for a decoder output is by calling the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_VIDEO_ENCODER">
            <summary>
            <para>Set this flag to indicate that a  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-textures-intro">2D texture</a> is used to receive input from the video encoder API. The common way to create resources for a video encoder is by calling the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND">
            <summary>Blend factors, which modulate values for the pixel shader and render target.</summary>
            <remarks>Blend operations are specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">blend description</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_ZERO">
            <summary>The blend factor is (0, 0, 0, 0). No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_ONE">
            <summary>The blend factor is (1, 1, 1, 1). No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC_COLOR">
            <summary>The blend factor is (Rₛ, Gₛ, Bₛ, Aₛ), that is color data (RGB) from a pixel shader. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC_COLOR">
            <summary>The blend factor is (1 - Rₛ, 1 - Gₛ, 1 - Bₛ, 1 - Aₛ), that is color data (RGB) from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC_ALPHA">
            <summary>The blend factor is (Aₛ, Aₛ, Aₛ, Aₛ), that is alpha data (A) from a pixel shader. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC_ALPHA">
            <summary>The blend factor is ( 1 - Aₛ, 1 - Aₛ, 1 - Aₛ, 1 - Aₛ), that is alpha data (A) from a pixel shader. The pre-blend operation inverts the data, generating 1 - A.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_DEST_ALPHA">
            <summary>The blend factor is (A<sub>d</sub> A<sub>d</sub> A<sub>d</sub> A<sub>d</sub>), that is alpha data from a render target. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_DEST_ALPHA">
            <summary>The blend factor is (1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub>), that is alpha data from a render target. The pre-blend operation inverts the data, generating 1 - A.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_DEST_COLOR">
            <summary>The blend factor is (R<sub>d</sub>, G<sub>d</sub>, B<sub>d</sub>, A<sub>d</sub>), that is color data from a render target. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_DEST_COLOR">
            <summary>The blend factor is (1 - R<sub>d</sub>, 1 - G<sub>d</sub>, 1 - B<sub>d</sub>, 1 - A<sub>d</sub>), that is color data from a render target. The pre-blend operation inverts the data, generating 1 - RGB.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC_ALPHA_SAT">
            <summary>
            <para>The blend factor is (f, f, f, 1); where f = min(Aₛ, 1 - A<sub>d</sub>). The pre-blend operation clamps the data to 1 or less.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_blend#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_BLEND_FACTOR">
            <summary>The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">ID3D11DeviceContext::OMSetBlendState</a>. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_BLEND_FACTOR">
            <summary>The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">ID3D11DeviceContext::OMSetBlendState</a>. The pre-blend operation inverts the blend factor, generating 1 - blend_factor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC1_COLOR">
            <summary>The blend factor is data sources both as color data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC1_COLOR">
            <summary>The blend factor is data sources both as color data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC1_ALPHA">
            <summary>The blend factor is data sources as alpha data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC1_ALPHA">
            <summary>The blend factor is data sources as alpha data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - A. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC">
            <summary>Describes the blend state that you use in a call to ID3D11Device::CreateBlendState to create a blend-state object.</summary>
            <remarks>
            <para>Here are the default values for blend state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_blend_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.AlphaToCoverageEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to use alpha-to-coverage as a multisampling technique when setting a pixel to a render target. For more info about using alpha-to-coverage, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-blend-state">Alpha-To-Coverage</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.IndependentBlendEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to enable independent blending in simultaneous render targets.  Set to <b>TRUE</b> to enable independent blending. If set to <b>FALSE</b>, only the RenderTarget[0] members are used; RenderTarget[1..7] are ignored.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.RenderTarget">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc">D3D11_RENDER_TARGET_BLEND_DESC</a>[8]</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc">D3D11_RENDER_TARGET_BLEND_DESC</a> structures that describe the blend states for render targets; these correspond to the eight render targets that can be bound to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP">
            <summary>RGB or alpha blending operation. (D3D11_BLEND_OP)</summary>
            <remarks>
            <para>The runtime implements RGB blending and alpha blending separately. Therefore, blend state requires separate blend operations for RGB data and alpha data. These blend operations are specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">blend description</a>. The two sources —source 1 and source 2— are shown in the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">blending block diagram</a>. Blend state is used by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> to determine how to blend together two RGB pixel values and two alpha values. The two RGB pixel values and two alpha values are the RGB pixel value and alpha value that the pixel shader outputs and the RGB pixel value and alpha value already in the output render target. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> controls the data source that the blending stage uses to modulate values for the pixel shader, render target, or both. The <b>blend operation</b> controls how the blending stage mathematically combines these modulated values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_blend_op#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_ADD">
            <summary>Add source 1 and source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_SUBTRACT">
            <summary>Subtract source 1 from source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_REV_SUBTRACT">
            <summary>Subtract source 2 from source 1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_MIN">
            <summary>Find the minimum of source 1 and source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_MAX">
            <summary>Find the maximum of source 1 and source 2.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BOX">
            <summary>Defines a 3D box. (D3D11_BOX)</summary>
            <remarks>
            <para>The following diagram shows a 3D box, where the origin is the left, front, top corner. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_box#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.left">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The x position of the left hand side of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.top">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The y position of the top of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.front">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The z position of the front of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.right">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The x position of the right hand side of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.bottom">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The y position of the bottom of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.back">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The z position of the back of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV">
            <summary>Describes the elements in a raw buffer resource to use in a shader-resource view.</summary>
            <remarks>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> to create a raw view of a buffer.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV.FirstElement">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first element to be accessed by the view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_bufferex_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV.NumElements">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of elements in the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_bufferex_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bufferex_srv_flag">D3D11_BUFFEREX_SRV_FLAG</a>-typed value that identifies view options for the buffer. Currently, the only option is to identify a raw view of the buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_bufferex_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC">
            <summary>Describes a buffer resource. (D3D11_BUFFER_DESC)</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a> to create buffer resources. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-cd3d11_buffer_desc">CD3D11_BUFFER_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a buffer description. If the bind flag is <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_CONSTANT_BUFFER</a>, you must set the <b>ByteWidth</b> value in multiples of 16, and less than or equal to <b>D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.ByteWidth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the buffer in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Identify how the buffer is expected to be read from and written to. Frequency of update is a key factor. The most common value is typically D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.StructureByteStride">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of each element in the buffer structure (in bytes) when the buffer represents a structured buffer. For more info about structured buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">Structured Buffer</a>. The size value in <b>StructureByteStride</b> must match the size of the format that you use for views of the buffer. For example, if you use a shader resource view (SRV) to read a buffer in a pixel shader, the SRV format size must match the size value in <b>StructureByteStride</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_RTV">
            <summary>Specifies the elements in a buffer resource to use in a render-target view.</summary>
            <remarks>A render-target view is a member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>). Create a render-target view by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a>.</remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_SRV">
            <summary>Specifies the elements in a buffer resource to use in a shader-resource view. (D3D11_BUFFER_SRV)</summary>
            <remarks>The <b>D3D11_BUFFER_SRV</b> structure is a member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure, which represents a shader-resource view description. You can create a shader-resource view by calling the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> method.</remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV">
            <summary>Describes the elements in a buffer to use in a unordered-access view. (D3D11_BUFFER_UAV)</summary>
            <remarks>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV.FirstElement">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first element to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV.NumElements">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of elements in the resource. For structured buffers, this is the number of structures in the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> View options for the resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC">
            <summary>Describes an HLSL class instance.</summary>
            <remarks>
            <para>The D3D11_CLASS_INSTANCE_DESC structure is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classinstance-getdesc">ID3D11ClassInstance::GetDesc</a> method. The members of this structure except <b>InstanceIndex</b> are valid (non default values) if they describe a class instance acquired using  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance">ID3D11ClassLinkage::CreateClassInstance</a>.  The <b>InstanceIndex</b> member is only valid when the class instance is aquired using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance">ID3D11ClassLinkage::GetClassInstance</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.InstanceId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The instance ID of an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.InstanceIndex">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The instance index of an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.TypeId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The type ID of an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.ConstantBuffer">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Describes the constant buffer associated with an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.BaseConstantBufferOffset">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The base constant buffer offset associated with an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.BaseTexture">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The base texture associated with an HLSL class; the default value is 127.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.BaseSampler">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The base sampler associated with an HLSL class; the default value is 15.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.Created">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> True if the class was created; the default value is false.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC">
            <summary>Comparison options. (D3D11_COMPARISON_FUNC)</summary>
            <remarks>A comparison option determines whether how the runtime compares source (new) data against destination (existing) data before storing the new data. The comparison option is declared in a description before an object is created. The API allows you to set a comparison option for a depth-stencil buffer (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>), depth-stencil operations (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>), or sampler state (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_NEVER">
            <summary>Never pass the comparison.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_LESS">
            <summary>If the source data is less than the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_EQUAL">
            <summary>If the source data is equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_LESS_EQUAL">
            <summary>If the source data is less than or equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_GREATER">
            <summary>If the source data is greater than the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_NOT_EQUAL">
            <summary>If the source data is not equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_GREATER_EQUAL">
            <summary>If the source data is greater than or equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_ALWAYS">
            <summary>Always pass the comparison.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER">
            <summary>Options for performance counters.</summary>
            <remarks>
            <para>Independent hardware vendors may define their own set of performance counters for their devices, by giving the enumeration value a number that is greater than the value for D3D11_COUNTER_DEVICE_DEPENDENT_0. This enumeration is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_info">D3D11_COUNTER_INFO</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_counter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER.D3D11_COUNTER_DEVICE_DEPENDENT_0">
            <summary>Define a performance counter that is dependent on the hardware device.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC">
            <summary>Describes a counter. (D3D11_COUNTER_DESC)</summary>
            <remarks>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11counter-getdesc">ID3D11Counter::GetDesc</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkcounter">ID3D11Device::CheckCounter</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createcounter">ID3D11Device::CreateCounter</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC.Counter">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a></b> Type of counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_counter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Reserved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_counter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO">
            <summary>Information about the video card's performance counter capabilities. (D3D11_COUNTER_INFO)</summary>
            <remarks>This structure is returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkcounterinfo">ID3D11Device::CheckCounterInfo</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO.LastDeviceDependentCounter">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a></b> Largest device-dependent counter ID that the device supports. If none are supported, this value will be 0. Otherwise it will be greater than or equal to D3D11_COUNTER_DEVICE_DEPENDENT_0. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_counter_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO.NumSimultaneousCounters">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of counters that can be simultaneously supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_counter_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO.NumDetectableParallelUnits">
            <summary>
            <para>Type: <b>UINT8</b> Number of detectable parallel units that the counter is able to discern. Values are 1 ~ 4. Use NumDetectableParallelUnits to interpret the values of the VERTEX_PROCESSING, GEOMETRY_PROCESSING, PIXEL_PROCESSING, and OTHER_GPU_PROCESSING counters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_counter_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE">
            <summary>Data type of a performance counter. (D3D11_COUNTER_TYPE)</summary>
            <remarks>These flags are an output parameter in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkcounter">ID3D11Device::CheckCounter</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_FLOAT32">
            <summary>32-bit floating point.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_UINT16">
            <summary>16-bit unsigned integer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_UINT32">
            <summary>32-bit unsigned integer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_UINT64">
            <summary>64-bit unsigned integer.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_CPU_ACCESS_FLAG">
            <summary>Specifies the types of CPU access allowed for a resource. (D3D11_CPU_ACCESS_FLAG)</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>. Applications may combine one or more of these flags with a bitwise OR. When possible, create resources with no CPU access flags, as this enables better resource optimization. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a> cannot be used when creating resources with <b>D3D11_CPU_ACCESS</b> flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_cpu_access_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CPU_ACCESS_FLAG.D3D11_CPU_ACCESS_WRITE">
            <summary>The resource is to be mappable so that the CPU can change its contents. Resources created with this flag cannot be set as outputs of the pipeline and must be created with either dynamic or staging usage (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CPU_ACCESS_FLAG.D3D11_CPU_ACCESS_READ">
            <summary>The resource is to be mappable so that the CPU can read its contents. Resources created with this flag cannot be set as either inputs or outputs to the pipeline and must be created with staging usage (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE">
            <summary>Indicates triangles facing a particular direction are not drawn. (D3D11_CULL_MODE)</summary>
            <remarks>This enumeration is part of a rasterizer-state object description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE.D3D11_CULL_NONE">
            <summary>Always draw all triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE.D3D11_CULL_FRONT">
            <summary>Do not draw triangles that are front-facing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE.D3D11_CULL_BACK">
            <summary>Do not draw triangles that are back-facing.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC">
            <summary>Stencil operations that can be performed based on the results of stencil test.</summary>
            <remarks>
            <para>All stencil operations are specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a>. The stencil operation can be set differently based on the outcome of the stencil test (which is referred to as <b>StencilFunc</b> in the stencil test portion of depth-stencil testing. This structure is a member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">depth-stencil description</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilFailOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a></b> The stencil operation to perform when stencil testing fails.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilDepthFailOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a></b> The stencil operation to perform when stencil testing passes and depth testing fails.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilPassOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a></b> The stencil operation to perform when stencil testing and depth testing both pass.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilFunc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a></b> A function that compares stencil data against existing stencil data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC">
            <summary>Describes depth-stencil state. (D3D11_DEPTH_STENCIL_DESC)</summary>
            <remarks>
            <para>Pass a pointer to <b>D3D11_DEPTH_STENCIL_DESC</b> to the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate">ID3D11Device::CreateDepthStencilState</a> method to create the depth-stencil state object. Depth-stencil state controls how depth-stencil testing is performed by the output-merger stage. The following table shows the default values of depth-stencil states. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.DepthEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable depth testing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.DepthWriteMask">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_depth_write_mask">D3D11_DEPTH_WRITE_MASK</a></b> Identify a portion of the depth-stencil buffer that can be modified by depth data (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_depth_write_mask">D3D11_DEPTH_WRITE_MASK</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.DepthFunc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a></b> A function that compares depth data against existing depth data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.StencilEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable stencil testing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.StencilReadMask">
            <summary>
            <para>Type: <b>UINT8</b> Identify a portion of the depth-stencil buffer for reading stencil data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.StencilWriteMask">
            <summary>
            <para>Type: <b>UINT8</b> Identify a portion of the depth-stencil buffer for writing stencil data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.FrontFace">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a></b> Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing towards the camera (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.BackFace">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a></b> Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing away from the camera (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC">
            <summary>Specifies the subresources of a texture that are accessible from a depth-stencil view.</summary>
            <remarks>
            <para>These are valid formats for a depth-stencil view: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Resource data  format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>). See remarks for allowable formats.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_dimension">D3D11_DSV_DIMENSION</a></b> Type of resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_dimension">D3D11_DSV_DIMENSION</a>). Specifies how a depth-stencil resource will be accessed; the value is stored in the union in this structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that describes whether the texture is read only.  Pass 0 to specify that it is not read only; otherwise, pass one of the members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_flag">D3D11_DSV_FLAG</a> enumerated type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_WRITE_MASK">
            <summary>Identify the portion of a depth-stencil buffer for writing depth data. (D3D11_DEPTH_WRITE_MASK)</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_depth_write_mask">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_WRITE_MASK.D3D11_DEPTH_WRITE_MASK_ZERO">
            <summary>Turn off writes to the depth-stencil buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_WRITE_MASK.D3D11_DEPTH_WRITE_MASK_ALL">
            <summary>Turn on writes to the depth-stencil buffer.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEVICE_CONTEXT_TYPE">
            <summary>Device context options.</summary>
            <remarks>This enumeration is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-gettype">ID3D11DeviceContext::GetType</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEVICE_CONTEXT_TYPE.D3D11_DEVICE_CONTEXT_IMMEDIATE">
            <summary>The device context is an immediate context.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEVICE_CONTEXT_TYPE.D3D11_DEVICE_CONTEXT_DEFERRED">
            <summary>The device context is a deferred context.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION">
            <summary>Specifies how to access a resource used in a depth-stencil view. (D3D11_DSV_DIMENSION)</summary>
            <remarks>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a> to create a depth-stencil view.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_UNKNOWN">
            <summary><i>D3D11_DSV_DIMENSION_UNKNOWN</i> is not a valid value for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a> and is not used.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE1D">
            <summary>The resource will be accessed as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource will be accessed as an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2D">
            <summary>The resource will be accessed as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource will be accessed as an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2DMS">
            <summary>The resource will be accessed as a 2D texture with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource will be accessed as an array of 2D textures with multisampling.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE">
            <summary>Direct3D 11 feature options.</summary>
            <remarks>This enumeration is used when querying a driver about support for these features by calling <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a>. Each value in this enumeration has a corresponding data structure that is required to be passed to the <i>pFeatureSupportData</i> parameter of <b>ID3D11Device::CheckFeatureSupport</b>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_THREADING">
            <summary>The driver supports <a href="https://docs.microsoft.com/windows/win32/direct3d11/overviews-direct3d-11-render-multi-thread-intro">multithreading</a>. To see an example of testing a driver for multithread support, see <a href="https://docs.microsoft.com/windows/win32/direct3d11/overviews-direct3d-11-render-multi-thread-support">How To: Check for Driver Support</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_threading">D3D11_FEATURE_DATA_THREADING</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_DOUBLES">
            <summary>Supports the use of the double-precision shaders in HLSL. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_doubles">D3D11_FEATURE_DATA_DOUBLES</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_FORMAT_SUPPORT">
            <summary>Supports the formats in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_format_support">D3D11_FORMAT_SUPPORT</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_format_support">D3D11_FEATURE_DATA_FORMAT_SUPPORT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_FORMAT_SUPPORT2">
            <summary>Supports the formats in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_format_support2">D3D11_FORMAT_SUPPORT2</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_format_support2">D3D11_FEATURE_DATA_FORMAT_SUPPORT2</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS">
            <summary>Supports compute shaders and raw and structured buffers. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d10_x_hardware_options">D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS">
            <summary>
            <para>Supports Direct3D 11.1 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_ARCHITECTURE_INFO">
            <summary>
            <para>Supports specific adapter architecture. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_architecture_info">D3D11_FEATURE_DATA_ARCHITECTURE_INFO</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_OPTIONS">
            <summary>
            <para>Supports Direct3D 9 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_options">D3D11_FEATURE_DATA_D3D9_OPTIONS</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT">
            <summary>
            <para>Supports minimum precision of shaders. For more info about HLSL minimum precision, see <a href="https://docs.microsoft.com/windows/win32/direct3d11/direct3d-11-1-features">using HLSL minimum precision</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_shader_min_precision_support">D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_SHADOW_SUPPORT">
            <summary>
            <para>Supports Direct3D 9 shadowing feature. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_shadow_support">D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS1">
            <summary>
            <para>Supports Direct3D 11.2 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT">
            <summary>
            <para>Supports Direct3D 11.2 instancing options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_simple_instancing_support">D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_MARKER_SUPPORT">
            <summary>
            <para>Supports Direct3D 11.2 marker options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_marker_support">D3D11_FEATURE_DATA_MARKER_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_OPTIONS1">
            <summary>
            <para>Supports Direct3D 9 feature options, which includes the Direct3D 9 shadowing feature and instancing support. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_options1">D3D11_FEATURE_DATA_D3D9_OPTIONS1</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS2">
            <summary>
            <para>Supports Direct3D 11.3 conservative rasterization feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options2">D3D11_FEATURE_DATA_D3D11_OPTIONS2</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.3.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS3">
            <summary>
            <para>Supports Direct3D 11.4 conservative rasterization feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options3">D3D11_FEATURE_DATA_D3D11_OPTIONS3</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.4.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT">
            <summary>Supports GPU virtual addresses. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_gpu_virtual_address_support">D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS4">
            <summary>
            <para>Supports a single boolean for NV12 shared textures. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11_4/ns-d3d11_4-d3d11_feature_data_d3d11_options4">D3D11_FEATURE_DATA_D3D11_OPTIONS4</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.4.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_SHADER_CACHE">
            <summary>Supports shader cache, described in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_shader_cache">D3D11_FEATURE_DATA_SHADER_CACHE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS5">
            <summary>Supports a <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_shared_resource_tier">D3D11_SHARED_RESOURCE_TIER</a> to indicate the level of support for shared resources in the current graphics driver. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options5">D3D11_FEATURE_DATA_D3D11_OPTIONS5</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_DISPLAYABLE">
            <summary>Supports displayable surfaces, described in [D3D11_FEATURE_DATA_DISPLAYABLE](/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_displayable).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_FILL_MODE">
            <summary>Determines the fill mode to use when rendering triangles. (D3D11_FILL_MODE)</summary>
            <remarks>This enumeration is part of a rasterizer-state object description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILL_MODE.D3D11_FILL_WIREFRAME">
            <summary>Draw lines connecting the vertices. Adjacent vertices are not drawn.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILL_MODE.D3D11_FILL_SOLID">
            <summary>Fill the triangles formed by the vertices. Adjacent vertices are not drawn.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER">
            <summary>Filtering options during texture sampling. (D3D11_FILTER)</summary>
            <remarks>
            <para><div class="alert"><b>Note</b>  If you use different filter types for min versus mag filter, undefined behavior occurs in certain cases where the choice between whether magnification or minification happens is ambiguous.  To prevent this undefined behavior, use filter modes that use similar filter operations for both min and mag (or use anisotropic filtering, which avoids the issue as well).</div> <div> </div> During texture sampling, one or more texels are read and combined (this is calling filtering) to produce a single value. Point sampling reads a single texel while linear sampling reads two texels (endpoints) and linearly interpolates a third value between the endpoints. HLSL texture-sampling functions also support comparison filtering during texture sampling. Comparison filtering compares each sampled texel against a comparison value. The boolean result is blended the same way that normal texture filtering is blended. You can use HLSL intrinsic texture-sampling functions that implement texture filtering only or companion functions that use texture filtering with comparison filtering. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_filter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_MIP_POINT">
            <summary>Use point sampling for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_MIP_LINEAR">
            <summary>Use linear interpolation for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_ANISOTROPIC">
            <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT">
            <summary>Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR">
            <summary>Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_ANISOTROPIC">
            <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_ANISOTROPIC">
            <summary>Fetch the same set of texels as D3D11_FILTER_ANISOTROPIC and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_ANISOTROPIC">
            <summary>Fetch the same set of texels as D3D11_FILTER_ANISOTROPIC and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_CLASSIFICATION">
            <summary>Type of data contained in an input slot. (D3D11_INPUT_CLASSIFICATION)</summary>
            <remarks>Use these values to specify the type of data for a particular input element (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_input_element_desc">D3D11_INPUT_ELEMENT_DESC</a>) of an input-layout object.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_CLASSIFICATION.D3D11_INPUT_PER_VERTEX_DATA">
            <summary>Input data is per-vertex data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_CLASSIFICATION.D3D11_INPUT_PER_INSTANCE_DATA">
            <summary>Input data is per-instance data.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC">
            <summary>A description of a single element for the input-assembler stage. (D3D11_INPUT_ELEMENT_DESC)</summary>
            <remarks>
            <para>An input-layout object contains an array of structures, each structure defines one element being read from an input slot. Create an input-layout object by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createinputlayout">ID3D11Device::CreateInputLayout</a>. For an example, see the "Create the Input-Layout Object" subtopic under the  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-input-assembler-stage-getting-started">Getting Started with the Input-Assembler Stage</a> topic.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.SemanticName">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> The HLSL semantic associated with this element in a shader input-signature. See <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/dx-graphics-hlsl-semantics">HLSL Semantics</a> for more info.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.SemanticIndex">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The data type of the element data. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.InputSlot">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An integer value that identifies the input-assembler (see input slot). Valid values are between 0 and 15, defined in D3D11.h.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.AlignedByteOffset">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Optional. Offset (in bytes) from the start of the vertex. Use D3D11_APPEND_ALIGNED_ELEMENT for convenience to define the current element directly after the previous one, including any packing if necessary.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.InputSlotClass">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_input_classification">D3D11_INPUT_CLASSIFICATION</a></b> Identifies the input data class for a single input slot (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_input_classification">D3D11_INPUT_CLASSIFICATION</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.InstanceDataStepRate">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data (the slot class is set to D3D11_INPUT_PER_VERTEX_DATA).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_MAP">
            <summary>Identifies a resource to be accessed for reading and writing by the CPU. Applications may combine one or more of these flags. (D3D11_MAP)</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a>. <h3><a id="NO_OVERWRITE_DETAILS"></a><a id="no_overwrite_details"></a>Meaning of D3D11_MAP_WRITE_NO_OVERWRITE</h3> <b>D3D11_MAP_WRITE_NO_OVERWRITE</b> signifies that the application promises not to write to data that the input assembler (IA) stage is using. In exchange, the GPU allows the application to write to other parts of the same buffer.  The application must ensure that it does not write over any data in use by the IA stage. For example, consider the buffer illustrated in the following diagram. If a <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-draw">Draw</a> call has been issued that uses vertices 4-6, then an application that calls <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-map">Map</a> on this buffer must ensure that it does not write to the vertices that the <b>Draw</b> call will access during rendering. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_map#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_READ">
            <summary>
            <para>Resource is mapped for reading. The resource must have been created with read access (see <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_READ</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_WRITE">
            <summary>
            <para>Resource is mapped for writing. The resource must have been created with write access (see <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_READ_WRITE">
            <summary>
            <para>Resource is mapped for reading and writing. The resource must have been created with read and write access (see <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_READ and D3D11_CPU_ACCESS_WRITE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_WRITE_DISCARD">
            <summary>
            <para>Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access and dynamic usage (See <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a> and <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DYNAMIC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_WRITE_NO_OVERWRITE">
            <summary>
            <para>Resource is mapped for writing; the existing contents of the resource cannot be overwritten (see Remarks). This flag is only valid on vertex and index buffers. The resource must have been created with write access (see <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a>). Cannot be used on a resource created with the <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_CONSTANT_BUFFER</a> flag. <div class="alert"><b>Note</b>  The Direct3D 11.1 runtime, which is available starting with Windows 8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a> with <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE_D3D11_OPTIONS</a>. <b>CheckFeatureSupport</b> fills members of a <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a> structure with the device's features. The relevant members here are <b>MapNoOverwriteOnDynamicConstantBuffer</b> and <b>MapNoOverwriteOnDynamicBufferSRV</b>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE">
            <summary>Provides access to subresource data.</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a>. The values in these members tell you how much data you can view: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_mapped_subresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE.pData">
            <summary>
            <para>Type: <b>void*</b> Pointer to the data. When <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a> provides the pointer, the runtime ensures that the pointer has a specific alignment, depending on the following feature levels: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_mapped_subresource#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE.RowPitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The row pitch, or width, or physical size (in bytes) of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_mapped_subresource#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE.DepthPitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The depth pitch, or width, or physical size (in bytes)of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_mapped_subresource#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY">
            <summary>Query types. (D3D11_QUERY)</summary>
            <remarks>Create a query with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createquery">ID3D11Device::CreateQuery</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_EVENT">
            <summary>Determines whether or not the GPU is finished processing commands. When the GPU is finished processing commands <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return S_OK, and pData will point to a BOOL with a value of <b>TRUE</b>. When using this type of query, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> is disabled.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_OCCLUSION">
            <summary>Get the number of samples that passed the depth and stencil tests in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a UINT64. If a depth or stencil test is disabled, then each of those tests will be counted as a pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_TIMESTAMP">
            <summary>Get a timestamp value where <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a UINT64. This kind of query is only useful if two timestamp queries are done in the middle of a D3D11_QUERY_TIMESTAMP_DISJOINT query. The difference of two timestamps can be used to determine how many ticks have elapsed, and the D3D11_QUERY_TIMESTAMP_DISJOINT query will determine if that difference is a reliable value and also has a value that shows how to convert the number of ticks into seconds. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_timestamp_disjoint">D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</a>. When using this type of query, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> is disabled.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_TIMESTAMP_DISJOINT">
            <summary>Determines whether or not a D3D11_QUERY_TIMESTAMP is returning reliable values, and also gives the frequency of the processor enabling you to convert the number of elapsed ticks into seconds. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_timestamp_disjoint">D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</a>. This type of query should only be invoked once per frame or less.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_PIPELINE_STATISTICS">
            <summary>Get pipeline statistics, such as the number of pixel shader invocations in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_pipeline_statistics">D3D11_QUERY_DATA_PIPELINE_STATISTICS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_OCCLUSION_PREDICATE">
            <summary>Similar to D3D11_QUERY_OCCLUSION, except <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL indicating whether or not any samples passed the depth and stencil tests - <b>TRUE</b> meaning at least one passed, <b>FALSE</b> meaning none passed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS">
            <summary>Get streaming output statistics, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE">
            <summary>Determines whether or not any of the streaming output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM0">
            <summary>Get streaming output statistics for stream 0, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0">
            <summary>Determines whether or not the stream 0 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM1">
            <summary>Get streaming output statistics for stream 1, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1">
            <summary>Determines whether or not the stream 1 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM2">
            <summary>Get streaming output statistics for stream 2, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2">
            <summary>Determines whether or not the stream 2 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM3">
            <summary>Get streaming output statistics for stream 3, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3">
            <summary>Determines whether or not the stream 3 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC">
            <summary>Describes a query. (D3D11_QUERY_DESC)</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_query_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC.Query">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY</a></b> Type of query (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_query_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Miscellaneous flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query_misc_flag">D3D11_QUERY_MISC_FLAG</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_query_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC">
            <summary>Describes rasterizer state. (D3D11_RASTERIZER_DESC)</summary>
            <remarks>
            <para>Rasterizer state defines the behavior of the rasterizer stage. To create a rasterizer-state object, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate">ID3D11Device::CreateRasterizerState</a>. To set rasterizer state, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-rssetstate">ID3D11DeviceContext::RSSetState</a>. If you do not specify some rasterizer state,  the Direct3D runtime uses the following default values for rasterizer state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.FillMode">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_fill_mode">D3D11_FILL_MODE</a></b> Determines the fill mode to use when rendering (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_fill_mode">D3D11_FILL_MODE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.CullMode">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cull_mode">D3D11_CULL_MODE</a></b> Indicates triangles facing the specified direction are not drawn (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cull_mode">D3D11_CULL_MODE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.FrontCounterClockwise">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Determines if a triangle is front- or back-facing. If this parameter is <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If this parameter is <b>FALSE</b>, the opposite is true.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.DepthBias">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a></b> Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.DepthBiasClamp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.SlopeScaledDepthBias">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.DepthClipEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable clipping based on distance. The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.ScissorEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.MultisampleEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.AntialiasedLineEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC">
            <summary>Describes the blend state for a render target. (D3D11_RENDER_TARGET_BLEND_DESC)</summary>
            <remarks>
            <para>You specify an array of <b>D3D11_RENDER_TARGET_BLEND_DESC</b> structures in the <b>RenderTarget</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a> structure to describe the blend states for render targets; you can bind up to eight render targets to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time. For info about how blending is done, see the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a>. Here are the default values for blend state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.BlendEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable (or disable) blending.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.SrcBlend">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the RGB value that the pixel shader outputs. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.DestBlend">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current RGB value in the render target. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.BlendOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">D3D11_BLEND_OP</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.SrcBlendAlpha">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.DestBlendAlpha">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.BlendOpAlpha">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">D3D11_BLEND_OP</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.RenderTargetWriteMask">
            <summary>
            <para>Type: <b>UINT8</b> A write mask.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D11.__D3D11_RENDER_TARGET_BLEND_DESC_8.Length">
            <summary>The length of the inline array.</summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.__D3D11_RENDER_TARGET_BLEND_DESC_8.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.__D3D11_RENDER_TARGET_BLEND_DESC_8.AsReadOnlySpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC">
            <summary>Specifies the subresources from a resource that are accessible using a render-target view.</summary>
            <remarks>
            <para>A render-target-view description is passed into <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a> to create a render target. A render-target-view cannot use the following formats: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The data format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_rtv_dimension">D3D11_RTV_DIMENSION</a></b> The resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_rtv_dimension">D3D11_RTV_DIMENSION</a>), which specifies how the render-target resource will be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_render_target_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION">
            <summary>Identifies the type of resource being used. (D3D11_RESOURCE_DIMENSION)</summary>
            <remarks>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11resource-gettype">ID3D11Resource::GetType</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_UNKNOWN">
            <summary>Resource is of unknown type.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_BUFFER">
            <summary>Resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_TEXTURE1D">
            <summary>Resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_TEXTURE2D">
            <summary>Resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_TEXTURE3D">
            <summary>Resource is a 3D texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG">
            <summary>Identifies options for resources.</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>. These flags can be combined by bitwise OR. The <b>D3D11_RESOURCE_MISC_FLAG</b> cannot be used when creating resources with <b>D3D11_CPU_ACCESS</b> flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_GENERATE_MIPS">
            <summary>Enables MIP map generation by using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-generatemips">ID3D11DeviceContext::GenerateMips</a> on a texture resource. The resource must be created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">bind flags</a> that specify that the resource is a render target and a shader resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED">
            <summary>
            <para>Enables resource data sharing between two or more Direct3D devices. The only resources that can be shared are 2D non-mipmapped textures.</para>
            <para><b>D3D11_RESOURCE_MISC_SHARED</b> and <b>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</b> are mutually exclusive.</para>
            <para><b>WARP</b> and <b>REF</b> devices do not support shared resources. If you try to create a resource with this flag on either a <b>WARP</b> or <b>REF</b> device, the create method will return an <b>E_OUTOFMEMORY</b> error code.</para>
            <para><div class="alert"><b>Note</b>  Starting with Windows 8, <b>WARP</b> devices fully support shared resources. </div> <div> </div> <div class="alert"><b>Note</b>  Starting with Windows 8, we recommend that you enable resource data sharing between two or more Direct3D devices by using a combination of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_SHARED_NTHANDLE</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</a> flags instead. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_TEXTURECUBE">
            <summary>Sets a resource to be a cube texture created from a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a> that contains 6 textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS">
            <summary>Enables instancing of GPU-generated content.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS">
            <summary>Enables a resource as a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">byte address buffer</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_BUFFER_STRUCTURED">
            <summary>Enables a resource as a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">structured buffer</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESOURCE_CLAMP">
            <summary>Enables a resource with MIP map clamping for use with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod">ID3D11DeviceContext::SetResourceMinLOD</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX">
            <summary>
            <para>Enables the resource  to be synchronized by using the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-acquiresync">IDXGIKeyedMutex::AcquireSync</a>  and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-releasesync">IDXGIKeyedMutex::ReleaseSync</a> APIs. The following Direct3D 11 resource creation  APIs, that take <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a> parameters, have been extended to support the new flag. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_GDI_COMPATIBLE">
            <summary>
            <para>Enables a resource compatible with GDI. You must set the <b>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</b> flag  on surfaces that you use with GDI. Setting the <b>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</b> flag allows GDI rendering on the surface via <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgisurface1-getdc">IDXGISurface1::GetDC</a>.</para>
            <para>Consider the following programming tips for using D3D11_RESOURCE_MISC_GDI_COMPATIBLE when you create a texture or use that texture in a swap chain: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED_NTHANDLE">
            <summary>
            <para>Set this flag to enable the use of NT HANDLE values when you create a shared resource.  By enabling this flag, you deprecate the use of existing HANDLE values. The value specifies a new shared resource type that directs the runtime to use NT HANDLE values for the shared resource. The runtime then must confirm that the shared resource  works on all hardware at the specified <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>.</para>
            <para>Without this flag set, the runtime does not strictly validate shared resource parameters (that is, formats, flags, usage, and so on). When the runtime does not validate shared resource parameters, behavior of much of the Direct3D   API might be undefined and might vary from driver to driver. <b>Direct3D 11 and earlier:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESTRICTED_CONTENT">
            <summary>
            <para>Set this flag to indicate that the resource might contain protected content; therefore, the operating system should  use the resource only when the driver and hardware support content protection.  If the driver and hardware do not support content protection and you try to create a resource with this flag, the resource creation fails. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE">
            <summary>
            <para>Set this flag to indicate that the operating system  restricts access to the shared surface. You can use this flag together with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER">
            <summary>
            <para>Set this flag to indicate that the driver  restricts access to the shared surface. You can use this flag in conjunction with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_GUARDED">
            <summary>
            <para>Set this flag to indicate that the resource is guarded. Such a resource is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/dcomp/nf-dcomp-idcompositionsurface-begindraw">IDCompositionSurface::BeginDraw</a> (DirectComposition) and <a href="https://docs.microsoft.com/windows/desktop/api/windows.ui.xaml.media.dxinterop/nf-windows-ui-xaml-media-dxinterop-isurfaceimagesourcenative-begindraw">ISurfaceImageSourceNative::BeginDraw</a> (Windows Runtime) APIs.  For these APIs, you provide a region of interest (ROI) on a surface to update. This surface isn't compatible with multiple render targets (MRT). A guarded resource automatically restricts all writes to the region that is related to one of the preceding APIs. Additionally, the resource enforces access to the ROI with these restrictions: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_TILE_POOL">
            <summary>
            <para>Set this flag to indicate that the resource is a tile pool. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_TILED">
            <summary>
            <para>Set this flag to indicate that the resource is a tiled resource. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_HW_PROTECTED">
            <summary>
            <para>Set this flag to indicate that the resource should be created such that it will be protected by the hardware.  Resource creation will fail if hardware content protection is not supported. This flag has the following restrictions: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED_DISPLAYABLE">
            <summary>Enables the resource to work with the [displayable surfaces](/windows/win32/direct3d11/displayable-surfaces) feature. You must use **D3D11_RESOURCE_MISC_SHARED_DISPLAYABLE** in combination with both **D3D11_RESOURCE_MISC_SHARED** and **D3D11_RESOURCE_MISC_SHARED_NTHANDLE**.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED_EXCLUSIVE_WRITER">
            <summary>TBD</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION">
            <summary>These flags identify the type of resource that will be viewed as a render target.</summary>
            <remarks>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a> to create a render-target view.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_UNKNOWN">
            <summary>Do not use this value, as it will cause <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a> to fail.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_BUFFER">
            <summary>The resource will be accessed as a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE1D">
            <summary>The resource will be accessed as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource will be accessed as an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2D">
            <summary>The resource will be accessed as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource will be accessed as an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2DMS">
            <summary>The resource will be accessed as a 2D texture with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource will be accessed as an array of 2D textures with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE3D">
            <summary>The resource will be accessed as a 3D texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC">
            <summary>Describes a sampler state. (D3D11_SAMPLER_DESC)</summary>
            <remarks>
            <para>These are the default values for sampler state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.Filter">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_filter">D3D11_FILTER</a></b> Filtering method to use when sampling a texture (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_filter">D3D11_FILTER</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.AddressU">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a></b> Method to use for resolving a u texture coordinate that is outside the 0 to 1 range (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.AddressV">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a></b> Method to use for resolving a v texture coordinate that is outside the 0 to 1 range.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.AddressW">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a></b> Method to use for resolving a w texture coordinate that is outside the 0 to 1 range.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MipLODBias">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MaxAnisotropy">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Clamping value used if D3D11_FILTER_ANISOTROPIC or D3D11_FILTER_COMPARISON_ANISOTROPIC is specified in Filter. Valid values are between 1 and 16.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.ComparisonFunc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a></b> A function that compares sampled data against existing sampled data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.BorderColor">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> Border color to use if D3D11_TEXTURE_ADDRESS_BORDER is specified for AddressU, AddressV, or AddressW. Range must be between 0.0 and 1.0 inclusive.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MinLOD">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MaxLOD">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinLOD. To have no upper limit on LOD set this to a large value such as D3D11_FLOAT32_MAX.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC">
            <summary>Describes a shader-resource view. (D3D11_SHADER_RESOURCE_VIEW_DESC)</summary>
            <remarks>
            <para>A view is a format-specific way to look at the data in a resource. The view determines what data to look at, and how it is cast when read. When viewing a resource, the resource-view description must specify a typed format, that is compatible with the resource format. So that means that you cannot create a resource-view description using any format with _TYPELESS in the name. You can however view a typeless resource by specifying a typed format for the view. For example, a DXGI_FORMAT_R32G32B32_TYPELESS resource can be viewed with one of these typed formats: DXGI_FORMAT_R32G32B32_FLOAT, DXGI_FORMAT_R32G32B32_UINT, and DXGI_FORMAT_R32G32B32_SINT, since these typed formats are compatible with the typeless resource. Create a shader-resource-view description by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. To view a shader-resource-view description, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11shaderresourceview-getdesc">ID3D11ShaderResourceView::GetDesc</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> specifying the viewing format. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476217(v=vs.85)">D3D11_SRV_DIMENSION</a></b> The resource type of the view. See <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476217(v=vs.85)">D3D11_SRV_DIMENSION</a>. You must set *ViewDimension* to the same resource type as that of the underlying resource. This parameter also determines which _SRV to use in the union below.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY">
            <summary>Description of a vertex element in a vertex buffer in an output slot. (D3D11_SO_DECLARATION_ENTRY)</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_so_declaration_entry">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.Stream">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Zero-based, stream number.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.SemanticName">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> Type of output element; possible values include: <b>"POSITION"</b>, <b>"NORMAL"</b>, or <b>"TEXCOORD0"</b>. Note that if <i>SemanticName</i> is <b>NULL</b> then <i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.SemanticIndex">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.StartComponent">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BYTE</a></b> Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components of a position, then StartComponent should be 1 and ComponentCount should be 2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.ComponentCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BYTE</a></b> The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components of a position, then StartComponent should be 1 and ComponentCount should be 2.  Note that if <i>SemanticName</i> is <b>NULL</b> then <i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.OutputSlot">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BYTE</a></b> The associated stream output buffer that is bound to the pipeline (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets">ID3D11DeviceContext::SOSetTargets</a>). The valid range for <i>OutputSlot</i> is 0 to 3.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP">
            <summary>The stencil operations that can be performed during depth-stencil testing. (D3D11_STENCIL_OP)</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_stencil_op">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_KEEP">
            <summary>Keep the existing stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_ZERO">
            <summary>Set the stencil data to 0.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_REPLACE">
            <summary>Set the stencil data to the reference value set by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate">ID3D11DeviceContext::OMSetDepthStencilState</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_INCR_SAT">
            <summary>Increment the stencil value by 1, and clamp the result.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_DECR_SAT">
            <summary>Decrement the stencil value by 1, and clamp the result.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_INVERT">
            <summary>Invert the stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_INCR">
            <summary>Increment the stencil value by 1, and wrap the result if necessary.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_DECR">
            <summary>Decrement the stencil value by 1, and wrap the result if necessary.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA">
            <summary>Specifies data for initializing a subresource. (D3D11_SUBRESOURCE_DATA)</summary>
            <remarks>
            <para>This structure is used in calls to create buffers (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a>) and textures (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture1d">ID3D11Device::CreateTexture1D</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture3d">ID3D11Device::CreateTexture3D</a>). If the resource you create does not require a system-memory pitch or a system-memory-slice pitch, you can use those members to pass size information, which might help you when you debug a problem with creating a resource. A subresource is a single mipmap-level surface. You can pass an array of subresources to one of the preceding methods to create the resource. A subresource can be 1D, 2D, or 3D. How you set the members of <b>D3D11_SUBRESOURCE_DATA</b> depend on whether the subresource is 1D, 2D, or 3D.</para>
            <para>The x, y, and d values are 0-based indices and <b>BytesPerPixel</b> depends on the pixel format. For mipmapped 3D surfaces, the number of depth slices in each level is half the number of the previous level (minimum 1) and rounded down if dividing by two results in a non-whole number. <div class="alert"><b>Note</b>  An application must not rely on <b>SysMemPitch</b> being exactly equal to the number of texels in a line times the size of a texel. In some cases, <b>SysMemPitch</b> will include padding to skip past additional data in a line.  This could be padding for alignment or the texture could be a subsection of a larger texture.  For example, the <b>D3D11_SUBRESOURCE_DATA</b> structure could represent a 32 by 32 subsection of a 128 by 128 texture. The value for <b>SysMemSlicePitch</b> will reflect any padding included in <b>SysMemPitch</b>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_subresource_data#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA.pSysMem">
            <summary>
            <para>Type: <b>const void*</b> Pointer to the initialization data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_subresource_data#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA.SysMemPitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance (in bytes) from the beginning of one line of a texture to the next line. System-memory pitch is used only for 2D and 3D texture data as it is has no meaning for the other resource types. Specify the distance from the first pixel of one 2D slice of a 3D texture to the first pixel of the next 2D slice in that texture in the <b>SysMemSlicePitch</b> member.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_subresource_data#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA.SysMemSlicePitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance (in bytes) from the beginning of one depth level to the next. System-memory-slice pitch is only used for 3D texture data as it has no meaning for the other resource types.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_subresource_data#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV">
            <summary>Specifies the subresources from an array of 1D textures to use in a depth-stencil view.</summary>
            <remarks>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV">
            <summary>Specifies the subresources from an array of 1D textures to use in a render-target view.</summary>
            <remarks>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV">
            <summary>Specifies the subresources from an array of 1D textures to use in a shader-resource view.</summary>
            <remarks>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV">
            <summary>Describes an array of unordered-access 1D texture resources. (D3D11_TEX1D_ARRAY_UAV)</summary>
            <remarks>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first array slice to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of slices in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_DSV">
            <summary>Specifies the subresource from a 1D texture that is accessible to a depth-stencil view. (D3D11_TEX1D_DSV)</summary>
            <remarks>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_RTV">
            <summary>Specifies the subresource from a 1D texture to use in a render-target view. (D3D11_TEX1D_RTV)</summary>
            <remarks>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_SRV">
            <summary>Specifies the subresource from a 1D texture to use in a shader-resource view. (D3D11_TEX1D_SRV)</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>). As an example, assuming <b>MostDetailedMip</b> = 6 and <b>MipLevels</b> = 2, the view will have access to 2 mipmap levels, 6 and 7, of the original texture for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates the view. In this situation, <b>MostDetailedMip</b> is greater than the <b>MipLevels</b> in the view. However, <b>MostDetailedMip</b> is not greater than the <b>MipLevels</b> in the original resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view  of the texture. See the remarks. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_UAV">
            <summary>Describes a unordered-access 1D texture resource. (D3D11_TEX1D_UAV)</summary>
            <remarks>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex1d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_DSV">
            <summary>Specifies the subresources from an array of multisampled 2D textures for a depth-stencil view.</summary>
            <remarks>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_DSV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_DSV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_RTV">
            <summary>Specifies the subresources from a an array of multisampled 2D textures to use in a render-target view.</summary>
            <remarks>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_RTV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_RTV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_SRV">
            <summary>Specifies the subresources from an array of multisampled 2D textures to use in a shader-resource view.</summary>
            <remarks>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_SRV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_SRV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_DSV">
            <summary>Specifies the subresource from a multisampled 2D texture that is accessible to a depth-stencil view. (D3D11_TEX2DMS_DSV)</summary>
            <remarks>Because a multisampled 2D texture contains a single subtexture, there is nothing to specify; this unused member is included so that this structure will compile in C.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_DSV.UnusedField_NothingToDefine">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Unused.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_RTV">
            <summary>Specifies the subresource from a multisampled 2D texture to use in a render-target view. (D3D11_TEX2DMS_RTV)</summary>
            <remarks>Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in D3D11_TEX2DMS_RTV. Consequently, <b>UnusedField_NothingToDefine</b> is included so that this structure will compile in C.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_RTV.UnusedField_NothingToDefine">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Integer of any value. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_SRV">
            <summary>Specifies the subresources from a multisampled 2D texture to use in a shader-resource view.</summary>
            <remarks>Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in D3D11_TEX2DMS_RTV. Consequently, <b>UnusedField_NothingToDefine</b> is included so that this structure will compile in C.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_SRV.UnusedField_NothingToDefine">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Integer of any value. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2dms_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV">
            <summary>Specifies the subresources from an array 2D textures that are accessible to a depth-stencil view.</summary>
            <remarks>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV">
            <summary>Specifies the subresources from an array of 2D textures to use in a render-target view.</summary>
            <remarks>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array to use in the render target view, starting from <b>FirstArraySlice</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV">
            <summary>Specifies the subresources from an array of 2D textures to use in a shader-resource view.</summary>
            <remarks>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV">
            <summary>Describes an array of unordered-access 2D texture resources. (D3D11_TEX2D_ARRAY_UAV)</summary>
            <remarks>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first array slice to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of slices in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_DSV">
            <summary>Specifies the subresource from a 2D texture that is accessible to a depth-stencil view. (D3D11_TEX2D_DSV)</summary>
            <remarks>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_RTV">
            <summary>Specifies the subresource from a 2D texture to use in a render-target view. (D3D11_TEX2D_RTV)</summary>
            <remarks>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_SRV">
            <summary>Specifies the subresource from a 2D texture to use in a shader-resource view. (D3D11_TEX2D_SRV)</summary>
            <remarks>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_UAV">
            <summary>Describes a unordered-access 2D texture resource. (D3D11_TEX2D_UAV)</summary>
            <remarks>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex2d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV">
            <summary>Specifies the subresources from a 3D texture to use in a render-target view.</summary>
            <remarks>This structure is one member of a render target view. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV.FirstWSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> First depth level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV.WSize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of depth levels to use in the render-target view, starting from <b>FirstWSlice</b>. A value of -1 indicates all of the slices along the w axis, starting from <b>FirstWSlice</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_SRV">
            <summary>Specifies the subresources from a 3D texture to use in a shader-resource view.</summary>
            <remarks>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture3D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV">
            <summary>Describes a unordered-access 3D texture resource. (D3D11_TEX3D_UAV)</summary>
            <remarks>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV.FirstWSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first depth slice to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV.WSize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of depth slices.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_tex3d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV">
            <summary>Specifies the subresources from an array of cube textures to use in a shader-resource view.</summary>
            <remarks>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.First2DArrayFace">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first 2D texture to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.NumCubes">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of cube textures in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_SRV">
            <summary>Specifies the subresource from a cube texture to use in a shader-resource view. (D3D11_TEXCUBE_SRV)</summary>
            <remarks>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texcube_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texcube_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC">
            <summary>Describes a 1D texture. (D3D11_TEXTURE1D_DESC)</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture1d">ID3D11Device::CreateTexture1D</a>. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/jj151694(v=vs.85)">CD3D11_TEXTURE1D_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a texture description. The texture size range is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D 10 hardware at feature level 10 (<a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a>) and call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> to create an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE1D_U_DIMENSION (8192) when you create your 1D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture1d_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE1D_U_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array. The  range is from 1 to D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC">
            <summary>Describes a 2D texture. (D3D11_TEXTURE2D_DESC)</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a>. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/jj151700(v=vs.85)">CD3D11_TEXTURE2D_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a texture description. The device places some size restrictions (must be multiples of a minimum size) for a subsampled, block compressed, or bit-format resource. The texture size range is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D 10 hardware at feature level 10 (<a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a>) and call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> to create an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE2D_U_OR_V_DIMENSION (8192) when you create your 2D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Height">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the texture array. The  range is from 1 to D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION (2048). For a texture cube-map, this value is a multiple of 6 (that is, 6 times the value in the <b>NumCubes</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_array_srv">D3D11_TEXCUBE_ARRAY_SRV</a>), and the  range is from 6 to 2046. The range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.SampleDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a></b> Structure that specifies multisampling parameters for the texture. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC">
            <summary>Describes a 3D texture. (D3D11_TEXTURE3D_DESC)</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture3d">ID3D11Device::CreateTexture3D</a>. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/jj151706(v=vs.85)">CD3D11_TEXTURE3D_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a texture description. The device restricts the size of subsampled, block compressed, and bit format resources to be multiples of sizes specific to each format. The texture size range is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D 10 hardware at feature level 10 (<a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a>) and call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> to create an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048) when you create your 3D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture3d_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Height">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Depth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture depth (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE">
            <summary>Identify a technique for resolving texture coordinates that are outside of the boundaries of a texture. (D3D11_TEXTURE_ADDRESS_MODE)</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_texture_address_mode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_WRAP">
            <summary>Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_MIRROR">
            <summary>Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_CLAMP">
            <summary>Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_BORDER">
            <summary>Texture coordinates outside the range [0.0, 1.0] are set to the border color specified in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a> or HLSL code.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_MIRROR_ONCE">
            <summary>Similar to D3D11_TEXTURE_ADDRESS_MIRROR and D3D11_TEXTURE_ADDRESS_CLAMP. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION">
            <summary>Unordered-access view options.</summary>
            <remarks>This enumeration is used by a unordered access-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_UNKNOWN">
            <summary>The view type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_BUFFER">
            <summary>View the resource as a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE1D">
            <summary>View the resource as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE1DARRAY">
            <summary>View the resource as a 1D texture array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE2D">
            <summary>View the resource as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE2DARRAY">
            <summary>View the resource as a 2D texture array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE3D">
            <summary>View the resource as a 3D texture array.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC">
            <summary>Specifies the subresources from a resource that are accessible using an unordered-access view.</summary>
            <remarks>An unordered-access-view description is passed into <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createunorderedaccessview">ID3D11Device::CreateUnorderedAccessView</a> to create a view.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The data format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_uav_dimension">D3D11_UAV_DIMENSION</a></b> The resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_uav_dimension">D3D11_UAV_DIMENSION</a>), which specifies how the resource will be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE">
            <summary>Identifies expected resource use during rendering. The usage directly reflects whether a resource is accessible by the CPU and/or the graphics processing unit (GPU).</summary>
            <remarks>
            <para>An application identifies the way a resource is intended to be used (its usage) in a resource description. There are several structures for creating resources including: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_usage#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_DEFAULT">
            <summary>A resource that requires read and write access by the GPU. This is likely to be the most common usage choice.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_IMMUTABLE">
            <summary>A resource that can only be read by the GPU. It cannot be written by the GPU, and cannot be accessed at all by the CPU. This type of resource must be initialized when it is created, since it cannot be changed after creation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_DYNAMIC">
            <summary>
            <para>A resource that is accessible by both the GPU (read only) and the CPU (write only). A dynamic resource is a good choice for a resource that will be updated by the CPU at least once per frame. To update a dynamic resource, use a <b>Map</b> method. For info about how to use dynamic resources, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/how-to--use-dynamic-resources">How to: Use dynamic resources</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_usage#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_STAGING">
            <summary>A resource that supports data transfer (copy) from the GPU to the CPU.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT">
            <summary>Defines the dimensions of a viewport. (D3D11_VIEWPORT)</summary>
            <remarks>
            <para>In all cases, <b>Width</b> and <b>Height</b> must be &gt;= 0 and <b>TopLeftX</b> + <b>Width</b> and <b>TopLeftY</b> + <b>Height</b> must be &lt;= D3D11_VIEWPORT_BOUNDS_MAX. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.TopLeftX">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> X position of the left hand side of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.TopLeftY">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Y position of the top of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Width of the viewport.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.Height">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Height of the viewport.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.MinDepth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Minimum depth of the viewport. Ranges between 0 and 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.MaxDepth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Maximum depth of the viewport. Ranges between 0 and 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.GetDataSize">
            <summary>Get the size of the data (in bytes) that is output when calling ID3D11DeviceContext::GetData.</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data (in bytes) that is output when calling GetData.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11asynchronous-getdatasize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{4b35d0cd-1e15-4258-9c98-1b1333f6dd3b}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*)">
            <summary>Gets the description for blending state that you used to create the blend-state object. (ID3D11BlendState.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a> structure that receives a description of the blend state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11blendstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>You use the description for blending state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createblendstate">ID3D11Device::CreateBlendState</a> method to create the blend-state object.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{75b68faa-347d-4159-8f45-a0640f01cd9a}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*)">
            <summary>Get the properties of a buffer resource. (ID3D11Buffer.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>) filled in by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11buffer-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11buffer-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{48570b85-d1ee-4fcd-a250-eb350722b037}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetClassLinkage(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage**)">
            <summary>Gets the ID3D11ClassLinkage object associated with the current HLSL class.</summary>
            <param name="ppLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>**</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a> interface pointer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-getclasslinkage#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-getclasslinkage#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC*)">
            <summary>Gets a description of the current HLSL class.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_class_instance_desc">D3D11_CLASS_INSTANCE_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_class_instance_desc">D3D11_CLASS_INSTANCE_DESC</a> structure that describes the current HLSL class.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para>An instance is not restricted to being used for a single type in a single shader. An instance is flexible and can be used for any shader that used the same type name or instance name when the instance was generated.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-getdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetInstanceName(Windows.Win32.Foundation.PSTR,System.UIntPtr@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetInstanceName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetInstanceName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)">
            <summary>Gets the instance name of the current HLSL class.</summary>
            <param name="pInstanceName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> The instance name of the current HLSL class.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-getinstancename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBufferLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a>*</b> The length of the <i>pInstanceName</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-getinstancename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>GetInstanceName will return a valid name only for instances acquired using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance">ID3D11ClassLinkage::GetClassInstance</a>.</para>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-getinstancename#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetTypeName(Windows.Win32.Foundation.PSTR,System.UIntPtr@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetTypeName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetTypeName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)">
            <summary>Gets the type of the current HLSL class.</summary>
            <param name="pTypeName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> Type of the current HLSL class.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-gettypename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBufferLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a>*</b> The length of the <i>pTypeName</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-gettypename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>GetTypeName will return a valid name only for instances acquired using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance">ID3D11ClassLinkage::GetClassInstance</a>.</para>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classinstance-gettypename#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{a6cd7faa-b0b7-4a2f-9436-8662a65797cb}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetClassInstance(System.String,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)">
            <summary>Gets the class-instance object that represents the specified HLSL class.</summary>
            <param name="pClassInstanceName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> The name of a class for which to get the class instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the class instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface to initialize.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para>A class instance must have at least 1 data member in order to be available for the runtime to use with <b>ID3D11ClassLinkage::GetClassInstance</b>. Any instance with no members will be optimized out of a compiled shader blob as a zero-sized object. If you have a class with no data members, use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance">ID3D11ClassLinkage::CreateClassInstance</a> instead.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.CreateClassInstance(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.CreateClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.CreateClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)">
            <summary>Initializes a class-instance object that represents an HLSL class instance.</summary>
            <param name="pClassTypeName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> The type name of a class to initialize.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ConstantBufferOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Identifies the constant buffer that contains the class data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ConstantVectorOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="TextureOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The texture slot for the first texture; there may be multiple textures following the offset.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SamplerOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The sampler slot for the first sampler; there may be multiple samplers following the offset.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface to initialize.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>Instances can be created (or gotten) before or after a shader is created. Use the same shader linkage object to acquire a class instance and create the shader the instance is going to be used in. For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{ddf57cba-9543-46e4-a12b-f207a0fe7fed}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.GetContextFlags">
            <summary>Gets the initialization flags associated with the deferred context that created the command list.</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The context flag is reserved for future use and is always 0.</para>
            </returns>
            <remarks>The GetContextFlags method gets the flags that were supplied to the <i>ContextFlags</i> parameter of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdeferredcontext">ID3D11Device::CreateDeferredContext</a>; however, the context flag is reserved for future use.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{a24bc4d1-769e-43f7-8013-98ff566c18e2}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{4f5b196e-c2bd-495e-bd01-1fded38e4969}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*)">
            <summary>Get a counter description. (ID3D11Counter.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>*</b> Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11counter-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11counter-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{6e8c49fb-a371-4770-b440-29086022b741}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*)">
            <summary>Gets the description for depth-stencil state that you used to create the depth-stencil-state object.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a> structure that receives a description of the depth-stencil state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11depthstencilstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>You use the description for depth-stencil state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate">ID3D11Device::CreateDepthStencilState</a> method to create the depth-stencil-state object.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{03823efb-8d8f-4e1c-9aa2-f64bb2cbfdf1}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*)">
            <summary>Get the depth-stencil view. (ID3D11DepthStencilView.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>*</b> Pointer to a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11depthstencilview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11depthstencilview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{9fdac92a-1876-48c3-afad-25b94f84a9b6}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBuffer(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBuffer(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBuffer(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Creates a buffer (vertex buffer, index buffer, or shader-constant buffer).</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structure that describes  the initialization data; use <b>NULL</b> to allocate space only (with the exception that it cannot be <b>NULL</b> if the usage flag is <b>D3D11_USAGE_IMMUTABLE</b>).</para>
            <para>If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the buffer is undefined. In this case, you need to write the buffer content some other way before the resource is read.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface for the buffer object created. Set this parameter to <b>NULL</b> to validate the other input parameters (<b>S_FALSE</b> indicates a pass).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the buffer. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para>For example code, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-buffers-vertex-how-to">How to: Create a Vertex Buffer</a>, <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-buffers-index-how-to">How to: Create an Index Buffer</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-buffers-constant-how-to">How to: Create a Constant Buffer</a>.</para>
            <para>For a constant buffer (<b>BindFlags</b> of  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> set to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_CONSTANT_BUFFER</a>), you must set the <b>ByteWidth</b> value of  <b>D3D11_BUFFER_DESC</b> in multiples of 16, and less than or equal to <b>D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT</b>.</para>
            <para>The Direct3D 11.1 runtime, which is available on Windows 8 and later operating systems, provides the following new functionality for <b>CreateBuffer</b>:</para>
            <para>You can create a constant buffer that is larger than the maximum constant buffer size that a shader can access (4096 32-bit*4-component constants – 64KB). When you bind the constant buffer to the pipeline (for example, via <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers">PSSetConstantBuffers</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-pssetconstantbuffers1">PSSetConstantBuffers1</a>), you can define a range of the buffer that the shader can access that fits within the 4096 constant limit. The Direct3D 11.1 runtime (available in Windows 8 and later operating systems) emulates this feature for [feature level](/windows/win32/direct3d11/overviews-direct3d-11-devices-downlevel-intro) 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3. This feature is always available on new drivers for feature level 10 and higher. On runtimes older than Direct3D 11.1, a call to **CreateBuffer** to request a constant buffer that is larger than 4096 fails.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D**)">
            <summary>Creates an array of 1D textures.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure that describes a 1D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture1d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 1D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created. If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read. You can determine the size of this array from values in the <b>MipLevels</b> and <b>ArraySize</b> members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure to which <i>pDesc</i> points by using the following calculation: MipLevels * ArraySize For more information about this array size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture1d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppTexture1D">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture1d">ID3D11Texture1D</a>**</b> A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture1d">ID3D11Texture1D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture1d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para><b>CreateTexture1D</b> creates a 1D texture resource, which can contain a number of 1D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels. All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures pointed to by <i>pInitialData</i>, or they can use one of the D3DX texture functions such as <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3dx11createtexturefromfile">D3DX11CreateTextureFromFile</a>. For a 32 width texture with a full mipmap chain, the <i>pInitialData</i> array has the following 6 elements:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture1d#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D**)">
            <summary>Create an array of 2D textures.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure that describes a 2D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture2d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 2D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created. If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read. You can determine the size of this array from values in the <b>MipLevels</b> and <b>ArraySize</b> members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure to which <i>pDesc</i> points by using the following calculation: MipLevels * ArraySize For more information about this array size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture2d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppTexture2D">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a>**</b> A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture2d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para><b>CreateTexture2D</b> creates a 2D texture resource, which can contain a number of 2D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels. All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures pointed to by <i>pInitialData</i>, or it may use one of the D3DX texture functions such as <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3dx11createtexturefromfile">D3DX11CreateTextureFromFile</a>. For a 32 x 32 texture with a full mipmap chain, the <i>pInitialData</i> array has the following 6 elements:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture2d#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D**)">
            <summary>Create a single 3D texture.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a> structure that describes a 3D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture3d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 3D texture resource. Applications cannot specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created. If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read. You can determine the size of this array from the value in the <b>MipLevels</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a> structure to which <i>pDesc</i> points. Arrays of 3D volume textures are not supported. For more information about this array size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture3d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppTexture3D">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture3d">ID3D11Texture3D</a>**</b> A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture3d">ID3D11Texture3D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture3d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para><b>CreateTexture3D</b> creates a 3D texture resource, which can contain a number of 3D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels. All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures pointed to by <i>pInitialData</i>, or they can use one of the D3DX texture functions such as <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3dx11createtexturefromfile">D3DX11CreateTextureFromFile</a>. Each element of <i>pInitialData</i> provides all of the slices that are defined for a given miplevel. For example, for a 32 x 32 x 4 volume texture with a full mipmap chain, the array has the following 6 elements: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture3d#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Create a shader-resource view for accessing data in a resource. (ID3D11Device.CreateShaderResourceView)</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to the resource that will serve as input to a shader. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_SHADER_RESOURCE </a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>*</b> Pointer to a shader-resource view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>). Set this parameter to <b>NULL</b> to create a view that accesses the entire resource (using the format the resource was created with).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSRView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>A resource is made up of one or more subresources; a view identifies which subresources to allow the pipeline to access. In addition, each resource is bound to the pipeline using a view. A shader-resource view is designed to bind any buffer or texture resource to the shader stages using the following API methods: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources">ID3D11DeviceContext::VSSetShaderResources</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources">ID3D11DeviceContext::GSSetShaderResources</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources">ID3D11DeviceContext::PSSetShaderResources</a>.</para>
            <para>Because a view is fully typed, this means that typeless resources become fully typed when bound to the pipeline. <div class="alert"><b>Note</b>  To successfully create a shader-resource view from a typeless buffer (for example, <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_R32G32B32A32_TYPELESS</a>), you must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS</a> flag when you create the buffer. </div> <div> </div> The Direct3D 11.1 runtime, which is available starting with Windows 8, allows you to use <b>CreateShaderResourceView</b> for the following new purpose.</para>
            <para>You can create shader-resource views of video resources so that Direct3D shaders can process those shader-resource views. These video resources are either <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2d">Texture2D</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a>. The value in the <b>ViewDimension</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure for a created shader-resource view must match the type of video resource, D3D11_SRV_DIMENSION_TEXTURE2D          for Texture2D and D3D11_SRV_DIMENSION_TEXTURE2DARRAY for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> reference page specify the format values that views are restricted to.</para>
            <para>The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)">
            <summary>Creates a view for accessing an unordered access resource. (ID3D11Device.CreateUnorderedAccessView)</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a resources that will serve as an input to a shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>*</b> Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a> that represents a shader-resource view description. Set this parameter to <b>NULL</b> to create a view that accesses the entire resource (using the format the resource was created with).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUAView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> that represents an unordered-access view. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, allows you to use <b>CreateUnorderedAccessView</b> for the following new purpose. You can create unordered-access views of video resources so that Direct3D shaders can process those unordered-access views. These video resources are either <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2d">Texture2D</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a>. The value in the <b>ViewDimension</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a> structure for a created unordered-access view must match the type of video resource, D3D11_UAV_DIMENSION_TEXTURE2D          for Texture2D and D3D11_UAV_DIMENSION_TEXTURE2DARRAY for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> reference page specify the format values that views are restricted to. The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createunorderedaccessview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**)">
            <summary>Creates a render-target view for accessing resource data. (ID3D11Device.CreateRenderTargetView)</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a render target. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a> that represents a render-target view description. Set this parameter to <b>NULL</b> to create a view that accesses all of the subresources in mipmap level 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRTView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>A render-target view can be bound to the output-merger stage by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets">ID3D11DeviceContext::OMSetRenderTargets</a>. The Direct3D 11.1 runtime, which is available starting with Windows 8, allows you to use <b>CreateRenderTargetView</b> for the following new purpose. You can create render-target views of video resources so that Direct3D shaders can process those render-target views. These video resources are either <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2d">Texture2D</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a>. The value in the <b>ViewDimension</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a> structure for a created render-target view must match the type of video resource, D3D11_RTV_DIMENSION_TEXTURE2D          for Texture2D and D3D11_RTV_DIMENSION_TEXTURE2DARRAY for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> reference page specify the format values that views are restricted to. The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrendertargetview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView**)">
            <summary>Create a depth-stencil view for accessing resource data. (ID3D11Device.CreateDepthStencilView)</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to the resource that will serve as the depth-stencil surface. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_DEPTH_STENCIL</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>*</b> Pointer to a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>). Set this parameter to <b>NULL</b> to create a view that accesses mipmap level 0 of the entire resource (using the format the resource was created with).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>A depth-stencil view can be bound to the output-merger stage by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets">ID3D11DeviceContext::OMSetRenderTargets</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateInputLayout(System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC},System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateInputLayout(Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*,System.UInt32,System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateInputLayout(Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*,System.UInt32,System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout**)">
            <summary>Create an input-layout object to describe the input-buffer data for the input-assembler stage. (ID3D11Device.CreateInputLayout)</summary>
            <param name="pInputElementDescs">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_input_element_desc">D3D11_INPUT_ELEMENT_DESC</a>*</b> An array of the input-assembler stage input data types; each type is described by an element description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_input_element_desc">D3D11_INPUT_ELEMENT_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumElements">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of input-data types in the array of input-elements.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pShaderBytecodeWithInputSignature">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.  The compiled shader code contains a input signature which is validated against the array of elements. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppInputLayout">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>**</b> A pointer to the input-layout object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>). To validate the other input parameters, set this pointer to be <b>NULL</b> and verify that the method returns S_FALSE.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para>After creating an input layout object, it must be bound to the input-assembler stage before calling a draw API. Once an input-layout object is created from a shader signature, the input-layout object can be reused with any other shader that has an identical input signature (semantics included). This can simplify the creation of input-layout objects when you are working with many shaders with identical inputs. If a data type in the input-layout declaration does not match the data type in a shader-input signature, CreateInputLayout will generate a warning during compilation. The warning is simply to call attention to the fact that the data may be reinterpreted when read from a register. You may either disregard this warning (if reinterpretation is intentional) or make the data types match in both declarations to eliminate the warning.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createinputlayout#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateVertexShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader**)">
            <summary>Create a vertex-shader object from a compiled shader. (ID3D11Device.CreateVertexShader)</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled vertex shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppVertexShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return <b>S_FALSE</b> instead of <b>S_OK</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, provides the following new functionality for <b>CreateVertexShader</b>. The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages. Therefore, if you use the following shader model 5.0 instructions in a vertex shader, you can successfully pass the compiled vertex shader to <i>pShaderBytecode</i>. That is, the call to <b>CreateVertexShader</b> succeeds. If you pass a compiled shader to <i>pShaderBytecode</i> that uses any of the following instructions on a device that doesn’t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <b>CreateVertexShader</b> fails.  <b>CreateVertexShader</b> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createvertexshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateGeometryShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader**)">
            <summary>Create a geometry shader. (ID3D11Device.CreateGeometryShader)</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled geometry shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppGeometryShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>After it is created, the shader can be set to the device by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshader">ID3D11DeviceContext::GSSetShader</a>. The Direct3D 11.1 runtime, which is available starting with Windows 8, provides the following new functionality for <b>CreateGeometryShader</b>. The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages. Therefore, if you use the following shader model 5.0 instructions in a geometry shader, you can successfully pass the compiled geometry shader to <i>pShaderBytecode</i>. That is, the call to <b>CreateGeometryShader</b> succeeds. If you pass a compiled shader to <i>pShaderBytecode</i> that uses any of the following instructions on a device that doesn’t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <b>CreateGeometryShader</b> fails.  <b>CreateGeometryShader</b> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateGeometryShaderWithStreamOutput(System.Void*,System.UIntPtr,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY},System.ReadOnlySpan{System.UInt32},System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateGeometryShaderWithStreamOutput(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*,System.UInt32,System.UInt32*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateGeometryShaderWithStreamOutput(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*,System.UInt32,System.UInt32*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader**)">
            <summary>Creates a geometry shader that can write to streaming output buffers. (ID3D11Device.CreateGeometryShaderWithStreamOutput)</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled geometry shader for a standard geometry shader plus stream output. For info on how to get this pointer, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-using-shaders-10">Getting a Pointer to a Compiled Shader</a>. To create the stream output without using a geometry shader, pass a pointer to the output signature for the prior stage. To obtain this output signature, call the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dgetoutputsignatureblob">D3DGetOutputSignatureBlob</a> compiler function. You can also pass a pointer to the compiled shader for the prior stage (for example, the <a href="https://docs.microsoft.com/previous-versions/bb205146(v=vs.85)">vertex-shader stage</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-tessellation">domain-shader stage</a>). This compiled shader provides the output signature for the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled geometry shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSODeclaration">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_so_declaration_entry">D3D11_SO_DECLARATION_ENTRY</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_so_declaration_entry">D3D11_SO_DECLARATION_ENTRY</a> array. Cannot be <b>NULL</b> if NumEntries &gt; 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumEntries">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of entries in the stream output declaration ( ranges from 0 to D3D11_SO_STREAM_COUNT * D3D11_SO_OUTPUT_COMPONENT_COUNT ).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBufferStrides">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of buffer strides; each stride is the size of an element for that buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumStrides">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of strides (or buffers) in <i>pBufferStrides</i> (ranges from 0 to D3D11_SO_BUFFER_SLOT_COUNT).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="RasterizedStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index number of the stream to be sent to the rasterizer stage (ranges from 0 to D3D11_SO_STREAM_COUNT - 1). Set to D3D11_SO_NO_RASTERIZED_STREAM if no stream is to be rasterized.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppGeometryShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a> interface, representing the geometry shader that was created. Set this to <b>NULL</b> to validate the other parameters; if validation passes, the method will return S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>For more info about using <b>CreateGeometryShaderWithStreamOutput</b>, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-stream-stage-getting-started">Create a Geometry-Shader Object with Stream Output</a>.</para>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, provides the following new functionality for <b>CreateGeometryShaderWithStreamOutput</b>.</para>
            <para>The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages. Therefore, if you use the following shader model 5.0 instructions in a geometry shader, you can successfully pass the compiled geometry shader to <i>pShaderBytecode</i>. That is, the call to <b>CreateGeometryShaderWithStreamOutput</b> succeeds.</para>
            <para>If you pass a compiled shader to <i>pShaderBytecode</i> that uses any of the following instructions on a device that doesn’t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <b>CreateGeometryShaderWithStreamOutput</b> fails.  <b>CreateGeometryShaderWithStreamOutput</b> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreatePixelShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader**)">
            <summary>Create a pixel shader. (ID3D11Device.CreatePixelShader)</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled pixel shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPixelShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>After creating the pixel shader, you can set it to the device using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshader">ID3D11DeviceContext::PSSetShader</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateHullShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11HullShader**)">
            <summary>Create a hull shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to a compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppHullShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, provides the following new functionality for <b>CreateHullShader</b>. The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages. Therefore, if you use the following shader model 5.0 instructions in a hull shader, you can successfully pass the compiled hull shader to <i>pShaderBytecode</i>. That is, the call to <b>CreateHullShader</b> succeeds. If you pass a compiled shader to <i>pShaderBytecode</i> that uses any of the following instructions on a device that doesn’t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <b>CreateHullShader</b> fails.  <b>CreateHullShader</b> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createhullshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDomainShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader**)">
            <summary>Create a domain shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to a compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDomainShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return <b>S_FALSE</b> instead of <b>S_OK</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, provides the following new functionality for <b>CreateDomainShader</b>. The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages. Therefore, if you use the following shader model 5.0 instructions in a domain shader, you can successfully pass the compiled domain shader to <i>pShaderBytecode</i>. That is, the call to <b>CreateDomainShader</b> succeeds. If you pass a compiled shader to <i>pShaderBytecode</i> that uses any of the following instructions on a device that doesn’t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <b>CreateDomainShader</b> fails.  <b>CreateDomainShader</b> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdomainshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateComputeShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader**)">
            <summary>Create a compute shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to a compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader in <i>pShaderBytecode</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>, which represents  class linkage interface; the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppComputeShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated; if validation passes, CreateComputeShader returns S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>For an example, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-compute-create">How To: Create a Compute Shader</a> and <a href="https://msdn.microsoft.com/library/Ee416569(v=VS.85).aspx">HDRToneMappingCS11 Sample</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateClassLinkage(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage**)">
            <summary>Creates class linkage libraries to enable dynamic shader linkage.</summary>
            <param name="ppLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>**</b> A pointer to a class-linkage interface pointer (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createclasslinkage#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a> interface returned in <i>ppLinkage</i> is associated with a shader by passing it as a parameter to one of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> create shader methods such as <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createpixelshader">ID3D11Device::CreatePixelShader</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBlendState(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBlendState(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBlendState(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**)">
            <summary>Create a blend-state object that encapsulates blend state for the output-merger stage. (ID3D11Device.CreateBlendState)</summary>
            <param name="pBlendStateDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a>*</b> Pointer to a blend-state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppBlendState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>**</b> Address of a pointer to the blend-state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the blend-state object. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para>An application can create up to 4096 unique blend-state objects. For each object created, the runtime checks to see if a previous object has the same state. If such a previous object exists, the runtime will return a pointer to previous instance instead of creating a duplicate object.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createblendstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState**)">
            <summary>Create a depth-stencil state object that encapsulates depth-stencil test information for the output-merger stage. (ID3D11Device.CreateDepthStencilState)</summary>
            <param name="pDepthStencilDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>*</b> Pointer to a depth-stencil state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>**</b> Address of a pointer to the depth-stencil state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>4096 unique depth-stencil state objects can be created on a device at a time. If an application attempts to create a depth-stencil-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique depth-stencil state objects will stay the same.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState**)">
            <summary>Create a rasterizer state object that tells the rasterizer stage how to behave. (ID3D11Device.CreateRasterizerState)</summary>
            <param name="pRasterizerDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>*</b> Pointer to a rasterizer state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRasterizerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>**</b> Address of a pointer to the rasterizer state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader.  See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para>4096 unique rasterizer state objects can be created on a device at a time. If an application attempts to create a rasterizer-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique rasterizer state objects will stay the same.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Create a sampler-state object that encapsulates sampling information for a texture. (ID3D11Device.CreateSamplerState)</summary>
            <param name="pSamplerDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>*</b> Pointer to a sampler state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createsamplerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Address of a pointer to the sampler state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createsamplerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>4096 unique sampler state objects can be created on a device at a time. If an application attempts to create a sampler-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique sampler state objects will stay the same.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createsamplerstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateQuery(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Query**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateQuery(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Query**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateQuery(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Query**)">
            <summary>This interface encapsulates methods for querying information from the GPU. (ID3D11Device.CreateQuery)</summary>
            <param name="pQueryDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>*</b> Pointer to a query description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppQuery">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11query">ID3D11Query</a>**</b> Address of a pointer to the query object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11query">ID3D11Query</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the query object. See <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createquery">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreatePredicate(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreatePredicate(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreatePredicate(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate**)">
            <summary>Creates a predicate. (ID3D11Device.CreatePredicate)</summary>
            <param name="pPredicateDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>*</b> Pointer to a query description where the type of query must be a D3D11_QUERY_SO_OVERFLOW_PREDICATE or D3D11_QUERY_OCCLUSION_PREDICATE (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createpredicate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPredicate">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>**</b> Address of a pointer to a predicate (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createpredicate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createpredicate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Counter**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Counter**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Counter**)">
            <summary>Create a counter object for measuring GPU performance. (ID3D11Device.CreateCounter)</summary>
            <param name="pCounterDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>*</b> Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCounter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11counter">ID3D11Counter</a>**</b> Address of a pointer to a counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11counter">ID3D11Counter</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If this function succeeds, it will return S_OK. If it fails, possible return values are: S_FALSE, E_OUTOFMEMORY, DXGI_ERROR_UNSUPPORTED, DXGI_ERROR_NONEXCLUSIVE, or E_INVALIDARG. DXGI_ERROR_UNSUPPORTED is returned whenever the application requests to create a well-known counter, but the current device does not support it. DXGI_ERROR_NONEXCLUSIVE indicates that another device object is currently using the counters, so they cannot be used by this device at the moment. E_INVALIDARG is returned whenever an out-of-range well-known or device-dependent counter is requested, or when the simulataneously active counters have been exhausted.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createcounter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDeferredContext(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext**)">
            <summary>Creates a deferred context, which can record command lists. (ID3D11Device.CreateDeferredContext)</summary>
            <param name="ContextFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Reserved for future use. Pass 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdeferredcontext#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDeferredContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>**</b> Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> interface pointer is initialized.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdeferredcontext#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the following:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>A deferred context is a thread-safe context that you can use to record graphics commands on a thread other than the main rendering thread. Using a deferred context, you can record graphics commands into a command list that is encapsulated by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a> interface. After all scene items are recorded, you can then submit them to the main render thread for final rendering. In this manner, you can perform rendering tasks concurrently across multiple threads and potentially improve performance in multi-core CPU scenarios.</para>
            <para>You can create multiple deferred contexts.</para>
            <para><div class="alert"><b>Note</b>  If you use the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_SINGLETHREADED</a> value to create the device that is represented by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, the <b>CreateDeferredContext</b> method will fail, and you will not be able to create a deferred context. </div> <div> </div> For more information about deferred contexts, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-render-multi-thread-render">Immediate and Deferred Rendering</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createdeferredcontext#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.OpenSharedResource(System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Void**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.OpenSharedResource(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.OpenSharedResource(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**)">
            <summary>Give a device access to a shared resource created on a different device.</summary>
            <param name="hResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HANDLE</a></b> A resource handle. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-opensharedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ReturnedInterface">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) for the resource interface. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-opensharedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppResource">
            <para>Type: <b>void**</b> Address of a pointer to the resource we are gaining access to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-opensharedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The REFIID, or GUID, of the interface to the resource can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D11Buffer) will get the GUID of the interface to a buffer resource. The unique handle of the resource is obtained differently depending on the type of device that originally created the resource. To share a resource between two Direct3D 11 devices the resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_SHARED</a> flag, if it was created using the ID3D11Device interface. If it was created using a DXGI device interface, then the resource is always shared. The REFIID, or GUID, of the interface to the resource can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D11Buffer) will get the GUID of the interface to a buffer resource. When sharing a resource between two Direct3D 10/11 devices the unique handle of the resource can be obtained by querying the resource for the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiresource">IDXGIResource</a> interface and then calling <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiresource-getsharedhandle">GetSharedHandle</a>.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-opensharedresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckFormatSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckFormatSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckFormatSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32*)">
            <summary>Get the support of a given format on the installed video device. (ID3D11Device.CheckFormatSupport)</summary>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> enumeration that describes a format for which to check for support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkformatsupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFormatSupport">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A bitfield of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_format_support">D3D11_FORMAT_SUPPORT</a> enumeration values describing how the specified format is supported on the installed device. The values are ORed together.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkformatsupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns E_INVALIDARG if the <i>Format</i> parameter is <b>NULL</b>, or returns E_FAIL if the described format does not exist.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkformatsupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*)">
            <summary>Get the number of quality levels available during multisampling. (ID3D11Device.CheckMultisampleQualityLevels)</summary>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The texture format. See <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SampleCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT</a></b> The number of samples during multisampling.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumQualityLevels">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT</a>*</b> Number of quality levels supported by the adapter. See **Remarks**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/win32/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>When multisampling a texture, the number of quality levels available for an adapter is dependent on the texture format used and the number of samples requested. The maximum number of quality levels is defined by **D3D11_MAX_MULTISAMPLE_SAMPLE_COUNT** in `D3D11.h`. If this method returns 0 (S_OK), and the output parameter `pNumQualityLevels` receives a positive value, then the format and sample count combination is supported for the device. When the combination is not supported, this method returns a failure **HRESULT** code (that is, a negative integer), or sets `pNumQualityLevels` output parameter to zero, or both. Furthermore, the definition of a quality level is left to each hardware vendor to define; however no facility is provided by Direct3D to help discover this information. Note that FEATURE_LEVEL_10_1 devices are required to support 4x MSAA for all render targets except R32G32B32A32 and R32G32B32. FEATURE_LEVEL_11_0 devices are required to support 4x MSAA for all render target formats, and 8x MSAA for all render target formats except R32G32B32A32 formats.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*)">
            <summary>Get a counter's information. (ID3D11Device.CheckCounterInfo)</summary>
            <param name="pCounterInfo">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_info">D3D11_COUNTER_INFO</a>*</b> Pointer to counter information (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_info">D3D11_COUNTER_INFO</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounterinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounterinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE@,System.UInt32@,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)">
            <summary>Get the type, name, units of measure, and a description of an existing counter. (ID3D11Device.CheckCounter)</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>*</b> Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>). Specifies which counter information is to be retrieved about.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter_type">D3D11_COUNTER_TYPE</a>*</b> Pointer to the data type of a counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter_type">D3D11_COUNTER_TYPE</a>). Specifies the data type of the counter being retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pActiveCounters">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="szName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> String to be filled with a brief name for the counter. May be <b>NULL</b> if the application is not interested in the name of the counter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNameLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Length of the string returned to szName. Can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="szUnits">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> Name of the units a counter measures, provided the memory the pointer points to has enough room to hold the string. Can be <b>NULL</b>. The returned string will always be in English.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUnitsLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Length of the string returned to szUnits. Can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="szDescription">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> A description of the counter, provided the memory the pointer points to has enough room to hold the string. Can be <b>NULL</b>. The returned string will always be in English.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDescriptionLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Length of the string returned to szDescription. Can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>Length parameters can be <b>NULL</b>, which indicates the application is not interested in the length nor the corresponding string value. When a length parameter is non-<b>NULL</b> and the corresponding string is <b>NULL</b>, the input value of the length parameter is ignored, and the length of the corresponding string (including terminating <b>NULL</b>) will be returned through the length parameter. When length and the corresponding parameter are both non-<b>NULL</b>, the input value of length is checked to ensure there is enough room, and then the length of the string (including terminating <b>NULL</b> character) is passed out through the length parameter.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkcounter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckFeatureSupport(Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE,System.Void*,System.UInt32)">
            <summary>Gets information about the features that are supported by the current graphics driver. (ID3D11Device.CheckFeatureSupport)</summary>
            <param name="Feature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE</a> enumerated type that describes which feature to query for support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureSupportData">
            <para>Type: <b>void*</b> Upon completion of the method, the passed structure is filled with data that describes the feature support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FeatureSupportDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of the structure passed to the <i>pFeatureSupportData</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns E_INVALIDARG if an unsupported data type is passed to the <i>pFeatureSupportData</i> parameter or a size mismatch is detected for the <i>FeatureSupportDataSize</i> parameter.</para>
            </returns>
            <remarks>
            <para>To query for multi-threading support, pass the <b>D3D11_FEATURE_THREADING</b> value to the <i>Feature</i> parameter, pass the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_threading">D3D11_FEATURE_DATA_THREADING</a> structure to the  <i>pFeatureSupportData</i> parameter, and pass the size of the <b>D3D11_FEATURE_DATA_THREADING</b> structure to the <i>FeatureSupportDataSize</i> parameter. Calling CheckFeatureSupport with <i>Feature</i> set to D3D11_FEATURE_FORMAT_SUPPORT causes the method to return the same information that would be returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkformatsupport">ID3D11Device::CheckFormatSupport</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)">
            <summary>Get application-defined data from a device.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that <b>GetPrivateData</b> retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> A pointer to a buffer that <b>GetPrivateData</b>  fills with data from the device if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the codes described in the topic <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>If the data returned is a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>, or one of its derivative classes, which was previously set by SetPrivateDataInterface, that interface will have its reference count incremented before the private data is returned.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateData(System.Guid*,System.UInt32,System.Void*)">
            <summary>Set data to a device and associate that data with a guid. (ID3D11Device.SetPrivateData)</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> Pointer to the data to be stored with this device. If pData is <b>NULL</b>, DataSize must also be 0, and any data previously associated with the guid will be destroyed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The data stored in the device with this method can be retrieved with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-getprivatedata">ID3D11Device::GetPrivateData</a>. The data and guid set with this method will typically be application-defined. The <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> reports memory leaks by outputting a list of object interface pointers along with their friendly names. The default friendly name is "&lt;unnamed&gt;". You can set the friendly name so that you can determine if the corresponding object interface pointer caused the leak. To set the friendly name, use the <b>SetPrivateData</b> method and the <b>WKPDID_D3DDebugObjectName</b> GUID that is in D3Dcommon.h. For example, to give pContext a friendly name of <i>My name</i>, use the following code:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setprivatedata#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)">
            <summary>Associate an IUnknown-derived interface with this device child and associate that interface with an application-defined guid. (ID3D11Device.SetPrivateDataInterface)</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const IUnknown*</b> Pointer to an IUnknown-derived interface to be associated with the device child.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setprivatedatainterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetFeatureLevel">
            <summary>Gets the feature level of the hardware device. (ID3D11Device.GetFeatureLevel)</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a> enumerated type that describes the feature level of the hardware device.</para>
            </returns>
            <remarks><a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">Feature levels</a> determine the capabilities of your device.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetCreationFlags">
            <summary>Get the flags used during the call to create the device with D3D11CreateDevice.</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A bitfield containing the flags used to create the device. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-getcreationflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetDeviceRemovedReason">
            <summary>Get the reason why the device was removed. (ID3D11Device.GetDeviceRemovedReason)</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Possible return values include:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-getdeviceremovedreason">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetImmediateContext(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext**)">
            <summary>Gets an immediate context, which can play back command lists. (ID3D11Device.GetImmediateContext)</summary>
            <param name="ppImmediateContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>**</b> Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> interface pointer is initialized.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-getimmediatecontext#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The <b>GetImmediateContext</b> method returns an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> object that represents an immediate context which is used to perform rendering that you want immediately submitted to a device. For most applications, an immediate context is the primary object that is used to draw your scene. The <b>GetImmediateContext</b> method increments the reference count of the immediate context by one. Therefore, you must call <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-release">Release</a> on the returned interface pointer when you are done with it to avoid a memory leak.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-getimmediatecontext#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetExceptionMode(System.UInt32)">
            <summary>Get the exception-mode flags. (ID3D11Device.SetExceptionMode)</summary>
            <param name="RaiseFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_raise_flag">D3D11_RAISE_FLAG</a>. A default value of 0 means there are no flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setexceptionmode#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>Set an exception-mode flag to elevate an error condition to a non-continuable exception. Whenever an error occurs, a Direct3D device enters the DEVICEREMOVED state and if the appropriate exception flag has been set, an exception is raised. A raised exception is designed to terminate an application. Before termination, the last chance an application has to persist data is by using an UnhandledExceptionFilter (see <a href="https://docs.microsoft.com/windows/desktop/Debug/structured-exception-handling">Structured Exception Handling</a>). In general, UnhandledExceptionFilters are leveraged to try to persist data when an application is crashing (to disk, for example). Any code that executes during an UnhandledExceptionFilter is not guaranteed to reliably execute (due to possible process corruption). Any data that the UnhandledExceptionFilter manages to persist, before the UnhandledExceptionFilter crashes again, should be treated as suspect, and therefore inspected by a new, non-corrupted process to see if it is usable.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-setexceptionmode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetExceptionMode">
            <summary>Get the exception-mode flags. (ID3D11Device.GetExceptionMode)</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_raise_flag">D3D11_RAISE_FLAG</a>. A default value of 0 means there are no flags.</para>
            </returns>
            <remarks>An exception-mode flag is used to elevate an error condition to a non-continuable exception.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Device.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{db6f6ddb-ac77-4e88-8253-819df9bbf140}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.GetDevice(Windows.Win32.Graphics.Direct3D11.ID3D11Device**)">
            <summary>Get a pointer to the device that created this interface. (ID3D11DeviceChild.GetDevice)</summary>
            <param name="ppDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>**</b> Address of a pointer to a device (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-getdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one, so be sure to call ::release() on the returned pointer(s) before they are freed or else you will have a memory leak.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)">
            <summary>Get application-defined data from a device child. (ID3D11DeviceChild.GetPrivateData)</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that <b>GetPrivateData</b> retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> A pointer to a buffer that <b>GetPrivateData</b> fills with data from the device child if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The data stored in the device child is set by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicechild-setprivatedata">ID3D11DeviceChild::SetPrivateData</a>. If the data returned is a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>, or one of its derivative classes, which was previously set by SetPrivateDataInterface, that interface will have its reference count incremented before the private data is returned. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-getprivatedata#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateData(System.Guid*,System.UInt32,System.Void*)">
            <summary>Set application-defined data to a device child and associate that data with an application-defined guid. (ID3D11DeviceChild.SetPrivateData)</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> Pointer to the data to be stored with this device child. If pData is <b>NULL</b>, DataSize must also be 0, and any data previously associated with the specified guid will be destroyed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para>The data stored in the device child with this method can be retrieved with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicechild-getprivatedata">ID3D11DeviceChild::GetPrivateData</a>. The <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> reports memory leaks by outputting a list of object interface pointers along with their friendly names. The default friendly name is "&lt;unnamed&gt;". You can set the friendly name so that you can determine if the corresponding object interface pointer caused the leak. To set the friendly name, use the <b>SetPrivateData</b> method and the <b>WKPDID_D3DDebugObjectName</b> GUID that is in D3Dcommon.h. For example, to give pContext a friendly name of <i>My name</i>, use the following code:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-setprivatedata#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)">
            <summary>Associate an IUnknown-derived interface with this device child and associate that interface with an application-defined guid. (ID3D11DeviceChild.SetPrivateDataInterface)</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const IUnknown*</b> Pointer to an IUnknown-derived interface to be associated with the device child.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicechild-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>When this method is called ::addref() will be called on the IUnknown-derived interface, and when the device child is destroyed ::release() will be called on the IUnknown-derived interface.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{1841e5c8-16b0-489b-bcc8-44cfb0d5deae}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Sets the constant buffers used by the vertex shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4\*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4\*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.</para>
            <para>If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-vssetconstantbuffers1">VSSetConstantBuffers1</a> method instead.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Bind an array of shader resources to the pixel shader stage. (ID3D11DeviceContext.PSSetShaderResources)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader*,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32)">
            <summary>Sets a pixel shader to the device. (ID3D11DeviceContext.PSSetShader)</summary>
            <param name="pPixelShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>*</b> Pointer to a pixel shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The maximum number of instances a shader can have is 256. Set ppClassInstances to <b>NULL</b> if no interfaces are used in the shader. If it is not <b>NULL</b>, the number of class instances must match the number of interfaces used in the shader. Furthermore, each interface pointer must have a corresponding class instance or the assigned shader will be disabled.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Set an array of sampler states to the pixel shader pipeline stage. (ID3D11DeviceContext.PSSetSamplers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader*,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32)">
            <summary>Set a vertex shader to the device. (ID3D11DeviceContext.VSSetShader)</summary>
            <param name="pVertexShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>*</b> Pointer to a vertex shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawIndexed(System.UInt32,System.UInt32,System.Int32)">
            <summary>Draw indexed, non-instanced primitives. (ID3D11DeviceContext.DrawIndexed)</summary>
            <param name="IndexCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of indices to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexed#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartIndexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The location of the first index read by the GPU from the index buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexed#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a></b> A value added to each index before reading a vertex from the vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexed#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. If the sum of both indices is negative, the result of the function call is undefined.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexed#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Draw(System.UInt32,System.UInt32)">
            <summary>Draw non-indexed, non-instanced primitives. (ID3D11DeviceContext.Draw)</summary>
            <param name="VertexCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of vertices to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-draw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first vertex, which is usually an offset in a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-draw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Draw</b> submits work to the rendering pipeline. The vertex data for a draw call normally comes from a vertex buffer that is bound to the pipeline. Even without any vertex buffer bound to the pipeline, you can generate your own vertex data in your vertex shader by using the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">SV_VertexID</a> system-value semantic to determine the current vertex that the runtime is processing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-draw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Map(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_MAP,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE*)" -->
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Unmap(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32)">
            <summary>Invalidate the pointer to a resource and reenable the GPU's access to that resource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-unmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Subresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A subresource to be unmapped.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-unmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For info about how to use <b>Unmap</b>, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/how-to--use-dynamic-resources">How to: Use dynamic resources</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-unmap#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Sets the constant buffers used by the pixel shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The Direct3D 11.1 runtime, which is available on Windows 8 and later operating systems, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each). When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.</para>
            <para>To enable the shader to access other parts of the buffer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-pssetconstantbuffers1">PSSetConstantBuffers1</a> instead of <b>PSSetConstantBuffers</b>. <b>PSSetConstantBuffers1</b> has additional parameters <i>pFirstConstant</i> and <i>pNumConstants</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetInputLayout(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout*)">
            <summary>Bind an input-layout object to the input-assembler stage. (ID3D11DeviceContext.IASetInputLayout)</summary>
            <param name="pInputLayout">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>*</b> A pointer to the input-layout object (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>), which describes the input buffers that will be read by the IA stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Input-layout objects describe how vertex buffer data is streamed into the IA pipeline stage. To create an input-layout object, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createinputlayout">ID3D11Device::CreateInputLayout</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetinputlayout#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetVertexBuffers(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*,System.UInt32*)">
            <summary>Bind an array of vertex buffers to the input-assembler stage. (ID3D11DeviceContext.IASetVertexBuffers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1) are available; the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">maximum number of input slots depends on the feature level</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of vertex buffers in the array. The number of buffers (plus the starting slot) can't exceed the total number of IA-stage input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppVertexBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an array of vertex buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>). The vertex buffers must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_VERTEX_BUFFER</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pStrides">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of stride values; one stride value for each buffer in the vertex-buffer array. Each stride is the size (in bytes) of the elements that are to be used from that vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOffsets">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of offset values; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For info about creating vertex buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-buffers-vertex-how-to">How to: Create a Vertex Buffer</a>.</para>
            <para>Calling this method using a buffer that is currently bound for writing (that is, bound to the stream output pipeline stage) will effectively bind <b>NULL</b> instead because a buffer can't be bound as both an input and an output at the same time.</para>
            <para>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer*,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32)">
            <summary>Bind an index buffer to the input-assembler stage. (ID3D11DeviceContext.IASetIndexBuffer)</summary>
            <param name="pIndexBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> object, that contains indices. The index buffer must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_INDEX_BUFFER</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> that specifies the format of the data in the index buffer. The only formats allowed for index buffer data are 16-bit (DXGI_FORMAT_R16_UINT) and 32-bit (DXGI_FORMAT_R32_UINT) integers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Offset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Offset (in bytes) from the start of the index buffer to the first index to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For information about creating index buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-buffers-index-how-to">How to: Create an Index Buffer</a>.</para>
            <para>Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind <b>NULL</b> instead because a buffer cannot be bound as both an input and an output at the same time.</para>
            <para>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</para>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawIndexedInstanced(System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>Draw indexed, instanced primitives. (ID3D11DeviceContext.DrawIndexedInstanced)</summary>
            <param name="IndexCountPerInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> Number of indices read from the index buffer for each instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> Number of instances to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartIndexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> The location of the first index read by the GPU from the index buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">INT</a></b> A value added to each index before reading a vertex from the vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartInstanceLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> A value added to each index before reading per-instance data from a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be to draw the same object with different positions and colors. Instancing requires multiple vertex buffers: at least one for per-vertex data and a second buffer for per-instance data. The second buffer is needed only if the input layout that you use has elements that use [D3D11_INPUT_PER_INSTANCE_DATA](./ne-d3d11-d3d11_input_classification.md) as the input element classification buffer for per-instance data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawInstanced(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>Draw non-indexed, instanced primitives. (ID3D11DeviceContext.DrawInstanced)</summary>
            <param name="VertexCountPerInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of vertices to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of instances to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first vertex.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartInstanceLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value added to each index before reading per-instance data from a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be to draw the same object with different positions and colors. The vertex data for an instanced draw call normally comes from a vertex buffer that is bound to the pipeline. However, you could also provide the vertex data from a shader that has instanced data identified with a system-value semantic (SV_InstanceID).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Sets the constant buffers used by the geometry shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. You can't use the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflectionconstantbuffer">ID3D11ShaderReflectionConstantBuffer</a> interface to get information about what is currently bound to the pipeline in the device context. But you can use <b>ID3D11ShaderReflectionConstantBuffer</b> to get information from a compiled shader. For example, you can use <b>ID3D11ShaderReflectionConstantBuffer</b> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflectionvariable">ID3D11ShaderReflectionVariable</a> to determine the slot in which a geometry shader expects a constant buffer. You can then pass this slot number to <b>GSSetConstantBuffers</b> to set the constant buffer. You can call the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d11reflect">D3D11Reflect</a> function to retrieve the address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflection">ID3D11ShaderReflection</a> interface and then call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nf-d3d11shader-id3d11shaderreflection-getconstantbufferbyname">ID3D11ShaderReflection::GetConstantBufferByName</a> to get a pointer to <b>ID3D11ShaderReflectionConstantBuffer</b>. The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer. If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-gssetconstantbuffers1">GSSetConstantBuffers1</a> method instead.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader*,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32)">
            <summary>Set a geometry shader to the device. (ID3D11DeviceContext.GSSetShader)</summary>
            <param name="pShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>*</b> Pointer to a geometry shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY)">
            <summary>Bind information about the primitive type, and data order that describes input data for the input assembler stage. (ID3D11DeviceContext.IASetPrimitiveTopology)</summary>
            <param name="Topology">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a></b> The type of primitive and ordering of the primitive data (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetprimitivetopology#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iasetprimitivetopology#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Bind an array of shader resources to the vertex-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (range is from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (range is from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. In order to unbind resource slots, you must pass an array containing null values. For example, to clear the first 4 slots, use: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Set an array of sampler states to the vertex shader pipeline stage. (ID3D11DeviceContext.VSSetSamplers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Begin(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous*)">
            <summary>Mark the beginning of a series of commands.</summary>
            <param name="pAsync">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-begin#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a> to mark the ending of the series of commands.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.End(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous*)">
            <summary>Mark the end of a series of commands.</summary>
            <param name="pAsync">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-end#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> to mark the beginning of the series of commands.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetData(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous*,System.Void*,System.UInt32,System.UInt32)">
            <summary>Get data from the graphics processing unit (GPU) asynchronously.</summary>
            <param name="pAsync">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface for the object about which <b>GetData</b> retrieves data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> Address of memory that will receive the data. If <b>NULL</b>, <b>GetData</b> will be used only to check status. The type of data output depends on the type of asynchronous interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data to retrieve or 0. Must be 0 when <i>pData</i> is <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="GetDataFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Optional flags. Can be 0 or any combination of the flags enumerated by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_async_getdata_flag">D3D11_ASYNC_GETDATA_FLAG</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>. A return value of S_OK indicates that the data at <i>pData</i> is available for the calling application to access. A return value of S_FALSE indicates that the data is not yet available. If the data is not yet available, the application must call <b>GetData</b> until the data is available.</para>
            </returns>
            <remarks>
            <para>Queries in a deferred context are limited to predicated drawing. That is, you cannot call <b>ID3D11DeviceContext::GetData</b> on a deferred context to get data about a query; you can only call <b>GetData</b> on the immediate context to get data about a query. For predicated drawing, the results of a predication-type query are used by the GPU and not returned to an application. For more information about predication and predicated drawing, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-setpredication">D3D11DeviceContext::SetPredication</a>. <b>GetData</b> retrieves the data that the runtime collected between calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>.  Certain queries only require a call to <b>ID3D11DeviceContext::End</b> in which case the data returned by <b>GetData</b> is accurate up to the last call to <b>ID3D11DeviceContext::End</b>. For information about the queries that only require a call to <b>ID3D11DeviceContext::End</b> and about the type of data that <b>GetData</b> retrieves for each query, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY</a>. If <i>DataSize</i> is 0, <b>GetData</b> is only used to check status. An application gathers counter data by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a>, issuing some graphics commands, calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>, and then calling <b>ID3D11DeviceContext::GetData</b> to get data about what happened in between the <b>Begin</b> and <b>End</b> calls. For information about performance counter types, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getdata#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPredication(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate*,Windows.Win32.Foundation.BOOL)">
            <summary>Set a rendering predicate. (ID3D11DeviceContext.SetPredication)</summary>
            <param name="pPredicate">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a> interface that represents the rendering predicate. A <b>NULL</b> value indicates "no" predication; in this case, the value of <i>PredicateValue</i> is irrelevant but will be preserved for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getpredication">ID3D11DeviceContext::GetPredication</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-setpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="PredicateValue">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> If <b>TRUE</b>, rendering will be affected by when the predicate's conditions are met. If <b>FALSE</b>, rendering will be affected when the conditions are not met.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-setpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The predicate must be in the "issued" or "signaled" state to be used for predication. While the predicate is set for predication, calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a> are invalid. Use this method to denote that subsequent rendering and resource manipulation commands are not actually performed if the resulting predicate data of the predicate is equal to the <i>PredicateValue</i>. However, some predicates are only hints, so they may not actually prevent operations from being performed. The primary usefulness of predication is to allow an application to issue rendering and resource manipulation commands without taking the performance hit of spinning, waiting for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> to return. So, predication can occur while <b>ID3D11DeviceContext::GetData</b> returns <b>S_FALSE</b>. Another way to think of it: an application can also use predication as a fallback, if it is possible that <b>ID3D11DeviceContext::GetData</b> returns <b>S_FALSE</b>. If <b>ID3D11DeviceContext::GetData</b> returns <b>S_OK</b>, the application can skip calling the rendering and resource manipulation commands manually with its own application logic. Rendering and resource manipulation commands for Direct3D 11 include these Draw, Dispatch, Copy, Update, Clear, Generate, and Resolve operations. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-setpredication#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Bind an array of shader resources to the geometry shader stage. (ID3D11DeviceContext.GSSetShaderResources)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Set an array of sampler states to the geometry shader pipeline stage. (ID3D11DeviceContext.GSSetSamplers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView*)">
            <summary>Bind one or more render targets atomically and the depth-stencil buffer to the output-merger stage.</summary>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT</a></b> Number of render targets to bind (ranges between 0 and <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>). If this parameter is nonzero, the number of entries in the array to which <i>ppRenderTargetViews</i> points must equal the number in this parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>*</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a> that represent the render targets to bind to the device. If this parameter is <b>NULL</b> and <i>NumViews</i> is 0, no render targets are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a> that represents the depth-stencil view to bind to the device. If this parameter is <b>NULL</b>, the depth-stencil view is not bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>. It is invalid to try to set the same subresource to multiple render target slots. Any render targets not defined by this call are set to <b>NULL</b>. If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline), those bind points will be set to <b>NULL</b>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. If the render-target views were created from an array resource type, all of the render-target views must have the same array size. This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound. The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/sm5-object-buffer">Buffer</a>, <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/sm5-object-texture1d">Texture1D</a>, <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/sm5-object-texture1darray">Texture1DArray</a>, <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/sm5-object-texture2d">Texture2D</a>, <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a>, <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/sm5-object-texture3d">Texture3D</a>, or <a href="https://docs.microsoft.com/windows/win32/direct3dhlsl/dx-graphics-hlsl-to-type">TextureCube</a>. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts. Any combination of the eight slots for render targets can have a render target set or not set. The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets. Note that unlike some other resource methods in Direct3D, all currently bound render targets will be unbound by calling `OMSetRenderTargets(0, nullptr, nullptr);`.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView*,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.UInt32*)">
            <summary>Binds resources to the output-merger stage.</summary>
            <param name="NumRTVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of render targets to bind (ranges between 0 and <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>). If this parameter is nonzero, the number of entries in the array to which <i>ppRenderTargetViews</i> points must equal the number in this parameter. If you set <i>NumRTVs</i> to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>*</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s that represent the render targets to bind to the device. If this parameter is <b>NULL</b> and <i>NumRTVs</i> is 0, no render targets are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a> that represents the depth-stencil view to bind to the device. If this parameter is <b>NULL</b>, the depth-stencil view is not bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="UAVStartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin setting unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). For the Direct3D 11.1 runtime, which is available starting with Windows 8, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.</para>
            <para>For pixel shaders, <i>UAVStartSlot</i> should be equal to the number of render-target views being bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of unordered-access views (UAVs) in <i>ppUnorderedAccessViews</i>. If you set <i>NumUAVs</i> to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.</para>
            <para>For the Direct3D 11.1 runtime, which is available starting with Windows 8, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - <i>UAVStartSlot</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>s that represent the unordered-access views to bind to the device. If this parameter is <b>NULL</b> and <i>NumUAVs</i> is 0, no unordered-access views are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUAVInitialCounts">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter for that appendable and consumable UAV. <i>pUAVInitialCounts</i> is  relevant only for UAVs that were created with either <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified when the UAV was created; otherwise, the argument is ignored.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For pixel shaders, the render targets and unordered-access views share the same resource slots when being written out. This means that UAVs must be given an offset so that they are placed in the slots after the render target views that are being bound.</para>
            <para><div class="alert"><b>Note</b>  RTVs, DSV, and UAVs cannot be set independently; they all need to be set at the same time.</div> <div> </div> Two RTVs conflict if they share a subresource (and therefore share the same resource). Two UAVs conflict if they share a subresource (and therefore share the same resource). An RTV conflicts with a UAV if they share a subresource or share a bind point. <b>OMSetRenderTargetsAndUnorderedAccessViews</b> operates properly in the following situations:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState*,System.ReadOnlySpan{System.Single},System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState*,System.Single*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState*,System.Single*,System.UInt32)">
            <summary>Set the blend state of the output-merger stage. (ID3D11DeviceContext.OMSetBlendState)</summary>
            <param name="pBlendState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>*</b> Pointer to a blend-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>). Pass <b>NULL</b> for a default blend state. For more info about default blend state, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BlendFactor">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> Array of blend factors, one for each RGBA component. The blend factors modulate values for the pixel shader, render target, or both. If you created  the blend-state object with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND_BLEND_FACTOR</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND_INV_BLEND_FACTOR</a>, the blending stage uses the non-NULL array of blend factors. If you didn't create the blend-state object with <b>D3D11_BLEND_BLEND_FACTOR</b> or <b>D3D11_BLEND_INV_BLEND_FACTOR</b>, the blending stage does not use the non-NULL array of blend factors; the runtime stores the blend factors, and you can later call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate">ID3D11DeviceContext::OMGetBlendState</a> to retrieve the blend factors. If you pass <b>NULL</b>, the runtime uses or stores a blend factor equal to { 1, 1, 1, 1 }.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SampleMask">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> 32-bit sample coverage. The default value is 0xffffffff. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Blend state is used by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> to determine how to blend together two RGB pixel values and two alpha values. The two RGB pixel values and two alpha values are the RGB pixel value and alpha value that the pixel shader outputs and the RGB pixel value and alpha value already in the output render target. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> controls the data source that the blending stage uses to modulate values for the pixel shader, render target, or both. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> controls how the blending stage mathematically combines these modulated values. To create a blend-state interface, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createblendstate">ID3D11Device::CreateBlendState</a>. Passing in <b>NULL</b> for the blend-state interface indicates to the runtime to set a default blending state.  The following table indicates the default blending parameters. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetDepthStencilState(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState*,System.UInt32)">
            <summary>Sets the depth-stencil state of the output-merger stage. (ID3D11DeviceContext.OMSetDepthStencilState)</summary>
            <param name="pDepthStencilState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>*</b> Pointer to a depth-stencil state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>) to bind to the device. Set this to <b>NULL</b> to use the default state listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StencilRef">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Reference value to perform against when doing a depth-stencil test. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>To create a depth-stencil state interface, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate">ID3D11Device::CreateDepthStencilState</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOSetTargets(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOSetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOSetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*)">
            <summary>Set the target output buffers for the stream-output stage of the pipeline.</summary>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/winprog/windows-data-types">UINT</a></b> The number of buffer to bind to the device. A maximum of four output buffers can be set. If less than four are defined by the call, the remaining buffer slots are set to <b>NULL</b>. See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSOTargets">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> The array of output buffers (see <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to bind to the device. The buffers must have been created with the <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_STREAM_OUTPUT</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOffsets">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/win32/winprog/windows-data-types">UINT</a>*</b> Array of offsets to the output buffers from <i>ppSOTargets</i>, one offset for each buffer. The offset values must be in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass. Calling this method using a buffer that is currently bound for writing will effectively bind <b>NULL</b> instead because a buffer cannot be bound as both an input and an output at the same time.</para>
            <para>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. Note that unlike some other resource methods in Direct3D, all currently bound targets will be unbound by calling `SOSetTargets(0, nullptr, nullptr);`. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawAuto">
            <summary>Draw geometry of an unknown size.</summary>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. This API submits work of an unknown size that was processed by the input assembler, vertex shader, and stream-output stages;  the work may or may not have gone through the geometry-shader stage. After data has been streamed out to stream-output stage buffers, those buffers can be again bound to the Input Assembler stage at input slot 0 and DrawAuto will draw them without the application needing to know the amount of data that was written to the buffers. A measurement of the amount of data written to the SO stage buffers is maintained internally when the data is streamed out. This means that the CPU does not need to fetch the measurement before re-binding the data that was streamed as input data. Although this amount is tracked internally, it is still the responsibility of applications to use input layouts to describe the format of the data in the SO stage buffers so that the layouts are available when the buffers are again bound to the input assembler. The following diagram shows the DrawAuto process. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawauto#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawIndexedInstancedIndirect(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer*,System.UInt32)">
            <summary>Draw indexed, instanced, GPU-generated primitives.</summary>
            <param name="pBufferForArgs">
            <para>Type: **[ID3D11Buffer](/windows/win32/api/d3d11/nn-d3d11-id3d11buffer)\*** A pointer to an [ID3D11Buffer](/windows/win32/api/d3d11/nn-d3d11-id3d11buffer), which is a buffer containing the GPU-generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedByteOffsetForArgs">
            <para>Type: **[UINT](/windows/win32/winprog/windows-data-types)** A DWORD-aligned byte offset in <i>pBufferForArgs</i> to the start of the GPU generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>When an application creates a buffer that is associated with the [ID3D11Buffer](/windows/win32/api/d3d11/nn-d3d11-id3d11buffer) interface that *pBufferForArgs* points to, your application must set the [D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS](/windows/win32/api/d3d11/ne-d3d11-d3d11_resource_misc_flag) flag in the *MiscFlags* member of the [D3D11_BUFFER_DESC](/windows/win32/api/d3d11/ns-d3d11-d3d11_buffer_desc) structure that describes the buffer. To create the buffer, your application should call the [ID3D11Device::CreateBuffer](/windows/win32/api/d3d11/nf-d3d11-id3d11device-createbuffer) method, and pass a pointer to a **D3D11_BUFFER_DESC** in the *pDesc* parameter. **Windows Phone 8:** This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstancedindirect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawInstancedIndirect(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer*,System.UInt32)">
            <summary>Draw instanced, GPU-generated primitives.</summary>
            <param name="pBufferForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which is a buffer containing the GPU generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedByteOffsetForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Offset in <i>pBufferForArgs</i> to the start of the GPU generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-drawinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>When an application creates a buffer that is associated with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface that  <i>pBufferForArgs</i> points to, the application must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</a> flag in the <b>MiscFlags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer. To create the buffer, the application calls the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a> method and in this call passes a pointer to <b>D3D11_BUFFER_DESC</b> in the <i>pDesc</i> parameter.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Dispatch(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Execute a command list from a thread group.</summary>
            <param name="ThreadGroupCountX">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the x direction. <i>ThreadGroupCountX</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ThreadGroupCountY">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the y direction. <i>ThreadGroupCountY</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ThreadGroupCountZ">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the z direction.  <i>ThreadGroupCountZ</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535). In feature level 10 the value for <i>ThreadGroupCountZ</i> must be 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You call the <b>Dispatch</b> method to execute commands in a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-compute-shader">compute shader</a>. A compute shader can be run on many threads in parallel, within a thread group. Index a particular thread, within a thread group using a 3D vector given by (x,y,z). In the following illustration, assume a thread group with 50 threads where the size of the group is given by (5,5,2). A single thread is identified from a thread group with 50 threads in it, using the vector (4,1,1). </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DispatchIndirect(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer*,System.UInt32)">
            <summary>Execute a command list over one or more thread groups.</summary>
            <param name="pBufferForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which must be loaded with data that matches the argument list for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch">ID3D11DeviceContext::Dispatch</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dispatchindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedByteOffsetForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A byte-aligned offset between the start of the buffer and the arguments.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dispatchindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You call the <b>DispatchIndirect</b> method to execute commands in a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-compute-shader">compute shader</a>. When an application creates a buffer that is associated with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface that  <i>pBufferForArgs</i> points to, the application must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</a> flag in the <b>MiscFlags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer. To create the buffer, the application calls the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a> method and in this call passes a pointer to <b>D3D11_BUFFER_DESC</b> in the <i>pDesc</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dispatchindirect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetState(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState*)">
            <summary>Set the rasterizer state for the rasterizer stage of the pipeline. (ID3D11DeviceContext.RSSetState)</summary>
            <param name="pRasterizerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>*</b> Pointer to a rasterizer-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>) to bind to the pipeline.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>To create a rasterizer state interface, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate">ID3D11Device::CreateRasterizerState</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetViewports(System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)">
            <summary>Bind an array of viewports to the rasterizer stage of the pipeline. (ID3D11DeviceContext.RSSetViewports)</summary>
            <param name="NumViewports">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of viewports to bind.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pViewports">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a>*</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structures to bind to the device. See the structure page for details about how the viewport size is dependent on the device feature level which has changed between Direct3D 11 and Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled. Which viewport to use is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">SV_ViewportArrayIndex</a> semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array. <div class="alert"><b>Note</b>  Even though you specify float values to the members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structure for the <i>pViewports</i> array in a call to  <b>ID3D11DeviceContext::RSSetViewports</b> for <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9_x, <b>RSSetViewports</b> uses DWORDs internally. Because of this behavior, when you use a negative top left corner for the viewport, the call to  <b>RSSetViewports</b> for feature levels 9_x fails. This failure occurs because <b>RSSetViewports</b> for 9_x casts the floating point values into unsigned integers without validation, which results in integer overflow. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetviewports#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetScissorRects(System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)">
            <summary>Bind an array of scissor rectangles to the rasterizer stage. (ID3D11DeviceContext.RSSetScissorRects)</summary>
            <param name="NumRects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of scissor rectangles to bind.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>*</b> An array of scissor rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>All scissor rects must be set atomically as one operation. Any scissor rects not defined by the call are disabled. The scissor rectangles will only be used if ScissorEnable is set to true in the rasterizer state (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</para>
            <para>Which scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader (see shader semantic syntax). If a geometry shader does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use the first scissor rectangle in the array. Each scissor rectangle in the array corresponds to a viewport in an array of viewports (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-rssetviewports">ID3D11DeviceContext::RSSetViewports</a>).</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rssetscissorrects#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*)">
            <summary>Copy a region from a source resource to a destination resource. (ID3D11DeviceContext.CopySubresourceRegion)</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the destination resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Destination subresource index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstX">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The x-coordinate of the upper left corner of the destination region.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstY">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstZ">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the source resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Source subresource index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcBox">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>*</b> A pointer to a 3D box (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>) that defines the source subresource that can be copied. If <b>NULL</b>, the entire source subresource is copied. The box must fit within the source resource. An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>CopySubresourceRegion</b> doesn't perform a copy operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The source box must be within the size of the source resource. The destination offsets, (x, y, and z), allow the source box to be offset when writing into the destination resource; however, the dimensions of the source box and the offsets must be within the size of the resource. If you try and copy outside the destination resource or specify a source box that is larger than the source resource, the behavior of <b>CopySubresourceRegion</b> is undefined. If you created a device that supports the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>, the debug output reports an error on this invalid <b>CopySubresourceRegion</b> call. Invalid parameters to <b>CopySubresourceRegion</b> cause undefined behavior and might result in incorrect rendering, clipping, no copy, or even the removal of the rendering device. If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> is a helper function for calculating subresource indexes. <b>CopySubresourceRegion</b> performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence, the source and destination resources: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopyResource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*)">
            <summary>Copy the entire contents of the source resource to the destination resource using the GPU. (ID3D11DeviceContext.CopyResource)</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface that represents the destination resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copyresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface that represents the source resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copyresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This method is unusual in that it causes the GPU to perform the copy operation (similar to a memcpy by the CPU). As a result, it has a few restrictions designed for improving performance. For instance, the source and destination resources: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copyresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_BOX},System.Void*,System.UInt32,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*,System.Void*,System.UInt32,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*,System.Void*,System.UInt32,System.UInt32)">
            <summary>The CPU copies data from memory to a subresource created in non-mappable memory. (ID3D11DeviceContext.UpdateSubresource)</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the destination resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A zero-based index, that identifies the destination subresource. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> for more details.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDstBox">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>*</b> A pointer to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <b>NULL</b>, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>). An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>UpdateSubresource</b> doesn't perform an update operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcData">
            <para>Type: <b>const void*</b> A pointer to the source data in memory.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcRowPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of one row of the source data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcDepthPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of one depth slice of source data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For a shader-constant buffer; set <i>pDstBox</i> to <b>NULL</b>. It is not possible to use this method to partially update a shader-constant buffer. A resource cannot be used as a destination if: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopyStructureCount(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer*,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*)">
            <summary>Copies data from a buffer holding variable length data.</summary>
            <param name="pDstBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Pointer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>.  This can be any buffer resource that other copy commands, such as <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copyresource">ID3D11DeviceContext::CopyResource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion">ID3D11DeviceContext::CopySubresourceRegion</a>, are able to write to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copystructurecount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstAlignedByteOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Offset from the start of <i>pDstBuffer</i> to write 32-bit UINT structure (vertex) count from <i>pSrcView</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copystructurecount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> of a Structured Buffer resource created with either <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified when the UAV was created.   These types of resources have hidden counters tracking "how many" records have been written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copystructurecount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-copystructurecount">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView*,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView*,System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView*,System.Single*)">
            <summary>Set all the elements in a render target to one value. (ID3D11DeviceContext.ClearRenderTargetView)</summary>
            <param name="pRenderTargetView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>*</b> Pointer to the render target.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ColorRGBA">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> A 4-component array that represents the color to fill the render target with.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Applications that wish to clear a render target to a specific integer value bit pattern should render a screen-aligned quad instead of using this method.  The reason for this is because this method accepts as input a floating point value, which may not have the same bit pattern as the original integer. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearrendertargetview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.UInt32*)">
            <summary>Clears an unordered access resource with bit-precise values.</summary>
            <param name="pUnorderedAccessView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> to clear.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Values">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>[4]</b> Values to copy to corresponding channels, see remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This API copies the lower n<sub>i</sub> bits from each array element i to the corresponding channel, where n<sub>i</sub> is the number of bits in the ith channel of the resource format (for example, R8G8B8_FLOAT has 8 bits for the first 3 channels). This works on any UAV with no format conversion. For a raw or structured buffer view, only the first array element value is used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewuint#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.Single*)">
            <summary>Clears an unordered access resource with a float value.</summary>
            <param name="pUnorderedAccessView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> to clear.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Values">
            <para>Type: <b>const FLOAT[4]</b> Values to copy to corresponding channels, see remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>This API works on FLOAT, UNORM, and SNORM unordered access views (UAVs), with format conversion from FLOAT to *NORM where appropriate. On other UAVs, the operation is invalid and the call will not reach the driver.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView*,System.UInt32,System.Single,System.Byte)">
            <summary>Clears the depth-stencil resource. (ID3D11DeviceContext.ClearDepthStencilView)</summary>
            <param name="pDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>*</b> Pointer to the depth stencil to be cleared.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ClearFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Identify the type of data to clear (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_clear_flag">D3D11_CLEAR_FLAG</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Depth">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Clear the depth buffer with this value. This value will be clamped between 0 and 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Stencil">
            <para>Type: <b>UINT8</b> Clear the stencil buffer with this value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GenerateMips(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView*)">
            <summary>Generates mipmaps for the given shader resource. (ID3D11DeviceContext.GenerateMips)</summary>
            <param name="pShaderResourceView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a> interface that represents the shader resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-generatemips#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You can call <b>GenerateMips</b> on any shader-resource view to generate the lower mipmap levels for the shader resource. <b>GenerateMips</b> uses the largest mipmap level of the view to recursively generate the lower levels of the mip and stops with the smallest level that is specified by the view. If the base resource wasn't created with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_SHADER_RESOURCE</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_GENERATE_MIPS</a>, the call to <b>GenerateMips</b> has no effect. <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">Feature levels</a> 9.1, 9.2, and 9.3 can't support automatic generation of mipmaps for 3D (volume) textures. Video adapters that support <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1 and higher support generating mipmaps if you use any of these formats:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-generatemips#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetResourceMinLOD(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Single)">
            <summary>Sets the minimum level-of-detail (LOD) for a resource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MinLOD">
            <para>Type: <b>FLOAT</b> The level-of-detail, which ranges between 0 and the maximum number of mipmap levels of the resource. For example, the maximum number of mipmap levels of a 1D texture is specified in the  <b>MipLevels</b> member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>To use a resource with <b>SetResourceMinLOD</b>, you must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_RESOURCE_CLAMP</a> flag when you create that resource. For Direct3D 10 and Direct3D 10.1, when sampling from a texture resource in a shader, the sampler can define a minimum LOD clamp to force sampling from less detailed mip levels.  For Direct3D 11, this functionality is extended from the sampler to the entire resource. Therefore, the application can specify the highest-resolution mip level of a resource that is available for access. This restricts the set of mip levels that are required to be resident in GPU memory, thereby saving memory. The set of mip levels resident per-resource in GPU memory can be specified by the user. Minimum LOD affects all of the resident mip levels. Therefore, only the resident mip levels can be updated and read from. All methods that access texture resources must adhere to minimum LOD clamps. Empty-set accesses are handled as out-of-bounds cases.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetResourceMinLOD(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*)">
            <summary>Gets the minimum level-of-detail (LOD).</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> which represents the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getresourceminlod#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>FLOAT</b> Returns the minimum LOD.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getresourceminlod">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ResolveSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT)">
            <summary>Copy a multisampled resource into a non-multisampled resource.</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Destination resource. Must be a created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DEFAULT</a> flag and be single-sampled. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A zero-based index, that identifies the destination subresource. Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> to calculate the index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Source resource. Must be multisampled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The source subresource of the source resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> that indicates how the multisampled resource will be resolved to a single-sampled resource. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This API is most useful when re-using the resulting rendertarget of one render pass as an input to a second render pass. The source and destination resources must be the same resource type and have the same dimensions. In addition, they must have compatible formats. There are three scenarios for this: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ExecuteCommandList(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList*,Windows.Win32.Foundation.BOOL)">
            <summary>Queues commands from a command list onto a device.</summary>
            <param name="pCommandList">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a> interface that encapsulates a command list.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-executecommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="RestoreContextState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> A Boolean flag that determines whether the target context state is saved prior to and restored after the execution of a command list. Use <b>TRUE</b> to indicate that the runtime needs to save and restore the state. Use <b>FALSE</b> to indicate that no state shall be saved or restored, which causes the target context to  return to its default state after the command list executes. Applications should typically use <b>FALSE</b> unless they will restore the state to be nearly equivalent to the state that the runtime would restore if <b>TRUE</b> were passed. When applications use <b>FALSE</b>, they can avoid unnecessary and inefficient state transitions.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-executecommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Use this method to play back a command list that was recorded by a deferred context on any thread. A call to <b>ExecuteCommandList</b> of a command list from a deferred context onto the immediate context is required for the recorded commands to be executed on the graphics processing unit (GPU). A call to <b>ExecuteCommandList</b> of a command list from a deferred context onto another deferred context can be used to merge recorded lists. But to run the commands from the merged deferred command list on the GPU, you need to execute them on the immediate context.</para>
            <para>This method performs some runtime validation related to queries. Queries that are begun in a device context cannot be manipulated indirectly by executing a command list (that is, Begin or End was invoked against the same query by the deferred context which generated the command list). If such a condition occurs, the ExecuteCommandList method does not execute the command list. However, the state of the device context is still maintained, as would be expected (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a> is performed, unless the application indicates to preserve the device context state).</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-executecommandlist#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Bind an array of shader resources to the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader*,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32)">
            <summary>Set a hull shader to the device.</summary>
            <param name="pHullShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>*</b> Pointer to a hull shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Set an array of sampler states to the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Set the constant buffers used by the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer. If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-hssetconstantbuffers1">HSSetConstantBuffers1</a> method instead.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Bind an array of shader resources to the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader*,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32)">
            <summary>Set a domain shader to the device.</summary>
            <param name="pDomainShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>*</b> Pointer to a domain shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The maximum number of instances a shader can have is 256. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Set an array of sampler states to the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Sets the constant buffers used by the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.</para>
            <para>If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-dssetconstantbuffers1">DSSetConstantBuffers1</a> method instead.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Bind an array of shader resources to the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.UInt32*)">
            <summary>Sets an array of views for an unordered resource.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first element in the zero-based array to begin setting  (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1). D3D11_1_UAV_SLOT_COUNT is defined as 64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of views to set (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> pointers to be set by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUAVInitialCounts">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter for that appendable and consumable UAV. <i>pUAVInitialCounts</i> is only relevant for UAVs that were created with either <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified when the UAV was created; otherwise, the argument is ignored.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader*,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32)">
            <summary>Set a compute shader to the device.</summary>
            <param name="pComputeShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>*</b> Pointer to a compute shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Set an array of sampler states to the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Sets the constant buffers used by the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4\*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4\*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer. If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-cssetconstantbuffers1">CSSetConstantBuffers1</a> method instead.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Get the constant buffers used by the vertex shader pipeline stage. (ID3D11DeviceContext.VSGetConstantBuffers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Get the pixel shader resources. (ID3D11DeviceContext.PSGetShaderResources)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader**,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32*)">
            <summary>Get the pixel shader currently set on the device. (ID3D11DeviceContext.PSGetShader)</summary>
            <param name="ppPixelShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>**</b> Address of a pointer to a pixel shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed, to avoid memory leaks.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Get an array of sampler states from the pixel shader pipeline stage. (ID3D11DeviceContext.PSGetSamplers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Array of sampler-state interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>) to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader**,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32*)">
            <summary>Get the vertex shader currently set on the device. (ID3D11DeviceContext.VSGetShader)</summary>
            <param name="ppVertexShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>**</b> Address of a pointer to a vertex shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Get the constant buffers used by the pixel shader pipeline stage. (ID3D11DeviceContext.PSGetConstantBuffers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetInputLayout(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout**)">
            <summary>Get a pointer to the input-layout object that is bound to the input-assembler stage. (ID3D11DeviceContext.IAGetInputLayout)</summary>
            <param name="ppInputLayout">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>**</b> A pointer to the input-layout object (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>), which describes the input buffers that will be read by the IA stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For information about creating an input-layout object, see Creating the Input-Layout Object. Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetinputlayout#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetVertexBuffers(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.Span{System.UInt32},System.Span{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*,System.UInt32*)">
            <summary>Get the vertex buffers bound to the input-assembler stage. (ID3D11DeviceContext.IAGetVertexBuffers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The input slot of the first vertex buffer to get. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1) are available; the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">maximum number of input slots depends on the feature level</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of vertex buffers to get starting at the offset. The number of buffers (plus the starting slot) cannot exceed the total number of IA-stage input slots.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppVertexBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> A pointer to an array of vertex buffers returned by the method (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pStrides">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of stride values returned by the method; one stride value for each buffer in the vertex-buffer array. Each stride value is the size (in bytes) of the elements that are to be used from that vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOffsets">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of offset values returned by the method; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetIndexBuffer(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT*,System.UInt32*)">
            <summary>Get a pointer to the index buffer that is bound to the input-assembler stage. (ID3D11DeviceContext.IAGetIndexBuffer)</summary>
            <param name="pIndexBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> A pointer to an index buffer returned by the method (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>*</b> Specifies format of the data in the index buffer (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>). These formats provide the size and type of the data in the buffer. The only formats allowed for index buffer data are 16-bit (DXGI_FORMAT_R16_UINT) and 32-bit (DXGI_FORMAT_R32_UINT) integers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Offset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Offset (in bytes) from the start of the index buffer, to the first index to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Get the constant buffers used by the geometry shader pipeline stage. (ID3D11DeviceContext.GSGetConstantBuffers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader**,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32*)">
            <summary>Get the geometry shader currently set on the device. (ID3D11DeviceContext.GSGetShader)</summary>
            <param name="ppGeometryShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>**</b> Address of a pointer to a geometry shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY*)">
            <summary>Get information about the primitive type, and data order that describes input data for the input assembler stage. (ID3D11DeviceContext.IAGetPrimitiveTopology)</summary>
            <param name="pTopology">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>*</b> A pointer to the type of primitive, and ordering of the primitive data (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetprimitivetopology#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-iagetprimitivetopology">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Get the vertex shader resources. (ID3D11DeviceContext.VSGetShaderResources)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Get an array of sampler states from the vertex shader pipeline stage. (ID3D11DeviceContext.VSGetSamplers)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Array of sampler-state interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>) to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetPredication(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate**,Windows.Win32.Foundation.BOOL*)">
            <summary>Get the rendering predicate state. (ID3D11DeviceContext.GetPredication)</summary>
            <param name="ppPredicate">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>**</b> Address of a pointer to a predicate (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>). Value stored here will be <b>NULL</b> upon device creation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pPredicateValue">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a>*</b> Address of a boolean to fill with the predicate comparison value. <b>FALSE</b> upon device creation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-getpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Get the geometry shader resources. (ID3D11DeviceContext.GSGetShaderResources)</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Get an array of sampler state interfaces from the geometry shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView**)">
            <summary>Get pointers to the resources bound to the output-merger stage. (ID3D11DeviceContext.OMGetRenderTargets)</summary>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of render targets to retrieve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>**</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s which represent render target views. Specify <b>NULL</b> for this parameter when retrieval of a render target is not needed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>**</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>, which represents a depth-stencil view. Specify <b>NULL</b> for this parameter when retrieval of the depth-stencil view is not needed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView**,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)">
            <summary>Get pointers to the resources bound to the output-merger stage. (ID3D11DeviceContext.OMGetRenderTargetsAndUnorderedAccessViews)</summary>
            <param name="NumRTVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of render-target views to retrieve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>**</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s, which represent render-target views. Specify <b>NULL</b> for this parameter when retrieval of render-target views is not required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>**</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>, which represents a depth-stencil view. Specify <b>NULL</b> for this parameter when retrieval of the depth-stencil view is not required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="UAVStartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin retrieving unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). For pixel shaders <i>UAVStartSlot</i> should be equal to the number of render-target views that are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of unordered-access views to return in <i>ppUnorderedAccessViews</i>. This number ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - <i>UAVStartSlot</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>**</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>s, which represent unordered-access views that are retrieved. Specify <b>NULL</b> for this parameter when retrieval of unordered-access views is not required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-release">IUnknown::Release</a> on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**,System.Span{System.Single},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**,System.Single*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**,System.Single*,System.UInt32*)">
            <summary>Get the blend state of the output-merger stage. (ID3D11DeviceContext.OMGetBlendState)</summary>
            <param name="ppBlendState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>**</b> Address of a pointer to a blend-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BlendFactor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> Array of blend factors, one for each RGBA component.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSampleMask">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">sample mask</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The reference count of the returned interface will be incremented by one when the blend state is retrieved. Applications must release returned pointer(s) when they are no longer needed, or else there will be a memory leak. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetDepthStencilState(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState**,System.UInt32*)">
            <summary>Gets the depth-stencil state of the output-merger stage. (ID3D11DeviceContext.OMGetDepthStencilState)</summary>
            <param name="ppDepthStencilState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>**</b> Address of a pointer to a depth-stencil state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>) to be filled with information from the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pStencilRef">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to the stencil reference value used in the depth-stencil test.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omgetdepthstencilstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOGetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Get the target output buffers for the stream-output stage of the pipeline.</summary>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to get.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-sogettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSOTargets">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> An array of output buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be retrieved from the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-sogettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A maximum of four output buffers can be retrieved. The offsets to the output buffers pointed to in the returned <i>ppSOTargets</i> array may be assumed to be -1 (append), as defined for use in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets">ID3D11DeviceContext::SOSetTargets</a>.</para>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-sogettargets#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetState(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState**)">
            <summary>Get the rasterizer state from the rasterizer stage of the pipeline. (ID3D11DeviceContext.RSGetState)</summary>
            <param name="ppRasterizerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>**</b> Address of a pointer to a rasterizer-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>) to fill with information from the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rsgetstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetViewports(System.UInt32@,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetViewports(System.UInt32*,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetViewports(System.UInt32*,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)">
            <summary>Gets the array of viewports bound to the rasterizer stage.</summary>
            <param name="pNumViewports">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that, on input, specifies the number of viewports (ranges from 0 to <b>D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE</b>) in the <i>pViewports</i> array; on output, the variable contains the actual number of viewports that are bound to the rasterizer stage. If <i>pViewports</i> is <b>NULL</b>, <b>RSGetViewports</b> fills the variable with the number of viewports currently bound. <div class="alert"><b>Note</b>  In some versions of the Windows SDK, a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug device</a> will raise an exception if the input value in the variable to which <i>pNumViewports</i> points is greater than <b>D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE</b> even if <i>pViewports</i> is <b>NULL</b>.  The regular runtime ignores the value in the variable to which <i>pNumViewports</i> points when <i>pViewports</i> is <b>NULL</b>.  This behavior of a debug device might be corrected in a future release of the Windows SDK. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rsgetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pViewports">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a>*</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structures for the viewports that are bound to the rasterizer stage. If the number of viewports (in the variable to which <i>pNumViewports</i> points) is greater than the actual number of viewports currently bound, unused elements of the array contain 0. For info about how the viewport size depends on the device <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>, which has changed between Direct3D 11 and Direct3D 10, see <b>D3D11_VIEWPORT</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rsgetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rsgetviewports#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetScissorRects(System.UInt32@,Windows.Win32.Foundation.RECT*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetScissorRects(System.UInt32*,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetScissorRects(System.UInt32*,Windows.Win32.Foundation.RECT*)">
            <summary>Get the array of scissor rectangles bound to the rasterizer stage. (ID3D11DeviceContext.RSGetScissorRects)</summary>
            <param name="pNumRects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of scissor rectangles (ranges between 0 and D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) bound; set <i>pRects</i> to <b>NULL</b> to use <i>pNumRects</i> to see how many rectangles would be returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rsgetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>*</b> An array of scissor rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>). If NumRects is greater than the number of scissor rects currently bound, then unused members of the array will contain 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rsgetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-rsgetscissorrects">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Get the hull-shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader**,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32*)">
            <summary>Get the hull shader currently set on the device.</summary>
            <param name="ppHullShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>**</b> Address of a pointer to a hull shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Get an array of sampler state interfaces from the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Get the constant buffers used by the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Get the domain-shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader**,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32*)">
            <summary>Get the domain shader currently set on the device.</summary>
            <param name="ppDomainShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>**</b> Address of a pointer to a domain shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Get an array of sampler state interfaces from the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Get the constant buffers used by the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <summary>Get the compute-shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)">
            <summary>Gets an array of views for an unordered resource.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first element in the zero-based array to return (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of views to get (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>**</b> A pointer to an array of interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>) to get.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call <b>IUnknown::Release</b> on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader**,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**,System.UInt32*)">
            <summary>Get the compute shader currently set on the device.</summary>
            <param name="ppComputeShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>**</b> Address of a pointer to a Compute shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <summary>Get an array of sampler state interfaces from the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <summary>Get the constant buffers used by the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearState">
            <summary>Restore all default settings.</summary>
            <remarks>
            <para>This method resets any device context to the default settings. This sets all input/output resource slots, shaders, input layouts, predications, scissor rectangles, depth-stencil state, rasterizer state, blend state, sampler state, and viewports to <b>NULL</b>. The primitive topology is set to UNDEFINED. For a scenario where you would like to clear a list of commands recorded so far, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist">ID3D11DeviceContext::FinishCommandList</a> and throw away the resulting <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Flush">
            <summary>Sends queued-up commands in the command buffer to the graphics processing unit (GPU).</summary>
            <remarks>
            <para>Most applications don't need to call this method. If an application calls this method when not necessary, it incurs a performance penalty. Each call to <b>Flush</b> incurs a significant amount of overhead. When Microsoft Direct3D state-setting, present, or draw commands are called by an application, those commands are queued into an internal command buffer. <b>Flush</b> sends those commands to the GPU for processing. Typically, the Direct3D runtime sends these commands to the GPU automatically whenever the runtime determines that they need to be sent, such as when the command buffer is full or when an application maps a resource. <b>Flush</b> sends the commands manually. We recommend that you use <b>Flush</b> when the CPU waits for an arbitrary amount of time (such as when you call the <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-sleep">Sleep</a> function). Because <b>Flush</b> operates asynchronously,  it can return either before or after the GPU finishes executing the queued graphics commands. However, the graphics commands eventually always complete. You can call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createquery">ID3D11Device::CreateQuery</a> method with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY_EVENT</a> value to create an event query; you can then use that event query in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> method to determine when the GPU is finished processing the graphics commands.</para>
            <para>Microsoft Direct3D 11 defers the destruction of objects. Therefore, an application can't rely upon objects immediately being destroyed. By calling <b>Flush</b>, you destroy any objects whose destruction was deferred.  If an application requires synchronous destruction of an object, we recommend that the application release all its references, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a>, and then call <b>Flush</b>. <h3><a id="Defer_Issues_with_Flip"></a><a id="defer_issues_with_flip"></a><a id="DEFER_ISSUES_WITH_FLIP"></a>Deferred Destruction Issues with Flip Presentation Swap Chains</h3> Direct3D 11 defers the destruction of objects like views and resources until it can efficiently destroy them. This deferred destruction can cause problems with flip presentation model swap chains. Flip presentation model swap chains have the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> flag set. When you create a flip presentation model swap chain, you can associate only one swap chain at a time with an <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a>, <b>IWindow</b>, or composition surface. If an application attempts to destroy a flip presentation model swap chain and replace it with another swap chain, the original swap chain is not destroyed when the application immediately frees all of the original swap chain's references. Most applications typically use the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-resizebuffers">IDXGISwapChain::ResizeBuffers</a> method for the majority of scenarios where they replace new swap chain buffers for old swap chain buffers. However, if an application must actually destroy an old swap chain and create a new swap chain, the application must force the destruction of all objects that the application freed. To force the destruction, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a> (or otherwise ensure no views are bound to pipeline state), and then call <b>Flush</b> on the immediate context. You must force destruction before you call <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">IDXGIFactory2::CreateSwapChainForCoreWindow</a>, or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> again to create a new swap chain.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-flush#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetType">
            <summary>Gets the type of device context.</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_device_context_type">D3D11_DEVICE_CONTEXT_TYPE</a></b> A member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_device_context_type">D3D11_DEVICE_CONTEXT_TYPE</a> that indicates the type of device context.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-gettype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetContextFlags">
            <summary>Gets the initialization flags associated with the current deferred context.</summary>
            <remarks>The GetContextFlags method gets the flags that were supplied to the <i>ContextFlags</i> parameter of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdeferredcontext">ID3D11Device::CreateDeferredContext</a>; however, the context flag is reserved for future use.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.FinishCommandList(Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D11.ID3D11CommandList**)">
            <summary>Create a command list and record graphics commands into it.</summary>
            <param name="RestoreDeferredContextState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> A Boolean flag that determines whether the runtime saves deferred context state before it executes  <b>FinishCommandList</b> and restores it afterwards. Use <b>TRUE</b> to indicate that the runtime needs to save and restore the state. Use <b>FALSE</b> to indicate that the runtime will not save or restore any state. In this case, the deferred context will  return to its default state after the call to  <b>FinishCommandList</b> completes. For information about default state, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a>. Typically, use <b>FALSE</b> unless you restore the state to be nearly equivalent to the state that the runtime would restore if you passed <b>TRUE</b>. When you use <b>FALSE</b>, you can avoid unnecessary and inefficient state transitions.</para>
            <para><div class="alert"><b>Note</b>  This parameter does not affect the command list that the current call to <b>FinishCommandList</b> returns. However, this parameter affects the command list of the next call to <b>FinishCommandList</b> on the same deferred context. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCommandList">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a>**</b> Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a> interface pointer is initialized with the recorded command list information. The resulting <b>ID3D11CommandList</b> object is immutable and can only be used with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-executecommandlist">ID3D11DeviceContext::ExecuteCommandList</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the following: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Create a command list from a deferred context and record commands into it by calling <b>FinishCommandList</b>. Play back a command list with an immediate context by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-executecommandlist">ID3D11DeviceContext::ExecuteCommandList</a>.</para>
            <para>Immediate context state is cleared before and after a command list is executed. A command list has no concept of inheritance. Each call to <b>FinishCommandList</b> will record only the state set since any previous call to  <b>FinishCommandList</b>.</para>
            <para>For example, the state of a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device context</a> is its render state or pipeline state. To retrieve device context state, an application can call  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> or  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getpredication">ID3D11DeviceContext::GetPredication</a>.</para>
            <para>For more information about how to use <b>FinishCommandList</b>, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-render-multi-thread-command-list-record">How to: Record a Command List</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{c0bfa96c-e089-44fb-8eaf-26f8796190da}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{f582c508-0f36-490c-9977-31eece268cfa}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{38325b96-effb-4022-ba02-2e795b70275c}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{8e5c6061-628a-4c8e-8264-bbe45cb3d5dd}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{e4819ddc-4cf0-4025-bd26-5de82a3e07b7}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{ea82e40d-51dc-4f33-93d4-db7c9125ae8c}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{9eb576dd-9f77-4d86-81aa-8bab5fe490e2}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)">
            <summary>Get a query description. (ID3D11Query.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>*</b> Pointer to a query description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11query-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11query-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Query.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{d6c00747-87b7-425e-b84d-44d108560afd}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*)">
            <summary>Gets the description for rasterizer state that you used to create the rasterizer-state object. (ID3D11RasterizerState.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a> structure that receives a description of the rasterizer state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11rasterizerstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>You use the description for rasterizer state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate">ID3D11Device::CreateRasterizerState</a> method to create the rasterizer-state object.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{9bb4ab81-ab1a-4d8f-b506-fc04200b6ee7}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*)">
            <summary>Get the properties of a render target view. (ID3D11RenderTargetView.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>*</b> Pointer to the description of a render target view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11rendertargetview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11rendertargetview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{dfdba067-0b8d-4865-875b-d7b4516cc164}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)">
            <summary>Get the type of the resource. (ID3D11Resource.GetType)</summary>
            <param name="pResourceDimension">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_dimension">D3D11_RESOURCE_DIMENSION</a>*</b> Pointer to the resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_dimension">D3D11_RESOURCE_DIMENSION</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11resource-gettype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11resource-gettype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetEvictionPriority(System.UInt32)">
            <summary>Set the eviction priority of a resource. (ID3D11Resource.SetEvictionPriority)</summary>
            <param name="EvictionPriority">Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></param>
            <remarks>
            <para>Resource priorities determine which resource to evict from video memory when the system has run out of video memory. The resource will not be lost; it will be removed from video memory and placed into system memory, or possibly placed onto the hard drive. The resource will be loaded back into video memory when it is required. A resource that is set to the maximum priority, DXGI_RESOURCE_PRIORITY_MAXIMUM, is only evicted if there is no other way of resolving the incoming memory request. The Windows Display Driver Model (WDDM) tries to split an incoming memory request to its minimum size and evict lower-priority resources before evicting a resource with maximum priority. Changing the priorities of resources should be done carefully. The wrong eviction priorities could be a detriment to performance rather than an improvement.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11resource-setevictionpriority#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetEvictionPriority">
            <summary>Get the eviction priority of a resource. (ID3D11Resource.GetEvictionPriority)</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> One of the following values, which specifies the eviction priority for the resource: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11resource-getevictionpriority">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{dc8e63f3-d12b-4952-b47b-5e45026a862d}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*)">
            <summary>Gets the description for sampler state that you used to create the sampler-state object.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a> structure that receives a description of the sampler state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11samplerstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>You use the description for sampler state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createsamplerstate">ID3D11Device::CreateSamplerState</a> method to create the sampler-state object.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{da6fea51-564c-4487-9810-f0d0f9b4e3a5}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*)">
            <summary>Get the shader resource view's description. (ID3D11ShaderResourceView.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure to be filled with data about the shader resource view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11shaderresourceview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11shaderresourceview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{b0e06fe0-8192-4e1a-b1ca-36d7414710b2}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*)">
            <summary>Get the properties of the texture resource. (ID3D11Texture1D.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11texture1d-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11texture1d-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{f8fb5c27-c6b3-4f75-a4c8-439af2ef564c}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*)">
            <summary>Get the properties of the texture resource. (ID3D11Texture2D.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11texture2d-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11texture2d-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{6f15aaf2-d208-4e89-9ab4-489535d34f9c}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*)">
            <summary>Get the properties of the texture resource. (ID3D11Texture3D.GetDesc)</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11texture3d-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11texture3d-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{037e866e-f56d-4357-a8af-9dabbe6e250e}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*)">
            <summary>Get a description of the resource.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11unorderedaccessview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11unorderedaccessview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{28acf509-7f5c-48f6-8611-f316010a6380}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{3b301d64-d678-4289-8897-22f8928b72f3}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.SetPrivateDataInterface(System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.GetResource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource**)">
            <summary>Get the resource that is accessed through this view. (ID3D11View.GetResource)</summary>
            <param name="ppResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>**</b> Address of a pointer to the resource that is accessed through this view. (See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11view-getresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>This function increments the reference count of the resource by one, so it is necessary to call <b>Release</b> on the returned pointer when the application is done with it. Destroying (or losing) the returned pointer before <b>Release</b> is called will result in a memory leak.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.ID3D11View.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{839d1216-bb2e-412b-b7f4-a9dbebe08ed1}</value>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL">
            <summary>Describes the set of features targeted by a Direct3D device.</summary>
            <remarks>
            <para>For an overview of the capabilities of each feature level, see [Direct3D feature levels](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro). For information about limitations creating non-hardware-type devices on certain feature levels, see [Limitations creating WARP and reference devices](/windows/desktop/direct3d11/overviews-direct3d-11-devices-limitations).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3dcommon/ne-d3dcommon-d3d_feature_level#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_1_0_CORE">
            <summary>Allows Microsoft Compute Driver Model (MCDM) devices to be used, or more feature-rich devices (such as traditional GPUs) that support a superset of the functionality. MCDM is the overall driver model for compute-only; it's a scaled-down peer of the larger scoped Windows Device Driver Model (WDDM).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_9_1">
            <summary>Targets features supported by [feature level](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro) 9.1, including shader model 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_9_2">
            <summary>Targets features supported by [feature level](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro) 9.2, including shader model 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_9_3">
            <summary>Targets features supported by [feature level](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro) 9.3, including shader model 2.0b.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_10_0">
            <summary>Targets features supported by Direct3D 10.0, including shader model 4.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_10_1">
            <summary>Targets features supported by Direct3D 10.1, including shader model 4.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_11_0">
            <summary>Targets features supported by Direct3D 11.0, including shader model 5.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_11_1">
            <summary>Targets features supported by Direct3D 11.1, including shader model 5 and logical blend operations. This feature level requires a display driver that is at least implemented to WDDM for Windows 8 (WDDM 1.2).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_12_0">
            <summary>Targets features supported by Direct3D 12.0, including shader model 5.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_12_1">
            <summary>Targets features supported by Direct3D 12.1, including shader model 5.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_12_2">
            <summary>Targets features supported by Direct3D 12.2, including shader model 6.5. For more information about feature level 12_2, see its [specification page](https://microsoft.github.io/DirectX-Specs/d3d/D3D12_FeatureLevel12_2.html). Feature level 12_2 is available in Windows SDK builds 20170 and later.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY">
            <summary>Values that indicate how the pipeline interprets vertex data that is bound to the input-assembler stage. These primitive topology values determine how the vertex data is rendered on screen.</summary>
            <remarks>
            <para>Use the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-iasetprimitivetopology">ID3D11DeviceContext::IASetPrimitiveTopology</a> method and a value from <b>D3D_PRIMITIVE_TOPOLOGY</b> to bind a primitive topology to the input-assembler stage. Use the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-iagetprimitivetopology">ID3D11DeviceContext::IAGetPrimitiveTopology</a> method to retrieve the primitive topology for the input-assembler stage. The following diagram shows the various primitive types for a geometry shader object. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3dcommon/ne-d3dcommon-d3d_primitive_topology#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_UNDEFINED">
            <summary>The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_POINTLIST">
            <summary>Interpret the vertex data as a list of points.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINELIST">
            <summary>Interpret the vertex data as a list of lines.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINESTRIP">
            <summary>Interpret the vertex data as a line strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST">
            <summary>Interpret the vertex data as a list of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP">
            <summary>Interpret the vertex data as a triangle strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ">
            <summary>Interpret the vertex data as a list of lines with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ">
            <summary>Interpret the vertex data as a line strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ">
            <summary>Interpret the vertex data as a list of triangles with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ">
            <summary>Interpret the vertex data as a triangle strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED">
            <summary>The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_POINTLIST">
            <summary>Interpret the vertex data as a list of points.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINELIST">
            <summary>Interpret the vertex data as a list of lines.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP">
            <summary>Interpret the vertex data as a line strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST">
            <summary>Interpret the vertex data as a list of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP">
            <summary>Interpret the vertex data as a triangle strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ">
            <summary>Interpret the vertex data as a list of lines with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ">
            <summary>Interpret the vertex data as a line strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ">
            <summary>Interpret the vertex data as a list of triangles with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ">
            <summary>Interpret the vertex data as a triangle strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED">
            <summary>The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_POINTLIST">
            <summary>Interpret the vertex data as a list of points.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINELIST">
            <summary>Interpret the vertex data as a list of lines.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP">
            <summary>Interpret the vertex data as a line strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST">
            <summary>Interpret the vertex data as a list of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP">
            <summary>Interpret the vertex data as a triangle strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ">
            <summary>Interpret the vertex data as a list of lines with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ">
            <summary>Interpret the vertex data as a line strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ">
            <summary>Interpret the vertex data as a list of triangles with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ">
            <summary>Interpret the vertex data as a triangle strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION">
            <summary>Values that identify the type of resource to be viewed as a shader resource.</summary>
            <remarks>A <b>D3D_SRV_DIMENSION</b>-typed value is specified in the <b>ViewDimension</b> member of the <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure or the  <b>Dimension</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_INPUT_BIND_DESC</a> structure.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURECUBEARRAY">
            <summary>The resource is an array of cube textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_BUFFEREX">
            <summary>The resource is a raw buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURECUBEARRAY">
            <summary>The resource is an array of cube textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURECUBEARRAY">
            <summary>The resource is an array of cube textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_BUFFEREX">
            <summary>The resource is a raw buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT">
            <summary>Resource data formats, including fully-typed and typeless formats. A list of modifiers at the bottom of the page more fully describes each format type.</summary>
            <remarks>
            <para><h3><a id="Byte_Order__LSB_MSB_"></a><a id="byte_order__lsb_msb_"></a><a id="BYTE_ORDER__LSB_MSB_"></a>Byte Order (LSB/MSB)</h3> Most formats have byte-aligned components, and the components are in C-array order (the least address comes first). For those formats that don't have power-of-2-aligned components, the first named component is in the least-significant bits.</para>
            <para><h3><a id="Portable_Coding_for_Endian-Independence"></a><a id="portable_coding_for_endian-independence"></a><a id="PORTABLE_CODING_FOR_ENDIAN-INDEPENDENCE"></a>Portable Coding for Endian-Independence</h3> Rather than adjusting for whether a system uses big-endian or little-endian byte ordering, you should write portable code, as follows.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_UNKNOWN">
            <summary>The format is not known.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_TYPELESS">
            <summary>A four-component, 128-bit typeless format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_FLOAT">
            <summary>A four-component, 128-bit floating-point format that supports 32 bits per channel including alpha. <sup>1,5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_UINT">
            <summary>A four-component, 128-bit unsigned-integer format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_SINT">
            <summary>A four-component, 128-bit signed-integer format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_TYPELESS">
            <summary>A three-component, 96-bit typeless format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_FLOAT">
            <summary>A three-component, 96-bit floating-point format that supports 32 bits per color channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_UINT">
            <summary>A three-component, 96-bit unsigned-integer format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_SINT">
            <summary>A three-component, 96-bit signed-integer format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_TYPELESS">
            <summary>A four-component, 64-bit typeless format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_FLOAT">
            <summary>A four-component, 64-bit floating-point format that supports 16 bits per channel including alpha.<sup>5,7</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_UNORM">
            <summary>A four-component, 64-bit unsigned-normalized-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_UINT">
            <summary>A four-component, 64-bit unsigned-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_SNORM">
            <summary>A four-component, 64-bit signed-normalized-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_SINT">
            <summary>A four-component, 64-bit signed-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_TYPELESS">
            <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_FLOAT">
            <summary>A two-component, 64-bit floating-point format that supports 32 bits for the red channel and 32 bits for the green channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_UINT">
            <summary>A two-component, 64-bit unsigned-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_SINT">
            <summary>A two-component, 64-bit signed-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G8X24_TYPELESS">
            <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel, 8 bits for the green channel, and 24 bits are unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D32_FLOAT_S8X24_UINT">
            <summary>A 32-bit floating-point component, and two unsigned-integer components (with an additional 32 bits). This format supports 32-bit depth, 8-bit stencil, and 24 bits are unused.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS">
            <summary>A 32-bit floating-point component, and two typeless components (with an additional 32 bits). This format supports 32-bit red channel, 8 bits are unused, and 24 bits are unused.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_X32_TYPELESS_G8X24_UINT">
            <summary>A 32-bit typeless component, and two unsigned-integer components (with an additional 32 bits). This format has 32 bits unused, 8 bits for green channel, and 24 bits are unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_UINT">
            <summary>A four-component, 32-bit unsigned-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R11G11B10_FLOAT">
            <summary>
            <para>Three partial-precision floating-point numbers encoded into a single 32-bit value (a variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There are no sign bits, and there is a 5-bit biased (15) exponent for each channel, 6-bit mantissa  for R and G, and a 5-bit mantissa for B, as shown in the following illustration.<sup>5,7</sup> </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized integer sRGB format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UINT">
            <summary>A four-component, 32-bit unsigned-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_SNORM">
            <summary>A four-component, 32-bit signed-normalized-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_SINT">
            <summary>A four-component, 32-bit signed-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_TYPELESS">
            <summary>A two-component, 32-bit typeless format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_FLOAT">
            <summary>A two-component, 32-bit floating-point format that supports 16 bits for the red channel and 16 bits for the green channel.<sup>5,7</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_UNORM">
            <summary>A two-component, 32-bit unsigned-normalized-integer format that supports 16 bits each for the green and red channels.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_UINT">
            <summary>A two-component, 32-bit unsigned-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_SNORM">
            <summary>A two-component, 32-bit signed-normalized-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_SINT">
            <summary>A two-component, 32-bit signed-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_TYPELESS">
            <summary>A single-component, 32-bit typeless format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D32_FLOAT">
            <summary>A single-component, 32-bit floating-point format that supports 32 bits for depth.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_FLOAT">
            <summary>A single-component, 32-bit floating-point format that supports 32 bits for the red channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_UINT">
            <summary>A single-component, 32-bit unsigned-integer format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_SINT">
            <summary>A single-component, 32-bit signed-integer format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R24G8_TYPELESS">
            <summary>A two-component, 32-bit typeless format that supports 24 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D24_UNORM_S8_UINT">
            <summary>A 32-bit z-buffer format that supports 24 bits for depth and 8 bits for stencil.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R24_UNORM_X8_TYPELESS">
            <summary>A 32-bit format, that contains a 24 bit, single-component, unsigned-normalized integer, with an additional typeless 8 bits. This format has 24 bits red channel and 8 bits unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_X24_TYPELESS_G8_UINT">
            <summary>A 32-bit format, that contains a 24 bit, single-component, typeless format,  with an additional 8 bit unsigned integer component. This format has 24 bits unused and 8 bits green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_TYPELESS">
            <summary>A two-component, 16-bit typeless format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_UNORM">
            <summary>A two-component, 16-bit unsigned-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_UINT">
            <summary>A two-component, 16-bit unsigned-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_SNORM">
            <summary>A two-component, 16-bit signed-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_SINT">
            <summary>A two-component, 16-bit signed-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_TYPELESS">
            <summary>A single-component, 16-bit typeless format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_FLOAT">
            <summary>A single-component, 16-bit floating-point format that supports 16 bits for the red channel.<sup>5,7</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D16_UNORM">
            <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for depth.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_UNORM">
            <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_UINT">
            <summary>A single-component, 16-bit unsigned-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_SNORM">
            <summary>A single-component, 16-bit signed-normalized-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_SINT">
            <summary>A single-component, 16-bit signed-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_TYPELESS">
            <summary>A single-component, 8-bit typeless format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_UNORM">
            <summary>A single-component, 8-bit unsigned-normalized-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_UINT">
            <summary>A single-component, 8-bit unsigned-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_SNORM">
            <summary>A single-component, 8-bit signed-normalized-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_SINT">
            <summary>A single-component, 8-bit signed-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_A8_UNORM">
            <summary>A single-component, 8-bit unsigned-normalized-integer format for alpha only.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R1_UNORM">
            <summary>A single-component, 1-bit unsigned-normalized integer format that supports 1 bit for the red channel. ².</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R9G9B9E5_SHAREDEXP">
            <summary>
            <para>Three partial-precision floating-point numbers encoded into a single 32-bit value all sharing the same 5-bit exponent (variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There is no sign bit, and there is a shared 5-bit biased (15) exponent and a 9-bit mantissa for each channel, as shown in the following illustration. <sup>6,7</sup>. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_B8G8_UNORM">
            <summary>
            <para>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the UYVY format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. ³ Width must be even.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_G8R8_G8B8_UNORM">
            <summary>
            <para>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the YUY2 format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. ³ Width must be even.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC1_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC2_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC3_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC4_TYPELESS">
            <summary>One-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC4_UNORM">
            <summary>One-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC4_SNORM">
            <summary>One-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC5_TYPELESS">
            <summary>Two-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC5_UNORM">
            <summary>Two-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC5_SNORM">
            <summary>Two-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B5G6R5_UNORM">
            <summary>
            <para>A three-component, 16-bit unsigned-normalized-integer format that supports 5 bits for blue, 6 bits for green, and 5 bits for red. <b>Direct3D 10 through Direct3D 11:  </b>This value is defined for DXGI. However, Direct3D 10, 10.1, or 11 devices do not support this format. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B5G5R5A1_UNORM">
            <summary>
            <para>A four-component, 16-bit unsigned-normalized-integer format that supports 5 bits for each color channel and 1-bit alpha. <b>Direct3D 10 through Direct3D 11:  </b>This value is defined for DXGI. However, Direct3D 10, 10.1, or 11 devices do not support this format. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8-bit alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8 bits unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM">
            <summary>A four-component, 32-bit 2.8-biased fixed-point format that supports 10 bits for each color channel and 2-bit alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits for each channel including alpha. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each channel including alpha. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits for each color channel, and 8 bits are unused. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each color channel, and 8 bits are unused. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC6H_TYPELESS">
            <summary>A typeless block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC6H_UF16">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC6H_SF16">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC7_TYPELESS">
            <summary>A typeless block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC7_UNORM">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC7_UNORM_SRGB">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_AYUV">
            <summary>
            <para>Most common YUV 4:4:4 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. For UAVs, an additional valid view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. Supported view types are SRV, RTV, and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is V-&gt;R8, U-&gt;G8, Y-&gt;B8, and A-&gt;A8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y410">
            <summary>
            <para>10-bit per channel packed YUV 4:4:4 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R10G10B10A2_UNORM and DXGI_FORMAT_R10G10B10A2_UINT. For UAVs, an additional valid view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R10G10B10A2_UNORM and DXGI_FORMAT_R10G10B10A2_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is U-&gt;R10, Y-&gt;G10, V-&gt;B10, and A-&gt;A2. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y416">
            <summary>
            <para>16-bit per channel packed YUV 4:4:4 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R16G16B16A16_UNORM and DXGI_FORMAT_R16G16B16A16_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is U-&gt;R16, Y-&gt;G16, V-&gt;B16, and A-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_NV12">
            <summary>
            <para>Most common YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R8_UNORM and DXGI_FORMAT_R8_UINT. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are DXGI_FORMAT_R8G8_UNORM and DXGI_FORMAT_R8G8_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R8. For chrominance data view, the mapping to the view channel is U-&gt;R8 and V-&gt;G8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P010">
            <summary>
            <para>10-bit per channel planar YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R16_UNORM and DXGI_FORMAT_R16_UINT. The runtime does not enforce whether the lowest 6 bits are 0 (given that this video resource format is a 10-bit format that uses 16 bits). If required, application shader code would have to enforce this manually.  From the runtime's point of view, DXGI_FORMAT_P010 is no different than DXGI_FORMAT_P016. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. For UAVs, an additional valid chrominance data view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R16. For chrominance data view, the mapping to the view channel is U-&gt;R16 and V-&gt;G16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P016">
            <summary>
            <para>16-bit per channel planar YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R16_UNORM and DXGI_FORMAT_R16_UINT. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. For UAVs, an additional valid chrominance data view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R16. For chrominance data view, the mapping to the view channel is U-&gt;R16 and V-&gt;G16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_420_OPAQUE">
            <summary>
            <para>8-bit per channel planar YUV 4:2:0 video resource format. This format is subsampled where each pixel has its own Y value, but each 2x2 pixel block shares a single U and V value. The runtime requires that the width and height of all resources that are created with this format are multiples of 2. The runtime also requires that the left, right, top, and bottom members of any RECT that are used for this format are multiples of 2. This format differs from DXGI_FORMAT_NV12 in that the layout of the data within the resource is completely opaque to applications. Applications cannot use the CPU to map the resource and then access the data within the resource. You cannot use shaders with this format. Because of this behavior, legacy hardware that supports a non-NV12 4:2:0 layout (for example, YV12, and so on) can be used. Also, new hardware that has a 4:2:0 implementation better than NV12 can be used when the application does not need the data to be in a standard layout. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_YUY2">
            <summary>
            <para>Most common YUV 4:2:2 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. For UAVs, an additional valid view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R8, U0-&gt;G8, Y1-&gt;B8, and V0-&gt;A8. A unique valid view format for this video resource format is DXGI_FORMAT_R8G8_B8G8_UNORM. With this view format, the width of the view appears to be twice what the DXGI_FORMAT_R8G8B8A8_UNORM or DXGI_FORMAT_R8G8B8A8_UINT view would be when hardware reconstructs RGBA automatically on read and before filtering.  This Direct3D hardware behavior is legacy and is likely not useful any more. With this view format, the mapping to the view channel is Y0-&gt;R8, U0-&gt; G8[0], Y1-&gt;B8, and V0-&gt; G8[1]. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y210">
            <summary>
            <para>10-bit per channel packed YUV 4:2:2 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R16G16B16A16_UNORM and DXGI_FORMAT_R16G16B16A16_UINT. The runtime does not enforce whether the lowest 6 bits are 0 (given that this video resource format is a 10-bit format that uses 16 bits). If required, application shader code would have to enforce this manually.  From the runtime's point of view, DXGI_FORMAT_Y210 is no different than DXGI_FORMAT_Y216. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R16, U-&gt;G16, Y1-&gt;B16, and V-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y216">
            <summary>
            <para>16-bit per channel packed YUV 4:2:2 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R16G16B16A16_UNORM and DXGI_FORMAT_R16G16B16A16_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R16, U-&gt;G16, Y1-&gt;B16, and V-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_NV11">
            <summary>
            <para>Most common planar YUV 4:1:1 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R8_UNORM and DXGI_FORMAT_R8_UINT. Valid chrominance data view formats (width and height are each 1/4 of luminance view) for this video resource format are DXGI_FORMAT_R8G8_UNORM and DXGI_FORMAT_R8G8_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R8. For chrominance data view, the mapping to the view channel is U-&gt;R8 and V-&gt;G8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be a multiple of 4. Direct3D11 staging resources and initData parameters for this format use (rowPitch * height * 2) bytes. The first (SysMemPitch * height) bytes are the Y plane, the next ((SysMemPitch / 2) * height) bytes are the UV plane, and the remainder is padding. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_AI44">
            <summary>
            <para>4-bit palletized YUV format that is commonly used for DVD subpicture. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_IA44">
            <summary>
            <para>4-bit palletized YUV format that is commonly used for DVD subpicture. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P8">
            <summary>
            <para>8-bit palletized format that is used for palletized RGB data when the processor processes ISDB-T data and for palletized YUV data when the processor processes BluRay data. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_A8P8">
            <summary>
            <para>8-bit palletized format with 8 bits of alpha that is used for palletized YUV data when the processor processes BluRay data. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B4G4R4A4_UNORM">
            <summary>
            <para>A four-component, 16-bit unsigned-normalized integer format that supports 4 bits for each channel including alpha. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P208">
            <summary>A video format; an 8-bit version of a hybrid planar 4:2:2 format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_V208">
            <summary>An 8 bit YCbCrA 4:4 rendering format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_V408">
            <summary>An 8 bit YCbCrA 4:4:4:4 rendering format.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.Common.DXGI_SAMPLE_DESC">
            <summary>Describes multi-sampling parameters for a resource.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure. The default sampler mode, with no anti-aliasing, has a count of 1 and a quality level of 0. If multi-sample antialiasing is being used, all bound render targets and depth buffers must have the same sample counts and quality levels. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_SAMPLE_DESC.Count">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of multisamples per pixel.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_SAMPLE_DESC.Quality">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The image quality level. The higher the quality, the lower the performance. The valid range is between zero and one less than the level returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nf-d3d10-id3d10device-checkmultisamplequalitylevels">ID3D10Device::CheckMultisampleQualityLevels</a> for Direct3D 10 or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels">ID3D11Device::CheckMultisampleQualityLevels</a> for Direct3D 11. For Direct3D 10.1 and Direct3D 11, you can use two special quality level values. For more information about these quality level values, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D10.ID3D10Multithread.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D10.ID3D10Multithread.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D10.ID3D10Multithread.Enter">
            <summary>Enter a device's critical section. (ID3D10Multithread.Enter)</summary>
            <remarks>
            <para>Entering a device's critical section prevents other threads from simultaneously calling that device's methods (if <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nf-d3d10-id3d10multithread-setmultithreadprotected">multithread protection</a> is set to true), calling DXGI methods, and calling the methods of all resource, view, shader, state, and asynchronous interfaces. This function should be used in multithreaded applications when there is a series of graphics commands that must happen in order. This function is typically called at the beginning of the series of graphics commands, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nf-d3d10-id3d10multithread-leave">ID3D10Multithread::Leave</a> is typically called after those graphics commands.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d10/nf-d3d10-id3d10multithread-enter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D10.ID3D10Multithread.Leave">
            <summary>Leave a device's critical section. (ID3D10Multithread.Leave)</summary>
            <remarks>This function is typically used in multithreaded applications when there is a series of graphics commands that must happen in order. <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nf-d3d10-id3d10multithread-enter">ID3D10Multithread::Enter</a> is typically called at the beginning of a series of graphics commands, and this function is typically called after those graphics commands.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D10.ID3D10Multithread.SetMultithreadProtected(Windows.Win32.Foundation.BOOL)">
            <summary>Turn multithreading on or off.</summary>
            <param name="bMTProtect">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> True to turn multithreading on, false to turn it off.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d10/nf-d3d10-id3d10multithread-setmultithreadprotected#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> True if multithreading was turned on prior to calling this method, false otherwise.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d10/nf-d3d10-id3d10multithread-setmultithreadprotected">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D10.ID3D10Multithread.GetMultithreadProtected">
            <summary>Find out if multithreading is turned on or not.</summary>
            <returns>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Whether or not multithreading is turned on. True means on, false means off.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/d3d10/nf-d3d10-id3d10multithread-getmultithreadprotected">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D10.ID3D10Multithread.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{9b7e4e00-342c-4106-a19f-4f2704f689f0}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Lock(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,Windows.Win32.Graphics.Imaging.IWICBitmapLock**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Lock(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,Windows.Win32.Graphics.Imaging.IWICBitmapLock**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Lock(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,Windows.Win32.Graphics.Imaging.IWICBitmapLock**)">
            <summary>Provides access to a rectangular area of the bitmap.</summary>
            <param name="prcLock">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrect">WICRect</a>*</b> The rectangle to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-lock#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="flags">
            <para>Type: <b>DWORD</b> The access mode you wish to obtain for the lock. This is a bitwise combination of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaplockflags">WICBitmapLockFlags</a> for read, write, or read and write access. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-lock#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppILock">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmaplock">IWICBitmapLock</a>**</b> A pointer that receives the locked memory location.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-lock#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Locks are exclusive for writing but can be shared for reading. You cannot call <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">CopyPixels</a> while the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a> is locked for writing. Doing so will return an error, since locks are exclusive.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.SetPalette(Windows.Win32.Graphics.Imaging.IWICPalette*)">
            <summary>Provides access for palette modifications.</summary>
            <param name="pIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>*</b> The palette to use for conversion.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-setpalette#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-setpalette">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmap.SetResolution(System.Double,System.Double)">
            <summary>Changes the physical resolution of the image.</summary>
            <param name="dpiX">
            <para>Type: <b>double</b> The horizontal resolution.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-setresolution#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dpiY">
            <para>Type: <b>double</b> The vertical resolution.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-setresolution#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>This method has no effect on the actual pixels or samples stored in the bitmap. Instead the interpretation of the sampling rate is modified. This means that a 96 DPI image which is 96 pixels wide is one inch. If the physical resolution is modified to 48 DPI, then the bitmap is considered to be 2 inches wide but has the same number of pixels. If the resolution is less than <b>REAL_EPSILON</b> (1.192092896e-07F) the error code <b>WINCODEC_ERR_INVALIDPARAMETER</b> is returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmap-setresolution#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmap.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000121-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect*)">
            <summary>Initializes the bitmap clipper with the provided parameters.</summary>
            <param name="pISource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> he input bitmap source.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapclipper-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="prc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrect">WICRect</a>*</b> The rectangle of the bitmap source to clip.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapclipper-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapclipper-initialize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{e4fbcf03-223d-4e81-9333-d635556dd1b5}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetCLSID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetSigningStatus(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetAuthor(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetVendorGUID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetSpecVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetFriendlyName(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetContainerFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetContainerFormat(System.Guid*)">
            <summary>Retrieves the container GUID associated with the codec.</summary>
            <param name="pguidContainerFormat">
            <para>Type: <b>GUID*</b> Receives the container GUID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-getcontainerformat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-getcontainerformat">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetPixelFormats(System.Span{System.Guid},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetPixelFormats(System.UInt32,System.Guid*,System.UInt32*)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetPixelFormats(System.UInt32,System.Guid*,System.UInt32*)" -->
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetColorManagementVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetColorManagementVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetColorManagementVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)" -->
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetDeviceManufacturer(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetDeviceManufacturer(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetDeviceManufacturer(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)" -->
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetDeviceModels(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetDeviceModels(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetDeviceModels(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)" -->
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetMimeTypes(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetMimeTypes(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetMimeTypes(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)" -->
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetFileExtensions(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetFileExtensions(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.GetFileExtensions(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)" -->
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportAnimation(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportAnimation(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportAnimation(Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value indicating whether the codec supports animation.</summary>
            <param name="pfSupportAnimation">
            <para>Type: <b>BOOL*</b> Receives <b>TRUE</b> if the codec supports images with timing information; otherwise, <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportanimation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportanimation">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportChromakey(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportChromakey(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportChromakey(Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value indicating whether the codec supports chromakeys.</summary>
            <param name="pfSupportChromakey">
            <para>Type: <b>BOOL*</b> Receives <b>TRUE</b> if the codec supports chromakeys; otherwise, <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportchromakey#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportchromakey">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportLossless(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportLossless(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportLossless(Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value indicating whether the codec supports lossless formats.</summary>
            <param name="pfSupportLossless">
            <para>Type: <b>BOOL*</b> Receives <b>TRUE</b> if the codec supports lossless formats; otherwise, <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportlossless#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportlossless">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value indicating whether the codec supports multi frame images.</summary>
            <param name="pfSupportMultiframe">
            <para>Type: <b>BOOL*</b> Receives <b>TRUE</b> if the codec supports multi frame images; otherwise, <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportmultiframe#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportmultiframe">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.MatchesMimeType(System.String,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.MatchesMimeType(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.MatchesMimeType(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value indicating whether the given mime type matches the mime type of the codec.</summary>
            <param name="wzMimeType">
            <para>Type: <b>LPCWSTR</b> The mime type to compare.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-matchesmimetype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pfMatches">
            <para>Type: <b>BOOL*</b> Receives <b>TRUE</b> if the mime types match; otherwise, <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-matchesmimetype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> This method can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  The Windows provided codecs do not implement this method and return E_NOTIMPL.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapcodecinfo-matchesmimetype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{e87a44c4-b76e-4c47-8b09-298eb12a2714}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.QueryCapability(Windows.Win32.System.Com.IStream*,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.QueryCapability(Windows.Win32.System.Com.IStream*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.QueryCapability(Windows.Win32.System.Com.IStream*,System.UInt32*)">
            <summary>Retrieves the capabilities of the decoder based on the specified stream.</summary>
            <param name="pIStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b> The stream to retrieve the decoder capabilities from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-querycapability#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pdwCapability">
            <para>Type: <b>DWORD*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdecodercapabilities">WICBitmapDecoderCapabilities</a> of the decoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-querycapability#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Custom decoder implementations should save the current position of the specified <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>, read whatever information is necessary in order to determine which capabilities it can provide for the supplied stream, and restore the stream position.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Initialize(Windows.Win32.System.Com.IStream*,Windows.Win32.Graphics.Imaging.WICDecodeOptions)">
            <summary>Initializes the decoder with the provided stream.</summary>
            <param name="pIStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b> The stream to use for initialization. The stream contains the encoded pixels which are decoded each time the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">CopyPixels</a> method on the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> interface (see <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframe">GetFrame</a>) is invoked.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cacheOptions">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use for initialization.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-initialize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetContainerFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetContainerFormat(System.Guid*)">
            <summary>Retrieves the image's container format.</summary>
            <param name="pguidContainerFormat">
            <para>Type: <b>GUID*</b> A pointer that receives the image's container format GUID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getcontainerformat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getcontainerformat">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetDecoderInfo(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo**)">
            <summary>Retrieves an IWICBitmapDecoderInfo for the image.</summary>
            <param name="ppIDecoderInfo">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoderinfo">IWICBitmapDecoderInfo</a>**</b> A pointer that receives a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoderinfo">IWICBitmapDecoderInfo</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getdecoderinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getdecoderinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.CopyPalette(Windows.Win32.Graphics.Imaging.IWICPalette*)">
            <summary>Copies the decoder's IWICPalette .</summary>
            <param name="pIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>*</b> An<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to which the decoder's global palette is to be copied. Use <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette">CreatePalette</a> to create the destination palette before calling <b>CopyPalette</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-copypalette#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks><b>CopyPalette</b> returns a global palette (a palette that applies to all the frames in the image) if there is one; otherwise, it returns WINCODEC_ERR_PALETTEUNAVAILABLE. If an image doesn't have a global palette, it may still have a frame-level palette, which can be retrieved using <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypalette">IWICBitmapFrameDecode::CopyPalette</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetMetadataQueryReader(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader**)">
            <summary>Retrieves the metadata query reader from the decoder.</summary>
            <param name="ppIMetadataQueryReader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>**</b> Receives a pointer to the decoder's <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getmetadataqueryreader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>If an image format does not support container-level metadata, this will return <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-error-codes">WINCODEC_ERR_UNSUPPORTEDOPERATION</a>. The only Windows provided image format that supports container-level metadata is GIF. Instead, use <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframedecode-getmetadataqueryreader">IWICBitmapFrameDecode::GetMetadataQueryReader</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetPreview(Windows.Win32.Graphics.Imaging.IWICBitmapSource**)">
            <summary>Retrieves a preview image, if supported.</summary>
            <param name="ppIBitmapSource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>**</b> Receives a pointer to the preview bitmap if supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getpreview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Not all formats support previews. Only the native Microsoft Windows Digital Photo (WDP) codec support previews.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32*)">
            <summary>Retrieves the IWICColorContext objects of the image.</summary>
            <param name="cCount">
            <para>Type: <b>UINT</b> The number of color contexts to retrieve. This value must be the size of, or smaller than, the size available to <i>ppIColorContexts</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIColorContexts">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>**</b> A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcActualCount">
            <para>Type: <b>UINT*</b> A pointer that receives the number of color contexts contained in the image.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getcolorcontexts">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetThumbnail(Windows.Win32.Graphics.Imaging.IWICBitmapSource**)">
            <summary>Retrieves a bitmap thumbnail of the image, if one exists</summary>
            <param name="ppIThumbnail">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>**</b> Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> of the thumbnail.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getthumbnail#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>The returned thumbnail can be of any size, so the caller should scale the thumbnail to the desired size. The only Windows provided image formats that support thumbnails are JPEG, TIFF, and JPEG-XR. If the thumbnail is not available, this will return <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-error-codes">WINCODEC_ERR_CODECNOTHUMBNAIL</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetFrameCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetFrameCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetFrameCount(System.UInt32*)">
            <summary>Retrieves the total number of frames in the image.</summary>
            <param name="pCount">
            <para>Type: <b>UINT*</b> A pointer that receives the total number of frames in the image.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframecount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframecount">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.GetFrame(System.UInt32,Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode**)">
            <summary>Retrieves the specified frame of the image.</summary>
            <param name="index">
            <para>Type: <b>UINT</b> The particular frame to retrieve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframe#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIBitmapFrame">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a>**</b> A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframe#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframe">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{9edde9e7-8dee-47ea-99df-e6faf2ed44bf}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetCLSID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetSigningStatus(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetAuthor(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetVendorGUID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetSpecVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetFriendlyName(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetContainerFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetPixelFormats(System.Span{System.Guid},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetPixelFormats(System.UInt32,System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetColorManagementVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetColorManagementVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetDeviceManufacturer(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetDeviceManufacturer(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetDeviceModels(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetDeviceModels(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetMimeTypes(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetMimeTypes(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetFileExtensions(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetFileExtensions(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportAnimation(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportAnimation(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportChromakey(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportChromakey(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportLossless(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportLossless(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.MatchesMimeType(System.String,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.MatchesMimeType(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetPatterns(System.UInt32,Windows.Win32.Graphics.Imaging.WICBitmapPattern*,System.UInt32*,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetPatterns(System.UInt32,Windows.Win32.Graphics.Imaging.WICBitmapPattern*,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.GetPatterns(System.UInt32,Windows.Win32.Graphics.Imaging.WICBitmapPattern*,System.UInt32*,System.UInt32*)">
            <summary>Retrieves the file pattern signatures supported by the decoder.</summary>
            <param name="cbSizePatterns">
            <para>Type: <b>UINT</b> The array size of the <i>pPatterns</i> array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-getpatterns#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pPatterns">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicbitmappattern">WICBitmapPattern</a>*</b> Receives a list of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicbitmappattern">WICBitmapPattern</a> objects supported by the decoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-getpatterns#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcPatterns">
            <para>Type: <b>UINT*</b> Receives the number of patterns the decoder supports.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-getpatterns#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcbPatternsActual">
            <para>Type: <b>UINT*</b> Receives the actual buffer size needed to retrieve all pattern signatures supported by the decoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-getpatterns#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>To retrieve all pattern signatures, this method should first be called with <i>pPatterns</i> set to <c>NULL</c> to retrieve the actual buffer size needed through <i>pcbPatternsActual</i>. Once the needed buffer size is known, allocate a buffer of the needed size and call <b>GetPatterns</b> again with the allocated buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-getpatterns#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.MatchesPattern(Windows.Win32.System.Com.IStream*,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.MatchesPattern(Windows.Win32.System.Com.IStream*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.MatchesPattern(Windows.Win32.System.Com.IStream*,Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value that indicates whether the codec recognizes the pattern within a specified stream.</summary>
            <param name="pIStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b> The stream to pattern match within.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-matchespattern#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pfMatches">
            <para>Type: <b>BOOL*</b> A pointer that receives <b>TRUE</b> if the patterns match; otherwise, <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-matchespattern#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-matchespattern">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.CreateInstance(Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)">
            <summary>Creates a new IWICBitmapDecoder instance.</summary>
            <param name="ppIBitmapDecoder">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>**</b> A pointer that receives a pointer to a new instance of the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-createinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapdecoderinfo-createinstance">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{d8cd007f-d08f-4191-9bfc-236ea7f0e4b5}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.Initialize(Windows.Win32.System.Com.IStream*,Windows.Win32.Graphics.Imaging.WICBitmapEncoderCacheOption)">
            <summary>Initializes the encoder with an IStream which tells the encoder where to encode the bits.</summary>
            <param name="pIStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b> The output stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cacheOption">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapencodercacheoption">WICBitmapEncoderCacheOption</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapencodercacheoption">WICBitmapEncoderCacheOption</a> used on initialization.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-initialize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.GetContainerFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.GetContainerFormat(System.Guid*)">
            <summary>Retrieves the encoder's container format.</summary>
            <param name="pguidContainerFormat">
            <para>Type: <b>GUID*</b> A pointer that receives the encoder's container format GUID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-getcontainerformat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-getcontainerformat">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.GetEncoderInfo(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo**)">
            <summary>Retrieves an IWICBitmapEncoderInfo for the encoder.</summary>
            <param name="ppIEncoderInfo">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoderinfo">IWICBitmapEncoderInfo</a>**</b> A pointer that receives a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoderinfo">IWICBitmapEncoderInfo</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-getencoderinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-getencoderinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.SetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**)">
            <summary>Sets the IWICColorContext objects for the encoder.</summary>
            <param name="cCount">
            <para>Type: <b>UINT</b> The number of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIColorContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>**</b> A pointer an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> pointer containing the color contexts to set for the encoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setcolorcontexts">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.SetPalette(Windows.Win32.Graphics.Imaging.IWICPalette*)">
            <summary>Sets the global palette for the image.</summary>
            <param name="pIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to use as the global palette.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setpalette#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Returns S_OK if successful, or an error value otherwise.</para>
            <para>Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</para>
            </returns>
            <remarks>Only GIF images support an optional global palette, and you must set the global palette before adding any frames to the image. You only need to set the palette for indexed pixel formats.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.SetThumbnail(Windows.Win32.Graphics.Imaging.IWICBitmapSource*)">
            <summary>Sets the global thumbnail for the image.</summary>
            <param name="pIThumbnail">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to set as the global thumbnail.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setthumbnail#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Returns S_OK if successful, or an error value otherwise.</para>
            <para>Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setthumbnail">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.SetPreview(Windows.Win32.Graphics.Imaging.IWICBitmapSource*)">
            <summary>Sets the global preview for the image.</summary>
            <param name="pIPreview">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to use as the global preview.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setpreview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Returns S_OK if successful, or an error value otherwise.</para>
            <para>Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-setpreview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.CreateNewFrame(Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode**,Windows.Win32.System.Com.StructuredStorage.IPropertyBag2**)">
            <summary>Creates a new IWICBitmapFrameEncode instance.</summary>
            <param name="ppIFrameEncode">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a>**</b> A pointer that receives a pointer to the new instance of an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-createnewframe#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIEncoderOptions">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768192(v=vs.85)">IPropertyBag2</a>**</b> Optional. Receives the named properties to use for subsequent frame initialization. See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-createnewframe#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>The parameter <i>ppIEncoderOptions</i> can be used to receive an <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768192(v=vs.85)">IPropertyBag2</a> that can then be used to specify encoder options. This is done by passing a pointer to a <b>NULL</b> IPropertyBag2 pointer in <i>ppIEncoderOptions</i>. The returned IPropertyBag2 is initialized with all encoder options that are available for the given format, at their default values. To specify non-default encoding behavior, set the needed encoder options on the IPropertyBag2 and pass it to <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-initialize">IWICBitmapFrameEncode::Initialize</a>. <div class="alert"><b>Note</b>  Do not pass in a pointer to an initialized <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768192(v=vs.85)">IPropertyBag2</a>. The pointer will be overwritten, and the original IPropertyBag2 will not be freed.</div> <div> </div> Otherwise, you can pass <b>NULL</b> in <i>ppIEncoderOptions</i> if you do not intend to specify encoder options. See <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-creating-encoder">Encoding Overview</a> for an example of how to set encoder options. For formats that support encoding multiple frames (for example, TIFF, JPEG-XR), you can work on only one frame at a time. This means that you must call <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-commit">IWICBitmapFrameEncode::Commit</a> before you call <b>CreateNewFrame</b> again.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-createnewframe#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.Commit">
            <summary>Commits all changes for the image and closes the stream.</summary>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>To finalize an image, both the frame <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-commit">Commit</a> and the encoder <b>Commit</b> must be called. However, only call the encoder  <b>Commit</b> method after all frames have been committed. After the encoder has been committed, it can't be re-initialized or reused with another stream. A new encoder interface must be created, for example, with <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createencoder">IWICImagingFactory::CreateEncoder</a>.</para>
            <para>For the encoder <b>Commit</b> to succeed, you must at a minimum call  <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapdecoder-initialize">IWICBitmapEncoder::Initialize</a> and either <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource">IWICBitmapFrameEncode::WriteSource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels">IWICBitmapFrameEncode::WritePixels</a>.</para>
            <para><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource">IWICBitmapFrameEncode::WriteSource</a> specifies all parameters needed to encode the image data. <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels">IWICBitmapFrameEncode::WritePixels</a> requires that you also call <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize">IWICBitmapFrameEncode::SetSize</a>, <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setpixelformat">IWICBitmapFrameEncode::SetPixelFormat</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setpalette">IWICBitmapFrameEncode::SetPalette</a> (if the pixel format is indexed).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-commit#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.GetMetadataQueryWriter(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <summary>Retrieves a metadata query writer for the encoder.</summary>
            <param name="ppIMetadataQueryWriter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>**</b> When this method returns, contains a pointer to the encoder's metadata query writer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-getmetadataquerywriter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoder-getmetadataquerywriter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000103-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetCLSID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetSigningStatus(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetAuthor(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetVendorGUID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetSpecVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetFriendlyName(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetContainerFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetPixelFormats(System.Span{System.Guid},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetPixelFormats(System.UInt32,System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetColorManagementVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetColorManagementVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetDeviceManufacturer(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetDeviceManufacturer(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetDeviceModels(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetDeviceModels(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetMimeTypes(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetMimeTypes(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetFileExtensions(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.GetFileExtensions(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportAnimation(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportAnimation(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportChromakey(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportChromakey(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportLossless(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportLossless(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.MatchesMimeType(System.String,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.MatchesMimeType(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.CreateInstance(Windows.Win32.Graphics.Imaging.IWICBitmapEncoder**)">
            <summary>Creates a new IWICBitmapEncoder instance.</summary>
            <param name="ppIBitmapEncoder">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoder">IWICBitmapEncoder</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoder">IWICBitmapEncoder</a> instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoderinfo-createinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapencoderinfo-createinstance">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{94c9b4ee-a09f-4f92-8a1e-4a9bce7e76fb}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions)">
            <summary>Initializes the bitmap flip rotator with the provided parameters.</summary>
            <param name="pISource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The input bitmap source.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapfliprotator-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="options">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a> to flip or rotate the image.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapfliprotator-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapfliprotator-initialize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{5009834f-2d6a-41ce-9e1b-17c5aff7a782}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetMetadataQueryReader(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader**)">
            <summary>Retrieves a metadata query reader for the frame.</summary>
            <param name="ppIMetadataQueryReader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>**</b> When this method returns, contains a pointer to the frame's metadata query reader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframedecode-getmetadataqueryreader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>For image formats with one frame (JPG, PNG, JPEG-XR), the frame-level query reader of the first frame is used to access all image metadata, and the decoder-level query reader isn’t used. For formats with more than one frame (GIF, TIFF), the frame-level query reader for a given frame is used to access metadata specific to that frame, and in the case of GIF a decoder-level metadata reader will be present. If the decoder doesn’t support metadata (BMP, ICO), this will return <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-error-codes">WINCODEC_ERR_UNSUPPORTEDOPERATION</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32*)">
            <summary>Retrieves the IWICColorContext associated with the image frame.</summary>
            <param name="cCount">
            <para>Type: <b>UINT</b> The number of color contexts to retrieve. This value must be the size of, or smaller than, the size available to <i>ppIColorContexts</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframedecode-getcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIColorContexts">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>**</b> A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> objects.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframedecode-getcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcActualCount">
            <para>Type: <b>UINT*</b> A pointer that receives the number of color contexts contained in the image frame.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframedecode-getcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>If NULL is passed for <i>ppIColorContexts</i>, and 0 is passed for <i>cCount</i>, this method will return the total number of color contexts in the image in <i>pcActualCount</i>.</para>
            <para>The <i>ppIColorContexts</i> array must be filled with valid data: each <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext*</a> in the array must have been created using <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createcolorcontext">IWICImagingFactory::CreateColorContext</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframedecode-getcolorcontexts#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.GetThumbnail(Windows.Win32.Graphics.Imaging.IWICBitmapSource**)">
            <summary>Retrieves a small preview of the frame, if supported by the codec.</summary>
            <param name="ppIThumbnail">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>**</b> A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> of the thumbnail.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframedecode-getthumbnail#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Not all formats support thumbnails. Joint Photographic Experts Group (JPEG), Tagged Image File Format (TIFF), and Microsoft Windows Digital Photo (WDP) support thumbnails. <h3><a id="Note_to_Implementers"></a><a id="note_to_implementers"></a><a id="NOTE_TO_IMPLEMENTERS"></a>Note to Implementers</h3> If the codec does not support thumbnails, return WINCODEC_ERROR_CODECNOTHUMBNAIL rather than E_NOTIMPL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframedecode-getthumbnail#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{3b16811b-6a43-4ec9-a813-3d930c13b940}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Initialize(Windows.Win32.System.Com.StructuredStorage.IPropertyBag2*)">
            <summary>Initializes the frame encoder using the given properties.</summary>
            <param name="pIEncoderOptions">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768192(v=vs.85)">IPropertyBag2</a>*</b> The set of properties to use for <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a> initialization.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>If you don't want any encoding options, pass <b>NULL</b> for <i>pIEncoderOptions</i>. Otherwise, pass the <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768192(v=vs.85)">IPropertyBag2</a> that was provided by <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapencoder-createnewframe">IWICBitmapEncoder::CreateNewFrame</a> with updated values.</para>
            <para>For a complete list of encoding options supported by the Windows-provided codecs, see <a href="https://docs.microsoft.com/windows/desktop/wic/native-wic-codecs">Native WIC Codecs</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-initialize#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetSize(System.UInt32,System.UInt32)">
            <summary>Sets the output image dimensions for the frame.</summary>
            <param name="uiWidth">
            <para>Type: <b>UINT</b> The width of the output image.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="uiHeight">
            <para>Type: <b>UINT</b> The height of the output image.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetResolution(System.Double,System.Double)">
            <summary>Sets the physical resolution of the output image.</summary>
            <param name="dpiX">
            <para>Type: <b>double</b> The horizontal resolution value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setresolution#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dpiY">
            <para>Type: <b>double</b> The vertical resolution value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setresolution#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Windows Imaging Component (WIC) doesn't perform any special processing as a result of DPI resolution values. For example, data returned from <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">IWICBitmapSource::CopyPixels</a> isn't scaled by the DPI. The app must handle DPI resolution.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetPixelFormat(System.Guid*)">
            <summary>Requests that the encoder use the specified pixel format.</summary>
            <param name="pPixelFormat">
            <para>Type: <b>WICPixelFormatGUID*</b> On input, the requested pixel format GUID. On output, the closest pixel format GUID supported by the encoder; this may be different than the requested format. For a list of pixel format GUIDs, see <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setpixelformat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Possible return values include the following. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>The encoder might not support the requested pixel format. If not, <b>SetPixelFormat</b> returns the closest match in the memory block that <i>pPixelFormat</i> points to. If the returned pixel format doesn't match the requested format, you must use an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicformatconverter">IWICFormatConverter</a> object to convert the pixel data.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**)">
            <summary>Sets a given number IWICColorContext profiles to the frame.</summary>
            <param name="cCount">
            <para>Type: <b>UINT</b> The number of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> profiles to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIColorContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>**</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> pointer containing the color contexts profiles to set to the frame.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setcolorcontexts#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setcolorcontexts#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetPalette(Windows.Win32.Graphics.Imaging.IWICPalette*)">
            <summary>Sets the IWICPalette for indexed pixel formats.</summary>
            <param name="pIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to use for indexed pixel formats. The encoder may change the palette to reflect the pixel formats the encoder supports.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setpalette#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>This method doesn't fail if called on a frame whose pixel format is set to a non-indexed pixel format. If the target pixel format is a non-indexed format, the palette will be ignored. If you already called <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapencoder-setpalette">IWICBitmapEncoder::SetPalette</a> to set a global palette, this method overrides that palette for the current frame. The palette must be specified before your first call to <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicplanarbitmapframeencode-writepixels">WritePixels</a>/<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource">WriteSource</a>. Doing so will cause <b>WriteSource</b> to use the specified palette when converting the source image to the encoder pixel format. If no palette is specified, a palette will be generated on the first call to <b>WriteSource</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setpalette#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.SetThumbnail(Windows.Win32.Graphics.Imaging.IWICBitmapSource*)">
            <summary>Sets the frame thumbnail if supported by the codec.</summary>
            <param name="pIThumbnail">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The bitmap source to use as the thumbnail.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setthumbnail#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Returns S_OK if successful, or an error value otherwise.</para>
            <para>Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</para>
            </returns>
            <remarks>
            <para>We recommend that you call <b>SetThumbnail</b> before calling <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels">WritePixels</a> or <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource">WriteSource</a>. The thumbnail won't be added to the encoded file if <b>SetThumbnail</b> is called after a call to <b>WritePixels</b> or <b>WriteSource</b>.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-setthumbnail#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.WritePixels(System.UInt32,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.WritePixels(System.UInt32,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.WritePixels(System.UInt32,System.UInt32,System.UInt32,System.Byte*)">
            <summary>Copies scan-line data from a caller-supplied buffer to the IWICBitmapFrameEncode object.</summary>
            <param name="lineCount">
            <para>Type: <b>UINT</b> The number of lines to encode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbStride">
            <para>Type: <b>UINT</b> The stride of the image pixels.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbBufferSize">
            <para>Type: <b>UINT</b> The size of the pixel buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pbPixels">
            <para>Type: <b>BYTE*</b> A pointer to the pixel buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Possible return values include the following. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>Successive <b>WritePixels</b> calls are assumed to be sequential scan-line access in the output image.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.WriteSource(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.WriteSource(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.WriteSource(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect*)">
            <summary>Encodes a bitmap source.</summary>
            <param name="pIBitmapSource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The bitmap source to encode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="prc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrect">WICRect</a>*</b> The size rectangle of the bitmap source.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>If <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize">SetSize</a> is not called prior to calling <b>WriteSource</b>, the size given in <i>prc</i> is used if not <b>NULL</b>. Otherwise, the size of the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> given in <i>pIBitmapSource</i> is used. If <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setpixelformat">SetPixelFormat</a> is not called prior to calling <b>WriteSource</b>, the pixel format of the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> given in <i>pIBitmapSource</i> is used. If <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setresolution">SetResolution</a> is not called prior to calling <b>WriteSource</b>, the pixel format of <i>pIBitmapSource</i> is used. If <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setpalette">SetPalette</a> is not called prior to calling <b>WriteSource</b>, the target pixel format is indexed, and the pixel format of <i>pIBitmapSource</i> matches the encoder frame's pixel format, then the <i>pIBitmapSource</i> pixel format is used. When encoding a GIF image, if the global palette is set and the frame level palette is not set directly by the user or by a custom independent software vendor (ISV) GIF codec, <b>WriteSource</b> will use the global palette to encode the frame even when <i>pIBitmapSource</i> has a frame level palette. Starting with  Windows Vista, repeated <b>WriteSource</b> calls can be made as long as the total accumulated source rect height is the same as set through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize">SetSize</a>. Starting with Windows 8.1, the source rect must be at least the dimensions set through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize">SetSize</a>. If the source rect width exceeds the <b>SetSize</b> width, extra pixels on the right side are ignored. If the source rect height exceeds the remaining unfilled height, extra scan lines on the bottom are ignored.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Commit">
            <summary>Commits the frame to the image.</summary>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>After the frame <b>Commit</b> has been called, you can't use or reinitialize the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a> object and any objects created from it.</para>
            <para>To finalize the image, both the frame <b>Commit</b> and the encoder <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapencoder-commit">Commit</a> must be called. However, only call the encoder  <b>Commit</b> method after all frames have been committed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-commit#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.GetMetadataQueryWriter(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <summary>Gets the metadata query writer for the encoder frame.</summary>
            <param name="ppIMetadataQueryWriter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>**</b> When this method returns, contains a pointer to metadata query writer for the encoder frame.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapframeencode-getmetadataquerywriter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>If you are setting metadata on the frame, you must do this before you use <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writepixels">IWICBitmapFrameEncode::WritePixels</a> or <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-writesource">IWICBitmapFrameEncode::WriteSource</a> to write any image pixels to the frame</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000105-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetSize(System.UInt32*,System.UInt32*)">
            <summary>Retrieves the width and height, in pixels, of the locked rectangle.</summary>
            <param name="puiWidth">
            <para>Type: <b>UINT*</b> A pointer that receives the width of the locked rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getsize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="puiHeight">
            <para>Type: <b>UINT*</b> A pointer that receives the height of the locked rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getsize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getsize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetStride(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetStride(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetStride(System.UInt32*)">
            <summary>Provides access to the stride value for the memory.</summary>
            <param name="pcbStride">Type: <b>UINT*</b></param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Note the stride value is specific to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmaplock">IWICBitmapLock</a>, not the bitmap. For example, two consecutive locks on the same rectangle of a bitmap may return different pointers and stride values, depending on internal implementation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getstride#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetDataPointer(System.UInt32@,System.Byte**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetDataPointer(System.UInt32*,System.Byte**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetDataPointer(System.UInt32*,System.Byte**)">
            <summary>Gets the pointer to the top left pixel in the locked rectangle.</summary>
            <param name="pcbBufferSize">
            <para>Type: <b>UINT*</b> A pointer that receives the size of the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getdatapointer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppbData">
            <para>Type: <b>BYTE**</b> A pointer that receives a pointer to the top left pixel in the locked rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getdatapointer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>The pointer provided by this method should not be used outside of the lifetime of the lock itself. <b>GetDataPointer</b> is not available in multi-threaded apartment applications.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getdatapointer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.GetPixelFormat(System.Guid*)">
            <summary>Gets the pixel format of for the locked area of pixels. This can be used to compute the number of bytes-per-pixel in the locked area.</summary>
            <param name="pPixelFormat">
            <para>Type: <b>WICPixelFormatGUID*</b> A pointer that receives the pixel format GUID of the locked area.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getpixelformat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmaplock-getpixelformat">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapLock.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000123-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Imaging.WICBitmapInterpolationMode)">
            <summary>Initializes the bitmap scaler with the provided parameters.</summary>
            <param name="pISource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The input bitmap source.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapscaler-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="uiWidth">
            <para>Type: <b>UINT</b> The destination width.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapscaler-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="uiHeight">
            <para>Type: <b>UINT</b> The destination height.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapscaler-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="mode">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapinterpolationmode">WICBitmapInterpolationMode</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapinterpolationmode">WICBitmapInterpolationMode</a> to use when scaling.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapscaler-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapscaler">IWICBitmapScaler</a> can't be initialized multiple times. For example, when scaling every frame in a multi-frame image, a new <b>IWICBitmapScaler</b> must be created and initialized for each frame.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000302-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetSize(System.UInt32*,System.UInt32*)">
            <summary>Retrieves the pixel width and height of the bitmap.</summary>
            <param name="puiWidth">
            <para>Type: <b>UINT*</b> A pointer that receives the pixel width of the bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getsize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="puiHeight">
            <para>Type: <b>UINT*</b> A pointer that receives the pixel height of the bitmap</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getsize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getsize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetPixelFormat(System.Guid*)">
            <summary>Retrieves the pixel format of the bitmap source..</summary>
            <param name="pPixelFormat">
            <para>Type: <b>WICPixelFormatGUID*</b> Receives the pixel format GUID the bitmap is stored in. For a list of available pixel formats, see the <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a> topic.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getpixelformat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>The pixel format returned by this method is not necessarily the pixel format the image is stored as. The codec may perform a format conversion from the storage pixel format to an output pixel format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getpixelformat#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.GetResolution(System.Double*,System.Double*)">
            <summary>Retrieves the sampling rate between pixels and physical world measurements.</summary>
            <param name="pDpiX">
            <para>Type: <b>double*</b> A pointer that receives the x-axis dpi resolution.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getresolution#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDpiY">
            <para>Type: <b>double*</b> A pointer that receives the y-axis dpi resolution.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getresolution#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Some formats, such as GIF and ICO, do not have full DPI support. For GIF, this method calculates the DPI values from the aspect ratio, using a base DPI of (96.0, 96.0). The ICO format does not support DPI at all, and the method always returns (96.0,96.0) for ICO images.</para>
            <para>Additionally, WIC itself does not transform images based on the DPI values in an image. It is up to the caller to transform an image based on the resolution returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-getresolution#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.CopyPalette(Windows.Win32.Graphics.Imaging.IWICPalette*)">
            <summary>Retrieves the color table for indexed pixel formats.</summary>
            <param name="pIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>*</b> An <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>. A palette can be created using the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette">CreatePalette</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypalette#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Returns one of the following values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> is an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a>, the function may return the image's global palette if a frame-level palette is not available. The global palette may also be retrieved using the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapdecoder-copypalette">CopyPalette</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypalette#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)">
            <summary>Instructs the object to produce pixels.</summary>
            <param name="prc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrect">WICRect</a>*</b> The rectangle to copy. A <b>NULL</b> value specifies the entire bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbStride">
            <para>Type: <b>UINT</b> The stride of the bitmap</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbBufferSize">
            <para>Type: <b>UINT</b> The size of the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pbBuffer">
            <para>Type: <b>BYTE*</b> A pointer to the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><b>CopyPixels</b> is one of the two main image processing routines (the other being <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmap-lock">Lock</a>) triggering the actual processing. It instructs the object to produce pixels according to its algorithm - this may involve decoding a portion of a JPEG stored on disk, copying a block of memory, or even analytically computing a complex gradient. The algorithm is completely dependent on the object implementing the interface.</para>
            <para>The caller can restrict the operation to a rectangle of interest (ROI) using the prc parameter. The ROI sub-rectangle must be fully contained in the bounds of the bitmap. Specifying a <b>NULL</b> ROI implies that the whole bitmap should be returned.</para>
            <para>The caller controls the memory management and must provide an output buffer (<i>pbBuffer</i>) for the results of the copy along with the buffer's bounds (<i>cbBufferSize</i>). The cbStride parameter defines the count of bytes between two vertically adjacent pixels in the output buffer. The caller must ensure that there is sufficient buffer to complete the call based on the width, height and pixel format of the bitmap and the sub-rectangle provided to the copy method.</para>
            <para>If the caller needs to perform numerous copies of an expensive <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> such as a JPEG, it is recommended to create an in-memory <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a> first.</para>
            <para><h3><a id="Codec_Developer_Remarks"></a><a id="codec_developer_remarks"></a><a id="CODEC_DEVELOPER_REMARKS"></a>Codec Developer Remarks</h3> The callee must only write to the first (prc-&gt;Width*bitsperpixel+7)/8 bytes of each line of the output buffer (in this case, a line is a consecutive string of <i>cbStride</i> bytes).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICBitmapSource.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000120-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.InitializeFromFilename(System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.InitializeFromFilename(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.InitializeFromFilename(Windows.Win32.Foundation.PCWSTR)">
            <summary>Initializes the color context from the given file.</summary>
            <param name="wzFilename">
            <para>Type: <b>LPCWSTR</b> The name of the file.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-initializefromfilename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Once a color context has been initialized, it can't be re-initialized.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.InitializeFromMemory(System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.InitializeFromMemory(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.InitializeFromMemory(System.Byte*,System.UInt32)">
            <summary>Initializes the color context from a memory block.</summary>
            <param name="pbBuffer">
            <para>Type: <b>const BYTE*</b> The buffer used to initialize the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-initializefrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbBufferSize">
            <para>Type: <b>UINT</b> The size of the <i>pbBuffer</i> buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-initializefrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Once a color context has been initialized, it can't be re-initialized.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.InitializeFromExifColorSpace(System.UInt32)">
            <summary>Initializes the color context using an Exchangeable Image File (EXIF) color space.</summary>
            <param name="value">
            <para>Type: <b>UINT</b> The value of the EXIF color space. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-initializefromexifcolorspace#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Once a color context has been initialized, it can't be re-initialized.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetType(Windows.Win32.Graphics.Imaging.WICColorContextType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetType(Windows.Win32.Graphics.Imaging.WICColorContextType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetType(Windows.Win32.Graphics.Imaging.WICColorContextType*)">
            <summary>Retrieves the color context type. (IWICColorContext.GetType)</summary>
            <param name="pType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccolorcontexttype">WICColorContextType</a>*</b> A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccolorcontexttype">WICColorContextType</a> of the color context.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-gettype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-gettype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetProfileBytes(System.Span{System.Byte},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetProfileBytes(System.UInt32,System.Byte*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetProfileBytes(System.UInt32,System.Byte*,System.UInt32*)">
            <summary>Retrieves the color context profile.</summary>
            <param name="cbBuffer">
            <para>Type: <b>UINT</b> The size of the <i>pbBuffer</i> buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-getprofilebytes#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pbBuffer">
            <para>Type: <b>BYTE*</b> A pointer that receives the color context profile.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-getprofilebytes#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcbActual">
            <para>Type: <b>UINT*</b> A pointer that receives the actual buffer size needed to retrieve the entire color context profile.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-getprofilebytes#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Only use this method if the context type is <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccolorcontexttype">WICColorContextProfile</a>.</para>
            <para>Calling this method with <i>pbBuffer</i> set to <b>NULL</b> will cause it to return the required buffer size in <i>pcbActual</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-getprofilebytes#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetExifColorSpace(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetExifColorSpace(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorContext.GetExifColorSpace(System.UInt32*)">
            <summary>Retrieves the Exchangeable Image File (EXIF) color space color context.</summary>
            <param name="pValue">
            <para>Type: <b>UINT*</b> A pointer that receives the EXIF color space color context. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolorcontext-getexifcolorspace#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>This method should only be used when <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwiccolorcontext-gettype">IWICColorContext::GetType</a> indicates <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccolorcontexttype">WICColorContextExifColorSpace</a>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICColorContext.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{3c613a02-34b2-44ea-9a7c-45aea9c6fd6d}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.IWICColorContext*,Windows.Win32.Graphics.Imaging.IWICColorContext*,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.IWICColorContext*,Windows.Win32.Graphics.Imaging.IWICColorContext*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.IWICColorContext*,Windows.Win32.Graphics.Imaging.IWICColorContext*,System.Guid*)">
            <summary>Initializes an IWICColorTransform with a IWICBitmapSource and transforms it from one IWICColorContext to another.</summary>
            <param name="pIBitmapSource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The bitmap source used to initialize the color transform.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pIContextSource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>*</b> The color context source.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pIContextDest">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>*</b> The color context destination.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pixelFmtDest">
            <para>Type: <b>REFWICPixelFormatGUID</b> The GUID of the desired pixel format. This parameter is limited to a subset of the native WIC pixel formats, see Remarks for a list.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolortransform-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>The currently supported formats for the <i>pIContextSource</i>  and <i>pixelFmtDest</i> parameters are:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccolortransform-initialize#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICColorTransform.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{b66f034f-d0e2-40ab-b436-6de39e321a94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)">
            <summary>Retrieves the component's WICComponentType.</summary>
            <param name="pType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponenttype">WICComponentType</a>*</b> A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponenttype">WICComponentType</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getcomponenttype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getcomponenttype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetCLSID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetCLSID(System.Guid*)">
            <summary>Retrieves the component's class identifier (CLSID)</summary>
            <param name="pclsid">
            <para>Type: <b>CLSID*</b> A pointer that receives the component's CLSID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getclsid#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getclsid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetSigningStatus(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetSigningStatus(System.UInt32*)">
            <summary>Retrieves the signing status of the component.</summary>
            <param name="pStatus">
            <para>Type: <b>DWORD*</b> A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponentsigning">WICComponentSigning</a> status of the component.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getsigningstatus#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Signing is unused by WIC. Therefore, all components WICComponentSigned. This function can be used to determine whether a component has no binary component or has been added to the disabled components list in the registry.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getsigningstatus#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetAuthor(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)">
            <summary>Retrieves the name of component's author.</summary>
            <param name="cchAuthor">
            <para>Type: <b>UINT</b> The size of the <i>wzAuthor</i> buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getauthor#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wzAuthor">
            <para>Type: <b>WCHAR*</b> A pointer that receives the name of the component's author. The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getauthor#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcchActual">
            <para>Type: <b>UINT*</b> A pointer that receives the actual length of the component's authors name. The author name is optional; if an author name is not specified by the component, the length returned is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getauthor#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>If <i>cchAuthor</i> is 0 and <i>wzAuthor</i> is <b>NULL</b>, the required buffer size is returned in <i>pccchActual</i>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetVendorGUID(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetVendorGUID(System.Guid*)">
            <summary>Retrieves the vendor GUID.</summary>
            <param name="pguidVendor">
            <para>Type: <b>GUID*</b> A pointer that receives the component's vendor GUID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getvendorguid#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getvendorguid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)">
            <summary>Retrieves the component's version.</summary>
            <param name="cchVersion">
            <para>Type: <b>UINT</b> The size of the <i>wzVersion</i> buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getversion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wzVersion">
            <para>Type: <b>WCHAR*</b> A pointer that receives a culture invariant string of the component's version.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getversion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcchActual">
            <para>Type: <b>UINT*</b> A pointer that receives the actual length of the component's version. The version is optional; if a value is not specified by the component, the length returned is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getversion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>All built-in components return "1.0.0.0", except for pixel formats, which do not have a version. If <i>cchAuthor</i> is 0 and <i>wzAuthor</i> is <b>NULL</b>, the required buffer size is returned in <i>pccchActual</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getversion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetSpecVersion(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)">
            <summary>Retrieves the component's specification version.</summary>
            <param name="cchSpecVersion">
            <para>Type: <b>UINT</b> The size of the <i>wzSpecVersion</i> buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getspecversion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wzSpecVersion">
            <para>Type: <b>WCHAR*</b> When this method returns, contain a culture invariant string of the component's specification version. The version form is NN.NN.NN.NN.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getspecversion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcchActual">
            <para>Type: <b>UINT*</b> A pointer that receives the actual length of the component's specification version. The specification version is optional; if a value is not specified by the component, the length returned is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getspecversion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>All built-in components return "1.0.0.0", except for pixel formats, which do not have a spec version. If <i>cchAuthor</i> is 0 and <i>wzAuthor</i> is <b>NULL</b>, the required buffer size is returned in <i>pccchActual</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getspecversion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetFriendlyName(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)">
            <summary>Retrieves the component's friendly name, which is a human-readable display name for the component.</summary>
            <param name="cchFriendlyName">
            <para>Type: <b>UINT</b> The size of the <i>wzFriendlyName</i> buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getfriendlyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wzFriendlyName">
            <para>Type: <b>WCHAR*</b> A pointer that receives the friendly name of the component. The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getfriendlyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcchActual">
            <para>Type: <b>UINT*</b> A pointer that receives the actual length of the component's friendly name.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwiccomponentinfo-getfriendlyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>If <i>cchFriendlyName</i> is 0 and <i>wzFriendlyName</i> is <b>NULL</b>, the required buffer size is returned in <i>pccchActual</i>.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICComponentInfo.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{23bc3f0a-698b-4357-886b-f24d50671334}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFastMetadataEncoder.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFastMetadataEncoder.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFastMetadataEncoder.Commit">
            <summary>Finalizes metadata changes to the image stream.</summary>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>If the commit fails and returns <b>WINCODEC_ERR_STREAMNOTAVAILABLE</b>, ensure that the image decoder was loaded using the <b>WICDecodeMetadataCacheOnDemand</b> option. A fast metadata encoder is not supported when the decoder is created using the <b>WICDecodeMetadataCacheOnLoad</b> option. If the commit fails for any reason, you will need to re-encode the image to ensure the new metadata is added to the image.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicfastmetadataencoder-commit#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFastMetadataEncoder.GetMetadataQueryWriter(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <summary>Retrieves a metadata query writer for fast metadata encoding.</summary>
            <param name="ppIMetadataQueryWriter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>**</b> When this method returns, contains a pointer to the fast metadata encoder's metadata query writer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicfastmetadataencoder-getmetadataquerywriter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicfastmetadataencoder-getmetadataquerywriter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICFastMetadataEncoder.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{b84e2c09-78c9-4ac4-8bd3-524ae1663a2f}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.GetSize(System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.GetPixelFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.GetResolution(System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.Guid@,Windows.Win32.Graphics.Imaging.WICBitmapDitherType,Windows.Win32.Graphics.Imaging.IWICPalette*,System.Double,Windows.Win32.Graphics.Imaging.WICBitmapPaletteType)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.Guid*,Windows.Win32.Graphics.Imaging.WICBitmapDitherType,Windows.Win32.Graphics.Imaging.IWICPalette*,System.Double,Windows.Win32.Graphics.Imaging.WICBitmapPaletteType)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.Guid*,Windows.Win32.Graphics.Imaging.WICBitmapDitherType,Windows.Win32.Graphics.Imaging.IWICPalette*,System.Double,Windows.Win32.Graphics.Imaging.WICBitmapPaletteType)">
            <summary>Initializes the format converter.</summary>
            <param name="pISource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The input bitmap to convert</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dstFormat">
            <para>Type: <b>REFWICPixelFormatGUID</b> The destination pixel format GUID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dither">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdithertype">WICBitmapDitherType</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdithertype">WICBitmapDitherType</a> used for conversion.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>*</b> The palette to use for conversion.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="alphaThresholdPercent">
            <para>Type: <b>double</b> The alpha threshold to use for conversion.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="paletteTranslate">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmappalettetype">WICBitmapPaletteType</a></b> The palette translation type to use for conversion.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-initialize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>If you do not have a predefined palette, you must first create one. Use <a href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializefrombitmap">InitializeFromBitmap</a> to create the palette object, then pass it in along with your other parameters.</para>
            <para><i>dither</i>, <i>pIPalette</i>, <i>alphaThresholdPercent</i>, and <i>paletteTranslate</i> are used to mitigate color loss when converting to a reduced bit-depth format. For conversions that do not need these settings, the following parameters values should be used: <i>dither</i> set to <b>WICBitmapDitherTypeNone</b>, <i>pIPalette</i> set to <b>NULL</b>, <i>alphaThresholdPercent</i> set to <b>0.0f</b>, and <i>paletteTranslate</i> set to <b>WICBitmapPaletteTypeCustom</b>.</para>
            <para>The basic algorithm involved when using an ordered dither requires a fixed palette, found in the <a href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmappalettetype">WICBitmapPaletteType</a> enumeration, in a specific order. Often, the actual palette provided for the output may have a different ordering or some slight variation in the actual colors. This is the case when using the Microsoft Windows palette which has slight differences among versions of Windows.To provide for this, a palette and a palette translation are given to the format converter. The <i>pIPalette</i> is the actual destination palette to be used and the <i>paletteTranslate</i> is a fixed palette. Once the conversion is complete, the colors are mapped from the fixed palette to the actual colors in <i>pIPalette</i> using a nearest color matching algorithm. If colors in <i>pIPalette</i> do not closely match those in <i>paletteTranslate</i>, the mapping may produce undesirable results. <b>WICBitmapDitherTypeOrdered4x4</b> can be useful in format conversions from 8-bit formats to 5- or 6-bit formats as there is no way to accurately convert color data. <b>WICBitmapDitherTypeErrorDiffusion</b> selects the error diffusion algorithm and may be used with any palette. If an arbitrary palette is provided, <b>WICBitmapPaletteCustom</b> should be passed in as the <i>paletteTranslate</i>. Error diffusion often provides superior results compared to the ordered dithering algorithms especially when combined with the optimized palette generation functionality on the <a href="https://docs.microsoft.com/windows/win32/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>. When converting a bitmap which has an alpha channel, such as a Portable Network Graphics (PNG), to 8bpp, the alpha channel is normally ignored. Any pixels which were transparent in the original bitmap show up as black in the final output because both transparent and black have pixel values of zero in the respective formats. Some 8bpp content can contains an alpha color; for instance, the Graphics Interchange Format (GIF) format allows for a single palette entry to be used as a transparent color. For this type of content, <i>alphaThresholdPercent</i>  specifies what percentage of transparency should map to the transparent color. Because the alpha value is directly proportional to the opacity (not transparency) of a pixel, the <i>alphaThresholdPercent</i> indicates what level of opacity is mapped to the fully transparent color. For instance, 9.8% implies that any pixel with an alpha value of less than 25 will be mapped to the transparent color. A value of 100% maps all pixels which are not fully opaque to the transparent color. Note that the palette should provide a transparent color. If it does not, the 'transparent' color will be the one closest to zero - often black.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-initialize#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.CanConvert(System.Guid@,System.Guid@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.CanConvert(System.Guid*,System.Guid*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.CanConvert(System.Guid*,System.Guid*,Windows.Win32.Foundation.BOOL*)">
            <summary>Determines if the source pixel format can be converted to the destination pixel format.</summary>
            <param name="srcPixelFormat">
            <para>Type: <b>REFWICPixelFormatGUID</b> The source pixel format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-canconvert#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dstPixelFormat">
            <para>Type: <b>REFWICPixelFormatGUID</b> The destination pixel format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-canconvert#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pfCanConvert">
            <para>Type: <b>BOOL*</b> A pointer that receives a value indicating whether the source pixel format can be converted to the destination pixel format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-canconvert#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicformatconverter-canconvert">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICFormatConverter.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000301-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromFilename(System.String,System.Nullable{System.Guid},Windows.Win32.Foundation.GENERIC_ACCESS_RIGHTS,Windows.Win32.Graphics.Imaging.WICDecodeOptions)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromFilename(Windows.Win32.Foundation.PCWSTR,System.Guid*,Windows.Win32.Foundation.GENERIC_ACCESS_RIGHTS,Windows.Win32.Graphics.Imaging.WICDecodeOptions)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromFilename(Windows.Win32.Foundation.PCWSTR,System.Guid*,Windows.Win32.Foundation.GENERIC_ACCESS_RIGHTS,Windows.Win32.Graphics.Imaging.WICDecodeOptions)">
            <summary>Creates a new instance of the IWICBitmapDecoder class based on the given file.</summary>
            <param name="wzFilename">
            <para>Type: <b>LPCWSTR</b> A pointer to a null-terminated string that specifies the name of an object to create or open.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pguidVendor">
            <para>Type: <b>const GUID*</b> The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dwDesiredAccess">
            <para>Type: <b>DWORD</b> The access to the object, which can be read, write, or both.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="metadataOptions">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilename">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromStream(Windows.Win32.System.Com.IStream*,System.Guid@,Windows.Win32.Graphics.Imaging.WICDecodeOptions)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromStream(Windows.Win32.System.Com.IStream*,System.Guid*,Windows.Win32.Graphics.Imaging.WICDecodeOptions)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromStream(Windows.Win32.System.Com.IStream*,System.Guid*,Windows.Win32.Graphics.Imaging.WICDecodeOptions)">
            <summary>Creates a new instance of the IWICBitmapDecoder class based on the given IStream.</summary>
            <param name="pIStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b> The stream to create the decoder from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromstream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pguidVendor">
            <para>Type: <b>const GUID*</b> The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromstream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="metadataOptions">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromstream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromstream">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromFileHandle(System.UIntPtr,System.Guid@,Windows.Win32.Graphics.Imaging.WICDecodeOptions)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromFileHandle(System.UIntPtr,System.Guid*,Windows.Win32.Graphics.Imaging.WICDecodeOptions)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoderFromFileHandle(System.UIntPtr,System.Guid*,Windows.Win32.Graphics.Imaging.WICDecodeOptions)">
            <summary>Creates a new instance of the IWICBitmapDecoder based on the given file handle.</summary>
            <param name="hFile">
            <para>Type: <b>ULONG_PTR</b> The file handle to create the decoder from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pguidVendor">
            <para>Type: <b>const GUID*</b> The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="metadataOptions">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilehandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>When a decoder is created using this method, the file handle must remain alive during the lifetime of the decoder.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateComponentInfo(System.Guid@,Windows.Win32.Graphics.Imaging.IWICComponentInfo**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateComponentInfo(System.Guid*,Windows.Win32.Graphics.Imaging.IWICComponentInfo**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateComponentInfo(System.Guid*,Windows.Win32.Graphics.Imaging.IWICComponentInfo**)">
            <summary>Creates a new instance of the IWICComponentInfo class for the given component class identifier (CLSID).</summary>
            <param name="clsidComponent">
            <para>Type: <b>REFCLSID</b> The CLSID for the desired component.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcomponentinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIInfo">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccomponentinfo">IWICComponentInfo</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccomponentinfo">IWICComponentInfo</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcomponentinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcomponentinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoder(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoder(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateDecoder(System.Guid*,System.Guid*)">
            <summary>Creates a new instance of IWICBitmapDecoder.</summary>
            <param name="guidContainerFormat">
            <para>Type: <b>REFGUID</b> The GUID for the desired container format. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoder#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pguidVendor">
            <para>Type: <b>const GUID*</b> The GUID for the preferred encoder vendor. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoder#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Other values may be available for both <i>guidContainerFormat</i> and <i>pguidVendor</i> depending on the installed WIC-enabled encoders. The values listed are those that are natively supported by the operating system.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoder#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateEncoder(System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateEncoder(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateEncoder(System.Guid*,System.Guid*)">
            <summary>Creates a new instance of the IWICBitmapEncoder class.</summary>
            <param name="guidContainerFormat">
            <para>Type: <b>REFGUID</b> The GUID for the desired container format. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createencoder#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pguidVendor">
            <para>Type: <b>const GUID*</b> The GUID for the preferred encoder vendor. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createencoder#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Other values may be available for both <i>guidContainerFormat</i> and <i>pguidVendor</i> depending on the installed WIC-enabled encoders. The values listed are those that are natively supported by the operating system.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createencoder#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreatePalette(Windows.Win32.Graphics.Imaging.IWICPalette**)">
            <summary>Creates a new instance of the IWICPalette class.</summary>
            <param name="ppIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateFormatConverter(Windows.Win32.Graphics.Imaging.IWICFormatConverter**)">
            <summary>Creates a new instance of the IWICFormatConverter class.</summary>
            <param name="ppIFormatConverter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicformatconverter">IWICFormatConverter</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicformatconverter">IWICFormatConverter</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createformatconverter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createformatconverter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapScaler(Windows.Win32.Graphics.Imaging.IWICBitmapScaler**)">
            <summary>Creates a new instance of an IWICBitmapScaler.</summary>
            <param name="ppIBitmapScaler">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapscaler">IWICBitmapScaler</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapscaler">IWICBitmapScaler</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapscaler#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapscaler">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapClipper(Windows.Win32.Graphics.Imaging.IWICBitmapClipper**)">
            <summary>Creates a new instance of an IWICBitmapClipper object.</summary>
            <param name="ppIBitmapClipper">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapclipper">IWICBitmapClipper</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapclipper">IWICBitmapClipper</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapclipper#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapclipper">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFlipRotator(Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator**)">
            <summary>Creates a new instance of an IWICBitmapFlipRotator object.</summary>
            <param name="ppIBitmapFlipRotator">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapfliprotator">IWICBitmapFlipRotator</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapfliprotator">IWICBitmapFlipRotator</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfliprotator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfliprotator">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateStream(Windows.Win32.Graphics.Imaging.IWICStream**)">
            <summary>Creates a new instance of the IWICStream class.</summary>
            <param name="ppIWICStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicstream">IWICStream</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicstream">IWICStream</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createstream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createstream">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateColorContext(Windows.Win32.Graphics.Imaging.IWICColorContext**)">
            <summary>Creates a new instance of the IWICColorContext class.</summary>
            <param name="ppIWICColorContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcolorcontext#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcolorcontext">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateColorTransformer(Windows.Win32.Graphics.Imaging.IWICColorTransform**)">
            <summary>Creates a new instance of the IWICColorTransform class.</summary>
            <param name="ppIWICColorTransform">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolortransform">IWICColorTransform</a>**</b> A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolortransform">IWICColorTransform</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcolortransformer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcolortransformer">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmap(System.UInt32,System.UInt32,System.Guid@,Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmap(System.UInt32,System.UInt32,System.Guid*,Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmap(System.UInt32,System.UInt32,System.Guid*,Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <summary>Creates an IWICBitmap object.</summary>
            <param name="uiWidth">
            <para>Type: <b>UINT</b> The width of the new bitmap .</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="uiHeight">
            <para>Type: <b>UINT</b> The height of the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pixelFormat">
            <para>Type: <b>REFWICPixelFormatGUID</b> The pixel format of the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="option">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a></b> The cache creation options of the new bitmap. This can be one of the values in the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a> enumeration. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIBitmap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a>**</b> A pointer that receives a pointer to the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmap">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromSource(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <summary>Creates a IWICBitmap from a IWICBitmapSource.</summary>
            <param name="pIBitmapSource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to create the bitmap from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="option">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a></b> The cache options of the new bitmap.  This can be one of the values in the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a> enumeration. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIBitmap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a>**</b> A pointer that receives a pointer to the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsource">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromSourceRect(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <summary>Creates an IWICBitmap from a specified rectangle of an IWICBitmapSource.</summary>
            <param name="pIBitmapSource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to create the bitmap from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="x">
            <para>Type: <b>UINT</b> The horizontal coordinate of the upper-left corner of the rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="y">
            <para>Type: <b>UINT</b> The vertical coordinate of the upper-left corner of the rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="width">
            <para>Type: <b>UINT</b> The width of the rectangle and the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="height">
            <para>Type: <b>UINT</b> The height of the rectangle and the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIBitmap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a>**</b> A pointer that receives a pointer to the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>Providing a rectangle that is larger than the source will produce undefined results. This method always creates a separate copy of the source image, similar to the cache option <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCacheOnLoad</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromMemory(System.UInt32,System.UInt32,System.Guid@,System.UInt32,System.Span{System.Byte},Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromMemory(System.UInt32,System.UInt32,System.Guid*,System.UInt32,System.UInt32,System.Byte*,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromMemory(System.UInt32,System.UInt32,System.Guid*,System.UInt32,System.UInt32,System.Byte*,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <summary>Creates an IWICBitmap from a memory block.</summary>
            <param name="uiWidth">
            <para>Type: <b>UINT</b> The width of the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="uiHeight">
            <para>Type: <b>UINT</b> The height of the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pixelFormat">
            <para>Type: <b>REFWICPixelFormatGUID</b> The pixel format of the new bitmap.  For valid pixel formats, see <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbStride">
            <para>Type: <b>UINT</b> The number of bytes between successive scanlines in <i>pbBuffer</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbBufferSize">
            <para>Type: <b>UINT</b> The size of <i>pbBuffer</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pbBuffer">
            <para>Type: <b>BYTE*</b> The buffer used to create the bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIBitmap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a>**</b> A pointer that receives a pointer to the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>The size of the <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-imp-iwicbitmapdecoder">IWICBitmap</a> to be created must be smaller than or equal to the size of the image in <i>pbBuffer</i>. The stride of the destination bitmap will equal the <i>stride</i> of the source data, regardless of the width and height specified. The <i>pixelFormat</i> parameter defines the pixel format for both the input data and the output bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromHBITMAP(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromHBITMAP(Windows.Win32.Graphics.Gdi.HBITMAP,Windows.Win32.Graphics.Gdi.HPALETTE,Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromHBITMAP(Windows.Win32.Graphics.Gdi.HBITMAP,Windows.Win32.Graphics.Gdi.HPALETTE,Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <summary>Creates an IWICBitmap from a bitmap handle.</summary>
            <param name="hBitmap">
            <para>Type: <b>HBITMAP</b> A bitmap handle to create the bitmap from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="hPalette">
            <para>Type: <b>HPALETTE</b> A palette handle used to create the bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="options">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapalphachanneloption">WICBitmapAlphaChannelOption</a></b> The alpha channel options to create the bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIBitmap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a>**</b> A pointer that receives a pointer to the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhbitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>For a non-palletized bitmap, set NULL for the <i>hPalette</i> parameter.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromHICON(System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromHICON(Windows.Win32.UI.WindowsAndMessaging.HICON,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateBitmapFromHICON(Windows.Win32.UI.WindowsAndMessaging.HICON,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <summary>Creates an IWICBitmap from an icon handle.</summary>
            <param name="hIcon">
            <para>Type: <b>HICON</b> The icon handle to create the new bitmap from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhicon#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIBitmap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmap">IWICBitmap</a>**</b> A pointer that receives a pointer to the new bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhicon#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhicon">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateComponentEnumerator(System.UInt32,System.UInt32,Windows.Win32.System.Com.IEnumUnknown**)">
            <summary>Creates an IEnumUnknown object of the specified component types.</summary>
            <param name="componentTypes">
            <para>Type: <b>DWORD</b> The types of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponenttype">WICComponentType</a> to enumerate.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcomponentenumerator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="options">
            <para>Type: <b>DWORD</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponentenumerateoptions">WICComponentEnumerateOptions</a> used to enumerate the given component types.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcomponentenumerator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIEnumUnknown">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumunknown">IEnumUnknown</a>**</b> A pointer that receives a pointer to a new component enumerator.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createcomponentenumerator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>Component types must be enumerated separately. Combinations of component types and <b>WICAllComponents</b> are unsupported.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateFastMetadataEncoderFromDecoder(Windows.Win32.Graphics.Imaging.IWICBitmapDecoder*,Windows.Win32.Graphics.Imaging.IWICFastMetadataEncoder**)">
            <summary>Creates a new instance of the fast metadata encoder based on the given IWICBitmapDecoder.</summary>
            <param name="pIDecoder">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>*</b> The decoder to create the fast metadata encoder from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromdecoder#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIFastEncoder">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a>**</b> When this method returns, contains a pointer to the new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromdecoder#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>The Windows provided codecs do not support fast metadata encoding at the decoder level, and only support fast metadata encoding at the frame level. To create a fast metadata encoder from a frame, see <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromframedecode">CreateFastMetadataEncoderFromFrameDecode</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateFastMetadataEncoderFromFrameDecode(Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode*,Windows.Win32.Graphics.Imaging.IWICFastMetadataEncoder**)">
            <summary>Creates a new instance of the fast metadata encoder based on the given image frame.</summary>
            <param name="pIFrameDecoder">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> to create the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a> from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromframedecode#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIFastEncoder">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a>**</b> When this method returns, contains a pointer to a new fast metadata encoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromframedecode#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>For a list of support metadata formats for fast metadata encoding, see <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-about-metadata">WIC Metadata Overview</a>.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateQueryWriter(System.Guid@,System.Guid@,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateQueryWriter(System.Guid*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateQueryWriter(System.Guid*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <summary>Creates a new instance of a query writer.</summary>
            <param name="guidMetadataFormat">
            <para>Type: <b>REFGUID</b> The GUID for the desired metadata format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pguidVendor">
            <para>Type: <b>const GUID*</b> The GUID for the preferred metadata writer vendor. Use <b>NULL</b> if no preferred vendor.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIQueryWriter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>**</b> When this method returns, contains a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateQueryWriterFromReader(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader*,System.Guid@,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateQueryWriterFromReader(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.CreateQueryWriterFromReader(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <summary>Creates a new instance of a query writer based on the given query reader. The query writer will be pre-populated with metadata from the query reader.</summary>
            <param name="pIQueryReader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a> to create the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a> from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriterfromreader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pguidVendor">
            <para>Type: <b>const GUID*</b> The GUID for the preferred metadata writer vendor. Use <b>NULL</b> if no preferred vendor.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriterfromreader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppIQueryWriter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>**</b> When this method returns, contains a pointer to a new metadata writer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriterfromreader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicimagingfactory-createquerywriterfromreader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICImagingFactory.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{ec5ec8a9-c395-4314-9c77-54d7a935ff70}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetContainerFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetContainerFormat(System.Guid*)">
            <summary>Gets the metadata query readers container format.</summary>
            <param name="pguidContainerFormat">
            <para>Type: <b>GUID*</b> Pointer that receives the cointainer format GUID.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getcontainerformat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getcontainerformat">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetLocation(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetLocation(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetLocation(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)">
            <summary>Retrieves the current path relative to the root metadata block.</summary>
            <param name="cchMaxLength">
            <para>Type: <b>UINT</b> The length of the <i>wzNamespace</i> buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getlocation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wzNamespace">
            <para>Type: <b>WCHAR*</b> Pointer that receives the current namespace location.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getlocation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcchActualLength">
            <para>Type: <b>UINT*</b> The actual buffer length that was needed to retrieve the current namespace location.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getlocation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>If you pass <b>NULL</b> to <i>wzNamespace</i>, <b>GetLocation</b> ignores <i>cchMaxLength</i> and returns the required buffer length to store the path in the variable that <i>pcchActualLength</i> points to.</para>
            <para>If the query reader is relative to the top of the metadata hierarchy, it will return a single-char string. If the query reader is relative to a nested metadata block, this method will return the path to the current query reader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getlocation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetMetadataByName(System.String,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Retrieves the metadata block or item identified by a metadata query expression.</summary>
            <param name="wzName">
            <para>Type: <b>LPCWSTR</b> The query expression to the requested metadata block or item.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getmetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pvarValue">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/propidl/ns-propidl-propvariant">PROPVARIANT</a>*</b> When this method returns, contains the metadata block or item requested.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getmetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><b>GetMetadataByName</b> uses metadata query expressions to access embedded metadata. For more information on the metadata query language, see the <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-metadataquerylanguage">Metadata Query Language Overview</a>. If multiple blocks or items exist that are expressed by the same query expression, the first metadata block or item found will be returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getmetadatabyname#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.GetEnumerator(Windows.Win32.System.Com.IEnumString**)">
            <summary>Gets an enumerator of all metadata items at the current relative location within the metadata hierarchy.</summary>
            <param name="ppIEnumString">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstring">IEnumString</a>**</b> A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstring">IEnumString</a> interface for the enumerator that contains query strings that can be used in the current <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataqueryreader-getenumerator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>The retrieved enumerator only contains query strings for the metadata blocks and items in the current level of the hierarchy.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{30989668-e1c9-4597-b395-458eedb808df}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.GetContainerFormat(System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.GetLocation(System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.GetLocation(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.GetMetadataByName(System.String,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.GetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.SetMetadataByName(System.String,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.SetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.SetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <summary>Sets a metadata item to a specific location.</summary>
            <param name="wzName">
            <para>Type: <b>LPCWSTR</b> The name of the metadata item.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pvarValue">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/propidl/ns-propidl-propvariant">PROPVARIANT</a>*</b> The metadata to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><b>SetMetadataByName</b> uses metadata query expressions to remove metadata. For more information on the metadata query language, see the <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-metadataquerylanguage">Metadata Query Language Overview</a>. If the value set is a nested metadata block then use variant type <c>VT_UNKNOWN</c> and <i>pvarValue</i> pointing to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a> of the new metadata block. The ordering of metadata items is at the discretion of the query writer since relative locations are not specified.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.RemoveMetadataByName(System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.RemoveMetadataByName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.RemoveMetadataByName(Windows.Win32.Foundation.PCWSTR)">
            <summary>Removes a metadata item from a specific location using a metadata query expression.</summary>
            <param name="wzName">
            <para>Type: <b>LPCWSTR</b> The name of the metadata item to remove.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataquerywriter-removemetadatabyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><b>RemoveMetadataByName</b> uses metadata query expressions to remove metadata. For more information on the metadata query language, see the <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-metadataquerylanguage">Metadata Query Language Overview</a>. If the metadata item is a metadata block, it is removed from the metadata hierarchy.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicmetadataquerywriter-removemetadatabyname#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{a721791a-0def-4d06-bd91-2118bf1db10b}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.InitializePredefined(Windows.Win32.Graphics.Imaging.WICBitmapPaletteType,Windows.Win32.Foundation.BOOL)">
            <summary>Initializes the palette to one of the pre-defined palettes specified by WICBitmapPaletteType and optionally adds a transparent color.</summary>
            <param name="ePaletteType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmappalettetype">WICBitmapPaletteType</a></b> The desired pre-defined palette type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializepredefined#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="fAddTransparentColor">
            <para>Type: <b>BOOL</b> The optional transparent color to add to the palette. If no transparent color is needed, use 0. When initializing to a grayscale or black and white palette, set this parameter to <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializepredefined#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>If a transparent color is added to a palette, the palette is no longer predefined and is returned as <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmappalettetype">WICBitmapPaletteTypeCustom</a>. For palettes with less than 256 entries, the transparent entry is added to the end of the palette (that is, a 16-color palette becomes a 17-color palette). For palettes with 256 colors, the transparent palette entry will replace the last entry in the pre-defined palette.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.InitializeCustom(System.Span{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.InitializeCustom(System.UInt32*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.InitializeCustom(System.UInt32*,System.UInt32)">
            <summary>Initializes a palette to the custom color entries provided.</summary>
            <param name="pColors">
            <para>Type: <b>WICColor*</b> Pointer to the color array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializecustom#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cCount">
            <para>Type: <b>UINT</b> The number of colors in <i>pColors</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializecustom#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>If a transparent color is required, provide it as part of the custom entries. To add a transparent value to the palette, its alpha value must be 0 (0x00RRGGBB).</para>
            <para>The entry count is limited to 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializecustom#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.InitializeFromBitmap(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.UInt32,Windows.Win32.Foundation.BOOL)">
            <summary>Initializes a palette using a computed optimized values based on the reference bitmap.</summary>
            <param name="pISurface">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a>*</b> Pointer to the source bitmap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializefrombitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cCount">
            <para>Type: <b>UINT</b> The number of colors to initialize the palette with.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializefrombitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="fAddTransparentColor">
            <para>Type: <b>BOOL</b> A value to indicate whether to add a transparent color.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializefrombitmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>The resulting palette contains the specified number of colors which best represent the colors present in the bitmap. The algorithm operates on the opaque RGB color value of each pixel in the reference bitmap and hence ignores any alpha values. If a transparent color is required, set the fAddTransparentColor parameter to <b>TRUE</b> and one fewer optimized color will be computed, reducing the <i>colorCount</i>, and a fully transparent color entry will be added.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.InitializeFromPalette(Windows.Win32.Graphics.Imaging.IWICPalette*)">
            <summary>Initialize the palette based on a given palette.</summary>
            <param name="pIPalette">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>*</b> Pointer to the source palette.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializefrompalette#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-initializefrompalette">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetType(Windows.Win32.Graphics.Imaging.WICBitmapPaletteType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetType(Windows.Win32.Graphics.Imaging.WICBitmapPaletteType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetType(Windows.Win32.Graphics.Imaging.WICBitmapPaletteType*)">
            <summary>Retrieves the WICBitmapPaletteType that describes the palette.</summary>
            <param name="pePaletteType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmappalettetype">WICBitmapPaletteType</a>*</b> Pointer that receives the palette type of the bimtap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-gettype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks><b>WICBitmapPaletteCustom</b> is used for palettes initialized from both <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicpalette-initializecustom">InitializeCustom</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicpalette-initializefrombitmap">InitializeFromBitmap</a>. There is no distinction is made between optimized and custom palettes.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetColorCount(System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetColorCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetColorCount(System.UInt32*)">
            <summary>Retrieves the number of colors in the color table.</summary>
            <param name="pcCount">
            <para>Type: <b>UINT*</b> Pointer that receives the number of colors in the color table.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-getcolorcount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-getcolorcount">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetColors(System.Span{System.UInt32},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetColors(System.UInt32,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.GetColors(System.UInt32,System.UInt32*,System.UInt32*)">
            <summary>Fills out the supplied color array with the colors from the internal color table. The color array should be sized according to the return results from GetColorCount.</summary>
            <param name="cCount">
            <para>Type: <b>UINT</b> The size of the <i>pColors</i> array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-getcolors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pColors">
            <para>Type: <b>WICColor*</b> Pointer that receives the colors of the palette.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-getcolors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pcActualColors">
            <para>Type: <b>UINT*</b> The actual size needed to obtain the palette colors.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-getcolors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-getcolors">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.IsBlackWhite(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.IsBlackWhite(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.IsBlackWhite(Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value that describes whether the palette is black and white.</summary>
            <param name="pfIsBlackWhite">
            <para>Type: <b>BOOL*</b> A pointer to a variable  that receives a boolean value that indicates whether the palette is black and white. <b>TRUE</b> indicates that the palette is black and white; otherwise, <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-isblackwhite#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>A palette is considered to be black and white only if it contains exactly two entries, one full black (0xFF000000) and one full white (0xFFFFFFF).</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.IsGrayscale(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.IsGrayscale(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.IsGrayscale(Windows.Win32.Foundation.BOOL*)">
            <summary>Retrieves a value that describes whether a palette is grayscale.</summary>
            <param name="pfIsGrayscale">
            <para>Type: <b>BOOL*</b> A pointer to a variable that receives a boolean value that indicates whether the palette is grayscale. <b>TRUE</b> indicates that the palette is grayscale; otherwise <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicpalette-isgrayscale#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>A palette is considered grayscale only if, for every entry, the alpha value is 0xFF and the red, green and blue values match.</remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICPalette.HasAlpha(Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.HasAlpha(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Imaging.IWICPalette.HasAlpha(Windows.Win32.Foundation.BOOL*)" -->
        <member name="F:Windows.Win32.Graphics.Imaging.IWICPalette.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{00000040-a8f2-4877-ba0a-fd2b6645fb94}</value>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.QueryInterface(System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICStream.QueryInterface(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.Stat(Windows.Win32.System.Com.STATSTG@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICStream.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromIStream(Windows.Win32.System.Com.IStream*)">
            <summary>Initializes a stream from another stream. Access rights are inherited from the underlying stream.</summary>
            <param name="pIStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b> The initialize stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromistream#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromistream">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromFilename(System.String,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromFilename(Windows.Win32.Foundation.PCWSTR,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromFilename(Windows.Win32.Foundation.PCWSTR,System.UInt32)">
            <summary>Initializes a stream from a particular file.</summary>
            <param name="wzFileName">
            <para>Type: <b>LPCWSTR</b> The file used to initialize the stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromfilename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dwDesiredAccess">
            <para>Type: <b>DWORD</b> The desired file access mode. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromfilename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicstream">IWICStream</a> interface methods do not enable you to provide a file sharing option. To create a shared file stream for an image, use the <a href="https://docs.microsoft.com/windows/desktop/api/shlwapi/nf-shlwapi-shcreatestreamonfileex">SHCreateStreamOnFileEx</a> function. This stream can then be used to create an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a> using the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromstream">CreateDecoderFromStream</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromfilename#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromMemory(System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromMemory(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromMemory(System.Byte*,System.UInt32)">
            <summary>Initializes a stream to treat a block of memory as a stream. The stream cannot grow beyond the buffer size.</summary>
            <param name="pbBuffer">
            <para>Type: <b>BYTE*</b> Pointer to the buffer used to initialize the stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbBufferSize">
            <para>Type: <b>DWORD</b> The size of buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefrommemory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para>This method should be avoided whenever possible. The caller is responsible for ensuring the memory block is valid for the lifetime of the stream when using <b>InitializeFromMemory</b>.  A workaround for this behavior is to create an <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a> and use <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicstream-initializefromistream">InitializeFromIStream</a> to create the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicstream">IWICStream</a>. If you require a growable memory stream, use <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-createstreamonhglobal">CreateStreamOnHGlobal</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefrommemory#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Imaging.IWICStream.InitializeFromIStreamRegion(Windows.Win32.System.Com.IStream*,System.UInt64,System.UInt64)">
            <summary>Initializes the stream as a substream of another stream.</summary>
            <param name="pIStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-istream">IStream</a>*</b> Pointer to the input stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromistreamregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ulOffset">
            <para>Type: <b>ULARGE_INTEGER</b> The stream offset used to create the new stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromistreamregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ulMaxSize">
            <para>Type: <b>ULARGE_INTEGER</b> The maximum size of the stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/nf-wincodec-iwicstream-initializefromistreamregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks>The stream functions with its own stream position, independent of the underlying stream but restricted to a region.  All seek positions are relative to the sub region.  It is allowed, though not recommended, to have multiple writable sub streams overlapping the same range.</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.IWICStream.IID_Guid">
            <summary>The IID guid for this interface.</summary>
            <value>{135ff860-22b7-4ddf-b0f6-218f4f299a43}</value>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption">
            <summary>Specifies the desired alpha channel usage.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapalphachanneloption">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption.WICBitmapUseAlpha">
            <summary>Use alpha channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption.WICBitmapUsePremultipliedAlpha">
            <summary>Use a pre-multiplied alpha channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption.WICBitmapIgnoreAlpha">
            <summary>Ignore alpha channel.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption">
            <summary>Specifies the desired cache usage.</summary>
            <remarks>The <b>CreateBitmap</b> of the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicimagingfactory">IWICImagingFactory</a> interface does not support WICBitmapNoCache when the <i>pixelFormat</i> is a native pixel format provided by Windows Imaging Component (WIC).</remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption.WICBitmapNoCache">
            <summary>Do not cache the bitmap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption.WICBitmapCacheOnDemand">
            <summary>Cache the bitmap when needed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption.WICBitmapCacheOnLoad">
            <summary>Cache the bitmap at initialization.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapDitherType">
            <summary>Specifies the type of dither algorithm to apply when converting between image formats.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapdithertype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeNone">
            <summary>A solid color algorithm without dither.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeSolid">
            <summary>A solid color algorithm without dither.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeOrdered4x4">
            <summary>A 4x4 ordered dither algorithm.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeOrdered8x8">
            <summary>An 8x8 ordered dither algorithm.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeOrdered16x16">
            <summary>A 16x16 ordered dither algorithm.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeSpiral4x4">
            <summary>A 4x4 spiral dither algorithm.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeSpiral8x8">
            <summary>An 8x8 spiral dither algorithm.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeDualSpiral4x4">
            <summary>A 4x4 dual spiral dither algorithm.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeDualSpiral8x8">
            <summary>An 8x8 dual spiral dither algorithm.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapDitherType.WICBitmapDitherTypeErrorDiffusion">
            <summary>An error diffusion algorithm.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapEncoderCacheOption">
            <summary>Specifies the cache options available for an encoder.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapencodercacheoption">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapEncoderCacheOption.WICBitmapEncoderCacheInMemory">
            <summary>The encoder is cached in memory. This option is not supported.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapEncoderCacheOption.WICBitmapEncoderCacheTempFile">
            <summary>The encoder is cached to a temporary file. This option is not supported.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapEncoderCacheOption.WICBitmapEncoderNoCache">
            <summary>The encoder is not cached.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapInterpolationMode">
            <summary>Specifies the sampling or filtering mode to use when scaling an image.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapinterpolationmode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapInterpolationMode.WICBitmapInterpolationModeNearestNeighbor">
            <summary>
            <para>A nearest neighbor interpolation algorithm. Also known as nearest pixel or point interpolation.</para>
            <para>The output pixel is assigned the value of the pixel that the point falls within. No other pixels are considered.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapinterpolationmode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapInterpolationMode.WICBitmapInterpolationModeLinear">
            <summary>
            <para>A bilinear interpolation algorithm.</para>
            <para>The output pixel values are computed as a weighted average of the nearest four pixels in a 2x2 grid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapinterpolationmode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapInterpolationMode.WICBitmapInterpolationModeCubic">
            <summary>
            <para>A bicubic interpolation algorithm.</para>
            <para>Destination pixel values are computed as a weighted average of the nearest sixteen pixels in a 4x4 grid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapinterpolationmode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapInterpolationMode.WICBitmapInterpolationModeFant">
            <summary>
            <para>A Fant resampling algorithm.</para>
            <para>Destination pixel values are computed as a weighted average of the all the pixels that map to the new pixel.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapinterpolationmode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapInterpolationMode.WICBitmapInterpolationModeHighQualityCubic">
            <summary>
            <para>A high quality bicubic interpolation algorithm. Destination pixel values are computed using a much denser sampling kernel than regular cubic. The kernel is resized in response to the scale factor, making it suitable for downscaling by factors greater than 2. <div class="alert"><b>Note</b>  This value is supported beginning with Windows 10.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmapinterpolationmode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapLockFlags">
            <summary>Specifies access to an IWICBitmap.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmaplockflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapLockFlags.WICBitmapLockRead">
            <summary>A read access lock.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapLockFlags.WICBitmapLockWrite">
            <summary>A write access lock.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType">
            <summary>Specifies the type of palette used for an indexed image format.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmappalettetype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeCustom">
            <summary>An arbitrary custom palette provided by caller.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeMedianCut">
            <summary>An optimal palette generated using a median-cut algorithm. Derived from the colors in an image.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedBW">
            <summary>A black and white palette.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedHalftone8">
            <summary>A palette that has its 8-color on-off primaries and the 16 system colors added. With duplicates removed, 16 colors are available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedHalftone27">
            <summary>A palette that has 3 intensity levels of each primary: 27-color on-off primaries and the 16 system colors added. With duplicates removed, 35 colors are available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedHalftone64">
            <summary>A palette that has 4 intensity levels of each primary: 64-color on-off primaries and the 16 system colors added. With duplicates removed, 72 colors are available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedHalftone125">
            <summary>A palette that has 5 intensity levels of each primary: 125-color on-off primaries and the 16 system colors added. With duplicates removed, 133 colors are available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedHalftone216">
            <summary>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <b>WICBitmapPaletteFixedHalftoneWeb</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedWebPalette">
            <summary>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <b>WICBitmapPaletteTypeFixedHalftone216</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedHalftone252">
            <summary>A palette that has its 252-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedHalftone256">
            <summary>A palette that has its 256-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedGray4">
            <summary>A palette that has 4 shades of gray.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedGray16">
            <summary>A palette that has 16 shades of gray.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPaletteType.WICBitmapPaletteTypeFixedGray256">
            <summary>A palette that has 256 shades of gray.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapPattern">
            <summary>Contains members that identify a pattern within an image file which can be used to identify a particular format.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicbitmappattern">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPattern.Position">
            <summary>
            <para>Type: <b>ULARGE_INTEGER</b> The offset the pattern is located in the file.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicbitmappattern#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPattern.Length">
            <summary>
            <para>Type: <b>ULONG</b> The pattern length.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicbitmappattern#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPattern.Pattern">
            <summary>
            <para>Type: <b>BYTE*</b> The actual pattern.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicbitmappattern#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPattern.Mask">
            <summary>
            <para>Type: <b>BYTE*</b> The pattern mask.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicbitmappattern#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapPattern.EndOfStream">
            <summary>
            <para>Type: <b>BOOL</b> The end of the stream.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicbitmappattern#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions">
            <summary>Specifies the flip and rotation transforms.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicbitmaptransformoptions">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions.WICBitmapTransformRotate0">
            <summary>A rotation of 0 degrees.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions.WICBitmapTransformRotate90">
            <summary>A clockwise rotation of 90 degrees.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions.WICBitmapTransformRotate180">
            <summary>A clockwise rotation of 180 degrees.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions.WICBitmapTransformRotate270">
            <summary>A clockwise rotation of 270 degrees.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions.WICBitmapTransformFlipHorizontal">
            <summary>A horizontal flip. Pixels are flipped around the vertical y-axis.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICBitmapTransformOptions.WICBitmapTransformFlipVertical">
            <summary>A vertical flip. Pixels are flipped around the horizontal x-axis.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICColorContextType">
            <summary>Specifies the color context types.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wiccolorcontexttype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICColorContextType.WICColorContextUninitialized">
            <summary>An uninitialized color context.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICColorContextType.WICColorContextProfile">
            <summary>A color context that is a full ICC color profile.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICColorContextType.WICColorContextExifColorSpace">
            <summary>A color context that is one of a number of set color spaces (sRGB, AdobeRGB) that are defined in the EXIF specification.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICComponentType">
            <summary>Specifies the type of Windows Imaging Component (WIC) component.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wiccomponenttype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICComponentType.WICDecoder">
            <summary>A WIC decoder.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICComponentType.WICEncoder">
            <summary>A WIC encoder.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICComponentType.WICPixelFormatConverter">
            <summary>A WIC pixel converter.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICComponentType.WICMetadataReader">
            <summary>A WIC metadata reader.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICComponentType.WICMetadataWriter">
            <summary>A WIC metadata writer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICComponentType.WICPixelFormat">
            <summary>A WIC pixel format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICComponentType.WICAllComponents">
            <summary>All WIC components.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICDecodeOptions">
            <summary>Specifies decode options.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicdecodeoptions">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICDecodeOptions.WICDecodeMetadataCacheOnDemand">
            <summary>Cache metadata when needed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICDecodeOptions.WICDecodeMetadataCacheOnLoad">
            <summary>Cache metadata when decoder is loaded.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Imaging.WICRect">
            <summary>Represents a rectangle for Windows Imaging Component (WIC) API.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicrect">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICRect.X">
            <summary>
            <para>Type: <b>INT</b> The horizontal coordinate of the rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicrect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICRect.Y">
            <summary>
            <para>Type: <b>INT</b> The vertical coordinate of the rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicrect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICRect.Width">
            <summary>
            <para>Type: <b>INT</b> The width of the rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicrect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Imaging.WICRect.Height">
            <summary>
            <para>Type: <b>INT</b> The height of the rectangle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wincodec/ns-wincodec-wicrect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.__float_4.Length">
            <summary>The length of the inline array.</summary>
        </member>
        <member name="P:Windows.Win32.__float_4.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.__float_4.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.__float_4.AsReadOnlySpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Asynchronous_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Asynchronous_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Asynchronous_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11BlendState_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11BlendState_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11BlendState_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11BlendState_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Buffer_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Buffer_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Buffer_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Buffer_Extensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Buffer_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassInstance_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassInstance_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassInstance_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassInstance_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassInstance_Extensions.GetInstanceName(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface,Windows.Win32.Foundation.PSTR,System.UIntPtr@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface.GetInstanceName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassInstance_Extensions.GetTypeName(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface,Windows.Win32.Foundation.PSTR,System.UIntPtr@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.Interface.GetTypeName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassLinkage_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassLinkage_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassLinkage_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassLinkage_Extensions.GetClassInstance(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface,System.String,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface.GetClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ClassLinkage_Extensions.CreateClassInstance(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.Interface.CreateClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11CommandList_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11CommandList_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11CommandList_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ComputeShader_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ComputeShader_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ComputeShader_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Counter_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Counter_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Counter_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Counter_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilState_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilState_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilState_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilState_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilView_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilView_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilView_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DepthStencilView_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceChild_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceChild_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceChild_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.OMSetRenderTargetsAndUnorderedAccessViews(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView*,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.OMSetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState*,System.ReadOnlySpan{System.Single},System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState*,System.Single*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.SOSetTargets(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.SOSetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.RSSetViewports(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_BOX},System.Void*,System.UInt32,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*,System.Void*,System.UInt32,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView*,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView*,System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView*,System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.CSSetUnorderedAccessViews(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.CSSetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.IAGetVertexBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.Span{System.UInt32},System.Span{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.IAGetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.OMGetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**,System.Span{System.Single},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.OMGetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**,System.Single*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.RSGetViewports(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.UInt32@,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.RSGetViewports(System.UInt32*,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DeviceContext_Extensions.RSGetScissorRects(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface,System.UInt32@,Windows.Win32.Foundation.RECT*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Interface.RSGetScissorRects(System.UInt32*,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateBuffer(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateBuffer(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource*,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateInputLayout(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC},System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateInputLayout(Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*,System.UInt32,System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateGeometryShaderWithStreamOutput(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,System.Void*,System.UIntPtr,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY},System.ReadOnlySpan{System.UInt32},System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateGeometryShaderWithStreamOutput(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*,System.UInt32,System.UInt32*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage*,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateBlendState(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateQuery(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Query**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateQuery(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Query**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreatePredicate(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreatePredicate(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CreateCounter(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Counter**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CreateCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Counter**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.OpenSharedResource(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Void**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.OpenSharedResource(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CheckFormatSupport(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CheckFormatSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.CheckCounter(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE@,System.UInt32@,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.CheckCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Device_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DomainShader_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DomainShader_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11DomainShader_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11GeometryShader_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11GeometryShader_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11GeometryShader_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11HullShader_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11HullShader_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11HullShader_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11InputLayout_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11InputLayout_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11InputLayout_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11PixelShader_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11PixelShader_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11PixelShader_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Predicate_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Predicate_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Predicate_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Predicate_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Query_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Query_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Query_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Query_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RasterizerState_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RasterizerState_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RasterizerState_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RasterizerState_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RenderTargetView_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RenderTargetView_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RenderTargetView_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11RenderTargetView_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Resource_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Resource_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Resource_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Resource_Extensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.Interface.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11SamplerState_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11SamplerState_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11SamplerState_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11SamplerState_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ShaderResourceView_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ShaderResourceView_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ShaderResourceView_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11ShaderResourceView_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture1D_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture1D_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture1D_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture1D_Extensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture1D_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture2D_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture2D_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture2D_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture2D_Extensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture2D_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture3D_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture3D_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture3D_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture3D_Extensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11Texture3D_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11UnorderedAccessView_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11UnorderedAccessView_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11UnorderedAccessView_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11UnorderedAccessView_Extensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface,Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.Interface.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11VertexShader_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11VertexShader_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11VertexShader_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11View_Extensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11View.Interface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.Interface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11View_Extensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11View.Interface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.Interface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Direct3D11_ID3D11View_Extensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11View.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.Interface.SetPrivateDataInterface(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapClipper_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapClipper_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapClipper_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapClipper_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapClipper_Extensions.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface,Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapClipper.Interface.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetComponentType(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetCLSID(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetSigningStatus(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetAuthor(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetVendorGUID(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetVersion(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetSpecVersion(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetFriendlyName(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetContainerFormat(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetPixelFormats(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.Span{System.Guid},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetPixelFormats(System.UInt32,System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetColorManagementVersion(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetColorManagementVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetDeviceManufacturer(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetDeviceManufacturer(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetDeviceModels(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetDeviceModels(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetMimeTypes(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetMimeTypes(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.GetFileExtensions(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.GetFileExtensions(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.DoesSupportAnimation(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.DoesSupportAnimation(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.DoesSupportChromakey(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.DoesSupportChromakey(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.DoesSupportLossless(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.DoesSupportLossless(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.DoesSupportMultiframe(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapCodecInfo_Extensions.MatchesMimeType(Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface,System.String,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapCodecInfo.Interface.MatchesMimeType(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetComponentType(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetCLSID(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetSigningStatus(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetAuthor(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetVendorGUID(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetVersion(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetSpecVersion(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetFriendlyName(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetContainerFormat(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetPixelFormats(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.Span{System.Guid},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetPixelFormats(System.UInt32,System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetColorManagementVersion(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetColorManagementVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetDeviceManufacturer(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetDeviceManufacturer(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetDeviceModels(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetDeviceModels(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetMimeTypes(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetMimeTypes(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetFileExtensions(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetFileExtensions(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.DoesSupportAnimation(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.DoesSupportAnimation(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.DoesSupportChromakey(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.DoesSupportChromakey(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.DoesSupportLossless(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.DoesSupportLossless(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.DoesSupportMultiframe(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.MatchesMimeType(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.String,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.MatchesMimeType(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.GetPatterns(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,System.UInt32,Windows.Win32.Graphics.Imaging.WICBitmapPattern*,System.UInt32*,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.GetPatterns(System.UInt32,Windows.Win32.Graphics.Imaging.WICBitmapPattern*,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoderInfo_Extensions.MatchesPattern(Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface,Windows.Win32.System.Com.IStream*,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoderInfo.Interface.MatchesPattern(Windows.Win32.System.Com.IStream*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoder_Extensions.QueryCapability(Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface,Windows.Win32.System.Com.IStream*,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface.QueryCapability(Windows.Win32.System.Com.IStream*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoder_Extensions.GetContainerFormat(Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoder_Extensions.GetColorContexts(Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface,System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapDecoder_Extensions.GetFrameCount(Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapDecoder.Interface.GetFrameCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetComponentType(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetCLSID(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetSigningStatus(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetAuthor(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetVendorGUID(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetVersion(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetSpecVersion(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetFriendlyName(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetContainerFormat(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetPixelFormats(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.Span{System.Guid},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetPixelFormats(System.UInt32,System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetColorManagementVersion(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetColorManagementVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetDeviceManufacturer(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetDeviceManufacturer(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetDeviceModels(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetDeviceModels(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetMimeTypes(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetMimeTypes(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.GetFileExtensions(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.GetFileExtensions(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.DoesSupportAnimation(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.DoesSupportAnimation(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.DoesSupportChromakey(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.DoesSupportChromakey(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.DoesSupportLossless(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.DoesSupportLossless(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.DoesSupportMultiframe(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.DoesSupportMultiframe(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoderInfo_Extensions.MatchesMimeType(Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface,System.String,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoderInfo.Interface.MatchesMimeType(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapEncoder_Extensions.GetContainerFormat(Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapEncoder.Interface.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFlipRotator_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFlipRotator_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFlipRotator_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFlipRotator_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFlipRotator.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameDecode_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameDecode_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameDecode_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameDecode_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameDecode_Extensions.GetColorContexts(Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface,System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameDecode.Interface.GetColorContexts(System.UInt32,Windows.Win32.Graphics.Imaging.IWICColorContext**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameEncode_Extensions.SetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Interface.SetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameEncode_Extensions.WritePixels(Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Interface,System.UInt32,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Interface.WritePixels(System.UInt32,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapFrameEncode_Extensions.WriteSource(Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Interface,Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapFrameEncode.Interface.WriteSource(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.WICRect*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapLock_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapLock_Extensions.GetStride(Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface.GetStride(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapLock_Extensions.GetDataPointer(Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface,System.UInt32@,System.Byte**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface.GetDataPointer(System.UInt32*,System.Byte**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapLock_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapLock.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapScaler_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapScaler_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapScaler_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapScaler_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapScaler.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapSource_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapSource_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapSource_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmapSource_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmapSource.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmap_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICBitmap.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmap_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICBitmap.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmap_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICBitmap.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmap_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICBitmap.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICBitmap_Extensions.Lock(Windows.Win32.Graphics.Imaging.IWICBitmap.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,Windows.Win32.Graphics.Imaging.IWICBitmapLock**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICBitmap.Interface.Lock(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,Windows.Win32.Graphics.Imaging.IWICBitmapLock**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorContext_Extensions.InitializeFromFilename(Windows.Win32.Graphics.Imaging.IWICColorContext.Interface,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.Interface.InitializeFromFilename(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorContext_Extensions.InitializeFromMemory(Windows.Win32.Graphics.Imaging.IWICColorContext.Interface,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.Interface.InitializeFromMemory(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorContext_Extensions.GetType(Windows.Win32.Graphics.Imaging.IWICColorContext.Interface,Windows.Win32.Graphics.Imaging.WICColorContextType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.Interface.GetType(Windows.Win32.Graphics.Imaging.WICColorContextType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorContext_Extensions.GetProfileBytes(Windows.Win32.Graphics.Imaging.IWICColorContext.Interface,System.Span{System.Byte},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.Interface.GetProfileBytes(System.UInt32,System.Byte*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorContext_Extensions.GetExifColorSpace(Windows.Win32.Graphics.Imaging.IWICColorContext.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorContext.Interface.GetExifColorSpace(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorTransform_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorTransform_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorTransform_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorTransform_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICColorTransform_Extensions.Initialize(Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface,Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.IWICColorContext*,Windows.Win32.Graphics.Imaging.IWICColorContext*,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICColorTransform.Interface.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,Windows.Win32.Graphics.Imaging.IWICColorContext*,Windows.Win32.Graphics.Imaging.IWICColorContext*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetComponentType(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,Windows.Win32.Graphics.Imaging.WICComponentType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetComponentType(Windows.Win32.Graphics.Imaging.WICComponentType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetCLSID(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetCLSID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetSigningStatus(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetSigningStatus(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetAuthor(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetAuthor(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetVendorGUID(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetVendorGUID(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetVersion(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetSpecVersion(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetSpecVersion(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICComponentInfo_Extensions.GetFriendlyName(Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICComponentInfo.Interface.GetFriendlyName(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICFormatConverter_Extensions.GetSize(Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface.GetSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICFormatConverter_Extensions.GetPixelFormat(Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface.GetPixelFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICFormatConverter_Extensions.GetResolution(Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface,System.Double@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface.GetResolution(System.Double*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICFormatConverter_Extensions.CopyPixels(Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface,Windows.Win32.Graphics.Imaging.WICRect@,System.UInt32,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface.CopyPixels(Windows.Win32.Graphics.Imaging.WICRect*,System.UInt32,System.UInt32,System.Byte*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICFormatConverter_Extensions.Initialize(Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface,Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.Guid@,Windows.Win32.Graphics.Imaging.WICBitmapDitherType,Windows.Win32.Graphics.Imaging.IWICPalette*,System.Double,Windows.Win32.Graphics.Imaging.WICBitmapPaletteType)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface.Initialize(Windows.Win32.Graphics.Imaging.IWICBitmapSource*,System.Guid*,Windows.Win32.Graphics.Imaging.WICBitmapDitherType,Windows.Win32.Graphics.Imaging.IWICPalette*,System.Double,Windows.Win32.Graphics.Imaging.WICBitmapPaletteType)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICFormatConverter_Extensions.CanConvert(Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface,System.Guid@,System.Guid@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICFormatConverter.Interface.CanConvert(System.Guid*,System.Guid*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateDecoderFromFilename(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.String,System.Nullable{System.Guid},Windows.Win32.Foundation.GENERIC_ACCESS_RIGHTS,Windows.Win32.Graphics.Imaging.WICDecodeOptions,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateDecoderFromFilename(Windows.Win32.Foundation.PCWSTR,System.Guid*,Windows.Win32.Foundation.GENERIC_ACCESS_RIGHTS,Windows.Win32.Graphics.Imaging.WICDecodeOptions,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateDecoderFromStream(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,Windows.Win32.System.Com.IStream*,System.Guid@,Windows.Win32.Graphics.Imaging.WICDecodeOptions,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateDecoderFromStream(Windows.Win32.System.Com.IStream*,System.Guid*,Windows.Win32.Graphics.Imaging.WICDecodeOptions,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateDecoderFromFileHandle(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.UIntPtr,System.Guid@,Windows.Win32.Graphics.Imaging.WICDecodeOptions,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateDecoderFromFileHandle(System.UIntPtr,System.Guid*,Windows.Win32.Graphics.Imaging.WICDecodeOptions,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateComponentInfo(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.Guid@,Windows.Win32.Graphics.Imaging.IWICComponentInfo**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateComponentInfo(System.Guid*,Windows.Win32.Graphics.Imaging.IWICComponentInfo**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateDecoder(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.Guid@,System.Guid@,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateDecoder(System.Guid*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICBitmapDecoder**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateEncoder(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.Guid@,System.Guid@,Windows.Win32.Graphics.Imaging.IWICBitmapEncoder**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateEncoder(System.Guid*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICBitmapEncoder**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateBitmap(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.UInt32,System.UInt32,System.Guid@,Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateBitmap(System.UInt32,System.UInt32,System.Guid*,Windows.Win32.Graphics.Imaging.WICBitmapCreateCacheOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateBitmapFromMemory(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.UInt32,System.UInt32,System.Guid@,System.UInt32,System.Span{System.Byte},Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateBitmapFromMemory(System.UInt32,System.UInt32,System.Guid*,System.UInt32,System.UInt32,System.Byte*,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateBitmapFromHBITMAP(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateBitmapFromHBITMAP(Windows.Win32.Graphics.Gdi.HBITMAP,Windows.Win32.Graphics.Gdi.HPALETTE,Windows.Win32.Graphics.Imaging.WICBitmapAlphaChannelOption,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateBitmapFromHICON(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Imaging.IWICBitmap**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateBitmapFromHICON(Windows.Win32.UI.WindowsAndMessaging.HICON,Windows.Win32.Graphics.Imaging.IWICBitmap**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateQueryWriter(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,System.Guid@,System.Guid@,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateQueryWriter(System.Guid*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICImagingFactory_Extensions.CreateQueryWriterFromReader(Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface,Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader*,System.Guid@,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICImagingFactory.Interface.CreateQueryWriterFromReader(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader*,System.Guid*,Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryReader_Extensions.GetContainerFormat(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.Interface.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryReader_Extensions.GetLocation(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.Interface.GetLocation(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryReader_Extensions.GetMetadataByName(Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.Interface,System.String,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryReader.Interface.GetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryWriter_Extensions.GetContainerFormat(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface.GetContainerFormat(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryWriter_Extensions.GetLocation(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface,System.UInt32,System.Span{System.Char}@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface.GetLocation(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryWriter_Extensions.GetMetadataByName(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface,System.String,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface.GetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryWriter_Extensions.SetMetadataByName(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface,System.String,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface.SetMetadataByName(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICMetadataQueryWriter_Extensions.RemoveMetadataByName(Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICMetadataQueryWriter.Interface.RemoveMetadataByName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICPalette_Extensions.InitializeCustom(Windows.Win32.Graphics.Imaging.IWICPalette.Interface,System.Span{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.Interface.InitializeCustom(System.UInt32*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICPalette_Extensions.GetType(Windows.Win32.Graphics.Imaging.IWICPalette.Interface,Windows.Win32.Graphics.Imaging.WICBitmapPaletteType@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.Interface.GetType(Windows.Win32.Graphics.Imaging.WICBitmapPaletteType*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICPalette_Extensions.GetColorCount(Windows.Win32.Graphics.Imaging.IWICPalette.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.Interface.GetColorCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICPalette_Extensions.GetColors(Windows.Win32.Graphics.Imaging.IWICPalette.Interface,System.Span{System.UInt32},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.Interface.GetColors(System.UInt32,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICPalette_Extensions.IsBlackWhite(Windows.Win32.Graphics.Imaging.IWICPalette.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.Interface.IsBlackWhite(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICPalette_Extensions.IsGrayscale(Windows.Win32.Graphics.Imaging.IWICPalette.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.Interface.IsGrayscale(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICPalette_Extensions.HasAlpha(Windows.Win32.Graphics.Imaging.IWICPalette.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICPalette.Interface.HasAlpha(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICStream_Extensions.Stat(Windows.Win32.Graphics.Imaging.IWICStream.Interface,Windows.Win32.System.Com.STATSTG@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICStream.Interface.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICStream_Extensions.InitializeFromFilename(Windows.Win32.Graphics.Imaging.IWICStream.Interface,System.String,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICStream.Interface.InitializeFromFilename(Windows.Win32.Foundation.PCWSTR,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics_Imaging_IWICStream_Extensions.InitializeFromMemory(Windows.Win32.Graphics.Imaging.IWICStream.Interface,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Imaging.IWICStream.Interface.InitializeFromMemory(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_DirectShow_IAMCameraControl_Extensions.GetRange(Windows.Win32.Media.DirectShow.IAMCameraControl.Interface,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMCameraControl.Interface.GetRange(System.Int32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_DirectShow_IAMCameraControl_Extensions.Get(Windows.Win32.Media.DirectShow.IAMCameraControl.Interface,System.Int32,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMCameraControl.Interface.Get(System.Int32,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_DirectShow_IAMVideoProcAmp_Extensions.GetRange(Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Interface,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Interface.GetRange(System.Int32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_DirectShow_IAMVideoProcAmp_Extensions.Get(Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Interface,System.Int32,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.DirectShow.IAMVideoProcAmp.Interface.Get(System.Int32,System.Int32*,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer2_Extensions.Lock2D(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface,System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface.Lock2D(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer2_Extensions.GetScanline0AndPitch(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface,System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface.GetScanline0AndPitch(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer2_Extensions.IsContiguousFormat(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface.IsContiguousFormat(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer2_Extensions.GetContiguousLength(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface.GetContiguousLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer2_Extensions.ContiguousCopyTo(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface.ContiguousCopyTo(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer2_Extensions.ContiguousCopyFrom(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface.ContiguousCopyFrom(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer2_Extensions.Lock2DSize(Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface,Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags,System.Byte*@,System.Int32@,System.Byte*@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer2.Interface.Lock2DSize(Windows.Win32.Media.MediaFoundation.MF2DBuffer_LockFlags,System.Byte**,System.Int32*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer_Extensions.Lock2D(Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface,System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface.Lock2D(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer_Extensions.GetScanline0AndPitch(Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface,System.Byte*@,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface.GetScanline0AndPitch(System.Byte**,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer_Extensions.IsContiguousFormat(Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface.IsContiguousFormat(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer_Extensions.GetContiguousLength(Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface.GetContiguousLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer_Extensions.ContiguousCopyTo(Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface,System.Span{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface.ContiguousCopyTo(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMF2DBuffer_Extensions.ContiguousCopyFrom(Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMF2DBuffer.Interface.ContiguousCopyFrom(System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetItem(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetItemType(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.CompareItem(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.Compare(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetUINT32(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetUINT64(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetDouble(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetGUID(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetStringLength(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetString(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetAllocatedString(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetBlobSize(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetBlob(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetAllocatedBlob(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetItem(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.DeleteItem(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetUINT32(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetUINT64(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetDouble(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetGUID(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetString(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetBlob(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetCount(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.GetItemByIndex(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFActivate_Extensions.ActivateObject(Windows.Win32.Media.MediaFoundation.IMFActivate.Interface,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFActivate.Interface.ActivateObject(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAsyncCallback_Extensions.GetParameters(Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.Interface,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAsyncCallback.Interface.GetParameters(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetItem(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetItemType(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.CompareItem(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetUINT32(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetUINT64(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetDouble(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetGUID(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetStringLength(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetString(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetAllocatedString(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetBlobSize(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetBlob(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetAllocatedBlob(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetItem(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.DeleteItem(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetUINT32(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetUINT64(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetDouble(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetGUID(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetString(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetBlob(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetCount(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFAttributes_Extensions.GetItemByIndex(Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFAttributes.Interface.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIBuffer_Extensions.GetResource(Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface.GetResource(System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIBuffer_Extensions.GetSubresourceIndex(Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface.GetSubresourceIndex(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIBuffer_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIBuffer_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIBuffer.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIDeviceManager_Extensions.CloseDeviceHandle(Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface.CloseDeviceHandle(Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIDeviceManager_Extensions.GetVideoService(Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface.GetVideoService(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIDeviceManager_Extensions.LockDevice(Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Void*@,Windows.Win32.Foundation.BOOL)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface.LockDevice(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Void**,Windows.Win32.Foundation.BOOL)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIDeviceManager_Extensions.OpenDeviceHandle(Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface.OpenDeviceHandle(Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIDeviceManager_Extensions.TestDevice(Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface.TestDevice(Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFDXGIDeviceManager_Extensions.UnlockDevice(Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.BOOL)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager.Interface.UnlockDevice(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.BOOL)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaBuffer_Extensions.Lock(Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Interface,System.Byte*@,System.UInt32*,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Interface.Lock(System.Byte**,System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaBuffer_Extensions.GetCurrentLength(Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Interface.GetCurrentLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaBuffer_Extensions.GetMaxLength(Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaBuffer.Interface.GetMaxLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngineSrcElements_Extensions.GetURL(Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface,System.UInt32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface.GetURL(System.UInt32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngineSrcElements_Extensions.GetType(Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface,System.UInt32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface.GetType(System.UInt32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngineSrcElements_Extensions.GetMedia(Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface,System.UInt32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface.GetMedia(System.UInt32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngineSrcElements_Extensions.AddElement(Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface,System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngineSrcElements.Interface.AddElement(Windows.Win32.Foundation.BSTR,Windows.Win32.Foundation.BSTR,Windows.Win32.Foundation.BSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngine_Extensions.SetSource(Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface.SetSource(Windows.Win32.Foundation.BSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngine_Extensions.GetCurrentSource(Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface.GetCurrentSource(Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngine_Extensions.CanPlayType(Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface.CanPlayType(Windows.Win32.Foundation.BSTR,Windows.Win32.Media.MediaFoundation.MF_MEDIA_ENGINE_CANPLAY*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngine_Extensions.TransferVideoFrame(Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface,Windows.Win32.System.Com.IUnknown*,System.Nullable{Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect},Windows.Win32.Foundation.RECT@,System.Nullable{Windows.Win32.Media.MediaFoundation.MFARGB})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface.TransferVideoFrame(Windows.Win32.System.Com.IUnknown*,Windows.Win32.Media.MediaFoundation.MFVideoNormalizedRect*,Windows.Win32.Foundation.RECT*,Windows.Win32.Media.MediaFoundation.MFARGB*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEngine_Extensions.OnVideoStreamTick(Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEngine.Interface.OnVideoStreamTick(System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEventGenerator_Extensions.QueueEvent(Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.Interface,System.UInt32,System.Guid@,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEventGenerator.Interface.QueueEvent(System.UInt32,System.Guid*,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetItem(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetItemType(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.CompareItem(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.Compare(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetUINT32(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetUINT64(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetDouble(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetGUID(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetStringLength(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetString(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetAllocatedString(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetBlobSize(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetBlob(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetAllocatedBlob(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetItem(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.DeleteItem(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetUINT32(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetUINT64(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetDouble(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetGUID(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetString(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetBlob(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetCount(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetItemByIndex(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetType(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetType(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetExtendedType(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetExtendedType(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetStatus(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,Windows.Win32.Foundation.HRESULT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetStatus(Windows.Win32.Foundation.HRESULT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaEvent_Extensions.GetValue(Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaEvent.Interface.GetValue(Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaSource_Extensions.QueueEvent(Windows.Win32.Media.MediaFoundation.IMFMediaSource.Interface,System.UInt32,System.Guid@,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Interface.QueueEvent(System.UInt32,System.Guid*,Windows.Win32.Foundation.HRESULT,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaSource_Extensions.GetCharacteristics(Windows.Win32.Media.MediaFoundation.IMFMediaSource.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Interface.GetCharacteristics(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaSource_Extensions.Start(Windows.Win32.Media.MediaFoundation.IMFMediaSource.Interface,Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor*,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaSource.Interface.Start(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor*,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaTimeRange_Extensions.GetStart(Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.Interface,System.UInt32,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.Interface.GetStart(System.UInt32,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaTimeRange_Extensions.GetEnd(Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.Interface,System.UInt32,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTimeRange.Interface.GetEnd(System.UInt32,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaTypeHandler_Extensions.GetMediaTypeCount(Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.Interface.GetMediaTypeCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaTypeHandler_Extensions.GetMajorType(Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaTypeHandler.Interface.GetMajorType(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetItem(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetItemType(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.CompareItem(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.Compare(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetUINT32(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetUINT64(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetDouble(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetGUID(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetStringLength(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetString(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetAllocatedString(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetBlobSize(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetBlob(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetAllocatedBlob(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetItem(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.DeleteItem(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetUINT32(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetUINT64(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetDouble(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetGUID(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetString(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetBlob(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetCount(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetItemByIndex(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetMajorType(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetMajorType(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.IsCompressedFormat(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.IsCompressedFormat(Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.IsEqual(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,Windows.Win32.Media.MediaFoundation.IMFMediaType*,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.IsEqual(Windows.Win32.Media.MediaFoundation.IMFMediaType*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFMediaType_Extensions.GetRepresentation(Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface,System.Guid,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFMediaType.Interface.GetRepresentation(System.Guid,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetItem(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetItemType(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.CompareItem(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.Compare(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetUINT32(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetUINT64(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetDouble(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetGUID(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetStringLength(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetString(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetAllocatedString(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetBlobSize(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetBlob(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetAllocatedBlob(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetItem(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.DeleteItem(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetUINT32(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetUINT64(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetDouble(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetGUID(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetString(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetBlob(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetCount(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetItemByIndex(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetStreamDescriptorCount(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetStreamDescriptorCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFPresentationDescriptor_Extensions.GetStreamDescriptorByIndex(Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface,System.UInt32,Windows.Win32.Foundation.BOOL@,Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor**)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFPresentationDescriptor.Interface.GetStreamDescriptorByIndex(System.UInt32,Windows.Win32.Foundation.BOOL*,Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetItem(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetItemType(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.CompareItem(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.Compare(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetUINT32(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetUINT64(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetDouble(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetGUID(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetStringLength(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetString(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetAllocatedString(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetBlobSize(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetBlob(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetAllocatedBlob(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetItem(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.DeleteItem(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetUINT32(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetUINT64(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetDouble(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetGUID(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetString(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetBlob(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetCount(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetItemByIndex(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetSampleFlags(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetSampleFlags(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetSampleTime(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetSampleTime(System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetSampleDuration(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetSampleDuration(System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetBufferCount(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetBufferCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSample_Extensions.GetTotalLength(Windows.Win32.Media.MediaFoundation.IMFSample.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSample.Interface.GetTotalLength(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSourceReader_Extensions.GetStreamSelection(Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface,System.UInt32,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface.GetStreamSelection(System.UInt32,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSourceReader_Extensions.SetCurrentMediaType(Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface,System.UInt32,Windows.Win32.Media.MediaFoundation.IMFMediaType*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface.SetCurrentMediaType(System.UInt32,System.UInt32*,Windows.Win32.Media.MediaFoundation.IMFMediaType*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSourceReader_Extensions.SetCurrentPosition(Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface.SetCurrentPosition(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSourceReader_Extensions.GetServiceForStream(Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface,System.UInt32,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface.GetServiceForStream(System.UInt32,System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFSourceReader_Extensions.GetPresentationAttribute(Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFSourceReader.Interface.GetPresentationAttribute(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetItem(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetItemType(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetItemType(System.Guid*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTE_TYPE*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.CompareItem(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.CompareItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.Compare(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.Compare(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.MF_ATTRIBUTES_MATCH_TYPE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetUINT32(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetUINT32(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetUINT64(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetUINT64(System.Guid*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetDouble(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.Double@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetDouble(System.Guid*,System.Double*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetGUID(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetStringLength(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetStringLength(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetString(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetString(System.Guid*,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetAllocatedString(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,Windows.Win32.Foundation.PWSTR@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetAllocatedString(System.Guid*,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetBlobSize(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetBlobSize(System.Guid*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetBlob(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.Span{System.Byte},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetBlob(System.Guid*,System.Byte*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetAllocatedBlob(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.Byte**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetAllocatedBlob(System.Guid*,System.Byte**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetUnknown(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetUnknown(System.Guid*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetItem(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetItem(System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.DeleteItem(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.DeleteItem(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetUINT32(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetUINT32(System.Guid*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetUINT64(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetUINT64(System.Guid*,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetDouble(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.Double)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetDouble(System.Guid*,System.Double)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetGUID(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetGUID(System.Guid*,System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetString(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.String)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetString(System.Guid*,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetBlob(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetBlob(System.Guid*,System.Byte*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.SetUnknown(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.Guid@,Windows.Win32.System.Com.IUnknown*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.SetUnknown(System.Guid*,Windows.Win32.System.Com.IUnknown*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetCount(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetItemByIndex(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.UInt32,System.Guid@,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetItemByIndex(System.UInt32,System.Guid*,Windows.Win32.System.Com.StructuredStorage.PROPVARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.Media_MediaFoundation_IMFStreamDescriptor_Extensions.GetStreamIdentifier(Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Media.MediaFoundation.IMFStreamDescriptor.Interface.GetStreamIdentifier(System.UInt32*)"/>
        </member>
        <member name="T:Windows.Win32.PInvoke">
            <content>
            Contains extern methods from "GDI32.dll".
            </content>
            <content>
            Contains extern methods from "KERNEL32.dll".
            </content>
            <content>
            Contains extern methods from "MF.dll".
            </content>
            <content>
            Contains extern methods from "MFPlat.dll".
            </content>
            <content>
            Contains extern methods from "MFReadWrite.dll".
            </content>
            <content>
            Contains extern methods from "OLE32.dll".
            </content>
            <content>
            Contains extern methods from "OLEAUT32.dll".
            </content>
            <content>
            Contains extern methods from "USER32.dll".
            </content>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SESSIONCAPS">
            <summary>Contains flags that define the capabilities of the Media Session, based on the current presentation.</summary>
            <remarks>
            <para>This attribute contains a bitwise **OR** of zero or more flags. For a list of possible flags, see [**IMFMediaSession::GetSessionCapabilities**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasession-getsessioncapabilities). This attribute is used with the [MESessionCapabilitiesChanged](mesessioncapabilitieschanged.md) event. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-sessioncaps-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SESSIONCAPS_DELTA">
            <summary>Contains flags that indicate which capabilities have changed in the Media Session, based on the current presentation.</summary>
            <remarks>
            <para>This attribute contains a bitmask indicating which capabilities flags have changed. For a list of possible flags, see [**IMFMediaSession::GetSessionCapabilities**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasession-getsessioncapabilities). Bits are set to 1 in the bitmask for any of the following reasons: -   The corresponding capabilities bit changed from 0 to 1. -   The corresponding capabilities bit changed from 1 to 0. -   The corresponding capabilities bit remained 1, but the details of the capability changed. For example, the maximum playback rate changed. This attribute is used with the [MESessionCapabilitiesChanged](mesessioncapabilitieschanged.md) event. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-sessioncaps-delta-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_TOPOLOGY_STATUS">
            <summary>Specifies the status of a topology during playback.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MF\_TOPOSTATUS**](/windows/desktop/api/mfapi/ne-mfapi-mf_topostatus) enumeration. This attribute is used with the [MESessionTopologyStatus](mesessiontopologystatus.md) event. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-topology-status-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_START_PRESENTATION_TIME">
            <summary>The starting time for the presentation, in 100-nanosecond units, as measured by the presentation clock.</summary>
            <remarks>
            <para>This attribute is used with the [MESessionNotifyPresentationTime](mesessionnotifypresentationtime.md) event. This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-start-presentation-time-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_PRESENTATION_TIME_OFFSET">
            <summary>Offset between the presentation time and the media sources time stamps.</summary>
            <remarks>
            <para>The offset is calculated as follows: offset = presentation time − source time. This attribute is used with the following events: -   [MESessionNotifyPresentationTime](mesessionnotifypresentationtime.md) -   [MESessionStarted](mesessionstarted.md) The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-presentation-time-offset-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_START_PRESENTATION_TIME_AT_OUTPUT">
            <summary>The presentation time at which the media sinks will render the first sample of the new topology.</summary>
            <remarks>
            <para>If any pipeline objects in the previous topology buffered data, this value will be slightly less than the value in the [**MF\_EVENT\_PRESENTATION\_TIME\_OFFSET**](mf-event-presentation-time-offset-attribute.md) attribute, because the sinks must render the buffered data. This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-start-presentation-time-at-output-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SOURCE_FAKE_START">
            <summary>Specifies whether the current segment topology is empty.</summary>
            <remarks>
            <para>This attribute is used with the [MESourceStarted](mesourcestarted.md) event. The sequencer source sets this attribute to **TRUE** if the current segment topology is empty. If this attribute is **TRUE**, playback has not started yet. The default value of this attribute is **FALSE**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-source-fake-start-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SOURCE_PROJECTSTART">
            <summary>Specifies the start time for a segment topology.</summary>
            <remarks>
            <para>This attribute is used with the [MESourceStarted](mesourcestarted.md) event. The sequencer source sets this attribute when the current segment topology has the [**MF\_TOPOLOGY\_PROJECTSTART**](mf-topology-projectstart-attribute.md) attribute. The two attributes have the same value. This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-source-projectstart-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SOURCE_ACTUAL_START">
            <summary>Contains the start time at which a media source restarts from its current position.</summary>
            <remarks>
            <para>This attribute is used with the [MESourceStarted](mesourcestarted.md) event. The attribute is relevant when the event data is empty (**VT\_EMPTY**), which indicates that the media source started from the current playback position. In that case, the **MF\_EVENT\_SOURCE\_ACTUAL\_START** attribute specifies the actual starting time. If the event data is **VT\_EMPTY** and this attribute is not set, the starting time is assumed to be zero. When the [MESourceStarted](mesourcestarted.md) event data contains the start time (**VT\_I8**), this attribute should not be set. This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-source-actual-start-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SOURCE_TOPOLOGY_CANCELED">
            <summary>Specifies whether the Sequencer Source canceled a topology.</summary>
            <remarks>
            <para>This attribute is used with the following events: -   [MEEndOfPresentationSegment](meendofpresentationsegment.md) -   [MEEndOfPresentation](meendofpresentation.md) If this attribute is present and nonzero, it means that the presentation segment ended because the sequencer source canceled the topology. Otherwise, the presentation segment ended normally. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-source-topology-canceled-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SOURCE_CHARACTERISTICS">
            <summary>Specifies the current characteristics of the media source.</summary>
            <remarks>
            <para>The value of this attribute is a bitwise **OR** of flags from the [**MFMEDIASOURCE\_CHARACTERISTICS**](/windows/desktop/api/mfidl/ne-mfidl-mfmediasource_characteristics) enumeration. This attribute is used with the [MESourceCharacteristicsChanged](mesourcecharacteristicschanged.md) event. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-source-characteristics-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SOURCE_CHARACTERISTICS_OLD">
            <summary>Specifies the previous characteristics of the media source.</summary>
            <remarks>
            <para>This attribute is used with the [MESourceCharacteristicsChanged](mesourcecharacteristicschanged.md) event. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-source-characteristics-old-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_DO_THINNING">
            <summary>When a media source requests a new playback rate, this attribute specifies whether the source also requests thinning. For a definition of thinning, see About Rate Control.</summary>
            <remarks>
            <para>This attribute is used with the [MESourceRateChangeRequested](mesourceratechangerequested.md) event. If the value is **TRUE**, the media source is requesting a switch to thinned playback. The default value is **FALSE**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-do-thinning-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_SCRUBSAMPLE_TIME">
            <summary>Presentation time for a sample that was rendered while scrubbing.</summary>
            <remarks>
            <para>This attribute is used with the [MEStreamSinkScrubSampleComplete](mestreamsinkscrubsamplecomplete.md) event. This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-scrubsample-time-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_OUTPUT_NODE">
            <summary>Identifies the topology node for a stream sink.</summary>
            <remarks>
            <para>The value of this attribute is a node identifier for an output node on the current topology. To get a pointer to the associated node, call [**IMFTopology::GetNodeByID**](/windows/desktop/api/mfidl/nf-mfidl-imftopology-getnodebyid) on the topology. This attribute is used with the following events: -   [MESessionStreamSinkFormatChanged](mesessionstreamsinkformatchanged.md) -   [MESinkInvalidated](mesinkinvalidated.md) The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-output-node-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_MFT_INPUT_STREAM_ID">
            <summary>Specifies an input stream on a Media Foundation transform (MFT).</summary>
            <remarks>
            <para>This attribute is used with the following events: -   [METransformDrainComplete](metransformdraincomplete.md) -   [METransformNeedInput](metransformneedinput.md) The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-mft-input-stream-id#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_MFT_CONTEXT">
            <summary>Contains a caller-defined value for an METransformMarker event.</summary>
            <remarks>
            <para>This attribute is used with the [METransformMarker](metransformmarker.md) event. The value of the attribute is taken from the *ulParam* parameter of the [**IMFTransform::ProcessMessage**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-processmessage) method. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-mft-context#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_STREAM_METADATA_KEYDATA">
            <summary>Specifies protection system specific data.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-stream-metadata-keydata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_STREAM_METADATA_CONTENT_KEYIDS">
            <summary>Specifies the content key IDs.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-stream-metadata-content-keyids">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_EVENT_STREAM_METADATA_SYSTEMID">
            <summary>Specifies the system ID for which the key data is intended.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-event-stream-metadata-systemid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_METADATA_PHOTO_FRAME_FLASH">
            <summary>Indicates if a flash was triggered for the captured frame.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-metadata-photo-frame-flash">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.PInvoke.MF_CAPTURE_METADATA_FRAME_ILLUMINATION" -->
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_METADATA_DIGITALWINDOW">
            <summary>A value representing the bounds settings of the digital window for video capture.</summary>
            <remarks>The **BLOB** value of this property is a [DigitalWindowSetting](/windows/win32/api/mfapi/ns-mfapi-digitalwindowsetting) structure.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_METADATA_FRAME_BACKGROUND_MASK">
            <summary>Reports the metadata and mask buffer for a background segmentation mask that distinguishes between the background and foreground of a video frame.</summary>
            <remarks>The data carried by this attribute is a [KSCAMERA_METADATA_BACKGROUNDSEGMENTATIONMASK](/windows-hardware/drivers/ddi/ksmedia/ns-ksmedia-kscamera_metadata_backgroundsegmentationmask) structure that contains information about the dimensions of the background mask as well as its coverage of the frame it is inferred from, which is the frame that is outputted by the stream. It also carries a contiguous buffer representing the mask to be leveraged by the consuming app to define which pixels are considered part of the foreground or background. The scaling and image coordinate correlation of the mask regarding the frame is handled by the consuming app.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MAJOR_TYPE">
            <summary>Major type GUID for a media type.</summary>
            <remarks>
            <para>The major type defines the overall category of the media data. Major types include video, audio, script, and so forth. For a list of possible values, see [Major Media Types](media-type-guids.md). An alternate way to retrieve this attribute is to call [**IMFMediaType::GetMajorType**](/windows/desktop/api/mfobjects/nf-mfobjects-imfmediatype-getmajortype). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-major-type-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_SUBTYPE">
            <summary>Subtype GUID for a media type.</summary>
            <remarks>
            <para>The subtype GUID defines a specific media format type within a major type. For example, within video, the subtypes include RGB-24, RGB-32, UYVY, AYUV, and so forth. Within audio, the subtypes include PCM audio, Windows Media Audio 9, and so forth. For possible values, see the following topics: -   [Audio Subtype GUIDs](audio-subtype-guids.md) -   [Video Subtype GUIDs](video-subtype-guids.md) The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-subtype-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_ALL_SAMPLES_INDEPENDENT">
            <summary>Specifies for a media type whether each sample is independent of the other samples in the stream.</summary>
            <remarks>
            <para>If this attribute is **FALSE**, some samples cannot be used without referring to other samples in the stream. For example, if a video format contains delta frames, this attribute should be **FALSE**. This attribute corresponds to the **bTemporalCompression** field in the DirectShow [**AM\_MEDIA\_TYPE**](/windows/win32/api/strmif/ns-strmif-am_media_type) structure. Set this attribute to **TRUE** for all uncompressed media types. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-all-samples-independent-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_FIXED_SIZE_SAMPLES">
            <summary>Specifies for a media type whether the samples have a fixed size.</summary>
            <remarks>
            <para>If this attribute is **TRUE**, every sample in the stream is the same size (in bytes). Otherwise, samples might vary in size. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-fixed-size-samples-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_COMPRESSED">
            <summary>Specifies for a media type whether the media data is compressed.</summary>
            <remarks>
            <para>If this attribute is **TRUE**, the media type is a compressed format. Otherwise, either the media type is uncompressed or the compression type is not known. This attribute is not guaranteed to be set to **TRUE** for all compressed formats, so applications should generally not rely this attribute. The most reliable way to determine whether a format is compressed is to maintain a list of known formats. If an application does not recognize a format, as specified in the [**MF\_MT\_SUBTYPE**](mf-mt-subtype-attribute.md) attribute, it should not assume anything about the compression of the format. To determine whether a format uses temporal compression (meaning that some samples are computed as deltas from earlier samples), check the [**MF\_MT\_ALL\_SAMPLES\_INDEPENDENT**](mf-mt-all-samples-independent-attribute.md) attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-compressed-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_SAMPLE_SIZE">
            <summary>Specifies the size of each sample, in bytes, in a media type.</summary>
            <remarks>
            <para>This attribute is valid only if the [**MF\_MT\_FIXED\_SIZE\_SAMPLES**](mf-mt-fixed-size-samples-attribute.md) attribute is **TRUE**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-sample-size-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_WRAPPED_TYPE">
            <summary>Contains a media type that has been wrapped in another media type.</summary>
            <remarks>
            <para>This attribute is used in the [**MFWrapMediaType**](/windows/desktop/api/mfapi/nf-mfapi-mfwrapmediatype) function, which wraps a media type inside another media type. The [**MFWrapMediaType**](/windows/desktop/api/mfapi/nf-mfapi-mfwrapmediatype) function does the following: 1.  Converts the original media type into a binary array. 2.  Sets the **MF\_MT\_WRAPPED\_TYPE** attribute on the new media type. The value of the attribute is the binary array. Applications typically do not use this attribute directly. To unwrap the original media type, call [**MFUnwrapMediaType**](/windows/desktop/api/mfapi/nf-mfapi-mfunwrapmediatype). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-wrapped-type-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_3D">
            <summary>Specifies whether a video stream contains 3D content.</summary>
            <remarks>This attribute applies to video media types. If this attribute is **TRUE**, the video stream contains 3D content. The default value is **FALSE**.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_3D_FORMAT">
            <summary>For a video media type, specifies how 3D video frames are stored in memory.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideo3DFormat**](/windows/desktop/api/mfapi/ne-mfapi-mfvideo3dformat) enumeration. The attribute applies only if the [MF\_MT\_VIDEO\_3D](mf-mt-video-3d.md) attribute is **TRUE**. This attribute is required for uncompressed 3D video formats. It is optional for compressed 3D video. A media source that delivers encoded frames might be able to set the attribute, based on information in the file container. Otherwise, the attribute should be set by the decoder in the decoder's output media type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-3d-format#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_3D_NUM_VIEWS">
            <summary>The number of views in a 3D video sequence.</summary>
            <remarks>A typical 3D video sequence contains two views, left and right. Currently, the value of this attribute must be either 1 or 2.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_3D_LEFT_IS_BASE">
            <summary>For a 3D video format, specifies which view is the base view.</summary>
            <remarks>
            <para>By default, the left view in a 3D video sequence is the base view. If the right view is the base view, set this attribute to **FALSE**. To convert stereoscopic video to 2D, keep the base view and discard the other view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-3d-left-is-base#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_3D_FIRST_IS_LEFT">
            <summary>For a 3D video format, specifies which view is the left view.</summary>
            <remarks>
            <para>For 3D video, each video sample contains two views, which are designated *first view* and *second view*. The exact layout of the views in memory is indicated by the [MF\_MT\_VIDEO\_3D\_FORMAT](mf-mt-video-3d-format.md) attribute.</para>
            <para>| Format               | First View              | Second View               | |----------------------|-------------------------|---------------------------| | Packed side-by-side  | Left half of the buffer | Right half of the buffer  | | Packed top-to-bottom | Top half of the buffer  | Bottom half of the buffer | | Multiview            | Buffer index 0          | Buffer index 1            | | Base view            | Entire frame            | Not present               |</para>
            <para>By default, the first view is the left view, and the second view is the right view. If the left and right views are swapped, set the MF\_MT\_VIDEO\_3D\_FIRST\_IS\_LEFT attribute to **FALSE** in the media type. > [!Note] > In *base view* format (**MFVideo3DSampleFormat\_BaseView**), only the base view is retained, so this attribute does not apply.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-3d-first-is-left#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_ROTATION">
            <summary>Specifies the rotation of a video frame in the counter-clockwise direction.</summary>
            <remarks>
            <para>Video from a handheld device, such as a mobile phone, is often rotated by 90, 180, or 270 degrees. If the camera stores the orientation as metadata in the video file, the image can be adjusted at the time of playback. If this attribute set to **MFVideoRotationFormat\_90**, it means that the content has been rotated 90 degrees in the counter-clockwise direction. If the content was rotated 90 degrees in the clockwise direction, the attribute value would be **MFVideoRotationFormat\_270**. The supported values for this attribute are enumerated in [**MFVideoRotationFormat**](/windows/desktop/api/mfapi/ne-mfapi-mfvideorotationformat). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-rotation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_MULTIPLEXED_MANAGER">
            <summary>Provides an instance of IMFMuxStreamAttributesManager which manages the IMFAttributes describing the substreams of a multiplexed media source.</summary>
            <remarks>Pass this value into [**IMFAttributes::GetUnknown**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getunknown) to determine if the media source provides multiplexed streams and, if so, get an instance of [**IMFMuxStreamAttributesManager**](/windows/desktop/api/mfobjects/nn-mfobjects-imfmuxstreamattributesmanager).</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIATYPE_MULTIPLEXED_MANAGER">
            <summary>Provides an instance of IMFMuxStreamMediaTypeManager which can be used to get the media types of the substreams of a multiplexed media source as well as control the combination of substreams that are multiplexed by the source.</summary>
            <remarks>Pass this value into [**IMFAttributes::GetUnknown**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getunknown) to get an instance of [**IMFMuxStreamMediaTypeManager**](/windows/desktop/api/mfobjects/nn-mfobjects-imfmuxstreammediatypemanager).</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_ATTRIBUTE_FRAMESOURCE_TYPES">
            <summary>Represents the frame source type.</summary>
            <remarks>This value of this attribute should be a bitmask of one or more values from the [**MFFrameSourceTypes**](/windows/desktop/api/mfapi/ne-mfapi-mfframesourcetypes) enumeration. To support backward compatibility, when this attribute is not defined for a media type, it is assumed to have the value **MFFrameSourceTypes::Color**.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_ALPHA_MODE">
            <summary>Specifies whether the alpha mode for color media video types is premultiplied or straight.</summary>
            <remarks>This value can be cast to a [**DXGI\_ALPHA\_MODE**](/windows/win32/api/dxgi1_2/ne-dxgi1_2-dxgi_alpha_mode) value. If this attribute isn’t present, for backward compatibility, the value is **DXGI\_ALPHA\_MODE\_STRAIGHT** for video format supporting alpha channel, such as ARGB32, or **DXGI\_ALPHA\_MODE\_IGNORE** for video format without alpha channel, such as RGB32.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DEPTH_MEASUREMENT">
            <summary>A value that defines the measurement system for a depth value in a video frame.</summary>
            <remarks>
            <para>This value is a member of the [**\_MFDepthMeasurement**](/windows/win32/api/mfapi/ne-mfapi-mfdepthmeasurement) enumeration If this attribute is not present it is assumed to be **DistanceToFocalPlane**. The distance to focal plane is typically easier to consume in a 3D Euclidian coordinate system. ![illustration of distancetofocalplane](images/distance-to-focal-plane.png) The distance to focal center format is typically raw data from sensor such as time of flight cameras. ![illustration of distancetoopticalcenter](images/distance-to-optical-center.png) Depth cameras cannot sense the depth of all pixels. When the confidence of a pixel is low, because of material, occlusion, or out of range etc, the depth value on that pixel can be invalid. When a depth pixel value is 0, the pixel is invalid. Some depth cameras attach bitmask metadata for each pixel in addition to the depth value to represent the reason why the depth of pixel is invalid, due to material, occlusion or out of range etc. We recommend that you avoid attaching such metadata as bits in depth value, because it will typically lead to difficulty when using such values in pixel shader. Instead. we recommend that you use a separate 8bit image buffer with same resolution and attach it as attribute of the [**IMFSample**](/windows/desktop/api/mfobjects/nn-mfobjects-imfsample). Such metadata varies for each camera vendor and is not standardized by the platform. We recommend using full 16 bits for the depth value for easier processing downstream and using a fixed value such as 0 for invalidation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-depth-measurement#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DEPTH_VALUE_UNIT">
            <summary>A value that defines the units for a depth value in a video frame.</summary>
            <remarks>
            <para>The unit value is a UINT64 value in nanometers, in the range 1e - 9 meters. If this value is not present, the default value of the unit is 1e-3, which indicates each pixel level is measured in 1 millimeter in physical space. Depth cameras cannot sense the depth of all pixels. When the confidence of a pixel is low, because of material, occlusion, or out of range etc, the depth value on that pixel can be invalid. When a depth pixel value is 0, the pixel is invalid. Some depth cameras attach bitmask metadata for each pixel in addition to the depth value to represent the reason why the depth of pixel is invalid, due to material, occlusion or out of range etc. We recommend that you avoid attaching such metadata as bits in depth value, because it will typically lead to difficulty when using such values in pixel shader. Instead. we recommend that you use a separate 8bit image buffer with same resolution and attach it as attribute of the [**IMFSample**](/windows/desktop/api/mfobjects/nn-mfobjects-imfsample). Such metadata varies for each camera vendor and is not standardized by the platform. We recommend using full 16 bits for the depth value for easier processing downstream and using a fixed value such as 0 for invalidation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-depth-value-unit#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_FORWARD_CUSTOM_NALU">
            <summary>Specifies that network abstraction layer (NAL) unit types should be forwarded on output samples by the decoder.</summary>
            <remarks>If the decoder parses a NALU then it will not be forwarded.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_FORWARD_CUSTOM_SEI">
            <summary>Specifies that Supplemental Enhancement Information (SEI) unit types should be forwarded on output samples by the decoder.</summary>
            <remarks>If the decoder parses an SEI then it will not be forwarded.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_RENDERER_EXTENSION_PROFILE">
            <summary>Contains a string that matches an entry in a UWP app manifests VideoRendererExtensionProfiles list to select which effect to load.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-renderer-extension-profile">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_NUM_CHANNELS">
            <summary>Number of audio channels in an audio media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **nChannels** member of the [WAVEFORMATEX](mf-mt-audio-prefer-waveformatex-attribute.md) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-num-channels-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_SAMPLES_PER_SECOND">
            <summary>MF_MT_AUDIO_SAMPLES_PER_SECOND attribute - Number of audio samples per second in an audio media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **nSamplesPerSec** member of the [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-samples-per-second-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND">
            <summary>MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND attribute - Number of audio samples per second in an audio media type.</summary>
            <remarks>The GUID constant for this attribute is exported from mfuuid.lib.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_AVG_BYTES_PER_SECOND">
            <summary>Average number of bytes per second in an audio media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **nAvgBytesPerSec** member of the [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-avg-bytes-per-second-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_BLOCK_ALIGNMENT">
            <summary>Block alignment, in bytes, for an audio media type. The block alignment is the minimum atomic unit of data for the audio format.</summary>
            <remarks>
            <para>For PCM audio formats, the block alignment is equal to the number of audio channels multiplied by the number of bytes per audio sample. This attribute corresponds to the **nBlockAlign** member of the [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-block-alignment-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_BITS_PER_SAMPLE">
            <summary>Number of bits per audio sample in an audio media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **wBitsPerSample** member of the [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) structure. If some bits contain padding, set the [**MF\_MT\_AUDIO\_VALID\_BITS\_PER\_SAMPLE**](mf-mt-audio-valid-bits-per-sample-attribute.md) attribute to specify the number of bits of valid audio data in each sample. If the audio contains 8 bits per sample, the audio samples are unsigned values. (Each audio sample has the range 0–255.) If the audio contains 16 bits per sample or higher, the audio samples are signed values. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-bits-per-sample-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_VALID_BITS_PER_SAMPLE">
            <summary>Number of valid bits of audio data in each audio sample.</summary>
            <remarks>
            <para>The **MF\_MT\_AUDIO\_VALID\_BITS\_PER\_SAMPLE** attribute is used for audio formats that contain padding after each audio sample. The total size of each audio sample, including padding bits, is given in the [**MF\_MT\_AUDIO\_BITS\_PER\_SAMPLE**](mf-mt-audio-bits-per-sample-attribute.md) attribute. If the **MF\_MT\_AUDIO\_VALID\_BITS\_PER\_SAMPLE** attribute is not set, use the [**MF\_MT\_AUDIO\_BITS\_PER\_SAMPLE**](mf-mt-audio-bits-per-sample-attribute.md) attribute to find the number of valid bits per sample. If an audio format does not contain any padding bits, then this attribute should not be set, or should be set to the same value as the [**MF\_MT\_AUDIO\_BITS\_PER\_SAMPLE**](mf-mt-audio-bits-per-sample-attribute.md) attribute. This attribute corresponds to the **wValidBitsPerSample** member of the [**WAVEFORMATEXTENSIBLE**](/windows/win32/api/mmreg/ns-mmreg-waveformatextensible) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-valid-bits-per-sample-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_SAMPLES_PER_BLOCK">
            <summary>Number of audio samples contained in one compressed block of audio data. This attribute can be used in compressed audio formats that have a fixed number of samples within each block.</summary>
            <remarks>
            <para>This attribute corresponds to the **wSamplesPerBlock** member of the [**WAVEFORMATEXTENSIBLE**](/previous-versions/windows/desktop/legacy/dd390971(v=vs.85)) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-samples-per-block-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_CHANNEL_MASK">
            <summary>In an audio media type, specifies the assignment of audio channels to speaker positions.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwChannelMask** member of the [**WAVEFORMATEXTENSIBLE**](/windows/win32/api/mmreg/ns-mmreg-waveformatextensible) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-channel-mask-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_FOLDDOWN_MATRIX">
            <summary>Specifies how an audio decoder should transform multichannel audio to stereo output. This process is also called fold-down.</summary>
            <remarks>
            <para>This attribute applies to audio media types. The value of this attribute is an [**MFFOLDDOWN\_MATRIX**](/windows/desktop/api/mfapi/ns-mfapi-mffolddown_matrix) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-folddown-matrix-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_WMADRC_PEAKREF">
            <summary>Reference peak volume level of a Windows Media Audio file.</summary>
            <remarks>
            <para>This attribute applies to audio media types for Windows Media Audio codecs. It specifies the original peak volume level of the content. The decoder can use this value to perform dynamic range control. The [**IMFASFContentInfo::ParseHeader**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-parseheader) method adds this attribute to the media type if the ASF header contains the [**WM/WMADRCPeakReference**](../wmformat/wm-wmadrcpeakreference.md) attribute. This attribute is documented in the Windows Media Format SDK documentation. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-wmadrc-peakref-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_WMADRC_PEAKTARGET">
            <summary>Target peak volume level of a Windows Media Audio file.</summary>
            <remarks>
            <para>This attribute applies to audio media types for Windows Media Audio codecs. It specifies the target peak volume level of the content. The decoder can use this value to perform dynamic range control. The [**IMFASFContentInfo::ParseHeader**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-parseheader) method adds this attribute to the media type if the ASF header contains the [**WM/WMADRCPeakTarget**](../wmformat/wm-wmadrcpeaktarget.md) attribute. This attribute is documented in the Windows Media Format SDK documentation. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-wmadrc-peaktarget-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_WMADRC_AVGREF">
            <summary>Reference average volume level of a Windows Media Audio file.</summary>
            <remarks>
            <para>This attribute applies to audio media types for Windows Media Audio codecs. It specifies the original average volume level of the content. The decoder can use this value to perform dynamic range control. The [**IMFASFContentInfo::ParseHeader**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-parseheader) method adds this attribute to the media type if the ASF header contains the [**WM/WMADRCAverageReference**](../wmformat/wm-wmadrcaveragereference.md) attribute. This attribute is documented in the Windows Media Format SDK documentation. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-wmadrc-avgref-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_WMADRC_AVGTARGET">
            <summary>Target average volume level of a Windows Media Audio file.</summary>
            <remarks>
            <para>This attribute applies to audio media types for Windows Media Audio codecs. It specifies the target average volume level of the content. The decoder can use this value to perform dynamic range control. The [**IMFASFContentInfo::ParseHeader**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-parseheader) method adds this attribute to the media type if the ASF header contains the [**WM/WMADRCAverageTarget**](../wmformat/wm-wmadrcaveragetarget.md) attribute. This attribute is documented in the Windows Media Format SDK documentation. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-wmadrc-avgtarget-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AUDIO_PREFER_WAVEFORMATEX">
            <summary>Specifies the preferred legacy format structure to use when converting an audio media type.</summary>
            <remarks>
            <para>This attribute provides a hint to the [**MFCreateWaveFormatExFromMFMediaType**](/windows/desktop/api/mfapi/nf-mfapi-mfcreatewaveformatexfrommfmediatype) function. If the attribute is **TRUE**, the function converts the audio media type to a [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) structure whenever possible, instead of converting it to a [**WAVEFORMATEXTENSIBLE**](/previous-versions/windows/desktop/legacy/dd390971(v=vs.85)) structure. The [**MFInitMediaTypeFromWaveFormatEx**](/windows/desktop/api/mfapi/nf-mfapi-mfinitmediatypefromwaveformatex) function sets this attribute. You can override the value of this attribute, but setting this attribute to **TRUE** does not guarantee that an audio media type can be converted to [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) form. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-audio-prefer-waveformatex-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AAC_PAYLOAD_TYPE">
            <summary>Specifies the payload type of an Advanced Audio Coding (AAC) stream.</summary>
            <remarks>
            <para>MF\_MT\_AAC\_PAYLOAD\_TYPE is optional. If this attribute is not specified, the default value 0 is used, which specifies the stream contains raw\_data\_block elements only. Applies only to **MFAudioFormat\_AAC**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-aac-payload-type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION">
            <summary>Specifies the audio profile and level of an Advanced Audio Coding (AAC) stream.</summary>
            <remarks>
            <para>This attribute contains the value of the **audioProfileLevelIndication** field, as defined by ISO/IEC 14496-3. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-aac-audio-profile-level-indication#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_SPATIAL_AUDIO_MAX_DYNAMIC_OBJECTS">
            <summary>Specifies the maximum number of dynamic audio objects that can be rendered by the audio endpoint simulataneously.</summary>
            <remarks>An [**IMFSpatialAudioSample**](/windows/desktop/api/mfspatialaudio/nn-mfspatialaudio-imfspatialaudiosample) may contain fewer samples than the number specified by this attribute. If a sample contains more audio objects than specified by this attribute, the behavior is undefined.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_SPATIAL_AUDIO_OBJECT_METADATA_FORMAT_ID">
            <summary>A decoder-defined GUID that identifies the spatial audio metadata format, notifying downstream components of the metadata object type that the decoder will output.</summary>
            <remarks>The metadata blob with the specified format is written using the [**ISpatialAudioMetadataWriter**](/windows/win32/api/spatialaudiometadata/nn-spatialaudiometadata-ispatialaudiometadatawriter) interface and read using the [**ISpatialAudioMetadataReader**](/windows/win32/api/spatialaudiometadata/nn-spatialaudiometadata-ispatialaudiometadatareader) interface. The metadata blob is opaque to the Media Foundation pipeline and components. The attribute is applied to the spatial audio media type. If a downstream component does not support the metadata format specified by the GUID, the component should reject the input media type.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_SPATIAL_AUDIO_OBJECT_METADATA_LENGTH">
            <summary>A value specifying the size, in bytes, of the spatial audio metadata object type that the decoder will output.</summary>
            <remarks>The metadata blob with the specified format is written using the [**ISpatialAudioMetadataWriter**](/windows/win32/api/spatialaudiometadata/nn-spatialaudiometadata-ispatialaudiometadatawriter) interface and read using the [**ISpatialAudioMetadataReader**](/windows/win32/api/spatialaudiometadata/nn-spatialaudiometadata-ispatialaudiometadatareader) interface. The metadata blob is opaque to the Media Foundation pipeline and components. The attribute is applied to the spatial audio media type.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_FRAME_SIZE">
            <summary>Width and height of a video frame, in pixels.</summary>
            <remarks>
            <para>The upper 32 bits contain the width and the lower 32 bits contain the height. To set this attribute, use the [**MFSetAttributeSize**](/windows/desktop/api/mfapi/nf-mfapi-mfsetattributesize) function. To get this attribute, use the [**MFGetAttributeSize**](/windows/desktop/api/mfapi/nf-mfapi-mfgetattributesize) function. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-frame-size-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_FRAME_RATE">
            <summary>Frame rate of a video media type, in frames per second.</summary>
            <remarks>
            <para>The frame rate is expressed as a ratio. The upper 32 bits of the attribute value contain the numerator and the lower 32 bits contain the denominator. For example, if the frame rate is 30 frames per second (fps), the ratio is 30/1. If the frame rate is 29.97 fps, the ratio is 30,000/1001. To set the value, use the [**MFSetAttributeRatio**](/windows/desktop/api/mfapi/nf-mfapi-mfsetattributeratio) function. To get the value, use the [**MFGetAttributeRatio**](/windows/desktop/api/mfapi/nf-mfapi-mfgetattributeratio) function. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-frame-rate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_PIXEL_ASPECT_RATIO">
            <summary>Pixel aspect ratio for a video media type.</summary>
            <remarks>
            <para>The upper 32 bits contain the numerator of the pixel aspect ratio and the lower 32 bits contain the denominator. The numerator is the horizontal component of the aspect ratio; the denominator is the vertical component. To set this attribute, use the [**MFSetAttributeRatio**](/windows/desktop/api/mfapi/nf-mfapi-mfsetattributeratio) function. To get this attribute, use the [**MFGetAttributeRatio**](/windows/desktop/api/mfapi/nf-mfapi-mfgetattributeratio) function. The pixel aspect ratio describes the shape of the pixels in the displayed video image. Set this attribute if the image has non-square pixels. To display correctly on a display device with square pixels, the image must be scaled by the inverse of the image's pixel aspect ratio. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-pixel-aspect-ratio-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DRM_FLAGS">
            <summary>Specifies whether a video media type requires the enforcement of copy protection.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoDRMFlags**](/windows/desktop/api/mfapi/ne-mfapi-mfvideodrmflags) enumeration. This attribute provides a hint to the application. It is not used to enforce copy protection or to specify the copy protection mechanism. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-drm-flags-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_TIMESTAMP_CAN_BE_DTS">
            <summary>MF_MT_TIMESTAMP_CAN_BE_DTS attribute - Specifies whether a decoder can use decode time stamps (DTS) when setting time stamps.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-timestamp-can-be-dts">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_PAD_CONTROL_FLAGS">
            <summary>Specifies the aspect ratio of the output rectangle for a video media type.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoPadFlags**](/windows/desktop/api/mfapi/ne-mfapi-mfvideopadflags) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-pad-control-flags-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_SOURCE_CONTENT_HINT">
            <summary>Describes the intended aspect ratio for a video media type.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoSrcContentHintFlags**](/windows/desktop/api/mfapi/ne-mfapi-mfvideosrccontenthintflags) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-source-content-hint-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_CHROMA_SITING">
            <summary>Describes how chroma was sampled for a YCbCr video media type.</summary>
            <remarks>
            <para>The value of this attribute is a bitwise **OR** of flags from the [**MFVideoChromaSubsampling**](/windows/desktop/api/mfobjects/ne-mfobjects-mfvideochromasubsampling) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-chroma-siting-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_INTERLACE_MODE">
            <summary>Describes how the frames in a video media type are interlaced.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoInterlaceMode**](/windows/desktop/api/mfobjects/ne-mfobjects-mfvideointerlacemode) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-interlace-mode-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_TRANSFER_FUNCTION">
            <summary>Specifies the conversion function from RGB to RGB for a video media type.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoTransferFunction**](/windows/desktop/api/mfobjects/ne-mfobjects-mfvideotransferfunction) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-transfer-function-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_PRIMARIES">
            <summary>Specifies the color primaries for a video media type.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoPrimaries**](/windows/desktop/api/mfobjects/ne-mfobjects-mfvideoprimaries) enumeration. The [**MFVideoPrimaries**](/windows/desktop/api/mfobjects/ne-mfobjects-mfvideoprimaries) enumeration identifies color primaries associated with certain common video standards. If the media type uses color primaries that are not identified in the **MFVideoPrimaries** enumeration, set the [**MF\_MT\_CUSTOM\_VIDEO\_PRIMARIES**](mf-mt-custom-video-primaries-attribute.md) attribute instead of this attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-primaries-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MAX_LUMINANCE_LEVEL">
            <summary>Specifies the maximum luminance level of the content in Nits. This attribute has the same semantics as MaxCLL as defined in the CEA-861.3 standard.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-max-luminance-level">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MAX_FRAME_AVERAGE_LUMINANCE_LEVEL">
            <summary>Specifies the maximum average per-frame luminance level of the content in Nits. This attribute has the same semantics as MaxFALL as defined in the CEA-861.3 standard.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-max-frame-average-luminance-level">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MAX_MASTERING_LUMINANCE">
            <summary>Specifies the maximum luminance of the display on which the content was authored, in Nits. This attribute has the same semantics as max\_display\_mastering\_luminance as defined in the CEA-861.3 standard.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-max-mastering-luminance">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MIN_MASTERING_LUMINANCE">
            <summary>Specifies the minimum luminance of the display on which the content was authored, in Nits. This attribute has the same semantics as min\_display\_mastering\_luminance as defined in the CEA-861.3 standard.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-min-mastering-luminance">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_CUSTOM_VIDEO_PRIMARIES">
            <summary>Specifies custom color primaries for a video media type.</summary>
            <remarks>
            <para>The attribute data is an [**MT\_CUSTOM\_VIDEO\_PRIMARIES**](/windows/desktop/api/mfapi/ns-mfapi-mt_custom_video_primaries) structure. This attribute specifies the actual color volume of content or a display. CEA-861.3 / SMPTE ST.2086 color volume mastering information is stored in this attribute by decoders. Note that this attribute does not replace the [**MF\_MT\_VIDEO\_PRIMARIES**](mf-mt-video-primaries-attribute.md)attribute. This attribute describes a hint about the color volume of the content, whereas **MF\_MT\_VIDEO\_PRIMARIES** describes the color primaries in which the content is actually coded (e.g: the meaning of 1.0 in the R/G/B channels of a floating point representation). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-custom-video-primaries-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_YUV_MATRIX">
            <summary>For YUV media types, defines the conversion matrix from the YCbCr color space to the RGB color space.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoTransferMatrix**](/windows/desktop/api/mfobjects/ne-mfobjects-mfvideotransfermatrix) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-yuv-matrix-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_LIGHTING">
            <summary>Specifies the optimal lighting conditions for a video media type.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFVideoLighting**](/windows/desktop/api/mfobjects/ne-mfobjects-mfvideolighting) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-lighting-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_NOMINAL_RANGE">
            <summary>Specifies the nominal range of the color information in a video media type.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**MFNominalRange**](/windows/desktop/api/mfobjects/ne-mfobjects-mfnominalrange) enumeration. The GUID constant for this attribute is exported from mfuuid.lib. **H.264/AVC encoders:** On the output media type, MF\_MT\_VIDEO\_NOMINAL\_RANGE can be set with **MFNominalRange\_0\_255** and **MFNominalRange\_16\_235**. H.264/AVC encoder shall treat **MFNominalRange\_Unknown** as **MFNominalRange\_16\_235**. H.264/AVC encoder shall reject a output media type when MF\_MT\_VIDEO\_NOMINAL\_RANGE is set to **MFNominalRange\_48\_208**, **MFNominalRange\_64\_127**, or any other values not defined on [**MFNominalRange**](/windows/desktop/api/mfobjects/ne-mfobjects-mfnominalrange).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-nominal-range-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_GEOMETRIC_APERTURE">
            <summary>Defines the geometric aperture for a video media type.</summary>
            <remarks>
            <para>The value of this attribute is an [**MFVideoArea**](/windows/desktop/api/mfobjects/ns-mfobjects-mfvideoarea) structure. The picture aspect ratio is calculated relative to the geometric aperture, using the following formula: Picture aspect ratio = (geometric aperture width / geometric aperture height) × pixel aspect ratio. If this attribute is not set, the geometric aperture is assumed to be the entire video frame. You should set this attribute only when the media type describes a video standard with a defined active area. For example, in NTSC television the video frame is 720 × 480 with an active area of 704 × 480 and a 10:11 pixel aspect ratio. The resulting picture has an aspect ratio of (704/480) × (10/11) = 4:3. > [!Note] > The default presenter for the [Enhanced Video Renderer](enhanced-video-renderer.md) (EVR) shows the geometric aperture of the video, if specified.</para>
            <para>The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-geometric-aperture-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MINIMUM_DISPLAY_APERTURE">
            <summary>Defines the display aperture, which is the region of a video frame that contains valid image data.</summary>
            <remarks>
            <para>The attribute value is an [**MFVideoArea**](/windows/desktop/api/mfobjects/ns-mfobjects-mfvideoarea) structure. The minimum display aperture is the region that contains the valid portion of the signal. The pixels outside the aperture contain invalid data and should not be displayed. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-minimum-display-aperture-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.PInvoke.MF_MT_PAN_SCAN_APERTURE" -->
        <member name="F:Windows.Win32.PInvoke.MF_MT_PAN_SCAN_ENABLED">
            <summary>Specifies whether pan/scan mode is enabled.</summary>
            <remarks>
            <para>If this attribute is **TRUE**, only the pan/scan region of the video should be displayed. The pan/scan region is specified by the [**MF\_MT\_PAN\_SCAN\_APERTURE**](mf-mt-pan-scan-aperture-attribute.md) attribute. If this attribute is **FALSE** or not set, the entire display aperture of the video should be displayed. The display aperture is specified by the [**MF\_MT\_MINIMUM\_DISPLAY\_APERTURE**](mf-mt-minimum-display-aperture-attribute.md) attribute. If you set this attribute to **TRUE**, also set the value of the [**MF\_MT\_PAN\_SCAN\_APERTURE**](mf-mt-pan-scan-aperture-attribute.md) attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-pan-scan-enabled-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AVG_BITRATE">
            <summary>Approximate data rate of the video stream, in bits per second, for a video media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwBitRate** member of the [**VIDEOINFOHEADER**](/previous-versions/windows/desktop/api/amvideo/ns-amvideo-videoinfoheader) and [**VIDEOINFOHEADER2**](/previous-versions/windows/desktop/api/dvdmedia/ns-dvdmedia-videoinfoheader2) structures. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-avg-bitrate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AVG_BIT_ERROR_RATE">
            <summary>Data error rate, in bit errors per second, for a video media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwBitErrorRate** member of the [**VIDEOINFOHEADER**](/previous-versions/windows/desktop/api/amvideo/ns-amvideo-videoinfoheader) and [**VIDEOINFOHEADER2**](/previous-versions/windows/desktop/api/dvdmedia/ns-dvdmedia-videoinfoheader2) structures. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-avg-bit-error-rate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MAX_KEYFRAME_SPACING">
            <summary>Maximum number of frames from one key frame to the next, in a video media type.</summary>
            <remarks>The GUID constant for this attribute is exported from mfuuid.lib.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_USER_DATA">
            <summary>Contains additional format data for a media type.</summary>
            <remarks>
            <para>The meaning of the data in this attribute depends on the format that is described by the media type.</para>
            <para>| Format Type                                                                                                           | Additional Format Data                                                                                                                    | |-----------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------| | Windows Media codec.                                                                                                  | Codec private data.                                                                                                                       | | Converted [**VIDEOINFOHEADER**](/previous-versions/windows/desktop/api/amvideo/ns-amvideo-videoinfoheader) or [**VIDEOINFOHEADER2**](/previous-versions/windows/desktop/api/dvdmedia/ns-dvdmedia-videoinfoheader2) structure.   | Extra data that appears after the [**BITMAPINFOHEADER**](/windows/win32/api/wingdi/ns-wingdi-bitmapinfoheader) structure, not including the color table or color masks. | | Converted [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) or [**WAVEFORMATEXTENSIBLE**](/previous-versions/windows/desktop/legacy/dd390971(v=vs.85)) structure. | Extra data that appears after the audio format structure.                                                                                 |</para>
            <para>The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-user-data-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DEFAULT_STRIDE">
            <summary>Default surface stride, for an uncompressed video media type. Stride is the number of bytes needed to go from one row of pixels to the next.</summary>
            <remarks>
            <para>The attribute value is stored as a **UINT32**, but should be cast to a 32-bit signed integer value. Stride can be negative. Stride is positive for top-down images, and negative for bottom-up images. This attribute gives the stride for a *contiguous* representation of the image in memory; that is, a representation with no additional padding bytes after each row. If a media buffer supports the [**IMF2DBuffer**](/windows/desktop/api/mfobjects/nn-mfobjects-imf2dbuffer) interface, use the [**IMF2DBuffer::Lock2D**](/windows/desktop/api/mfobjects/nf-mfobjects-imf2dbuffer-lock2d) method to get the actual stride of the surface, which might include extra padding bytes. For more information about surface stride, see [Image Stride](image-stride.md). For an example of how to calculate the default stride, see [Uncompressed Video Buffers](uncompressed-video-buffers.md). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-default-stride-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_PALETTE">
            <summary>Contains the palette entries for a video media type. Use this attribute for palettized video formats, such as RGB 8.</summary>
            <remarks>
            <para>The attribute data is an array of [**MFPaletteEntry**](/windows/win32/api/mfobjects/ns-mfobjects-mfpaletteentry) unions. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-palette-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_AM_FORMAT_TYPE">
            <summary>Contains a DirectShow format GUID for a media type.</summary>
            <remarks>
            <para>This attribute might be set when a DirectShow media type is converted into a Media Foundation media type. The attribute indicates the original DirectShow format type. The value corresponds to the formattype member of the [**AM\_MEDIA\_TYPE**](/windows/win32/api/strmif/ns-strmif-am_media_type) structure. For an audio format, the [**MF\_MT\_USER\_DATA**](mf-mt-user-data-attribute.md) attribute might contain the original format block, if the DirectShow format type was not recognized. Do not set this attribute on a media type unless you are converting a DirectShow format structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-am-format-type-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_PROFILE">
            <summary>Specifies the profile of video encoding on the output media type. This is an alias of MF\_MT\_MPEG2\_PROFILE attribute.</summary>
            <remarks>
            <para>**H.264 encoders:** Supported profiles are exceeded to include [**eAVEncH264VProfile\_ConstrainedBase**](/windows/desktop/api/codecapi/ne-codecapi-eavench264vprofile) and **eAVEncH264VProfile\_ConstrainedHigh**. Encoders shall support both [**GetValue**](/windows/desktop/api/mfobjects/nf-mfobjects-imfmediaevent-getvalue) and [**SetValue**](/windows/win32/api/strmif/nf-strmif-icodecapi-setvalue) for this attribute. This is static, so video encoders must be configured before the streaming starts. If the application sets a profile which the encoder does not support, the encoder shall reject the media type. Recommended default: [**eAVEncH264VProfile\_Main**](/windows/desktop/api/codecapi/ne-codecapi-eavench264vprofile) profile.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-profile#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_VIDEO_LEVEL">
            <summary>Specifies the MPEG-2 or H.264 level in a video media type. This is an alias of MF\_MT\_MPEG2\_LEVEL.</summary>
            <remarks>
            <para>**H.264 encoders:** Supported levels are extended to include the [**eAVEncH264VLevel5\_2**](/windows/desktop/api/codecapi/ne-codecapi-eavench264vlevel). Default : Recommended default is to select the minimum level to match video encoding configuration including resolution, frame rate etc. Recommended default: select the minimum level to match video encoding configuration including resolution, frame rate, etc.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-video-level#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG_START_TIME_CODE">
            <summary>Group-of-pictures (GOP) start time code, for an MPEG-1 or MPEG-2 video media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwStartTimeCode** member of the [**MPEG1VIDEOINFO**](/previous-versions/windows/desktop/api/amvideo/ns-amvideo-mpeg1videoinfo) and [**MPEG2VIDEOINFO**](/previous-versions/windows/desktop/api/dvdmedia/ns-dvdmedia-mpeg2videoinfo) structures. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg-start-time-code-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG2_PROFILE">
            <summary>Specifies the MPEG-2 or H.264 profile in a video media type.</summary>
            <remarks>
            <para>For MPEG-2 video, the value of this attribute is a member of the [**AM\_MPEG2Profile**](/previous-versions/windows/desktop/api/dvdmedia/ne-dvdmedia-am_mpeg2profile) enumeration. For H.264 video, the value is a member of the [**eAVEncH264VProfile**](/windows/desktop/api/codecapi/ne-codecapi-eavench264vprofile) enumeration. This attribute corresponds to the **dwProfile** member of the [**MPEG2VIDEOINFO**](/previous-versions/windows/desktop/api/dvdmedia/ns-dvdmedia-mpeg2videoinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg2-profile-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG2_LEVEL">
            <summary>Specifies the MPEG-2 or H.264 level in a video media type.</summary>
            <remarks>
            <para>For MPEG-2 video, the value of this attribute is a member of the [**AM\_MPEG2Level**](/previous-versions/windows/desktop/api/dvdmedia/ne-dvdmedia-am_mpeg2level) enumeration. For H.264 video, the value is a member of the [**eAVEncH264VLevel**](/windows/desktop/api/codecapi/ne-codecapi-eavench264vlevel) enumeration. This attribute corresponds to the **dwLevel** member of the [**MPEG2VIDEOINFO**](/previous-versions/windows/desktop/api/dvdmedia/ns-dvdmedia-mpeg2videoinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg2-level-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG2_FLAGS">
            <summary>Contains miscellaneous flags for an MPEG-2 video media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwFlags** member of the [**MPEG2VIDEOINFO**](/previous-versions/windows/desktop/api/dvdmedia/ns-dvdmedia-mpeg2videoinfo) structure. For a list of valid flags, see the documentation for **MPEG2VIDEOINFO**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg2-flags-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.PInvoke.MF_MT_MPEG_SEQUENCE_HEADER" -->
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG2_STANDARD">
            <summary>For a media type that describes an MPEG-2 program stream (PS) or transport stream (TS), specifies the standard that is used to multiplex the stream.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg2-standard">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG2_TIMECODE">
            <summary>For a media type that describes an MPEG-2 transport stream (TS), specifies the transport packets contain a 4-byte time code.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg2-timecode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG2_CONTENT_PACKET">
            <summary>For a media type that describes an MPEG-2 transport stream (TS), specifies whether the transport packets contain Content Packet headers.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg2-content-packet">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_MAX_CODEC_CONFIG_DELAY">
            <summary>The maximum number of frames the H.264 encoder takes to respond to a command.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bMaxCodecConfigDelay** field in the UVC 1.2 H.264 video format descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-max-codec-config-delay#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_SUPPORTED_SLICE_MODES">
            <summary>Specifies the supported slice modes for an H.264 video stream.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bmSupportedSliceModes** field in the UVC 1.5 H.264 video format descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-supported-slice-modes#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_SUPPORTED_SYNC_FRAME_TYPES">
            <summary>Specifies the types of synchronization frame that are supported for an H.264 video stream.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bmSupportedSyncFrameTypes** field in the UVC 1.5 H.264 video format descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-supported-sync-frame-types#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_SIMULCAST_SUPPORT">
            <summary>Specifies the number of streaming endpoints and the number of supported streams for a UVC H.264 encoder.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bSimulcastSupport** field in the UVC 1.5 H.264 video format descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-simulcast-support#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_SUPPORTED_RATE_CONTROL_MODES">
            <summary>Specifies the supported rate-control modes for an H.264 video stream.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bmSupportedRateControlModes** field in the UVC 1.5 H.264 video format descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-supported-rate-control-modes#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_MAX_MB_PER_SEC">
            <summary>Specifies the maximum macroblock processing rate for an H.264 video stream.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value of the attribute is an array of UINT32 values, which correspond to the following fields in the UVC 1.5 H.264 video format descriptor. | Array Element | Descriptor Field                                           | |---------------|------------------------------------------------------------| | 0             | **dwMaxMBperSecOneResolutionNoScalability**                | | 1             | **dwMaxMBperSecTwoResolutionsNoScalability**               | | 2             | **dwMaxMBperSecThreeResolutionsNoScalability**             | | 3             | **dwMaxMBperSecFourResolutionsNoScalability**              | | 4             | **dwMaxMBperSecOneResolutionTemporalScalability**          | | 5             | **dwMaxMBperSecTwoResolutionsTemporalScalablility**        | | 6             | **dwMaxMBperSecThreeResolutionsTemporalScalability**       | | 7             | **dwMaxMBperSecFourResolutionsTemporalScalability**        | | 8             | **dwMaxMBperSecOneResolutionTemporalQualityScalability**   | | 9             | **dwMaxMBperSecTwoResolutionsTemporalQualityScalability**  | | 10            | **dwMaxMBperSecThreeResolutionsTemporalQualityScalablity** | | 11            | **dwMaxMBperSecFourResolutionsTemporalQualityScalability** | | 12            | **dwMaxMBperSecOneResolutionFullScalability**              | | 13            | **dwMaxMBperSecTwoResolutionsFullScalability**             | | 14            | **dwMaxMBperSecThreeResolutionsFullScalability**           | | 15            | **dwMaxMBperSecFourResolutionsFullScalability**            |</para>
            <para>This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-max-mb-per-sec#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_SUPPORTED_USAGES">
            <summary>Specifies the supported usage modes for an H.264 video stream.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bmSupportedUsages** field in the UVC 1.5 H.264 video frame descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-supported-usages#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_CAPABILITIES">
            <summary>Specifies the capabilities flags for an H.264 video stream.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bmCapabilities** field in the UVC 1.5 H.264 video frame descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-capabilities#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_SVC_CAPABILITIES">
            <summary>Specifies the SVC capabilities of an H.264 video stream.</summary>
            <remarks>
            <para>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bmSVCCapabilities** field in the UVC 1.5 H.264 video frame descriptor. This attribute is also used with [H.264 UVC 1.5 camera encoders](camera-encoder-h264-uvc-1-5.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-h264-svc-capabilities#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_USAGE">
            <summary>Specifies the usage mode for a UVC H.264 encoder.</summary>
            <remarks>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bUsage** field in the UVC 1.2 H.264 probe/commit control.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_H264_RATE_CONTROL_MODES">
            <summary>Specifies the rate-control mode for an H.264 video stream.</summary>
            <remarks>This attribute applies to media types for H.264 streams transmitted over USB. The value corresponds to the **bmRateControlModes** field in the UVC 1.2 H.264 probe/commit control.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DV_AAUX_SRC_PACK_0">
            <summary>Audio auxiliary (AAUX) source pack for the first audio block in a digital video (DV) media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwDVAAuxSrc** member of the DirectShow [**DVINFO**](/windows/win32/api/strmif/ns-strmif-dvinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-dv-aaux-src-pack-0-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DV_AAUX_CTRL_PACK_0">
            <summary>Audio auxiliary (AAUX) source control pack for the first audio block in a digital video (DV) media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwDVAAuxCtl** member of the DirectShow [**DVINFO**](/windows/win32/api/strmif/ns-strmif-dvinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-dv-aaux-ctrl-pack-0-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DV_AAUX_SRC_PACK_1">
            <summary>Audio auxiliary (AAUX) source pack for the second audio block in a digital video (DV) media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwDVAAuxSrc1** member of the DirectShow [**DVINFO**](/windows/win32/api/strmif/ns-strmif-dvinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-dv-aaux-src-pack-1-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DV_AAUX_CTRL_PACK_1">
            <summary>Audio auxiliary (AAUX) source control pack for the second audio block in a digital video (DV) media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwDVAAuxCtl1** member of the DirectShow [**DVINFO**](/windows/win32/api/strmif/ns-strmif-dvinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-dv-aaux-ctrl-pack-1-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DV_VAUX_SRC_PACK">
            <summary>Video auxiliary (VAUX) source pack in a digital video (DV) media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwDVVAuxSrc** member of the DirectShow [**DVINFO**](/windows/win32/api/strmif/ns-strmif-dvinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-dv-vaux-src-pack-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_DV_VAUX_CTRL_PACK">
            <summary>Video auxiliary (VAUX) source control pack in a digital video (DV) media type.</summary>
            <remarks>
            <para>This attribute corresponds to the **dwDVVAuxCtl** member of the DirectShow [**DVINFO**](/windows/win32/api/strmif/ns-strmif-dvinfo) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-dv-vaux-ctrl-pack-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_ARBITRARY_HEADER">
            <summary>Type-specific data for a binary stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>ASF files can contain streams with binary data. The MF\_MT\_ARBITRARY\_HEADER attribute in the media type contains an [**MT\_ARBITRARY\_HEADER**](/windows/desktop/api/mfapi/ns-mfapi-mt_arbitrary_header) structure that describes the stream. In addition to the MF\_MT\_ARBITRARY\_HEADER attribute, the media type for an ASF binary stream contains the following attributes:</para>
            <para>| Attribute                                                 | Description                                            | |-----------------------------------------------------------|--------------------------------------------------------| | [**MF\_MT\_MAJOR\_TYPE**](mf-mt-major-type-attribute.md) | The value of the attribute is **MFMediaType\_Binary**. | | [MF\_MT\_ARBITRARY\_FORMAT](mf-mt-arbitrary-format.md)   | Contains additional format data.                       |</para>
            <para>> [!Note] > In the Windows Media Format SDK, binary streams are called *arbitrary streams* or *arbitrary data streams*.</para>
            <para>The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-arbitrary-header#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_ARBITRARY_FORMAT">
            <summary>Additional format data for a binary stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>Applications can use binary streams to hold custom data types. The ASF media source treats the value of this attribute as an opaque blob. The **formattype** member of the [**MT\_ARBITRARY\_HEADER**](/windows/desktop/api/mfapi/ns-mfapi-mt_arbitrary_header) structure defines the layout of the format data. This structure corresponds to the Format Data field of the type-specific data in the Stream Properties Object, in files where the stream type is **ASF\_Binary\_Media**. For more information, see the ASF specification. > [!Note] > In the Windows Media Format SDK, binary streams are called *arbitrary streams* or *arbitrary data streams*.</para>
            <para>The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-arbitrary-format#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_IMAGE_LOSS_TOLERANT">
            <summary>Specifies whether an ASF image stream is a degradable JPEG type.</summary>
            <remarks>
            <para>This attribute applies to the media type for image streams in ASF. If the value is **TRUE**, the stream is a degradable JPEG image type. Otherwise, the stream is a JFIF image type. For more information about these stream types, see the ASF specification. In addition to the MF\_MT\_IMAGE\_LOSS\_TOLERANT attribute, the media type for an ASF image stream contains the following attributes:</para>
            <para>| Attribute                                                 | Description                                | |-----------------------------------------------------------|--------------------------------------------| | [**MF\_MT\_MAJOR\_TYPE**](mf-mt-major-type-attribute.md) | Contains the value **MFMediaType\_Image**. | | [**MF\_MT\_FRAME\_SIZE**](mf-mt-frame-size-attribute.md) | Gives the image size in pixels.            |</para>
            <para>The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-image-loss-tolerant#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG4_SAMPLE_DESCRIPTION">
            <summary>Contains the sample description box for an MP4 or 3GP file.</summary>
            <remarks>
            <para>The sample description box describes the encoding used for a stream in the file. The MPEG-4 file source sets this attribute on the media type for each stream. The value of the attribute is the raw data in the sample description box. If the MPEG-4 file source can parse the sample description, it also adds the format details to the media type. Otherwise, the application or the decoder must parse the sample description from the MF\_MT\_MPEG4\_SAMPLE\_DESCRIPTION attribute. When setting this attribute on MPEG-4 sink through [**IMFMediaTypeHandler::SetCurrentMediaType**](/windows/desktop/api/mfidl/nf-mfidl-imfmediatypehandler-setcurrentmediatype) method, the data for the attribute MF\_MT\_MPEG4\_SAMPLE\_DESCRIPTION should not change after one or more samples have been sent to the sink on the corresponding stream's [**IMFStreamSink::ProcessSample**](/windows/desktop/api/mfidl/nf-mfidl-imfstreamsink-processsample) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg4-sample-description#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_MPEG4_CURRENT_SAMPLE_ENTRY">
            <summary>Specifies the current entry in the sample description box for an MPEG-4 media type.</summary>
            <remarks>
            <para>In an MP4 or 3GP file, the sample description box describes the encoding used for a stream in the file. The sample description box can contain multiple entries. This attribute specifies which entry to use. The value is a zero-based index into the list. Currently, the only supported value is 0. The attribute has been defined for future extensibility. The MPEG-4 file source always sets the value to 0. The MP4 and 3GP file sinks ignore the value of this attribute if it is present. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-mpeg4-current-sample-entry#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_ORIGINAL_4CC">
            <summary>Contains the original codec FOURCC for a video stream.</summary>
            <remarks>
            <para>Depending on the source file, the AVI media source might set this attribute on the media types that it offers. An AVI file contains a stream header for each stream in the file. The AVI media source translates the stream header into a media type. For compressed video streams, the stream header contains a FOURCC that identifies the video codec. In most cases, the AVI media source converts this FOURCC directly to a subtype GUID, as described in the topic [Video Subtype GUIDs](video-subtype-guids.md). In some cases, however, it maps the original FOURCC to another FOURCC that is equivalent. If so, the media source stores the original FOURCC in the media type, using the MF\_MT\_ORIGINAL\_4CC attribute. The FOURCC mappings are stored in the Registry under the following key: **HKEY\_CLASSES\_ROOT**\\**MediaFoundation**\\**MapVideo4cc** Each entry is a **DWORD** value. The name of the entry is the hexadecimal representation of the FOURCC, without an "0x" prefix, and with the first character appearing first in the string. For example, the FOURCC code 'abcd' would appear as "61626364". The value of the entry is the equivalent FOURCC code. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-original-4cc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_ORIGINAL_WAVE_FORMAT_TAG">
            <summary>Contains the original WAVE format tag for an audio stream.</summary>
            <remarks>
            <para>Depending on the source file, the AVI media source might set this attribute on the media types that it offers. An AVI file contains a stream header for each stream in the file. The AVI media source translates the stream header into a media type. For audio streams, the stream header contains a format tag that identifies the audio format. (The format tag is contained in the **wFormatTag** member of the [**WAVEFORMATEX**](/previous-versions/dd757713(v=vs.85)) structure.) In most cases, the AVI media source converts the format tag directly to a subtype GUID, as described in the topic [**Audio Subtype GUIDs**](audio-subtype-guids.md). In some cases, however, it maps the original format tag to another format tag that is equivalent. If so, the media source stores the original format tag in the media type, using the MF\_MT\_ORIGINAL\_WAVE\_FORMAT\_TAG attribute. The format mappings are stored in the Registry under the following key: **HKEY\_CLASSES\_ROOT**\\**MediaFoundation**\\**MapAudioFormatTag** Each entry is a **DWORD** value. The name of the entry is the decimal representation of the format tag. The value of the entry is the equivalent format tag. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-original-wave-format-tag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_FRAME_RATE_RANGE_MIN">
            <summary>The minimum frame rate that is supported by a video capture device, in frames per second.</summary>
            <remarks>
            <para>The frame rate is expressed as a ratio. The upper 32 bits of the attribute value contain the numerator, and the lower 32 bits contain the denominator. For example, if the frame rate is 30 frames per second (fps), the ratio is 30/1. If the capture device reports a minimum frame rate, the media source sets this attribute on the media type. The maximum frame rate is given in the [MF\_MT\_FRAME\_RATE\_RANGE\_MAX](mf-mt-frame-rate-range-max.md) attribute. The device is not guaranteed to support every increment within this range. To set the device's frame rate, first modify the value of the [**MF\_MT\_FRAME\_RATE**](mf-mt-frame-rate-attribute.md) attribute on the media type. Then set the media type on the media source. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-frame-rate-range-min#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_FRAME_RATE_RANGE_MAX">
            <summary>The maximum frame rate that is supported by a video capture device, in frames per second.</summary>
            <remarks>
            <para>The frame rate is expressed as a ratio. The upper 32 bits of the attribute value contain the numerator, and the lower 32 bits contain the denominator. For example, if the frame rate is 30 frames per second (fps), the ratio is 30/1. If the capture device reports a maximum frame rate, the media source sets this attribute on the media type. The minimum frame rate is given in the [MF\_MT\_FRAME\_RATE\_RANGE\_MIN](mf-mt-frame-rate-range-min.md) attribute. The device is not guaranteed to support every increment within this range. To set the device's frame rate, first modify the value of the [**MF\_MT\_FRAME\_RATE**](mf-mt-frame-rate-attribute.md) attribute on the media type. Then set the media type on the media source. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mt-frame-rate-range-max#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_LOW_LATENCY">
            <summary>Enables low-latency processing in the Microsoft Media Foundation pipeline.</summary>
            <remarks>
            <para>Low latency is defined as the smallest possible delay from when the media data is generated (or received) to when it is rendered. Low latency is desirable for real-time communication scenarios. For other scenarios, such as local playback or transcoding, you typically should not enable low-latency mode, because it can affect quality. > [!Note] > The GUID value of this attribute is identical to the [CODECAPI\_AVLowLatencyMode](codecapi-avlowlatencymode.md) property defined for the [**ICodecAPI**](/windows/win32/api/strmif/nn-strmif-icodecapi) interface.</para>
            <para>Set this attribute on pipeline components as follows: -   Media source: Use the [**IMFMediaSourceEx::GetSourceAttributes**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasourceex-getsourceattributes) method. -   Media Foundation transform (MFT): Use the [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) method. For encoders, the encoder might support low latency through the [**ICodecAPI**](/windows/win32/api/strmif/nn-strmif-icodecapi) interface. -   Media sink: Query the media sink for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. Applications typically do not set this attribute directly on the pipeline components, but instead set the attribute on one of the following objects: -   [Media Session](media-session.md): Use the *pConfiguation* parameter of the [**MFCreateMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatemediasession) or [**MFCreatePMPMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatepmpmediasession) function, or else set the attribute on the topology. -   [Source Reader](source-reader.md): Set the attribute with the configuration properties when you create the Source Reader. For more information, see [Source Reader Attributes](source-reader-attributes.md). -   [Sink Writer](sink-writer.md): Set the attribute with the configuration properties when you create the Sink Writer. For more information, see [Sink Writer Attributes](sink-writer-attributes.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-low-latency#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_VIDEO_MAX_MB_PER_SEC">
            <summary>Specifies, on IMFTransform, the maximum macroblock processing rate, in macroblocks per second, that is supported by the hardware encoder.</summary>
            <remarks>
            <para>This is a read-only attribute. **H.264/AVC encoders:** This attribute is affected by the following properties: -   [MF\_MT\_VIDEO\_LEVEL](mf-mt-video-level.md) (which is an alias of [MF\_MT\_MPEG2\_LEVEL](mf-mt-mpeg2-level-attribute.md)) -   [CODECAPI\_AVEncCommonQualityVsSpeed](../directshow/avenccommonqualityvsspeed-property.md) -   [CODECAPI\_AVEncMPVDefaultBPictureCount](../directshow/avencmpvdefaultbpicturecount-property.md) If the [MF\_MT\_VIDEO\_LEVEL](mf-mt-video-level.md) attribute is present, the encoder should return the processing rate for the highest bitrate and resolution supported at the specified level. If the MF\_MT\_VIDEO\_LEVEL attribute is not present then it should use a default level of 4. If the [CODECAPI\_AVEncCommonQualityVsSpeed](../directshow/avenccommonqualityvsspeed-property.md) ICodecAPI property has been set, the encoder should return the processing rate corresponding to the value set for this property. If the CODECAPI\_AVEncCommonQualityVsSpeed attribute is not present, then it should use a default value of 0 which should be the fastest processing mode. If the [CODECAPI\_AVEncMPVDefaultBPictureCount](../directshow/avencmpvdefaultbpicturecount-property.md) ICodecAPI property has been set to a valid and supported value, the encoder should return the processing rate corresponding the value set for this property. If the CODECAPI\_AVEncMPVDefaultBPictureCount attribute is not presen,t then it should use a default value of 0 B frames. Only the lower 28 bits should be used by an application. The upper 4bits are reserved for future use. Applications should ignore the upper 4 bits and MFTs should set the upper 4 bits to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-video-max-mb-per-sec#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_VIDEODSP_MODE">
            <summary>Sets the processing mode of the Video Stabilization MFT.</summary>
            <remarks>
            <para>The value of this attribute is an [**MFVideoDSPMode**](/windows/desktop/api/wmcodecdsp/ne-wmcodecdsp-mfvideodspmode) enumeration value. This attribute can be used to enable or disable the image stabilization, and can be updated for each output sample. To set this attribute: 1.  Call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) on the video stabilization MFT to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer. 2.  Call [**IMFAttributes::SetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setuint32) to set the attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-videodsp-mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_BYTESTREAM_ORIGIN_NAME">
            <summary>Specifies the original URL for a byte stream.</summary>
            <remarks>
            <para>File-based byte streams can support this attribute. The attribute value is set when the byte stream is created. To get the attribute value, query the byte stream object for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-bytestream-origin-name-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_BYTESTREAM_CONTENT_TYPE">
            <summary>Specifies the MIME type of a byte stream.</summary>
            <remarks>
            <para>To get the attribute value, query the byte stream object for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-bytestream-content-type-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_BYTESTREAM_DURATION">
            <summary>Specifies the duration of a byte stream, in 100-nanosecond units.</summary>
            <remarks>
            <para>This attribute is optional. If the object that creates the byte stream can determine the duration, it can set this attribute. (For example, in a network stream, the duration might be part of the session description.) To get the attribute value, call **QueryInterface** on the byte stream to get a pointer to the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-bytestream-duration-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_BYTESTREAM_LAST_MODIFIED_TIME">
            <summary>Specifies when a byte stream was last modified.</summary>
            <remarks>
            <para>This attribute is optional. The value of the attribute is a [**FILETIME**](/windows/win32/api/minwinbase/ns-minwinbase-filetime) structure. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-bytestream-last-modified-time-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.PInvoke.MF_BYTESTREAM_IFO_FILE_URI" -->
        <member name="F:Windows.Win32.PInvoke.MF_BYTESTREAM_EFFECTIVE_URL">
            <summary>Gets the effective URL of a byte stream.</summary>
            <remarks>The effective URL can differ from the original URL if the original URL contains any extra information, such as search strings or anchors, or if the request was redirected.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D_AWARE">
            <summary>Specifies whether a Media Foundation transform (MFT) supports DirectX Video Acceleration (DXVA). This attribute applies only to video MFTs.</summary>
            <remarks>
            <para>To query this attribute, call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) to get the global attribute store of the MFT. If **GetAttributes** succeeds, call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32). This attribute tells the client whether the MFT can use Direct3D 9 video: -   If the attribute is nonzero, the client can give the MFT a pointer to the [**IDirect3DDeviceManager9**](/windows/desktop/api/dxva2api/nn-dxva2api-idirect3ddevicemanager9) interface before streaming starts. To do so, the client sends the [**MFT\_MESSAGE\_SET\_D3D\_MANAGER**](mft-message-set-d3d-manager.md) message to the MFT. The client is not required to send this message. -   If this attribute is zero (**FALSE**), the MFT does not support Direct3D 9 video, and the client should not send the [**MFT\_MESSAGE\_SET\_D3D\_MANAGER**](mft-message-set-d3d-manager.md) message to the MFT. The default value of this attribute is **FALSE**. Treat this attribute as read-only. Do not change the value; the MFT will ignore any changes to the value. For more information about implementing this attribute in a custom MFT, see [Direct3D-Aware MFTs](direct3d-aware-mfts.md). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sa-d3d-aware-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_REQUIRED_SAMPLE_COUNT">
            <summary>Indicates the number of uncompressed buffers that the enhanced video renderer (EVR) media sink requires for deinterlacing.</summary>
            <remarks>
            <para>This is a stream-level attribute. To get the attribute from the EVR, do the following: 1.  Call [**IMFMediaSink::GetStreamSinkByIndex**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasink-getstreamsinkbyindex) to get the stream sink. 2.  Query the stream sink for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. 3.  Call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32). Internally, the mixer provides this attribute to the EVR. To get the attribute from the mixer, call [**IMFTransform::GetInputStreamAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getinputstreamattributes). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sa-required-sample-count-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DMFT_FRAME_BUFFER_INFO">
            <summary>Contains information about system-allocated frame buffers sent to the device driver.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-dmft-frame-buffer-info">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_REQUIRED_SAMPLE_COUNT_PROGRESSIVE">
            <summary>Indicates the number of samples that a Microsoft Media Foundation transform (MFT) requires to be allocated for progressive content.</summary>
            <remarks>This value is used if the next node downstream has an [**IMFVideoSampleAllocator**](/windows/desktop/api/mfidl/nn-mfidl-imfvideosampleallocator).</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_MINIMUM_OUTPUT_SAMPLE_COUNT">
            <summary>Specifies the maximum number of output samples that a Microsoft Media Foundation transform (MFT) will have outstanding in the pipeline at any time.</summary>
            <remarks>
            <para>This attribute applies only to MFTs that use a circular buffer to allocate their own output samples. Other MFTs ignore this attribute. To set this attribute: 1.  Call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) on the decoder to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer. 2.  Call [**IMFAttributes::SetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setuint32) to add the attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sa-minimum-output-sample-count#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_MINIMUM_OUTPUT_SAMPLE_COUNT_PROGRESSIVE">
            <summary>Indicates the minimum number of progressive samples that the Microsoft Media Foundation transform (MFT) should allow to be oustanding at any given time.</summary>
            <remarks>
            <para>This attribute applies only to MFTs that use a circular buffer to allocate their own output samples. Other MFTs ignore this attribute. To set this attribute: 1.  Call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) on the decoder to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer. 2.  Call [**IMFAttributes::SetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setuint32) to add the attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sa-minimum-output-sample-count-progressive#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ENABLE_3DVIDEO_OUTPUT">
            <summary>Specifies how a Media Foundation transform (MFT) should output a 3D stereoscopic video stream.</summary>
            <remarks>
            <para>The value of the attribute is a member of the [**MF3DVideoOutputType**](/windows/desktop/api/mftransform/ne-mftransform-mf3dvideooutputtype) enumeration. This attribute applies only if the MFT returns **TRUE** for the [MFT\_SUPPORT\_3DVIDEO](mft-support-3dvideo.md) attribute. To get or set this attribute call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) to get the global attribute store of the MFT.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-enable-3dvideo-output#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D11_BINDFLAGS">
            <summary>Specifies the binding flags to use when allocating Microsoft Direct3D 11 surfaces for media samples.</summary>
            <remarks>The value of this attribute is a bitwise **OR** of [**D3D11\_BIND\_FLAG**](/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag) flags.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D11_USAGE">
            <summary>Specifies how to allocate Microsoft Direct3D 11 surfaces for media samples.</summary>
            <remarks>The value of this attribute is a [**D3D11\_USAGE**](/windows/win32/api/d3d11/ne-d3d11-d3d11_usage) value.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D11_AWARE">
            <summary>Specifies whether a Media Foundation transform (MFT) supports Microsoft Direct3D 11.</summary>
            <remarks>
            <para>This attribute applies only to video MFTs. To query this attribute, call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) to get the MFT attribute store. If **GetAttributes** succeeds, call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32). -   If the attribute is nonzero, the client can give the MFT a pointer to the [**IMFDXGIDeviceManager**](/windows/desktop/api/mfobjects/nn-mfobjects-imfdxgidevicemanager) interface before streaming starts. To do so, the client sends the [**MFT\_MESSAGE\_SET\_D3D\_MANAGER**](mft-message-set-d3d-manager.md) message to the MFT. The client is not required to send this message. -   If this attribute is zero (**FALSE**), the MFT does not support Direct3D 11, and the client should not send the [**MFT\_MESSAGE\_SET\_D3D\_MANAGER**](mft-message-set-d3d-manager.md) message to the MFT. The default value of this attribute is **FALSE**. Treat this attribute as read-only. Do not change the value; the MFT will ignore any changes to the value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sa-d3d11-aware#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D11_SHARED">
            <summary>Indicates to the video sample allocator to create textures as shareable using keyed-mutex.</summary>
            <remarks></remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D11_SHARED_WITHOUT_MUTEX">
            <summary>Indicates to the video sample allocator to create textures as shareable using the legacy mechanism.</summary>
            <remarks></remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_BUFFERS_PER_SAMPLE">
            <summary>Specifies how many buffers the video-sample allocator creates for each video sample.</summary>
            <remarks>
            <para>If you use the [**IMFVideoSampleAllocatorEx**](/windows/desktop/api/mfidl/nn-mfidl-imfvideosampleallocatorex) interface to allocate video samples, you can use this attribute to create video samples that contain multiple buffers. For example, if the attribute value is 2, the allocator creates two video buffers for each video sample. Set the attribute in the *pAttributes* parameter of the [**IMFVideoSampleAllocatorEx::InitializeSampleAllocatorEx**](/windows/desktop/api/mfidl/nf-mfidl-imfvideosampleallocatorex-initializesampleallocatorex) method. The default value is 1. If the attribute is not set, the allocator creates video samples that contain a single buffer per sample. This attribute is primarily intended for Media Foundation transforms (MFTs) that support stereo 3D output, in the following situation: -   The MFT supports Microsoft DirectX Graphics Infrastructure (DXGI). -   The MFT allocates its own output samples. -   The MFT uses the [**IMFVideoSampleAllocatorEx**](/windows/desktop/api/mfidl/nn-mfidl-imfvideosampleallocatorex) interface to allocate the output samples. -   The 3D video format uses a separate buffer for each view. If all of these criteria are true, the MFT should set the attribute value to 2 (one buffer per view).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sa-buffers-per-sample#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSFORM_ASYNC">
            <summary>Specifies whether a Media Foundation transform (MFT) performs asynchronous processing.</summary>
            <remarks>
            <para>The attribute is a Boolean value: -   If the attribute is nonzero, the MFT performs asynchronous processing. -   If the attribute is 0 or not set, the MFT is synchronous. To get this attribute, first call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) to get the MFT's attribute store. If that method succeeds, call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32) to get the attribute value. If either of the two methods fails, the MFT is synchronous. For asynchronous MFTs, this attribute must be set to a nonzero value. For synchronous MFTs, this attribute is optional, but must be set to 0 if present. Asynchronous MFTs are not compatible with earlier versions of Media Foundation. To use an asynchronous MFT, the client must set the [**MF\_TRANSFORM\_ASYNC\_UNLOCK**](mf-transform-async-unlock.md) attribute on the MFT. (The Microsoft Media Foundation pipeline performs this step automatically.)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-transform-async#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSFORM_ASYNC_UNLOCK">
            <summary>Enables the use of an asynchronous Media Foundation transform (MFT).</summary>
            <remarks>
            <para>Asynchronous MFTs are not compatible with earlier versions of Microsoft Media Foundation. To prevent existing applications from accidentally using an asynchronous MFT, this attribute must be set to a nonzero value before an asynchronous MFT can be used. The Media Foundation pipeline automatically sets the attribute, so that most applications do not need to use this attribute. However, if an application uses an asynchronous MFT outside of the Media Foundation pipeline, the application must set this attribute. Synchronous MFTs do not require this attribute. To test whether an MFT is asynchronous, get the value of the [MF\_TRANSFORM\_ASYNC](mf-transform-async.md) attribute on the MFT.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-transform-async-unlock#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSFORM_FLAGS_Attribute">
            <summary>Contains flags for a Media Foundation transform (MFT) activation object.</summary>
            <remarks>This attribute is set on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointers returned by the [**MFTEnumEx**](/windows/desktop/api/mfapi/nf-mfapi-mftenumex) function. The attribute contains flags that describe the MFT.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSFORM_CATEGORY_Attribute">
            <summary>Specifies the category for a Media Foundation transform (MFT).</summary>
            <remarks>This attribute is set on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointers returned by the [**MFTEnumEx**](/windows/desktop/api/mfapi/nf-mfapi-mftenumex) function.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_NALU_LENGTH_SET">
            <summary>Indicates that NALU length information will be sent as a BLOB with each compressed H.264 sample.</summary>
            <remarks>
            <para>Set this attribute on the input media type of MEDIASUBTYPE\_H264. Set MF\_NALU\_LENGTH\_SET on input media type of H.264 decoder, indicating each input sample will have a NALU length available and each input sample contains one complete primary picture. The **BLOB** containing the NALU length information can be retrieved from [MF\_NALU\_LENGTH\_INFORMATION](mf-nalu-length-information.md) attribute on the input sample.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-nalu-length-set#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_NALU_LENGTH_INFORMATION">
            <summary>Indicates the lengths of NALUs in the sample. This is a MF BLOB that is set on compressed input samples to the H.264 decoder.</summary>
            <remarks>
            <para>In order for this attribute to be set, the media must be of type MEDIASUBTYPE\_H264 and the [MF\_NALU\_LENGTH\_SET](mf-nalu-length-set.md) attribute must be set on the input media type of MEDIASUBTYPE\_H264. Set MF\_NALU\_LENGTH\_INFORMATION as a **BLOB** on the input sample, with one DWORD for each NALU in the sample. For example, if there are AUD (9 bytes), SPS (25 bytes), PPS (10 bytes), IDR slice1 (50 k), IDR slice 2 (60 k), then there should be 5 DWORDs with values 9, 25, 10, 50 k, 60 k in the **BLOB**. Here some code that sets the **BLOB**, where **rgdwNALULengthInfo** is an array of type DWORD and **uiNaluLengthIdx** is the valid NALU lengths set to the **BLOB**.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-nalu-length-information#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_USER_DATA_PAYLOAD">
            <summary>Sets whether to include a user data payload with the output sample.</summary>
            <remarks>
            <para>User data could contain data such as close caption data or bar data. User data is passed through without any decoding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-user-data-payload#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MPEG4SINK_SPSPPS_PASSTHROUGH">
            <summary>Specifies whether the MPEG-4 File Sink filters out sequence parameter set (SPS) and picture parameter set (PPS) NALUs.</summary>
            <remarks>The [**MPEG-4 File Sink**](mpeg-4-file-sink.md) writes the SPS and PPS parameters into the sample description box of the MP4 file. By default, it filters out the SPS and PPS NALUs from the video stream. To override this behavior, set the MF\_MPEG4SINK\_SPSPPS\_PASSTHROUGH attribute to **TRUE**.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MPEG4SINK_MOOV_BEFORE_MDAT">
            <summary>Indicates that moov will be written before mdat box in the generated file.</summary>
            <remarks>
            <para>The default behavior of the mpeg4 media sink is to write 'moov' after 'mdat' box. Setting this attribute causes the generated file to write 'moov' before 'mdat' box. In order for the mpeg4 sink to use this attribute, the byte stream passed in must not be slow seek or remote for . This feature involves an additional file copying/remuxing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mpeg4sink-moov-before-mdat#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SESSION_TOPOLOADER">
            <summary>Contains the CLSID of a topology loader for the Media Session.</summary>
            <remarks>
            <para>You can use this attribute to provide a custom topology loader for the Media Session. Set this attribute using the *pConfiguration* parameter of the [**MFCreateMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatemediasession) function or the [**MFCreatePMPMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatepmpmediasession) function. If this attribute is set, the Media Session calls **CoCreateInstance** with the specified CLSID when it creates the topology loader. The object created by this CLSID must expose the [**IMFTopoLoader**](/windows/desktop/api/mfidl/nn-mfidl-imftopoloader) interface. If this attribute is not set, the Media Session creates the default topology loader provided in Media Foundation. A topology loader must support multithreaded apartments. You should register the topology loader as ThreadingModel="Both". Also, if you are using the topology loader inside the protected media path (PMP), the topology loader must be a trusted component. For more information, see [Protected Media Path](protected-media-path.md). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-session-topoloader-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SESSION_GLOBAL_TIME">
            <summary>Specifies whether topologies have a global start and stop time.</summary>
            <remarks>
            <para>You can set this attribute when you create the media sesison by using the *pConfiguration* parameter of the [**MFCreateMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatemediasession) or [**MFCreatePMPMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatepmpmediasession) function. If this attribute is present and nonzero, then all topologies passed to the Media Session must have the [**MF\_TOPOLOGY\_PROJECTSTART**](mf-topology-projectstart-attribute.md) and [**MF\_TOPOLOGY\_PROJECTSTOP**](mf-topology-projectstop-attribute.md) attributes. These attributes specify the start and stop times for the topology relative to the entire presentation. If this attribute is absent or **FALSE**, the topologies must not have the [**MF\_TOPOLOGY\_PROJECTSTART**](mf-topology-projectstart-attribute.md) or [**MF\_TOPOLOGY\_PROJECTSTOP**](mf-topology-projectstop-attribute.md) attribute. Use this attribute to create editing sequences. For more information, see [Sequence Presentation Times](sequence-presentation-times.md). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-session-global-time-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SESSION_QUALITY_MANAGER">
            <summary>Contains the CLSID of a quality manager for the Media Session.</summary>
            <remarks>
            <para>You can use this attribute to provide a custom quality manager for the Media Session. Set this attribute by using the *pConfiguration* parameter of the [**MFCreateMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatemediasession) or [**MFCreatePMPMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatepmpmediasession) function. If this attribute is set, the Media Session calls **CoCreateInstance** with the specified CLSID to create the quality manager. The object created by this CLSID must expose the [**IMFQualityManager**](/windows/desktop/api/mfidl/nn-mfidl-imfqualitymanager) interface. If this attribute is not set, the Media Session creates the default quality manager provided in Media Foundation. If you want to run the Media Session with no quality manager at all, set this attribute to **GUID\_NULL**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-session-quality-manager-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SESSION_CONTENT_PROTECTION_MANAGER">
            <summary>Provides a callback interface for the application to receive a content enabler object from the protected media path (PMP) session.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the application's [**IMFContentProtectionManager**](/windows/desktop/api/mfidl/nn-mfidl-imfcontentprotectionmanager) interface. Set this attribute on the PMP session by using the *pConfiguration* parameter of the [**MFCreatePMPMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatepmpmediasession) function. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-session-content-protection-manager-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SESSION_SERVER_CONTEXT">
            <summary>Enables two instances of the Media Session to share the same Protected Media Path (PMP) process.</summary>
            <remarks>
            <para>Use this attribute if you want to create the PMP Media Session in an existing PMP process. The value of the attribute is a pointer to the [**IMFPMPServer**](/windows/desktop/api/mfidl/nn-mfidl-imfpmpserver) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-session-server-context-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SESSION_REMOTE_SOURCE_MODE">
            <summary>Specifies that the media source will be created in a remote process.</summary>
            <remarks>
            <para>You can set this attribute on the protected media path (PMP) session by using the *pConfiguration* parameter of the [**MFCreatePMPMediaSession**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatepmpmediasession) function. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-session-remote-source-mode-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SESSION_APPROX_EVENT_OCCURRENCE_TIME">
            <summary>The approximate time when the Media Session raised an event.</summary>
            <remarks>
            <para>Some events from the Media Session have this attribute. The value gives the approximate presentation time when the event was raised. This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-session-approx-event-occurrence-time-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_STREAM_SUPPORTS_HW_CONNECTION">
            <summary>Indicates whether a media source supports hardware data flow.</summary>
            <remarks>
            <para>This attribute is used when a media source proxies a hardware device and is able to transfer data downstream over a hardware bus, without sending data up to the CPU. For example, a webcam might deliver H.264-encoded video directly to an integrated hardware decoder. In this scenario, the source and decoder are still represented in the Microsoft Media Foundation by a [media source](media-sources.md) object and a [Media Foundation transform](media-foundation-transforms.md) (MFT). However, no data flows between these two objects at the pipeline layer, only at the hardware layer, as shown in the following diagram. ![a diagram that shows a hardware proxy source.](images/proxy-mft3.png) The connection between the media source and the MFT is negotiated as follows. 1.  The pipeline queries the media source for the [**IMFMediaSourceEx**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourceex) interface. (This interface is optional for media sources to support.) 2.  The pipeline calls [**IMFMediaSourceEx::GetStreamAttributes**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasourceex-getstreamattributes) to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer. 3.  The pipeline queries for the MF\_SOURCE\_STREAM\_SUPPORTS\_HW\_CONNECTION attribute. If the attribute is present and equal to **TRUE**, the media source supports hardware connections. 4.  The pipeline checks if the MFT is also a hardware proxy, by checking for the [MFT\_ENUM\_HARDWARE\_URL\_Attribute](mft-enum-hardware-url-attribute.md) attribute on the MFT. For details, see [Hardware MFTs](hardware-mfts.md). 5.  The pipeline sets the [MFT\_CONNECTED\_STREAM\_ATTRIBUTE](mft-connected-stream-attribute.md) attribute on the MFT. The value of this attribute is the [**IMFAttribute**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer obtained from the media source in step 2. 6.  The pipeline sets the [MFT\_CONNECTED\_TO\_HW\_STREAM](mft-connected-to-hw-stream.md) attribute to **TRUE** on both the media source and the MFT.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-stream-supports-hw-connection#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_STREAM_SINK_SUPPORTS_HW_CONNECTION">
            <summary>Indicates whether a media sink supports hardware data flow.</summary>
            <remarks>
            <para>This attribute is used when a media sink proxies a hardware device and is able to receive data over a hardware bus. For example, a hardware audio decoder might send audio data directly to the audio rendering hardware. In this scenario, the decoder and the sink are still represented in the Microsoft Media Foundation by a [Media Foundation transform](media-foundation-transforms.md) (MFT) and a media sink. However, no data flows between these two objects at the pipeline layer, only at the hardware layer, as shown in the following diagram. ![a diagram that shows a hardware proxy source.](images/proxy-mft4.png) The connection between the MFT and the media sink is negotiated as follows. 1.  The pipeline checks if the MFT is a hardware proxy, by checking for the [MFT\_ENUM\_HARDWARE\_URL\_Attribute](mft-enum-hardware-url-attribute.md) attribute on the MFT. For details, see [Hardware MFTs](hardware-mfts.md). 2.  The pipeline gets a pointer to the [**IMFStreamSink**](/windows/desktop/api/mfidl/nn-mfidl-imfstreamsink) interface of the stream sink on the media sink. 3.  The pipeline uses the [**IMFStreamSink**](/windows/desktop/api/mfidl/nn-mfidl-imfstreamsink) pointer to query for the MF\_STREAM\_SINK\_SUPPORTS\_HW\_CONNECTION attribute. If this attribute is present and equal to **TRUE**, the media source supports hardware connections. 4.  The pipeline sets the [MFT\_CONNECTED\_STREAM\_ATTRIBUTE](mft-connected-stream-attribute.md) attribute on the stream sink. The value of this attribute is the [**IMFAttribute**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer from the MFT. 5.  The pipeline sets the [MFT\_CONNECTED\_TO\_HW\_STREAM](mft-connected-to-hw-stream.md) attribute to **TRUE** on both the stream sink and the MFT.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-stream-sink-supports-hw-connection#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_STREAM_SINK_SUPPORTS_ROTATION">
            <summary>Indicates whether the stream sink supports video rotation.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-stream-sink-supports-rotation">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_PROJECTSTART">
            <summary>Specifies the stop time for a topology, relative to the start of the first topology in the sequence.</summary>
            <remarks>
            <para>The value is given in units of 100 nanoseconds. If the Media Session was created with the [**MF\_SESSION\_GLOBAL\_TIME**](mf-session-global-time-attribute.md) attribute equal to **TRUE**, all topologies must contain the **MF\_TOPOLOGY\_PROJECTSTART** attribute. Otherwise, topologies must not contain the **MF\_TOPOLOGY\_PROJECTSTART** attribute. For more information, see [Sequence Presentation Times](sequence-presentation-times.md). This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-projectstart-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_PROJECTSTOP">
            <summary>Specifies the start time for a topology, relative to the start of the first topology in the sequence.</summary>
            <remarks>
            <para>The value is given in units of 100 nanoseconds. If the Media Session was created with the [**MF\_SESSION\_GLOBAL\_TIME**](mf-session-global-time-attribute.md) attribute equal to **TRUE**, all topologies must contain the **MF\_TOPOLOGY\_PROJECTSTOP** attribute. Otherwise, topologies must not contain the **MF\_TOPOLOGY\_PROJECTSTOP** attribute. For more information, see [Sequence Presentation Times](sequence-presentation-times.md). This attribute is a signed value, although it is stored as a **UINT64**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-projectstop-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_NO_MARKIN_MARKOUT">
            <summary>Specifies whether the pipeline trims samples.</summary>
            <remarks>
            <para>By default, the pipeline trims samples to match the correct presentation times. Trimming is done at the topology nodes that have the [**MF\_TOPONODE\_MARKIN\_HERE**](mf-toponode-markin-here-attribute.md) and [**MF\_TOPONODE\_MARKOUT\_HERE**](mf-toponode-markout-here-attribute.md) attributes. If the **MF\_TOPOLOGY\_NO\_MARKIN\_MARKOUT** attribute is set to **TRUE** on the topology, the pipeline does not trim samples, and the **MF\_TOPONODE\_MARKIN\_HERE** and **MF\_TOPONODE\_MARKOUT\_HERE** attributes are ignored. If the attribute is not set, or has the value **FALSE**, the pipeline trims samples. An application might set the **MF\_TOPOLOGY\_NO\_MARKIN\_MARKOUT** attribute to **TRUE** if the application receives compressed samples from the pipeline and needs to get all of the key frames, which might otherwise be trimmed. The default value of this attribute is **FALSE**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-no-markin-markout-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_DXVA_MODE">
            <summary>Specifies whether the topology loader enables Microsoft DirectX Video Acceleration (DXVA) in the topology.</summary>
            <remarks>
            <para>The value of this attribute is an [**MFTOPOLOGY\_DXVA\_MODE**](/windows/desktop/api/mfidl/ne-mfidl-mftopology_dxva_mode) enumeration constant. The default value is **MFTOPOLOGY\_DXVA\_DEFAULT**. This attribute controls which MFTs receive a pointer to the Direct3D device manager. To enable full video acceleration, set the value to **MFTOPOLOGY\_DXVA\_FULL**. The value **MFTOPOLOGY\_DXVA\_DEFAULT** is defined for backward compatibility; it matches the behavior of all earlier versions of Microsoft Media Foundation. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-dxva-mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_ENABLE_XVP_FOR_PLAYBACK">
            <summary>Specifies whether the topology loader enables the Transcode Video Processor (XVP). for conversions, enabling hardware accelerated color conversion.</summary>
            <remarks>If this attribute is set, the topology loader will pull in the video processor, if necessary, during non-transcode topology resolution. When you are using the topology to build your own [IMFTopology](/windows/win32/api/mfidl/nn-mfidl-imftopology) this attribute tells the loader to use XVP for conversions instead of the legacy color converter, thus enabling hardware accelerated color conversion; the legacy color converter is software-only.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_STATIC_PLAYBACK_OPTIMIZATIONS">
            <summary>Enables static optimizations in the video pipeline.</summary>
            <remarks>
            <para>Set this attribute before loading a topology. If the attribute is **TRUE**, the topology loader attempts to optimize the pipeline before playback starts. If you set this attribute, you should also set the following attributes: -   [MF\_TOPOLOGY\_PLAYBACK\_FRAMERATE](mf-topology-playback-framerate.md) -   [MF\_TOPOLOGY\_PLAYBACK\_MAX\_DIMS](mf-topology-playback-max-dims.md) The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-static-playback-optimizations#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_PLAYBACK_MAX_DIMS">
            <summary>Specifies the size of the destination window for video playback.</summary>
            <remarks>
            <para>The topology loader uses this attribute to optimize the pipeline before playback starts. If you set this attribute, also set the [MF\_TOPOLOGY\_STATIC\_PLAYBACK\_OPTIMIZATIONS](mf-topology-static-playback-optimizations.md) attribute to **TRUE**. The upper 32 bits of the attribute value contain the width and the lower 32 bits contain the height, both in pixels. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-playback-max-dims#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_HARDWARE_MODE">
            <summary>Specifies whether to load hardware-based Microsoft Media Foundation transforms (MFTs) in the topology.</summary>
            <remarks>
            <para>This attribute is optional. Set the attribute before resolving the topology.</para>
            <para>| Value                                  | Description                                                                                                                                                                                                                                                                       | |----------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | **MFTOPOLOGY\_HWMODE\_USE\_HARDWARE**  | The Topology Loader will load hardware-based MFTs, such as hardware decoders, when available.<br/> The Topology Loader automatically falls back to software decoding if no hardware decoder is found, or if a hardware decoder fails to connect for some reason.<br/> | | **MFTOPOLOGY\_HWMODE\_SOFTWARE\_ONLY** | The Topology Loader will load only software MFTs, including software decoders.                                                                                                                                                                                                    |</para>
            <para>The default value is **MFTOPOLOGY\_HWMODE\_SOFTWARE\_ONLY**, for compatibility with existing applications. The recommended value is **MFTOPOLOGY\_HWMODE\_USE\_HARDWARE**. If the Topology Loader inserts a hardware MFT into the topology, it sets the [MFT\_ENUM\_HARDWARE\_URL\_Attribute](mft-enum-hardware-url-attribute.md) attribute on the topology node. To check whether a hardware MFT is present, enumerate the nodes in the resolved topology and check whether this attribute is present. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-hardware-mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_PLAYBACK_FRAMERATE">
            <summary>Specifies the monitor refresh rate.</summary>
            <remarks>
            <para>The topology loader uses this attribute to optimize the pipeline before playback starts. If you set this attribute, also set the [MF\_TOPOLOGY\_STATIC\_PLAYBACK\_OPTIMIZATIONS](mf-topology-static-playback-optimizations.md) attribute to **TRUE**. The frame rate is expressed as a ratio. The upper 32 bits of the attribute value contain the numerator, and the lower 32 bits contain the denominator. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-playback-framerate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_DYNAMIC_CHANGE_NOT_ALLOWED">
            <summary>Specifies whether the Media Session attempts to modify the topology when the format of a stream changes.</summary>
            <remarks>
            <para>This attribute controls how the Media Session responds if the format of a stream changes during streaming. If the format changes and the MF\_TOPOLOGY\_DYNAMIC\_CHANGE\_NOT\_ALLOWED attribute is **FALSE**, the Media Session might insert new nodes into the topology to match the new format. For example, if the video size changes, the Media Session might add a Media Foundation transform (MFT) that resizes the video. Otherwise, if the attribute is **TRUE**, the Media Session will not modify the topology. The default value of this attribute is **FALSE**. The recommended value is **FALSE**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-dynamic-change-not-allowed#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES">
            <summary>Specifies whether the topology loader enumerates the media types provided by the media source.</summary>
            <remarks>
            <para>Each stream on a media source can offer more than one media type. The list of types is enumerated through the [**IMFMediaTypeHandler**](/windows/desktop/api/mfidl/nn-mfidl-imfmediatypehandler) interface on the stream descriptor. The order in which the topology loader tries a media source's media types is controlled by two attributes: -   The MF\_TOPOLOGY\_ENUMERATE\_SOURCE\_TYPES attribute on the topology. -   The [**MF\_TOPONODE\_CONNECT\_METHOD**](mf-toponode-connect-method-attribute.md) attribute on the source node. If the MF\_TOPOLOGY\_ENUMERATE\_SOURCE\_TYPES attribute is **FALSE** or not set, the topology loader uses the stream's current media type. It does not enumerate the list of possible types. If the current media type is incompatible with the downstream topology node, and no combination of decoders/converters can be found, topology resolution fails. If the MF\_TOPOLOGY\_ENUMERATE\_SOURCE\_TYPES attribute is **TRUE**, the topology loader enumerates the source's media types until it finds a compatible type. In that case, the exact order of operations depends on the whether the [**MF\_TOPONODE\_CONNECT\_METHOD**](mf-toponode-connect-method-attribute.md) attribute on the source node includes the **MF\_CONNECT\_RESOLVE\_INDEPENDENT\_OUTPUTTYPES** flag. If MF\_TOPOLOGY\_ENUMERATE\_SOURCE\_TYPES is **TRUE** and the **MF\_CONNECT\_RESOLVE\_INDEPENDENT\_OUTPUTTYPES** flag is set, the topology loader exhausts each media type before moving to the next, as follows: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-enumerate-source-types#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_START_TIME_ON_PRESENTATION_SWITCH">
            <summary>Specifies the start time for presentations that are queued after the first presentation.</summary>
            <remarks>
            <para>When the application queues the first presentation on the Media Session, the application specifies the start time in the *pvarStartPosition* parameter of the [**IMFMediaSession::Start**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasession-start) method. For any subsequent presentations, however, the start time is given by the MF\_TOPOLOGY\_START\_TIME\_ON\_PRESENTATION\_SWITCH attribute on the topology. The start time is specified in 100-nanosecond units, relative to the beginning of the presentation. For example, if the value is 50000000, playback starts 5 seconds into the presentation. If this attribute is not set, the default start time is zero. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-start-time-on-presentation-switch#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DISABLE_LOCALLY_REGISTERED_PLUGINS">
            <summary>Specifies if locally registered plugins are disabled.</summary>
            <remarks>Set this attribute to **TRUE** to prevent the MF Topology Loader from inserting locally registered transforms.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_LOCAL_PLUGIN_CONTROL_POLICY">
            <summary>Specifies a local plugin control policy.</summary>
            <remarks>
            <para>Set this attribute to one of the [**MF\_PLUGIN\_CONTROL\_POLICY**](/windows/desktop/api/mfobjects/ne-mfobjects-mf_plugin_control_policy) values. This attributes allows the app to specify a more restrictive local policy than the process-wide policy configured by [**IMFPluginControl**](/windows/desktop/api/mfobjects/nn-mfobjects-imfplugincontrol).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-local-plugin-control-policy#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_FLUSH">
            <summary>Specifies when a transform is flushed.</summary>
            <remarks>
            <para>This attribute applies to transform nodes (**MF\_TOPOLOGY\_TRANSFORM\_NODE**). The value of the attribute is a member of the [**MF\_TOPONODE\_FLUSH\_MODE**](/windows/desktop/api/mfidl/ne-mfidl-mf_toponode_flush_mode) enumeration. If this attribute is not set, the default value is **MF\_TOPONODE\_FLUSH\_ALWAYS**. Flushing is performed by calling [**IMFTransform::ProcessMessage**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-processmessage) on the transform with the [**MFT\_MESSAGE\_COMMAND\_FLUSH**](mft-message-command-flush.md) message. For more information, see [**MFT\_MESSAGE\_TYPE**](/windows/desktop/api/mftransform/ne-mftransform-mft_message_type) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-flush-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_DRAIN">
            <summary>Specifies when a transform is drained.</summary>
            <remarks>
            <para>This attribute applies to transform nodes (**MF\_TOPOLOGY\_TRANSFORM\_NODE**). The value of the attribute is a member of the [**MF\_TOPONODE\_DRAIN\_MODE**](/windows/desktop/api/mfidl/ne-mfidl-mf_toponode_drain_mode) enumeration. If this attribute is not set, the default value is **MF\_TOPONODE\_DRAIN\_DEFAULT**. Draining is performed by calling [**IMFTransform::ProcessMessage**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-processmessage) on the transform with the [**MFT\_MESSAGE\_COMMAND\_DRAIN**](mft-message-command-drain.md) message. For more information, see [**MFT\_MESSAGE\_TYPE**](/windows/desktop/api/mftransform/ne-mftransform-mft_message_type) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-drain-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_D3DAWARE">
            <summary>Specifies whether the transform associated with a topology node supports DirectX Video Acceleration (DXVA).</summary>
            <remarks>
            <para>This attribute applies to transform nodes (**MF\_TOPOLOGY\_TRANSFORM\_NODE**). Applications typically do not use this attribute directly. The Media Session sets this attribute on a transform node if the underlying Media Foundation transform has the [**MF\_SA\_D3D\_AWARE**](mf-sa-d3d-aware-attribute.md) attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-d3daware-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPOLOGY_RESOLUTION_STATUS">
            <summary>Specifies the status of an attempt to resolve a topology.</summary>
            <remarks>
            <para>The topology loader or the Media Session might set this attribute on a topology. The value of this attribute is a bitwise **OR** of flags from the [**MF\_TOPOLOGY\_RESOLUTION\_STATUS\_FLAGS**](/windows/desktop/api/mfidl/ne-mfidl-mf_topology_resolution_status_flags) enumeration. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-topology-resolution-status-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_ERRORCODE">
            <summary>Contains the error code from the most recent connection failure for this toplogy node.</summary>
            <remarks>
            <para>This attribute applies to all node types. The value of this attribute is an **HRESULT** value. The Media Session or the topology loader might set the attribute. Applications typically read this attribute but do not set it. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-errorcode-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_CONNECT_METHOD">
            <summary>Specifies how the topology loader connects this topology node, and whether this node is optional.</summary>
            <remarks>
            <para>This attribute applies to all node types. The attribute value is a bitwise **OR** of flags from the [**MF\_CONNECT\_METHOD**](/windows/desktop/api/mfidl/ne-mfidl-mf_connect_method) enumeration. If this attribute is not set, the default value is **MF\_CONNECT\_ALLOW\_DECODER**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-connect-method-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_LOCKED">
            <summary>Specifies whether the media types can be changed on this topology node.</summary>
            <remarks>
            <para>This attribute applies to all node types. If value of this attribute is nonzero, the topology loader will not change the media types. This attribute is set to **TRUE** when the node is in use. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-locked-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_WORKQUEUE_ID">
            <summary>Specifies a work queue for a topology branch.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). The attribute is optional. The value of the attribute is an application-defined identifier for the work queue. Applications can use this attribute to assign work queues to branches of the topology. Each source node in the topology defines one branch. The branch includes every topology node that receives data from that node. If you set this attribute, call the [**IMFWorkQueueServices::BeginRegisterTopologyWorkQueuesWithMMCSS**](/windows/desktop/api/mfidl/nf-mfidl-imfworkqueueservices-beginregistertopologyworkqueueswithmmcss) method on the resolved topology. Multiple branches in the topology can share the same work queue, and work queues can be re-used across topologies. > [!Note] > The value of this attribute is not the same as the identifier that is returned by the [**MFAllocateWorkQueue**](/windows/desktop/api/mfapi/nf-mfapi-mfallocateworkqueue) function. The value of the attribute is an application-defined identifier, and is used to associate topology branches with work queues. When the Media Session allocates a new work queue, it stores the actual work-queue identifier internally.</para>
            <para>If this attribute it set, the application can also assign the branch to a Multimedia Class Scheduler Service (MMCSS) task, by setting the [**MF\_TOPONODE\_WORKQUEUE\_MMCSS\_CLASS**](mf-toponode-workqueue-mmcss-class-attribute.md) attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-workqueue-id-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_WORKQUEUE_MMCSS_CLASS">
            <summary>Specifies a Multimedia Class Scheduler Service (MMCSS) task for a topology branch.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). This attribute is optional. This attribute requires the [MF\_TOPONODE\_WORKQUEUE\_ID](mf-toponode-workqueue-id-attribute.md) attribute. If you set this attribute, also set the **MF\_TOPONODE\_WORKQUEUE\_ID** attribute is set on the same node. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-workqueue-mmcss-class-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_DECRYPTOR">
            <summary>Specifies whether a toplogy nodes underlying object is a decrypter.</summary>
            <remarks>
            <para>This attribute applies to all node types. If the value of this attribute is nonzero, the node's underlying object is a decrypter. Applications typically do not use this attribute directly. The Media Session sets this attribute when it creates a node for a decrypter, obtained from the [**IMFInputTrustAuthority::GetDecrypter**](/windows/desktop/api/mfidl/nf-mfidl-imfinputtrustauthority-getdecrypter) method. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-decryptor-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_DISCARDABLE">
            <summary>Specifies whether the pipeline can drop samples from a topology node.</summary>
            <remarks>
            <para>This attribute applies to all node types. Typically you would set this attribute on tee nodes, to indicate that the secondary outputs are not essential. The value of the attribute is an array of indexes to output streams on the node. If this attribute is set, the pipeline might drop samples from the specified output streams, if the stream is falling behind. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-discardable-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_ERROR_MAJORTYPE">
            <summary>Contains the major media type for a topology node. This attribute is set when the topology fails to load because the correct decoder could not be found.</summary>
            <remarks>
            <para>This attribute applies to all node types. The topology loader might set the attribute. Applications typically read this attribute but do not set it. For a list of possible values, see [Major Media Types](media-type-guids.md). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-error-majortype-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_ERROR_SUBTYPE">
            <summary>Contains the media subtype for a topology node. This attribute is set when the topology fails to load because the correct decoder could not be found.</summary>
            <remarks>
            <para>This attribute applies to all node types. The topology loader might set the attribute. Applications typically read this attribute but do not set it. For a list of possible values, see [Media Type GUIDs](media-type-guids.md). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-error-subtype-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_WORKQUEUE_MMCSS_TASKID">
            <summary>Specifies a Multimedia Class Scheduler Service (MMCSS) task identifier for a topology branch.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). This attribute is optional. This attribute is ignored unless the following attributes are also set: -   [**MF\_TOPONODE\_WORKQUEUE\_ID**](mf-toponode-workqueue-id-attribute.md) -   [**MF\_TOPONODE\_WORKQUEUE\_MMCSS\_CLASS**](mf-toponode-workqueue-mmcss-class-attribute.md) If the application registers one of its own threads with MMCSS, you can use this attribute to associate the topology work queue with the application's MMCSS group. Set the attribute value equal to the task identifier that the application received when it registered with MMCSS. (The task identifier is returned in the *TaskIndex* parameter of the [**AvSetMmThreadCharacteristics**](/windows/win32/api/avrt/nf-avrt-avsetmmthreadcharacteristicsa) function. For more information, see the topic [Process and Thread Functions](../procthread/process-and-thread-functions.md).) If you want MMCSS to assign a new task identifier for the topology, set the [**MF\_TOPONODE\_WORKQUEUE\_MMCSS\_CLASS**](mf-toponode-workqueue-mmcss-class-attribute.md) attribute, but do not set the **MF\_TOPONODE\_WORKQUEUE\_MMCSS\_TASKID** attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-workqueue-mmcss-taskid-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_WORKQUEUE_MMCSS_PRIORITY">
            <summary>Specifies the relative thread priority for a branch of the topology.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). The attribute is optional. This attribute requires the [MF\_TOPONODE\_WORKQUEUE\_ID](mf-toponode-workqueue-id-attribute.md) and [MF\_TOPONODE\_WORKQUEUE\_MMCSS\_CLASS](mf-toponode-workqueue-mmcss-class-attribute.md) attributes on the same node. The value of the attribute is the relative thread priority of the work queue for this branch of the topology. The [Multimedia Class Scheduler Service](../procthread/multimedia-class-scheduler-service.md) (MMCSS) uses the relative priority when it sets the thread priority. For more information, see [**AvSetMmThreadPriority**](/windows/win32/api/avrt/nf-avrt-avsetmmthreadpriority). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-workqueue-mmcss-priority#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_WORKQUEUE_ITEM_PRIORITY">
            <summary>Specifies the work-item priority for a branch of the topology.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). The attribute is optional. This attribute requires the [MF\_TOPONODE\_WORKQUEUE\_ID](mf-toponode-workqueue-id-attribute.md) attribute on the same node. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-workqueue-item-priority#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_MARKIN_HERE">
            <summary>Specifies whether the pipeline applies mark-in at this node.</summary>
            <remarks>
            <para>> [!Note] > Most applications do not need to use this attribute. The [Media Session](media-session.md) automatically sets this attribute if needed.</para>
            <para>This attribute applies to all node types. If the attribute is **TRUE**, the Media Foundation pipeline trims the output samples from this node to match the start time for the presentation. The topology loader sets this attribute when it resolves a topology. It is recommended that exactly one node in every branch of the topology should have this attribute set to **TRUE**. A topology branch is defined as the path from a source node to an output node. Within a branch, the [MF\_TOPONODE\_MARKOUT\_HERE](mf-toponode-markout-here-attribute.md) and MF\_TOPONODE\_MARKIN\_HERE attributes must be set on the same node in the branch. They cannot be set on different nodes within the same branch. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-markin-here-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_MARKOUT_HERE">
            <summary>Specifies whether the pipeline applies mark-out at this node. Mark-out is the point where a presentation ends. If pipeline components generate data past the mark-out point, the data is not rendered.</summary>
            <remarks>
            <para>This attribute applies to all node types. If this attribute is **TRUE**, the Media Foundation pipeline trims the output samples from this node to match the stop time for the presentation. The topology loader sets this attribute when it resolves a topology. Most applications do not need to set or retrieve this attribute. It is recommended that exactly one node in every branch of the topology should have this attribute set to **TRUE**. A topology branch is defined as the path from a source node to an output node. Within a branch, the MF\_TOPONODE\_MARKOUT\_HERE and [MF\_TOPONODE\_MARKIN\_HERE](mf-toponode-markin-here-attribute.md) attributes must be set on the same node in the branch. They cannot be set on different nodes within the same branch. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-markout-here-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_DECODER">
            <summary>Specifies whether a topology nodes underlying object is a decoder.</summary>
            <remarks>
            <para>This attribute applies to all node types. If the value of this attribute is nonzero, the node's underlying object is a decoder. The topology loader sets this attribute when it creates a decoder node. An application should set this attribute if the application manually adds a decoder to the topology. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-decoder-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_MEDIASTART">
            <summary>Specifies the start time of the presentation.</summary>
            <remarks>
            <para>This attribute specifies the position in the source where playback starts, in 100-nanosecond units, relative to the start the source. If the attribute is not set, playback starts at zero (the start of the file). For example, to start playback at the 5-second mark, set this attribute to 50000000. Set the attribute on the source nodes in the topology (nodes with type equal to **MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). Set the attribute before calling [**IMFMediaSession::SetTopology**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasession-settopology). > [!Note] > If you manually insert a decoder into the topology, you must also set the [MF\_TOPONODE\_MARKIN\_HERE](mf-toponode-markin-here-attribute.md) and [MF\_TOPONODE\_MARKOUT\_HERE](mf-toponode-markout-here-attribute.md) attributes on the decoder node.</para>
            <para>This attribute is a signed value, although it is stored as a **UINT64**. However, negative values are not meaningful. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-mediastart-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_MEDIASTOP">
            <summary>Specifies the stop time of the presentation.</summary>
            <remarks>
            <para>This attribute specifies the position in the source where playback stops, in 100-nanosecond units, relative to the start the source. If the attribute is not set, playback stops at the end of the source. For example, to stop playback at the 5-second mark, set this attribute to 50000000. Set the attribute on the source nodes in the topology (nodes with type equal to **MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). Set the attribute before calling [**IMFMediaSession::SetTopology**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasession-settopology). > [!Note] > If you manually insert a decoder into the topology, you must also set the [MF\_TOPONODE\_MARKIN\_HERE](mf-toponode-markin-here-attribute.md) and [MF\_TOPONODE\_MARKOUT\_HERE](mf-toponode-markout-here-attribute.md) attributes on the decoder node.</para>
            <para>After the topology is set, setting this attribute has no effect. This attribute is a signed value, although it is stored as a **UINT64**. However, negative values are not meaningful. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-mediastop-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_SOURCE">
            <summary>Contains a pointer to the media source associated with a topology node.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). The value of the attribute is a pointer to the media source's [**IMFMediaSource**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasource) interface. This attribute is required. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-source-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_PRESENTATION_DESCRIPTOR">
            <summary>Contains a pointer to the presentation descriptor for the media source.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). The value of the attribute is a pointer to the presentation descriptor's [**IMFPresentationDescriptor**](/windows/desktop/api/mfidl/nn-mfidl-imfpresentationdescriptor) interface. This attribute is required. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-presentation-descriptor-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_STREAM_DESCRIPTOR">
            <summary>Contains a pointer to the stream descriptor for the media source.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). The value of the attribute is a pointer to the stream descriptor's [**IMFStreamDescriptor**](/windows/desktop/api/mfidl/nn-mfidl-imfstreamdescriptor) interface. This attribute is required. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-stream-descriptor-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_SEQUENCE_ELEMENTID">
            <summary>Specifies the element that contains this source node.</summary>
            <remarks>
            <para>This attribute applies to source nodes (**MF\_TOPOLOGY\_SOURCESTREAM\_NODE**). The media pipeline uses this attribute to discover when media sources are part of the same element. The pipeline treats all source nodes that are part of the same element as having the same clock. When the pipeline queues up a new topology that contains source nodes that are part of an element that is present in the previous topology, the pipeline treats these source nodes as having the same clock as the source nodes from that element in the previous topology. > [!Note] > The media pipeline does not correct time stamps for source nodes with different clock rates.</para>
            <para>A media source that can provide topologies should implement the [**IMFMediaSourceTopologyProvider**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourcetopologyprovider) interface or the [**IMFSequencerSource**](/windows/desktop/api/mfidl/nn-mfidl-imfsequencersource) interface. A media source that provides topologies should set the **MF\_TOPONODE\_SEQUENCE\_ELEMENTID** attribute on every source node that it creates. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-sequence-elementid-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_TRANSFORM_OBJECTID">
            <summary>The class identifier (CLSID) of the Media Foundation transform (MFT) associated with this topology node.</summary>
            <remarks>
            <para>This attribute applies to transform nodes (**MF\_TOPOLOGY\_TRANSFORM\_NODE**). Applications can use this attribute to initialize a transfrom node. If you set this attribute, you do not have to call [**IMFTopologyNode::SetObject**](/windows/desktop/api/mfidl/nf-mfidl-imftopologynode-setobject) with a pointer to an MFT or activation object. Conversely, if you call **SetObject**, you do not need to set this attribute. For more information, see [Creating Topologies](creating-topologies.md). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-transform-objectid-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_STREAMID">
            <summary>The stream identifier of the stream sink associated with this topology node.</summary>
            <remarks>
            <para>This attribute applies to output nodes (**MF\_TOPOLOGY\_OUTPUT\_NODE**). When the Media Session loads the topology, it queries the media sink for a stream sink with the specified identifier. If that fails, it attempts to add a new stream sink to the media sink. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-streamid-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_NOSHUTDOWN_ON_REMOVE">
            <summary>Specifies how the Media Session shuts down an object in the topology.</summary>
            <remarks>
            <para>This attribute applies to the following types of toplogy node: -   Output nodes -   Any transform node that contains an *asynchronous* Media Foundation transform (MFT). The attribute can have the following values:</para>
            <para>| Value | Description | |-------|-------------| | <strong>TRUE</strong> | When the Media Session switches to a new topology or clears the current topology, it does not shut down the object that belongs to this topology node. | </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-noshutdown-on-remove-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_RATELESS">
            <summary>Specifies whether the media sink associated with this topology node is rateless.</summary>
            <remarks>
            <para>This attribute applies to output nodes (**MF\_TOPOLOGY\_OUTPUT\_NODE**). If the value of this attribute is nonzero, the Media Session treats the media sink as a rateless sink, regardless of whether the media sink returns the **MEDIASINK\_RATELESS** characteristic. If this attribute is not set, the media sink is assumed not to be rateless. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-rateless-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_DISABLE_PREROLL">
            <summary>Specifies whether the Media Session uses preroll on the media sink represented by this topology node.</summary>
            <remarks>
            <para>This attribute applies to output nodes (**MF\_TOPOLOGY\_OUTPUT\_NODE**). If the value of this attribute is **TRUE**, the Media Session does not preroll any data to the media sink, even if the media sink exposes the [**IMFMediaSinkPreroll**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasinkpreroll) interface. If the value is **FALSE**, the Media Session prerolls data if the media sink implements **IMFMediaSinkPreroll**. The default value is **FALSE**. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-disable-preroll-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TOPONODE_PRIMARYOUTPUT">
            <summary>Indicates which output is the primary output on a tee node.</summary>
            <remarks>
            <para>This attribute applies to tee nodes (**MF\_TOPOLOGY\_TEE\_NODE**). The value of this attribute is the zero-based index of an output connection on this tee node. This value indicates which output is the primary output stream. The pipeline waits for a request from the primary output before processing requests from the other outputs. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-toponode-primaryoutput-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_PMPHOST_CONTEXT">
            <summary>Contains a pointer to the proxy object for the applications presentation descriptor.</summary>
            <remarks>
            <para>The Protected Media Path (PMP) host uses this attribute to store the application's presentation descriptor on the remote presentation descriptor. The attribute value is a pointer to the [**IMFRemoteProxy**](/windows/desktop/api/mfidl/nn-mfidl-imfremoteproxy) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-pmphost-context-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_APP_CONTEXT">
            <summary>Contains a pointer to the presentation descriptor from the Protected Media Path (PMP).</summary>
            <remarks>
            <para>The media source proxy, which is created in the PMP process, uses this attribute to store the remote presentation descriptor on the application's presentation descriptor. The value of this attribute is a pointer to the [**IMFPresentationDescriptor**](/windows/desktop/api/mfidl/nn-mfidl-imfpresentationdescriptor) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-app-context-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_DURATION">
            <summary>Specifies the duration of a presentation, in 100-nanosecond units.</summary>
            <remarks>
            <para>Media sources can set this attribute on a presentation descriptor to indicate the duration of the presentation. This attribute is a signed value, although it is stored as a **UINT64**. However, the attribute should never contain a negative value. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-duration-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_TOTAL_FILE_SIZE">
            <summary>Specifies the total size of the source file, in bytes. This attribute applies to presentation descriptors. A media source can optionally set this attribute.</summary>
            <remarks>The GUID constant for this attribute is exported from mfuuid.lib.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_AUDIO_ENCODING_BITRATE">
            <summary>Specifies the audio encoding bit rate for the presentation, in bits per second. This attribute applies to presentation descriptors.</summary>
            <remarks>
            <para>The attribute is optional. Some formats have more complex encoding schemes that cannot be summarized by using this attribute. For Advanced Systems Format (ASF) files, the following attributes collectively describe the encoding bit rate: -   [**MF\_PD\_ASF\_FILEPROPERTIES\_MAX\_BITRATE**](mf-pd-asf-fileproperties-max-bitrate-attribute.md) -   [**MF\_SD\_ASF\_EXTSTRMPROP\_AVG\_DATA\_BITRATE**](mf-sd-asf-extstrmprop-avg-data-bitrate-attribute.md) -   [**MF\_SD\_ASF\_EXTSTRMPROP\_MAX\_DATA\_BITRATE**](mf-sd-asf-extstrmprop-max-data-bitrate-attribute.md) -   [**MF\_SD\_ASF\_STREAMBITRATES\_BITRATE**](mf-sd-asf-streambitrates-bitrate-attribute.md) Third-party formats might use other custom attributes. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-audio-encoding-bitrate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_VIDEO_ENCODING_BITRATE">
            <summary>Specifies the video encoding bit rate for the presentation, in bits per second. This attribute applies to presentation descriptors.</summary>
            <remarks>
            <para>This attribute is optional. Some formats have more complex encoding schemes that cannot be summarized by using this attribute. For Advanced Systems Format (ASF) files, the following attributes collectively describe the encoding bit rate: -   [**MF\_PD\_ASF\_FILEPROPERTIES\_MAX\_BITRATE**](mf-pd-asf-fileproperties-max-bitrate-attribute.md) -   [**MF\_SD\_ASF\_EXTSTRMPROP\_AVG\_DATA\_BITRATE**](mf-sd-asf-extstrmprop-avg-data-bitrate-attribute.md) -   [**MF\_SD\_ASF\_EXTSTRMPROP\_MAX\_DATA\_BITRATE**](mf-sd-asf-extstrmprop-max-data-bitrate-attribute.md) -   [**MF\_SD\_ASF\_STREAMBITRATES\_BITRATE**](mf-sd-asf-streambitrates-bitrate-attribute.md) Third-party formats might use other custom attributes. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-video-encoding-bitrate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_MIME_TYPE">
            <summary>Specifies the MIME type of the content.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors. The MIME type exposed through [System.MIMEType](../properties/props-system-mimetype.md) for media files may have a bias towards choosing MIME types suitable for Digital Living Network Alliance (DLNA). MF\_PD\_MIME\_TYPE and [System.MIMEType](../properties/props-system-mimetype.md) may not always match. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-mime-type-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_LAST_MODIFIED_TIME">
            <summary>Specifies when a presentation was last modified.</summary>
            <remarks>
            <para>Media sources can set this attribute on a presentation descriptor. The value of the attribute is a **FILETIME** structure, which is documented in the Windows SDK. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-last-modified-time-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_PLAYBACK_ELEMENT_ID">
            <summary>Contains the identifier of the playlist element in the presentation.</summary>
            <remarks>
            <para>Media sources that deliver playlists can optionally set this attribute on their presentation descriptors. When a media source delivers a playlist, it sends a [MENewPresentation](menewpresentation.md) event for each playlist element after the first. This event contains a presentation descriptor for the new playlist element. The media source can assign identifiers to the elements by setting the MF\_PD\_PLAYBACK\_ELEMENT\_ID attribute on each presentation descriptor, including the one created by [**IMFMediaSource::CreatePresentationDescriptor**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-createpresentationdescriptor). A media source might also send the [MENewPresentation](menewpresentation.md) event because of a dynamic stream switch or a change in the number of streams. In that situation, the value of MF\_PD\_PLAYBACK\_ELEMENT\_ID should remain the same across both presentations, to indicate that both presentations represent the same playlist element. If two consecutive presentations have the same value for this attribute, the Microsoft Media Foundation pipeline expects the time stamps to remain continuous across the transition. Therefore, the media source must not use the [MF\_EVENT\_SOURCE\_ACTUAL\_START](mf-event-source-actual-start-attribute.md) attribute when it transitions to the next presentation. Media sources that implement [**IMFMediaSourceTopologyProvider**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourcetopologyprovider) should use the [MF\_TOPONODE\_SEQUENCE\_ELEMENTID](mf-toponode-sequence-elementid-attribute.md) attribute rather than the MF\_PD\_PLAYBACK\_ELEMENT\_ID attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-playback-element-id#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_PREFERRED_LANGUAGE">
            <summary>Contains the preferred RFC 1766 language of the media source.</summary>
            <remarks>
            <para>The MF\_PD\_PREFERRED\_LANGUAGE attribute is optional. An application can set this attribute on a media source (such as a network source) to specify its preferred language. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-preferred-language#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_PLAYBACK_BOUNDARY_TIME">
            <summary>Stores the time (in 100-nanoseconds units) at which the presentation must begin, relative to the start of the media source.</summary>
            <remarks>
            <para>The MF\_PD\_PLAYBACK\_BOUNDARY\_TIME attribute is optional for media sources in a playlist. This value indicates the actual start time of the presentation. Consider a playlist that includes media sources *Element1*, *Element2*, and *Element3* in a sequence. 15 seconds after *Element1* starts playing, a dynamic stream change occurs. The new stream must start playing 15 seconds into the presentation. However, the keyframe nearest the presentation time of 15 seconds is at 12 seconds for the new stream. To start the new presentation at 15 seconds, a markin is required so that the decoded samples are dropped from 12 seconds to 15 seconds. Before the transition, the [MENewPresentation](menewpresentation.md) event is raised by the media source. This returns the presentation descriptor that contains the [MF\_PD\_PLAYBACK\_ELEMENT\_ID](mf-pd-playback-element-id.md) attribute for *Element1*. Additionally, it contains the MF\_PD\_PLAYBACK\_BOUNDARY\_TIME attribute that is set to 15 seconds to indicate the time when the transition occurred. The media source performs the markin at 15 seconds after decoding, which prevents the frames from 12 seconds to 15 seconds from being displayed. This value affects only markin time and does not affect how the Media Session adjusts time stamps. This attribute is ignored unless the media source indicates through the [MF\_PD\_PLAYBACK\_ELEMENT\_ID](mf-pd-playback-element-id.md) attribute that this presentation is the same playback element as the previous one. The MF\_PD\_PLAYBACK\_BOUNDARY\_TIME attribute is similar to the [MF\_TOPONODE\_MEDIASTART](mf-toponode-mediastart-attribute.md) attribute that is set on the topology node. For applications running on Windows Vista, media sources that implement [**IMFMediaSourceTopologyProvider**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourcetopologyprovider) should use **MF\_TOPONODE\_MEDIASTART** instead of MF\_PD\_PLAYBACK\_BOUNDARY\_TIME. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-playback-boundary-time#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_AUDIO_ISVARIABLEBITRATE">
            <summary>Specifies whether the audio streams in a presentation have a variable bit rate.</summary>
            <remarks>
            <para>This is an optional attribute for presentation descriptors. If the attribute is **TRUE** (nonzero), the presentation contains at least one variable-bit-rate (VBR) audio stream. If the attribute is **FALSE**, all of the audio streams have a constant bit rate. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-audio-isvariablebitrate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_LANGUAGE">
            <summary>Specifies the language for a stream.</summary>
            <remarks>
            <para>The value of this attribute is an RFC 1766-compliant language tag. This attribute applies to stream descriptors. A media source (or any object that creates a stream descriptor) can set this attribute if the stream has a specified language. Applications can query this attribute to get the language. If the attribute is not set, the stream does not have a specified language. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-language-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_PROTECTED">
            <summary>Indicates whether a stream contains protected content.</summary>
            <remarks>
            <para>This attribute applies to stream descriptors. If the value of the attribute is **TRUE**, the stream contains protected content. If the value is **FALSE**, or the attribute is not set, the stream contains clear content. Instead of checking each stream for this attribute, you can pass a presentation descriptor to the [**MFRequireProtectedEnvironment**](/windows/desktop/api/mfidl/nf-mfidl-mfrequireprotectedenvironment) function. This function tests whether the presentation descriptor contains any protected streams. A media source should set this attribute on the stream descriptor if the content requires the protected media path (PMP). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-protected-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_STREAM_NAME">
            <summary>Contains the name of a stream.</summary>
            <remarks>
            <para>The AVI media source sets this attribute if the AVI file contains a 'strn' chunk. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-stream-name#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_MUTUALLY_EXCLUSIVE">
            <summary>Specifies whether a stream is mutually exclusive with other streams of the same type.</summary>
            <remarks>
            <para>If this attribute is **TRUE** (nonzero), the stream is mutually exclusive with other streams of the same type, such as audio or video, within the same presentation. For example, if an AVI file contains multiple audio streams, they are marked as mutually exclusive, because only one audio stream should be played at one time. The default value is **FALSE**. > [!Note] > This attribute is not used for Advanced Systems Format (ASF) files, which have a more sophisticated way to represent mutual exclusion criteria. For more information, see [**IMFASFMutualExclusion**](/windows/desktop/api/wmcontainer/nn-wmcontainer-imfasfmutualexclusion).</para>
            <para>The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-mutually-exclusive#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_CUSTOM_VIDEO_MIXER_CLSID">
            <summary>CLSID of a custom video mixer for the enhanced video renderer (EVR) media sink.</summary>
            <remarks>
            <para>If you are creating the EVR through an activation object, you can use this attribute to set a custom video mixer on the EVR. Use this attribute as follows: 1.  Call the [**MFCreateVideoRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatevideorendereractivate) function to create an activation object for the EVR. The function returns a pointer to the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface. 2.  Set this attribue on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer by calling [**IMFAttributes::SetGUID**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setguid). The value of the attribute is the CLSID of the application's custom video mixer. If this attribute is set, the EVR calls **CoCreateInstance** with the specified CLSID to create the custom video mixer. The video mixer must expose the [**IMFTransform**](/windows/desktop/api/mftransform/nn-mftransform-imftransform) interface. The mixer is created as an in-process COM server. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-custom-video-mixer-clsid-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_CUSTOM_VIDEO_MIXER_ACTIVATE">
            <summary>Specifies an activation object that creates a custom video mixer for the enhanced video renderer (EVR) media sink.</summary>
            <remarks>
            <para>If you are creating the EVR through an activation object, you can use this attribute to set a custom video mixer on the EVR. Use this attribute as follows: 1.  Call the [**MFCreateVideoRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatevideorendereractivate) function to create an activation object for the EVR. The function returns a pointer to the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface. 2.  Set this attribute on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer by calling [**IMFAttributes::SetUnknown**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setunknown). The value of the attribute is a pointer to an activation object implemented by the caller. The caller's activation object must expose the **IMFActivate** interface. If you set this attribute, the EVR calls [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject) to create the custom video mixer. The video mixer must expose the [**IMFTransform**](/windows/desktop/api/mftransform/nn-mftransform-imftransform) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-custom-video-mixer-activate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_CUSTOM_VIDEO_MIXER_FLAGS">
            <summary>Specifies how to create a custom mixer for the enhanced video renderer (EVR).</summary>
            <remarks>
            <para>You can set this attribute on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer obtained from the [**MFCreateVideoRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatevideorendereractivate) function. The value of this attribute is a bitwise **OR** of the following values.</para>
            <para>| Value                                      | Description                                                                                                                                                                                                                                                                                                              | |--------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | **MF\_ACTIVATE\_CUSTOM\_MIXER\_ALLOWFAIL** | If the [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject) method fails to create the application's custom mixer, it uses the default EVR mixer instead. By default, if the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) object fails when it tries to create the custom mixer, the **ActivateObject** method fails. |</para>
            <para>Applications can use the [**MF\_ACTIVATE\_CUSTOM\_VIDEO\_MIXER\_CLSID**](mf-activate-custom-video-mixer-clsid-attribute.md) attribute to specify a custom mixer for the EVR. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-custom-video-mixer-flags-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_CLSID">
            <summary>CLSID of a custom video presenter for the enhanced video renderer (EVR) media sink.</summary>
            <remarks>
            <para>If you are creating the EVR through an activation object, you can use this attribute to set a custom video presenter on the EVR. Use this attribute as follows: 1.  Call the [**MFCreateVideoRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatevideorendereractivate) function to create an activation object for the EVR. The function returns a pointer to the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface. 2.  Set this attribue on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer by calling [**IMFAttributes::SetGUID**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setguid). The value of the attribute is the CLSID of the application's custom video presenter. If this attribute is set, the EVR calls **CoCreateInstance** with the specified CLSID to create the custom video presenter. The video presenter must expose the [**IMFVideoPresenter**](/windows/desktop/api/evr/nn-evr-imfvideopresenter) interface. The presenter is created as an in-process COM server. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-custom-video-presenter-clsid-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_ACTIVATE">
            <summary>Specifies an activation object that creates a custom video presenter for the enhanced video renderer (EVR) media sink.</summary>
            <remarks>
            <para>If you are creating the EVR through an activation object, you can use this attribute to set a custom video presenter on the EVR. Use this attribute as follows: 1.  Call the [**MFCreateVideoRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatevideorendereractivate) function to create an activation object for the EVR. The function returns a pointer to the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface. 2.  Set this attribute on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer by calling [**IMFAttributes::SetUnknown**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setunknown). The value of the attribute is a pointer to an activation object implemented by the caller. The caller's activation object must expose the **IMFActivate** interface. If you set this attribute, the EVR calls [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject) to create the custom video presenter. The video presenter must expose the [**IMFVideoPresenter**](/windows/desktop/api/evr/nn-evr-imfvideopresenter) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-custom-video-presenter-activate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_FLAGS">
            <summary>Specifies how to create a custom presenter for the enhanced video renderer (EVR).</summary>
            <remarks>
            <para>You can set this attribute on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer obtained from the [**MFCreateVideoRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatevideorendereractivate) function. The value of this attribute is a bitwise **OR** of the following values.</para>
            <para>| Value                                          | Description                                                                                                                                                                                                                                                                                                                          | |------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | **MF\_ACTIVATE\_CUSTOM\_PRESENTER\_ALLOWFAIL** | If the [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject) method fails to create the application's custom presenter, it uses the default EVR presenter instead. By default, if the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) object fails when it tries to create the custom presenter, the **ActivateObject** method fails. |</para>
            <para>Applications can use the [**MF\_ACTIVATE\_CUSTOM\_VIDEO\_PRESENTER\_CLSID**](mf-activate-custom-video-presenter-clsid-attribute.md) attribute to specify a custom presenter for the EVR. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-custom-video-presenter-flags-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_MFT_LOCKED">
            <summary>Specifies whether the Topology Loader will change the media types on a Media Foundation transform (MFT). Applications typically do not use this attribute.</summary>
            <remarks>
            <para>If value of this attribute is nonzero, the topology loader will not change the media types on the MFT. The topology loader sets this attribute after it loads the topology. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-mft-locked-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ACTIVATE_VIDEO_WINDOW">
            <summary>Handle to the video clipping window.</summary>
            <remarks>
            <para>This attribute applies to the activation object for the enhanced video renderer (EVR). The value is set automatically when you call [**MFCreateVideoRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatevideorendereractivate) to create the EVR activation object. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-activate-video-window-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS">
            <summary>Contains flags to configure the audio renderer.</summary>
            <remarks>
            <para>The value of this attribute is a bitwise **OR** of the following flags.</para>
            <para>| Value                                                   | Description                                                                                                                                                                                                                                                                                                                       | |---------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | **MF\_AUDIO\_RENDERER\_ATTRIBUTE\_FLAGS\_CROSSPROCESS** | The audio renderer is uses a cross-process audio session. This flag enables audio renderers in multiple processes to share the same audio session, along with the associated volume and policy controls.<br/> If this flag is not set, the audio session cannot be shared by audio renderers in other processes.<br/> | | **MF\_AUDIO\_RENDERER\_ATTRIBUTE\_FLAGS\_NOPERSIST**    | The Windows audio session API (WASAPI) will not persist the properties for this audio session, such as the session volume.<br/> If this flag is not set, WASAPI will persist the audio session properties.<br/>                                                                                                       |</para>
            <para>You can use this attribute to configure the audio renderer. The usage depends on which function you call to create the audio renderer: -   [**MFCreateAudioRenderer**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorenderer): Set this attribute using the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface pointer specified in the *pAudioAttributes* parameter. -   [**MFCreateAudioRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorendereractivate): Set this attribute using the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface pointer retrieved in the *ppActivate* parameter. Set the attribute before calling [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-audio-renderer-attribute-flags-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_AUDIO_RENDERER_ATTRIBUTE_SESSION_ID">
            <summary>Specifies the audio policy class for the audio renderer.</summary>
            <remarks>
            <para>This attribute associates the audio renderer with an audio policy class. Each policy class has its own volume and policy control. If this attribute is not set, the new SAR joins the application's default audio session. For more information, see [**IAudioClient::Initialize**](/windows/win32/api/audioclient/nf-audioclient-iaudioclient-initialize) in the core audio API documentation. You can use this attribute to configure the audio renderer. The usage depends on which function you call to create the audio renderer: -   [**MFCreateAudioRenderer**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorenderer): Set this attribute using the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface pointer specified in the *pAudioAttributes* parameter. -   [**MFCreateAudioRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorendereractivate): Set this attribute using the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface pointer retrieved in the *ppActivate* parameter. Set the attribute before calling [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject). The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-audio-renderer-attribute-session-id-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ID">
            <summary>Specifies the identifier for the audio endpoint device.</summary>
            <remarks>
            <para>You can use this attribute to configure the audio renderer. The usage depends on which function you call to create the audio renderer: -   [**MFCreateAudioRenderer**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorenderer): Set this attribute using the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface pointer specified in the *pAudioAttributes* parameter. -   [**MFCreateAudioRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorendereractivate): Set this attribute using the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface pointer retrieved in the *ppActivate* parameter. Set the attribute before calling [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject). An audio endpoint device is a hardware device that lies at one end of an audio data path, such as a headphone or a speaker. To obtain the audio endpoint identifier, use the following core audio APIs: -   Use the [**IMMDeviceEnumerator**](/windows/win32/api/mmdeviceapi/nn-mmdeviceapi-immdeviceenumerator) interface to enumerate the devices on the system. -   Call [**IMMDevice::GetId**](/windows/win32/api/mmdeviceapi/nf-mmdeviceapi-immdevice-getid) to get the identifier for the device. For more information, see the [Core Audio](../coreaudio/core-audio-apis-in-windows-vista.md) API documentation. If this attribute is not set, the audio renderer uses the default endpoint device. If this attribute is set, do not set the [**MF\_AUDIO\_RENDERER\_ATTRIBUTE\_ENDPOINT\_ROLE**](mf-audio-renderer-attribute-endpoint-role-attribute.md) attribute. If both attributes are set, a failure will occur when the audio renderer is created. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-audio-renderer-attribute-endpoint-id-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE">
            <summary>Specifies the audio endpoint role for the audio renderer.</summary>
            <remarks>
            <para>You can use this attribute to configure the audio renderer. The usage depends on which function you call to create the audio renderer: -   [**MFCreateAudioRenderer**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorenderer): Set this attribute using the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface pointer specified in the *pAudioAttributes* parameter. -   [**MFCreateAudioRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorendereractivate): Set this attribute using the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) interface pointer retrieved in the *ppActivate* parameter. Set the attribute before calling [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject). An audio endpoint device is a hardware device that lies at one end of an audio data path, such as a headphone or a speaker. If this attribute is set, the audio renderer uses the default audio device for the specified role. The value of this attribute is a member of the **ERole** enumeration, which is defined in the header file mmdeviceapi.h. For more information, see the Core Audio API documentation. If this attribute is not set, the audio renderer uses the default endpoint device. If this attribute is set, do not set the [**MF\_AUDIO\_RENDERER\_ATTRIBUTE\_ENDPOINT\_ID**](mf-audio-renderer-attribute-endpoint-id-attribute.md) attribute. If both attributes are set, a failure will occur when the audio renderer is created. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-audio-renderer-attribute-endpoint-role-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_AUDIO_RENDERER_ATTRIBUTE_STREAM_CATEGORY">
            <summary>Specifies the audio stream category for the Streaming Audio Renderer (SAR).</summary>
            <remarks>
            <para>You can use this attribute to configure the audio renderer. The usage depends on which function you call to create the audio renderer.</para>
            <para>| Function                                                               | How to Set the attribute                                                                                                                                                                       | |------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | [**MFCreateAudioRenderer**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorenderer)                 | Use the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer specified in the *pAudioAttributes* parameter.                                                                                          | | [**MFCreateAudioRendererActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreateaudiorendereractivate) | Use the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer returned in the *ppActivate* parameter. Set the attribute before calling [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject). |</para>
            <para>The value of the attribute is a member of the [**AUDIO\_STREAM\_CATEGORY**](/windows/win32/api/audiosessiontypes/ne-audiosessiontypes-audio_stream_category) enumeration. The audio service uses the stream category to determine audio policies when multiple applications play audio at the same time.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-audio-renderer-attribute-stream-category#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SAMPLEGRABBERSINK_SAMPLE_TIME_OFFSET">
            <summary>Offset between the time stamp on each sample received by the sample grabber, and the time when the sample grabber presents the sample.</summary>
            <remarks>
            <para>You can set this attribute on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) object that is returned by the [**MFCreateSampleGrabberSinkActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatesamplegrabbersinkactivate) function. This attribute enables the sample grabber's callback function to receive samples earlier than the presentation time. When the sample grabber receives a new sample, it presents the sample at time *t* − *offset*, where *t* is the time stamp on the sample and *offset* is the value of this attribute. If this attribute is not set, the default value is zero. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-samplegrabbersink-sample-time-offset-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SAMPLEGRABBERSINK_IGNORE_CLOCK">
            <summary>Specifies whether the sample-grabber sink uses the presentation clock to schedule samples.</summary>
            <remarks>
            <para>You can set this attribute on the activation object created by the [**MFCreateSampleGrabberSinkActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatesamplegrabbersinkactivate) function. Set the attribute before calling the [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject) method on the activation object. By default, when the sample-grabber sink receives a sample, it waits until the presentation time of the sample to invoke the application's callback. If the MF\_SAMPLEGRABBERSINK\_IGNORE\_CLOCK attribute is nonzero, the sample-grabber sink ignores the presentation clock and invokes the callback as soon as it receives each sample. Recommended usage: -   If you want to process samples as quickly as possible, set this attribute to **TRUE**. -   If you want the calls to the callback method to be synchronized with the clock, either do not set this attribute or set it to **FALSE**. You can get samples slightly ahead of the clock, while still remaining synchronized, by setting the [**MF\_SAMPLEGRABBERSINK\_SAMPLE\_TIME\_OFFSET**](mf-samplegrabbersink-sample-time-offset-attribute.md) attribute. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-samplegrabbersink-ignore-clock#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_BYTESTREAMHANDLER_ACCEPTS_SHARE_WRITE">
            <summary>Specifies whether a byte-stream handler can use a byte stream that is opened for writing by another thread.</summary>
            <remarks>
            <para>Byte-stream handlers can support this attribute. To get or set the attribute, first query the byte-stream handler for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. Then call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32) or [**IMFAttributes::SetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setuint32) If this attribute is **TRUE**, it means that the byte-stream handler can read from a stream while another thread writes to the same stream. When a stream is opened for writing by another thread, the [**IMFByteStream::GetCapabilities**](/windows/desktop/api/mfobjects/nf-mfobjects-imfbytestream-getcapabilities) method returns the **MFBYTESTREAM\_SHARE\_WRITE** flag. This attribute affects source resolution. If a byte stream has the **MFBYTESTREAM\_SHARE\_WRITE** flag set, the [Source Resolver](source-resolver.md) will not pass that stream to a byte-stream handler unless the handler has the MF\_BYTESTREAMHANDLER\_ACCEPTS\_SHARE\_WRITE attribute set to **TRUE**. The **MFBYTESTREAM\_SHARE\_WRITE** flag is a hint that the length of the stream might change while the handler is reading from it. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-bytestreamhandler-accepts-share-write#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_POLICY_ID">
            <summary>An identifier that can be set on an IMFOutputPolicy.</summary>
            <remarks>The value can be recieved from the [MEPolicySet](./mepolicyset.md) media event. It is stored as a **VT_UI4** type payload in the **MEPolicySet** event.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_SAMI_STYLELIST">
            <summary>Contains the friendly names of the Synchronized Accessible Media Interchange (SAMI) styles defined in the SAMI file.</summary>
            <remarks>
            <para>The attribute blob has the following structure:</para>
            <para>Data Type Description Size (bytes) **DWORD** Number of style strings. 4 For each style string: **DWORD** Size of the string in bytes, including the **NULL** character. 4 **LPWSTR** Null-terminated wide-character string containing the name of the style. Varies</para>
            <para>To set the style or retrieve the current style, use the [**IMFSAMIStyle**](/windows/desktop/api/mfidl/nn-mfidl-imfsamistyle) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-sami-stylelist-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_SAMI_LANGUAGE">
            <summary>Contains the Synchronized Accessible Media Interchange (SAMI) language name that is defined for the stream.</summary>
            <remarks>
            <para>The SAMI language name is specified in the SAMI file. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-sami-language-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSCODE_CONTAINERTYPE">
            <summary>Specifies the container type of an encoded file.</summary>
            <remarks>
            <para>This attribute is used with both the Fast Transcode feature and the sink writer object. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-transcode-containertype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSCODE_SKIP_METADATA_TRANSFER">
            <summary>Specifies whether metadata is written to the transcoded file.</summary>
            <remarks>The GUID constant for this attribute is exported from mfuuid.lib.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSCODE_TOPOLOGYMODE">
            <summary>Specifies for a transcode topology whether the topology loader will load hardware-based transforms.</summary>
            <remarks>
            <para>This attribute is optional. It must have one of the following values.</para>
            <para>| Value                                              | Description                                                                                                                                                                                                                                                                       | |----------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | **MF\_TRANSCODE\_TOPOLOGYMODE\_HARDWARE\_ALLOWED** | The Topology Loader will load hardware-based MFTs, such as hardware decoders, when available.<br/> The Topology Loader automatically falls back to software decoding if no hardware decoder is found, or if a hardware decoder fails to connect for some reason.<br/> | | **MF\_TRANSCODE\_TOPOLOGYMODE\_SOFTWARE\_ONLY**    | The Topology Loader will load only software MFTs, including software decoders.                                                                                                                                                                                                    |</para>
            <para>The default value is **MF\_TRANSCODE\_TOPOLOGYMODE\_SOFTWARE\_ONLY**. If the Topology Loader inserts a hardware MFT into the topology, it sets the [MFT\_ENUM\_HARDWARE\_URL\_Attribute](mft-enum-hardware-url-attribute.md) attribute on the topology node. To check whether a hardware MFT is present, enumerate the nodes in the resolved topology and check whether this attribute is present. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-transcode-topologymode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSCODE_ADJUST_PROFILE">
            <summary>Profile flags that define the stream settings for the transcode topology. The flags are defined in the MF\_TRANSCODE\_ADJUST\_PROFILE\_FLAGS enumeration.</summary>
            <remarks>
            <para>An application can set this attribute at the container level on the transcode profile. If this attribute is set, the [**MFCreateTranscodeTopology**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatetranscodetopology) function changes the stream attributes during topology building, depending on the specified flag. For example, if the application specifies the **MF\_TRANSCODE\_ADJUST\_PROFILE\_DEFAULT** flag, the application-specified stream settings are used to create the profile. For the video stream, the frame rate is updated based on the media source. If the application does not specify the interlaced mode, the profile is updated to use progressive frames by default. If the application specifies the **MF\_TRANSCODE\_ADJUST\_PROFILE\_USE\_SOURCE\_ATTRIBUTES** flag, then missing stream attributes are copied from the input media source to the stream settings in the transcode profile. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-transcode-adjust-profile#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.PInvoke.MF_TRANSCODE_ENCODINGPROFILE" -->
        <member name="F:Windows.Win32.PInvoke.MF_TRANSCODE_QUALITYVSSPEED">
            <summary>Specifies a number between 0 and 100 that indicates the tradeoff between encoding quality and encoding speed.</summary>
            <remarks>
            <para>This attribute has the same GUID value as the [AVEncCommonQualityVsSpeed](../directshow/avenccommonqualityvsspeed-property.md) property defined for [**ICodecAPI**](/windows/win32/api/strmif/nn-strmif-icodecapi), and has the same interpretation. The application can set this attribute on the transcode profile before building the transcode topology for Windows Media codecs. The value must be in the range from 0 to 100. For video stream, the transcode topology builder maps a value to the application-specified value and supplies the mapped value to the **MFPKEY\_COMPLEXITYEX** property of the encoder. Lower values enable the encoder to use less complicated encoding algorithms. Using simpler algorithms produces lower-quality output, but the encoding process is faster and requires less processing power. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-transcode-qualityvsspeed#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_TRANSCODE_DONOT_INSERT_ENCODER">
            <summary>Specifies whether an encoder must be included in the transcode topology.</summary>
            <remarks>The GUID constant for this attribute is exported from mfuuid.lib.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_VIDEO_PROCESSOR_ALGORITHM">
            <summary>Sets the algorithm used by the video processor.</summary>
            <remarks>The value of this attribute is an [**MF\_VIDEO\_PROCESSOR\_ALGORITHM\_TYPE**](mf-video-processor-algorithm-type.md).</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_XVP_DISABLE_FRC">
            <summary>Disables frame-rate conversion in the Video Processor MFT.</summary>
            <remarks>
            <para>If this attribute is **TRUE**, the video processor will not perform frame-rate conversion. By default, the video processor will convert the frame rate to match the output media type. To set this attribute: 1.  Call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) on the video processor. 2.  Call [**IMFAttributes::SetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setuint32). Set the attribute before streaming begins.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-xvp-disable-frc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_XVP_CALLER_ALLOCATES_OUTPUT">
            <summary>Specifies whether that the caller will allocate the textures used for output.</summary>
            <remarks>
            <para>If this attribute is **TRUE**, the video processor expect output textures to be allocated by the caller, even when operating in DirectX Video Acceleration (DXVA) mode. If this attribute is **FALSE**, the video processor will allocate the output textures when operating in DXVA mode, and will fail if caller provided output textures are provided. To set this attribute: 1.  Call [**IMFTransform::GetAttributes**](/windows/desktop/api/mftransform/nf-mftransform-imftransform-getattributes) on the video processor. 2.  Call [**IMFAttributes::SetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setuint32). Set the attribute before streaming begins.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-xvp-caller-allocates-output#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE">
            <summary>Specifies a devices type, such as audio capture or video capture.</summary>
            <remarks>
            <para>Use this attribute as input to the following functions: -   [**MFCreateDeviceSource**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesource) -   [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) -   [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) In addition, this attribute is set on the activation objects returned by the [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) function. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-source-type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE">
            <summary>Specifies whether a video capture source is a hardware device or a software device.</summary>
            <remarks>
            <para>If the value is **TRUE**, the capture source is a hardware device. If the value is **FALSE**, it is a software device. The default value is **FALSE**. This attribute is set on the activation objects returned by the following functions: -   [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) -   [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) The attribute applies only to video capture devices. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-source-type-vidcap-hw-source#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME">
            <summary>Specifies the display name for a device.</summary>
            <remarks>
            <para>This attribute is set on the activation objects returned by the following functions: -   [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) -   [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-friendly-name#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE">
            <summary>Specifies the output format of a device.</summary>
            <remarks>
            <para>This attribute contains a pair of GUIDs: a major type and a subtype. These GUIDs describe the default output format of the device. The device might support additional output formats. For example, if a video capture device outputs RGB-32 video, the value of this attribute is `{ MFMediaType_Video, MFVideoFormat_RGB32 }`. This attribute is a hint to the application. To get the exact output format, create the media source for the device and get the media source's presentation descriptor. This attribute is set on the activation objects returned by the following functions: -   [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) -   [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-media-type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY">
            <summary>Specifies the device category for a video capture device.</summary>
            <remarks>
            <para>Use this attribute as input to the [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) function when enumerating video capture devices. In addition, this attribute is set on the activation objects returned by the following functions: -   [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) -   [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) The attribute applies only to video capture devices. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-source-type-vidcap-category#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK">
            <summary>Contains the symbolic link for a video capture driver.</summary>
            <remarks>
            <para>Use this attribute as input to the [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) function. In addition, this attribute is set on the activation objects returned by the following functions: -   [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) -   [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) The symbolic link should be considered an opaque string. The human-readable display name for a device is contained in the [MF\_DEVSOURCE\_ATTRIBUTE\_FRIENDLY\_NAME](mf-devsource-attribute-friendly-name.md) attribute. The MF\_DEVSOURCE\_ATTRIBUTE\_SOURCE\_TYPE\_VIDCAP\_SYMBOLIC\_LINK attribute can be passed in as the value of the DevicePath argument of the [**SetupDiOpenDeviceInterface**](/windows/win32/api/setupapi/nf-setupapi-setupdiopendeviceinterfacea) function. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-source-type-vidcap-symbolic-link#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS">
            <summary>Specifies the maximum number of frames that the video capture source will buffer.</summary>
            <remarks>
            <para>By default, the video capture source buffers a maximum of one frame at a time. You can increase the buffer limit by setting this attribute. The correct way to set this attribute depends on the function used to create the media source: -   [**MFCreateDeviceSource**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesource): Set the attribute through the *pAttributes* parameter of the function. -   [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate): Set the attribute through the *pAttributes* parameter of the function. -   [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources): Set the attribute on the [**IMFActivate**](/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate) pointer returned by the function. Set the attribute before calling [**IMFActivate::ActivateObject**](/windows/desktop/api/mfobjects/nf-mfobjects-imfactivate-activateobject). The attribute applies only to video capture devices. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-source-type-vidcap-max-buffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID">
            <summary>Specifies the endpoint ID for an audio capture device.</summary>
            <remarks>
            <para>The value of the attribute is an endpoint ID. This attribute is used with the following functions: -   It can be used as input to the [**MFCreateDeviceSource**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesource) and [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) functions. In this context, the attribute specifies the audio capture device for the function. You can get the endpoint ID for a given device by calling the [**IMMDevice::GetId**](/windows/win32/api/mmdeviceapi/nf-mmdeviceapi-immdevice-getid) method. See the Core Audio API documentation for more information. -   When the [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) function enumerates audio devices, the returned activation objects contain this attribute. The attribute is used internally by the activation object when it creates the media source. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-source-type-audcap-endpoint-id#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE">
            <summary>Specifies the device role for an audio capture device.</summary>
            <remarks>
            <para>The **eRole** enumeration type is documented in the Core Audio API documentation. The value of the attribute specifies a device role. This attribute is used with the following functions. This attribute can be used as input to the [**MFCreateDeviceSource**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesource) and [**MFCreateDeviceSourceActivate**](/windows/desktop/api/mfidl/nf-mfidl-mfcreatedevicesourceactivate) functions. If the attribute is specified, the function creates a media source that uses the default audio capture device for the specified device role. This attribute can also be used as input to the [**MFEnumDeviceSources**](/windows/desktop/api/mfidl/nf-mfidl-mfenumdevicesources) function. If the attribute is specified, the enumeration is restricted to the specified device role. In addition, each activation object returned by the **MFEnumDeviceSources** function contains this attribute. The attribute is then used internally by the activation object when it creates the media source. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-source-type-audcap-role#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_IMAGE_STREAM">
            <summary>Specifies whether a stream on a video capture source is a still-image stream.</summary>
            <remarks>
            <para>Some video cameras expose a still-image stream that produces high-resolution images. The image stream might produce uncompressed images or JPEG images. If the camera has an image stream, the media source for the capture device sets this attribute to **TRUE** on the image stream. To get this attribute, do the following: 1.  Query the media source for the [**IMFMediaSourceEx**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourceex) interface. 2.  Call [**IMFMediaSourceEx::GetStreamAttributes**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasourceex-getstreamattributes) to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer for the stream. 3.  Call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32) to get the attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-image-stream#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_INDEPENDENT_IMAGE_STREAM">
            <summary>Specifies whether the image stream on a video capture source is independent of the video stream.</summary>
            <remarks>
            <para>Some USB video cameras expose a stream that produces still images. In some cameras, the image stream simply returns the next frame from the video stream. In other cameras, the image stream functions independently of the video stream. If the camera has an independent image stream, the media source for the capture device sets this attribute to **TRUE** on the image stream. To get this attribute, do the following: 1.  Query the media source for the [**IMFMediaSourceEx**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourceex) interface. 2.  Call [**IMFMediaSourceEx::GetStreamAttributes**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasourceex-getstreamattributes) to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer for the stream. 3.  Call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32) to get the attribute. This attribute applies only when the [MF\_DEVICESTREAM\_IMAGE\_STREAM](mf-devicestream-image-stream.md) attribute is **TRUE**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-independent-image-stream#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_STREAM_ID">
            <summary>Specifies the kernel streaming (KS) identifier for a stream on a video capture device.</summary>
            <remarks>
            <para>To get this attribute, do the following: 1.  Query the media source for the [**IMFMediaSourceEx**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourceex) interface. 2.  Call [**IMFMediaSourceEx::GetStreamAttributes**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasourceex-getstreamattributes) to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer for the stream. 3.  Call [**IMFAttributes::GetUINT32**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getuint32) to get the attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-stream-id#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_STREAM_CATEGORY">
            <summary>Represents the stream category.</summary>
            <remarks>This attribute represents the GUID that identifies the stream category defined in ksmedia.h.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_FRAMESERVER_SHARED">
            <summary>This attribute, when set on a stream, explicitly marks the stream as shared by the frame server.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-frameserver-shared">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_TRANSFORM_STREAM_ID">
            <summary>Represents the Microsoft Media Foundation Transform (MFT) stream id of the stream.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-transform-stream-id">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_EXTENSION_PLUGIN_CLSID">
            <summary>Specifies the CLSID of a post-processing plug-in for a video capture device.</summary>
            <remarks>
            <para>A post-processing plug-in is an MFT that processes the video image after it is captured. The hardware vendor can include a post-processing plug-in as part of the installation package. If so, the video capture source sets the MF\_DEVICESTREAM\_EXTENSION\_PLUGIN\_CLSID attribute to the CLSID of the plug-in. To get this attribute, do the following: 1.  Query the media source for the [**IMFMediaSourceEx**](/windows/desktop/api/mfidl/nn-mfidl-imfmediasourceex) interface. 2.  Call [**IMFMediaSourceEx::GetStreamAttributes**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasourceex-getstreamattributes) to get an [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer for the stream. 3.  Call [**IMFAttributes::GetGUID**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getguid) to get the attribute. To create the plug-in, call [**CoCreateInstance**](/windows/win32/api/combaseapi/nf-combaseapi-cocreateinstance).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-extension-plugin-clsid#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_EXTENSION_PLUGIN_CONNECTION_POINT">
            <summary>Represents a extension plugin connection point.</summary>
            <remarks>Represents a filter KSControl pointer.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_TAKEPHOTO_TRIGGER">
            <summary>Specifies if the take photo trigger is encapsulated into the device source.</summary>
            <remarks>Set this attribute to non-zero to encapsulate the take photo trigger into the device source.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_MAX_FRAME_BUFFERS">
            <summary>Specifies the maximum number of frames that the video capture source will buffer for this stream.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-max-frame-buffers">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICE_THERMAL_STATE_CHANGED">
            <summary>Represents an event that signals a thermal state change in the device.</summary>
            <remarks>The value of this attribute specifies the device thermal value in percentage.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_FRAMESERVER_HIDDEN">
            <summary>This attribute, when set on a stream, marks the stream as being hidden from the client.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devicestream-frameserver-hidden">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_STF_VERSION_INFO">
            <summary>This attribute represents the version information sensor transform factory. This is the only attribute that is required for sensor transforms. The value is defined by the sensor transform developer and is treated as opaque by the media pipeline.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-stf-version-info">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_STF_VERSION_DATE">
            <summary>This attribute stores a FILETIME representing the date/time stamp of a sensor transform factory.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-stf-version-date">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVICESTREAM_REQUIRED_CAPABILITIES">
            <summary>Specifies a list of unicode strings representing the device capabilities required by the sensor transform.</summary>
            <remarks>This attribute is optional and only required if the sensor transform accesses a protected resource. The value must be a semicolon delimited list of string tokens defined in [**DeviceCapability**](/uwp/schemas/appxpackage/appxmanifestschema/element-devicecapability).</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_FILE_ID">
            <summary>Specifies the file identifier of an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-file-id-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_CREATION_TIME">
            <summary>Specifies the date and time when an Advanced Systems Format (ASF) file was created.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The value of the attribute is a **FILETIME** structure, which is documented in the Windows SDK. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-creation-time-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_PACKETS">
            <summary>Specifies the number of packets in the data section of an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-packets-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_PLAY_DURATION">
            <summary>Specifies the time needed to play an Advanced Systems Format (ASF) file, in 100-nanosecond units.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-play-duration-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_SEND_DURATION">
            <summary>Specifies the time, in 100-nanosecond units, needed to send an Advanced Systems Format (ASF) file. A packets send time is the time when the packet should be delivered over the network. It is not the presentation time of the packet.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-send-duration-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_PREROLL">
            <summary>Specifies the amount of time, in milliseconds, to buffer data before playing an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-preroll-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_FLAGS">
            <summary>Specifies whether an Advanced Systems Format (ASF) file is broadcast or seekable. This value corresponds to the Flags field of the File Properties Object, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The value of the attribute is a bitwise OR of the following flags:</para>
            <para>| Flag | Description                                                                                                                                                                                                                                                                                       | |------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | 0x01 | Broadcast flag. The file is in the process of being created.                                                                                                                                                                                                                                      | | 0x02 | Seekable flag. The file is seekable.<br/> A file is seekable if an audio stream is present and the maximum data packet size equals the minimum data packet size. It can also be seekable if the file has an audio stream and a video stream with a matching Simple Index Object.<br/> |</para>
            <para>The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata. If the broadcast flag is set, the following attributes in the presentation descriptor are not valid: -   [**MF\_PD\_ASF\_FILEPROPERTIES\_FILE\_ID**](mf-pd-asf-fileproperties-file-id-attribute.md) -   [**MF\_PD\_ASF\_FILEPROPERTIES\_CREATION\_TIME**](mf-pd-asf-fileproperties-creation-time-attribute.md) -   [**MF\_PD\_ASF\_FILEPROPERTIES\_PACKETS**](mf-pd-asf-fileproperties-packets-attribute.md) -   [**MF\_PD\_ASF\_FILEPROPERTIES\_PLAY\_DURATION**](mf-pd-asf-fileproperties-play-duration-attribute.md) -   [**MF\_PD\_ASF\_FILEPROPERTIES\_SEND\_DURATION**](mf-pd-asf-fileproperties-send-duration-attribute.md) In addition, the [**MF\_PD\_ASF\_FILEPROPERTIES\_MAX\_PACKET\_SIZE**](mf-pd-asf-fileproperties-max-packet-size-attribute.md) attribute and [**MF\_PD\_ASF\_FILEPROPERTIES\_MIN\_PACKET\_SIZE**](mf-pd-asf-fileproperties-min-packet-size-attribute.md) attribute values are set to the actual packet size.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-flags-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_MIN_PACKET_SIZE">
            <summary>Specifies the minimum packet size, in bytes, for an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-min-packet-size-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_MAX_PACKET_SIZE">
            <summary>Specifies the maximum packet size, in bytes, of an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-max-packet-size-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_FILEPROPERTIES_MAX_BITRATE">
            <summary>Specifies the maximum instantaneous bit rate, in bits per second, for an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-fileproperties-max-bitrate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_CONTENTENCRYPTION_TYPE">
            <summary>Specifies the type of protection mechanism used in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method retrieves the Protection Type field, converts it into a wide-character string, and then populates a null-terminated array of **WCHAR**s. If present, the value must be "DRM". The size of the array equals the Protection Type Field Length field of the Content Encryption Header.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-contentencryption-type-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_CONTENTENCRYPTION_KEYID">
            <summary>Specifies the key identifier for an encrypted Advanced Systems Format (ASF) file. This attribute corresponds to the Key ID field of the Content Encryption Header, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method retrieves the Key ID field, converts it into a wide-character string, and then populates a null-terminated array of **WCHAR**s. The size of the array equals the Key ID Length field of the Content Encryption Header.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-contentencryption-keyid-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_CONTENTENCRYPTION_SECRET_DATA">
            <summary>Contains secret data for an encrypted Advanced Systems Format (ASF) file. This attribute corresponds to the Secret Data field of the Content Encryption Header, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method populates a byte array with the Secret Data field. The size of the array equals the Secret Data Length field of the Content Encryption Header.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-contentencryption-secret-data-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_CONTENTENCRYPTION_LICENSE_URL">
            <summary>Specifies the license acquisition URL for an encrypted Advanced Systems Format (ASF) file. This attribute corresponds to the License URL field of the Content Encryption Header, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method retrieves the License URL field, converts it into a wide-character string, and then populates a null-terminated array of **WCHAR**s. The size of the array equals the License URL Length field of the Content Encryption Header.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-contentencryption-license-url-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_CONTENTENCRYPTIONEX_ENCRYPTION_DATA">
            <summary>Contains encryption data for an Advanced Systems Format (ASF) file. This attribute corresponds to the Extended Content Encryption Object in the ASF header, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method creates the presentation descriptor and generates this attribute from the Extended Content Encryption Object header. The size of the blob equals the Data Size field. The byte array contained in the blob equals the Data field in the Extended Content Encryption object of the ASF header.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-contentencryptionex-encryption-data-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_LANGLIST">
            <summary>Specifies a list of language identifiers which specifies the languages contained in an Advanced Systems Format (ASF) file. This attribute corresponds to the Language List Object, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method creates the presentation descriptor and generates this attribute from the Language List Object header. The following table shows the format of the blob:</para>
            <para>| Language List Object field | Data type    | Size    | Description                            | |----------------------------|--------------|---------|----------------------------------------| | Language ID Records Count  | **DWORD**    | 4 bytes | Number of languages                    | | Language ID Records        | **BYTE**\[\] | Varies  | Array of language strings (see below). |</para>
            <para>The first **DWORD** is the number of languages, followed by an array of language identifier strings. Each string has the following format:</para>
            <para>| Language List Object field | Data type     | Size    | Description                                                                               | |----------------------------|---------------|---------|-------------------------------------------------------------------------------------------| | Language ID Length         | **DWORD**     | 4 bytes | The length of the string in bytes, including the size of the trailing **NULL** character. | | Language ID                | **WCHAR**\[\] | Varies  | A null-terminated string containing the RFC 1766 language name.                           |</para>
            <para>Each string is a language tag compliant with RFC 1766. To get the language tag for a particular stream in the ASF file, query the stream descriptor for the [**MF\_SD\_ASF\_EXTSTRMPROP\_LANGUAGE\_ID\_INDEX**](mf-sd-asf-extstrmprop-language-id-index-attribute.md) attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-langlist-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_LANGLIST_LEGACYORDER">
            <summary>Contains a list of RFC 1766 languages used in the current presentation.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors that were generated from the [ASF ContentInfo Object](asf-contentinfo-object.md) by a call to [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor). The format of the byte array is as follows:</para>
            <para>| Language List Object field | Data type    | Size    | Description                            | |----------------------------|--------------|---------|----------------------------------------| | Language ID Records Count  | **DWORD**    | 4 bytes | Number of languages                    | | Language ID Records        | **BYTE**\[\] | Varies  | Array of language strings (see below). |</para>
            <para>The first **DWORD** is the number of languages, followed by an array of language identifier strings. Each string has the following format:</para>
            <para>| Language List Object field | Data type     | Size    | Description                                                                               | |----------------------------|---------------|---------|-------------------------------------------------------------------------------------------| | Language ID Length         | **DWORD**     | 4 bytes | The length of the string in bytes, including the size of the trailing **NULL** character. | | Language ID                | **WCHAR**\[\] | Varies  | A null-terminated string containing the RFC 1766 language name.                           |</para>
            <para>Each string is a language tag compliant with RFC 1766. Use this attribute only for backward compatibility with the enumeration order of the [**IWMReaderAdvanced4**](/previous-versions/windows/desktop/api/wmsdkidl/nn-wmsdkidl-iwmreaderadvanced4) interface in the Windows Media Format SDK. The language strings are stored in a different order in the [**MF\_PD\_ASF\_LANGLIST**](mf-pd-asf-langlist-attribute.md) attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-langlist-legacyorder#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_MARKER">
            <summary>Specifies the markers in an Advanced Systems Format (ASF) file. This attribute corresponds to the Marker Object in the ASF header, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method creates the presentation descriptor and generates this attribute from the Marker Object. The following table shows the format of the blob:</para>
            <para>| Marker Object field | Data type    | Size    | Description       | |---------------------|--------------|---------|-------------------| | Markers Count       | **DWORD**    | 4 bytes | Number of markers | | Markers             | **BYTE**\[\] | Varies  | Array of markers  |</para>
            <para>The first **DWORD** is the number of markers, followed by an array of markers. Each marker has the following format:</para>
            <para>| Marker Object field       | Data type     | Size    | Description                                                                       | |---------------------------|---------------|---------|-----------------------------------------------------------------------------------| | Marker Description Length | **DWORD**     | 4 bytes | Size of the description string, in bytes, including the NULL character.           | | Marker Description        | **WCHAR**\[\] | Varies  | Null-terminated string that describes the marker.                                 | | Presentation Time         | **LONGLONG**  | 8 bytes | Presentation time of the marker, in 100-nanosecond units.                         | | Send Time                 | **LONGLONG**  | 8 bytes | Send time of the marker entry, in milliseconds.                                   | | Offset                    | **UINT64**    | 8 bytes | Offset, in bytes, into the Data Object that specifies the position of the market. |</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-marker-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_SCRIPT">
            <summary>Specifies a list of script commands and the parameters for an Advanced Systems Format (ASF) file. This attribute corresponds to the Script Command Object in the ASF header, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method creates the presentation descriptor and generates this attribute from the Script Command Object header. The following table shows the format of the blob:</para>
            <para>| Script Command Object field | Data type    | Size    | Description               | |-----------------------------|--------------|---------|---------------------------| | Commands Count              | **DWORD**    | 4 bytes | Number of script commands | | Command Type, Commands      | **BYTE**\[\] | Varies  | Array of script commands  |</para>
            <para>The first **DWORD** is the number of script commands, followed by an array of commands. Each script command has the following format:</para>
            <para>| Script Command Object field | Data type     | Size    | Description                                                              | |-----------------------------|---------------|---------|--------------------------------------------------------------------------| | Command Name Length         | **DWORD**     | 4 bytes | Size of the command string, in bytes, including the NULL character.      | | Command Name                | **WCHAR**\[\] | Varies  | Null-terminated string that contains the script command.                 | | Command Type Name Length    | **DWORD**     | 4 bytes | Size of the command type string, in bytes, including the NULL character. | | Command Type Name           | **WCHAR**\[\] | Varies  | Null-terminated string that contains the command type.                   | | Presentation Time           | **DWORD**     | 4 bytes | Presentation time of the command in milliseconds.                        |</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-script-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_CODECLIST">
            <summary>Contains information about the codecs and formats that were used to encode the content in an Advanced Systems Format (ASF) file. This attribute corresponds to the Codec List Object in the ASF header, defined in the ASF specification.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method creates the presentation descriptor and generates this attribute from the Codec List Object in the ASF header. An application that uses the [ASF Media Source](asf-media-source.md) can get this attribute by calling [**IMFMediaSource::CreatePresentationDescriptor**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-createpresentationdescriptor) and then getting the attribute from the presentation descriptor. The following table shows the layout of the attribute blob.</para>
            <para>| Codec List Object field | Data type    | Size    | Description                           | |-------------------------|--------------|---------|---------------------------------------| | Codec Entries Count     | **DWORD**    | 4 bytes | Number of codecs                      | | Codec Entries           | **BYTE**\[\] | Varies  | Array of codec information structures |</para>
            <para>The Code Entries field is an array of structures. The following table shows the format of each entry:</para>
            <para>| Codec List Object field | Data type | Size | Description | |-------------------------|-----------|------|-------------| </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-codeclist-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_METADATA_IS_VBR">
            <summary>Specifies whether an Advanced Systems Format (ASF) file uses variable bit rate (VBR) encoding.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. If the value is **TRUE**, the file was encoded using VBR. If the value is **FALSE** or the attribute is not present, the file does not use VBR encoding. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute and sets it on the presentation descriptor. > [!Note] > This attribute corresponds to the **IsVBR** attribute in the Windows Media Format SDK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-metadata-is-vbr-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_METADATA_V8_VBRPEAK">
            <summary>Specifies the highest momentary bit rate in a variable bit rate (VBR) Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute. > [!Note] > This attribute applies only to files created by version 8 of the Windows Media Format SDK. It corresponds to the **VBRPeak** attribute in the Windows Media Format SDK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-metadata-v8-vbrpeak-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_METADATA_V8_BUFFERAVERAGE">
            <summary>Specifies the average buffer size needed for a variable bit rate (VBR) Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute that applies to the presentation descriptor for ASF content. > [!Note] > This attribute applies only to files created by version 8 of the Windows Media Format SDK. It corresponds to the **BufferAverage** attribute in the Windows Media Format SDK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-metadata-v8-bufferaverage-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_METADATA_LEAKY_BUCKET_PAIRS">
            <summary>Specifies a list of bit rates and corresponding buffer windows for a variable bit rate (VBR) Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute that applies to the presentation descriptor for ASF content. The value of the attribute has the following format: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-metadata-leaky-bucket-pairs-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_DATA_START_OFFSET">
            <summary>Specifies the offset, in bytes, from the start of an Advanced Systems Format (ASF) file to the start of the first data packet.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-data-start-offset-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_DATA_LENGTH">
            <summary>Specifies the size, in bytes, of the data section of an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-data-length-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_ASF_EXTSTRMPROP_LANGUAGE_ID_INDEX">
            <summary>Specifies the language used by a stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to stream descriptors for ASF content. The value is an index into the language list contained in the [**MF\_PD\_ASF\_LANGLIST**](mf-pd-asf-langlist-attribute.md) attribute. This attribute corresponds to the Stream Language ID Index field in the Extended Stream Properties object. For more information, refer to the ASF specification. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata. The application can create the stream descriptor for the stream from the presentation descriptor by calling [**IMFPresentationDescriptor::GetStreamDescriptorByIndex**](/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex). You can also get the language tag by querying the stream descriptor for the [**MF\_SD\_LANGUAGE**](mf-sd-language-attribute.md) attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-asf-extstrmprop-language-id-index-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_ASF_EXTSTRMPROP_AVG_DATA_BITRATE">
            <summary>Specifies the average data bit rate, in bits per second, of a stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to stream descriptors for ASF content. It corresponds to the Data Bit Rate field in the Extended Stream Properties object, and defines the leak rate used in the "leaky bucket" model. For more information, refer to the ASF specification. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata. The application can create the stream descriptor for the stream from the presentation descriptor by calling [**IMFPresentationDescriptor::GetStreamDescriptorByIndex**](/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-asf-extstrmprop-avg-data-bitrate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_ASF_EXTSTRMPROP_AVG_BUFFERSIZE">
            <summary>Specifies the average buffer size, in bytes, needed for a stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to stream descriptors for ASF content. It corresponds to the Buffer Size field in the Extended Stream Properties object, and defines the bucket size used in the "leaky bucket" model. For more information, refer to the ASF specification. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata. The application can create the stream descriptor for the stream from the presentation descriptor by calling [**IMFPresentationDescriptor::GetStreamDescriptorByIndex**](/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-asf-extstrmprop-avg-buffersize-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_ASF_EXTSTRMPROP_MAX_DATA_BITRATE">
            <summary>Specifies the maximum data bit rate, in bits per second, of a stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to stream descriptors for ASF content. It corresponds to the Alternate Data Bit Rate field in the Extended Stream Properties object. For more information, refer to the ASF specification. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata. The application can create the stream descriptor for the stream from the presentation descriptor by calling [**IMFPresentationDescriptor::GetStreamDescriptorByIndex**](/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-asf-extstrmprop-max-data-bitrate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_ASF_EXTSTRMPROP_MAX_BUFFERSIZE">
            <summary>Specifies the maximum buffer size, in bytes, needed for a stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to stream descriptors for ASF content. It corresponds to the Alternate Buffer Size field in the Extended Stream Properties object. For more information, refer to the ASF specification. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata. The application can create the stream descriptor for the stream from the presentation descriptor by calling [**IMFPresentationDescriptor::GetStreamDescriptorByIndex**](/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-asf-extstrmprop-max-buffersize-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_ASF_STREAMBITRATES_BITRATE">
            <summary>Specifies the average bit rate, in bits per second, of a stream in an Advanced Systems Format (ASF) file. This attribute corresponds to the Stream Bitrate Properties Object defined in the ASF specification.</summary>
            <remarks>
            <para>The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute and sets it on the stream descriptor. The application can create the stream descriptor for the stream from the presentation descriptor by calling [**IMFPresentationDescriptor::GetStreamDescriptorByIndex**](/windows/desktop/api/mfidl/nf-mfidl-imfpresentationdescriptor-getstreamdescriptorbyindex). The attribute value equals the Average Bit Rate field in the Stream Bit Rate Properties object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-asf-streambitrates-bitrate-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SD_ASF_METADATA_DEVICE_CONFORMANCE_TEMPLATE">
            <summary>Specifies the device conformance template for a stream in an Advanced Systems Format (ASF) file.</summary>
            <remarks>
            <para>This attribute applies to stream descriptors for ASF content. For more information about device conformance templates, see the topic "Device Conformance Template Parameters" in the Windows Media Format SDK. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sd-asf-metadata-device-conformance-template-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_INFO_HAS_AUDIO">
            <summary>Specifies whether an Advanced Systems Format (ASF) file contains any audio streams.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. If the value is **TRUE**, the file has at least one audio stream. Otherwise, the file does not contain any audio streams. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-info-has-audio-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_INFO_HAS_VIDEO">
            <summary>Specifies whether an Advanced Systems Format (ASF) file contains at least one video stream.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. If the value is **TRUE**, the file has at least one video stream. Otherwise, the file does not contain any video streams. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-info-has-video-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_PD_ASF_INFO_HAS_NON_AUDIO_VIDEO">
            <summary>Specifies whether an Advanced Systems Format (ASF) file contains any streams that are not audio or video.</summary>
            <remarks>
            <para>This attribute applies to presentation descriptors for ASF content. If the value is **TRUE**, the file has at least one stream that is not audio or video. Examples include image streams, script commands, and custom arbitrary data. The [**IMFASFContentInfo::GeneratePresentationDescriptor**](/windows/desktop/api/wmcontainer/nf-wmcontainer-imfasfcontentinfo-generatepresentationdescriptor) method generates this attribute from the ASF metadata.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-pd-asf-info-has-non-audio-video-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ASFPROFILE_MINPACKETSIZE">
            <summary>Specifies the minimum packet size for an ASF file, in bytes.</summary>
            <remarks>
            <para>This attribute applies to ASF profile objects. To set this attribute, use the [**IMFASFProfile**](/windows/desktop/api/wmcontainer/nn-wmcontainer-imfasfprofile) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-asfprofile-minpacketsize-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_ASFPROFILE_MAXPACKETSIZE">
            <summary>Specifies the maximum packet size for an ASF file, in bytes.</summary>
            <remarks>
            <para>This attribute applies to ASF profile objects. To set this attribute, use the [**IMFASFProfile**](/windows/desktop/api/wmcontainer/nn-wmcontainer-imfasfprofile) interface. The GUID constant for this attribute is exported from mfuuid.lib.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-asfprofile-maxpacketsize-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.PInvoke.MF_ASFSTREAMCONFIG_LEAKYBUCKET1" -->
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.PInvoke.MF_ASFSTREAMCONFIG_LEAKYBUCKET2" -->
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_OUTPUT_MEDIA_TYPE_SET">
            <summary>Indicates that the output type has been set on the capture engine in response to IMFCaptureSink2::SetOutputType.</summary>
            <remarks>You can call [**IMFMediaEvent::GetStatus**](/windows/desktop/api/mfobjects/nf-mfobjects-imfasyncresult-getstatus) to find out if the operation was successful or not.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_CAMERA_STREAM_BLOCKED">
            <summary>Signals that video capture is being blocked by the driver.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-camera-stream-blocked">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_CAMERA_STREAM_UNBLOCKED">
            <summary>Signals that video capture is restored after being blocked.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-camera-stream-unblocked">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_D3D_MANAGER">
            <summary>Sets a pointer to the DXGI Device Manager on the capture engine.</summary>
            <remarks>The value of this attribute is a pointer to the [**IMFDXGIDeviceManager**](/windows/desktop/api/mfobjects/nn-mfobjects-imfdxgidevicemanager) interface. This attribute enables the capture engine to allocate video frames using DXGI surfaces, and to use hardware acceleration for decoding and video processing.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_RECORD_SINK_VIDEO_MAX_UNPROCESSED_SAMPLES">
            <summary>Sets the maximum number of unprocessed samples that can be buffered for processing in the record sink video path.</summary>
            <remarks>
            <para>To configure this attribute on the capture engine, add it to the *pAttributes* parameter when you call [**IMFCaptureEngine::Initialize**](/windows/desktop/api/mfcaptureengine/nf-mfcaptureengine-imfcaptureengine-initialize). The maximum value for this attribute is 17. Once the record has buffered the maximum number of unprocessed samples, specified by MF\_CAPTURE\_ENGINE\_RECORD\_SINK\_VIDEO\_MAX\_UNPROCESSED\_SAMPLES, it drops the frame rate by dropping samples.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-record-sink-video-max-unprocessed-samples#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_RECORD_SINK_AUDIO_MAX_UNPROCESSED_SAMPLES">
            <summary>Sets the maximum number of unprocessed samples that can be buffered for processing in the record sink audio path.</summary>
            <remarks>
            <para>To configure this attribute on the capture engine, add it to the *pAttributes* parameter when you call [**IMFCaptureEngine::Initialize**](/windows/desktop/api/mfcaptureengine/nf-mfcaptureengine-imfcaptureengine-initialize). The maximum value for this attribute is 100. Once the record has buffered the maximum number of unprocessed samples, specified by MF\_CAPTURE\_ENGINE\_RECORD\_SINK\_AUDIO\_MAX\_UNPROCESSED\_SAMPLES, it drops the frame rate by dropping samples.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-record-sink-audio-max-unprocessed-samples#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_RECORD_SINK_VIDEO_MAX_PROCESSED_SAMPLES">
            <summary>Sets the maximum number of processed samples that can be buffered in the record sink video path.</summary>
            <remarks>
            <para>To configure this attribute on the capture engine, add it to the *pAttributes* parameter when you call [**IMFCaptureEngine::Initialize**](/windows/desktop/api/mfcaptureengine/nf-mfcaptureengine-imfcaptureengine-initialize). The maximum value for this attribute is 17.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-record-sink-video-max-processed-samples#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_RECORD_SINK_AUDIO_MAX_PROCESSED_SAMPLES">
            <summary>Sets the maximum number of processed samples that can be buffered in the record sink audio path.</summary>
            <remarks>
            <para>To configure this attribute on the capture engine, add it to the *pAttributes* parameter when you call [**IMFCaptureEngine::Initialize**](/windows/desktop/api/mfcaptureengine/nf-mfcaptureengine-imfcaptureengine-initialize). The maximum value for this attribute is 100.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-record-sink-audio-max-processed-samples#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_USE_AUDIO_DEVICE_ONLY">
            <summary>Specifies whether the capture engine captures audio but not video.</summary>
            <remarks>If this attribute is **TRUE**, the capture engine does not select or use a video capture device. Set this attribute to **TRUE** if you want to capture audio without video. The default value is **FALSE**.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_USE_VIDEO_DEVICE_ONLY">
            <summary>Specifies whether the capture engine captures video but not audio.</summary>
            <remarks>If this attribute is **TRUE**, the capture engine does not select or use an audio capture device. Set this attribute to **TRUE** if you want to capture video without audio. The default value is **FALSE**.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_DISABLE_HARDWARE_TRANSFORMS">
            <summary>Disables the use of hardware-based Media Foundation transforms (MFTs) in the capture engine.</summary>
            <remarks>By default, the capture engine uses hardware decoders or encoders. To disable the use of hardware MFTs, set this attribute to **TRUE** when you create the capture engine.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_DISABLE_DXVA">
            <summary>Specifies whether the capture engine uses DirectX Video Acceleration (DXVA) for video decoding.</summary>
            <remarks>
            <para>This attribute applies if the following conditions are true: -   The capture engine decodes a compressed video stream from the capture device (for example, if the capture device outputs H.264 video). -   The video decoder supports hardware-accelerated decoding using DXVA. -   The application uses the [MF\_CAPTURE\_ENGINE\_D3D\_MANAGER](mf-capture-engine-d3d-manager.md) attribute to set the DXGI Device Manager on the capture engine. Otherwise, this attribute is ignored. This attribute enables the application to disable DXVA while still decoding to Direct3D surfaces. The default value of this attribute is **FALSE**, meaning that DXVA decoding is enabled when available.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-disable-dxva#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_MEDIASOURCE_CONFIG">
            <summary>Contains configuration properties for the capture source.</summary>
            <remarks>Currently, this attribute is ignored. In the future, it might be used to pass configuration properties to the media source.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_DECODER_MFT_FIELDOFUSE_UNLOCK_Attribute">
            <summary>Enables the capture engine to use a decoder that has field-of-use restrictions.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the [**IMFFieldOfUseMFTUnlock**](/windows/desktop/api/mfidl/nn-mfidl-imffieldofusemftunlock) interface, implemented by the caller. The caller's implementation of this interface is expected to perform a handshake with the decoder, as described in [Field of Use Restrictions](field-of-use-restrictions.md). Microsoft Media Foundation does not define the handshake—typically, it would involve some sort of cryptographic exchange. Internally, the capture engine sets the [**IMFFieldOfUseMFTUnlock**](/windows/desktop/api/mfidl/nn-mfidl-imffieldofusemftunlock) pointer on the decoder by setting the decoder's [MFT\_FIELDOFUSE\_UNLOCK\_Attribute](mft-fieldofuse-unlock-attribute.md) attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-decoder-mft-fieldofuse-unlock-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_ENCODER_MFT_FIELDOFUSE_UNLOCK_Attribute">
            <summary>Enables the capture engine to use an encoder that has field-of-use restrictions.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the [**IMFFieldOfUseMFTUnlock**](/windows/desktop/api/mfidl/nn-mfidl-imffieldofusemftunlock) interface, implemented by the caller. The caller's implementation of this interface is expected to perform a handshake with the encoder, as described in [Field of Use Restrictions](field-of-use-restrictions.md). Microsoft Media Foundation does not define the handshake—typically, it would involve some sort of cryptographic exchange. Internally, the capture engine sets the [**IMFFieldOfUseMFTUnlock**](/windows/desktop/api/mfidl/nn-mfidl-imffieldofusemftunlock) pointer on the encoder by setting the encoder's [MFT\_FIELDOFUSE\_UNLOCK\_Attribute](mft-fieldofuse-unlock-attribute.md) attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-encoder-mft-fieldofuse-unlock-attribute#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_ENABLE_CAMERA_STREAMSTATE_NOTIFICATION">
            <summary>Indicates whether stream state notifications should be enabled.</summary>
            <remarks>A non-zero value specifies that notifications should be enabled. If the attribute is not present or if the value of the attribute is 0, notifications are not enabled.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_CAPTURE_ENGINE_EVENT_GENERATOR_GUID">
            <summary>Identifies the component that generated a capture event.</summary>
            <remarks>
            <para>This attribute appears on some events from the capture engine. To get this attribute, call [**IMFAttributes::GetGUID**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-getguid) on the event object. The event object is passed to the application through the [**IMFCaptureEngineOnEventCallback::OnEvent**](/windows/desktop/api/mfcaptureengine/nf-mfcaptureengine-imfcaptureengineoneventcallback-onevent) method. The value is an interface identifier for the component that generated the event. For example, the value **IID\_IMFCapturePreviewSink** indicates the preview sink ([**IMFCapturePreviewSink**](/windows/desktop/api/mfcaptureengine/nn-mfcaptureengine-imfcapturepreviewsink)). Not every capture event contains this attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-capture-engine-event-generator-guid#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D_RESOURCE_VERSION">
            <summary>Specifies the Direct3D version of the resources stored in the data stream associated with the media type.</summary>
            <remarks>The value of this attribute corresponds to a member of the [MF_MT_D3D_RESOURCE_VERSION_ENUM](/windows/win32/api/mfd3d12/ne-mfd3d12-mf_mt_d3d_resource_version_enum) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_CPU_READBACK">
            <summary>Indicates whether CPU access is required for the associated Direct3D resources.</summary>
            <remarks>The default value of this attribute is 0 (FALSE).</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_TEXTURE_LAYOUT">
            <summary>Indicates the texture layout options that were used to create the associated Direct3D resources.</summary>
            <remarks>The value of this attribute corresponds to a member of the [D3D12_TEXTURE_LAYOUT](/windows/win32/api/d3d12/ne-d3d12-d3d12_texture_layout) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET">
            <summary>Indicates whether a render target view can be created for the Direct3D resources in the stream associated with the media type.</summary>
            <remarks>The value of this attribute corresponds to the D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET member of the [D3D12_RESOURCE_FLAGS](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_flags) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL">
            <summary>Indicates whether depth stencil view can be created for the Direct3D resources in the stream associated with the media type.</summary>
            <remarks>The value of this attribute corresponds to the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL member of the [D3D12_RESOURCE_FLAGS](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_flags) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS">
            <summary>Indicates whether an unordered access view can be created for the Direct3D resources in the stream associated with the media type.</summary>
            <remarks>The value of this attribute corresponds to the D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS member of the [D3D12_RESOURCE_FLAGS](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_flags) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE">
            <summary>Indicates whether shader resource view creation is disallowed for the Direct3D resources in the stream associated with the media type.</summary>
            <remarks>The value of this attribute corresponds to the D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE member of the [D3D12_RESOURCE_FLAGS](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_flags) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER">
            <summary>Indicates whether the resources in the stream can be used for cross-adapter data.</summary>
            <remarks>The value of this attribute corresponds to the D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER member of the [D3D12_RESOURCE_FLAGS](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_flags) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MT_D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS">
            <summary>Indicates whether the Direct3D resources in the stream can be simultaneously accessed by multiple different command queues.</summary>
            <remarks>The value of this attribute corresponds to the D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS member of the [D3D12_RESOURCE_FLAGS](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_flags) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D12_HEAP_FLAGS">
            <summary>Contains a value specifying the heap options used for the Direct3D resources in the stream.</summary>
            <remarks>The value of this attribute is a bitwise OR combination of values from the [D3D12_HEAP_FLAGS](/windows/win32/api/d3d12/ne-d3d12-d3d12_heap_flags) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D12_HEAP_TYPE">
            <summary>Contains a value specifying the type of heap used for the Direct3D resources in the stream.</summary>
            <remarks>The value of this attribute is a bitwise OR combination of values from the [D3D12_HEAP_TYPE](/windows/win32/api/d3d12/ne-d3d12-d3d12_heap_type) enumeration.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SA_D3D12_CLEAR_VALUE">
            <summary>Contains a blob with the information used to optimize clear operations for the Direct3D resources in the stream.</summary>
            <remarks>The blob contained in this attribute is a [D3D12_CLEAR_VALUE](/windows/win32/api/d3d12/ns-d3d12-d3d12_clear_value) structure.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MSE_CALLBACK">
            <summary>Contains a pointer to the applications callback interface for the IMFMediaSourceExtensionNotify.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mse-callback">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MSE_ACTIVELIST_CALLBACK">
            <summary>Contains a pointer to the applications callback interface for the IMFBufferListNotify interface for the active buffer list.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mse-activelist-callback">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MSE_BUFFERLIST_CALLBACK">
            <summary>Contains a pointer to the applications callback interface for the IMFBufferListNotify.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mse-bufferlist-callback">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_NEEDKEY_CALLBACK">
            <summary>Attribute which is passed in the IMFMediaEngineNeedKeyNotify to the media engine on creation.</summary>
            <remarks>The value of this attribute is a pointer to the [**IMFMediaEngineNeedKeyNotify**](/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaengineneedkeynotify) interface, implemented by the application.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_CALLBACK">
            <summary>Contains a pointer to the callback interface for the Media Engine.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the [**IMFMediaEngineNotify**](/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaenginenotify) interface, implemented by the application. This attribute is used with the [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance) method to initialize the Media Engine. The attribute is required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-callback#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_DXGI_MANAGER">
            <summary>Sets the Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager on the Media Engine.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the [**IMFDXGIDeviceManager**](/windows/desktop/api/mfobjects/nn-mfobjects-imfdxgidevicemanager) interface. In frame-server mode, this attribute enables the Media Engine to use hardware acceleration for video decoding and video processing. If the attribute is not set, the Media Engine uses software decoding and processing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-dxgi-manager#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_EXTENSION">
            <summary>Contains a pointer to the IMFMediaEngineExtension interface.</summary>
            <remarks>
            <para>This attribute is used with the [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance) method to initialize the Media Engine. This attribute is optional. Use it to provide an object that implements the [**IMFMediaEngineExtension**](/windows/desktop/api/mfmediaengine/nn-mfmediaengine-imfmediaengineextension) interface. This interface enables the application to load custom media resources.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-extension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_PLAYBACK_HWND">
            <summary>Sets a handle to a video playback window for the Media Engine.</summary>
            <remarks>This attribute is used with the [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance) method to initialize the Media Engine.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_OPM_HWND">
            <summary>Specifies a window for the Media Engine to apply Output Protection Manager (OPM) protections.</summary>
            <remarks>
            <para>This attribute is used with the [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance) method to initialize the Media Engine. To enable OPM protections for video playback, the application must do one of the following: -   Set the [MF\_MEDIA\_ENGINE\_PLAYBACK\_HWND](mf-media-engine-playback-hwnd.md) attribute when creating the Media Engine. -   Set the MF\_MEDIA\_ENGINE\_OPM\_HWND attribute when creating the Media Engine. -   Call [**IMFMediaEngineProtectedContent::SetOPMWindow**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineprotectedcontent-setopmwindow) at any point after creating the Media Engine, but before protected content is displayed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-opm-hwnd#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_PLAYBACK_VISUAL">
            <summary>Sets a Microsoft DirectComposition visual as the playback region for the Media Engine.</summary>
            <remarks>
            <para>For more information on DirectComposition, see [DirectComposition](../directcomp/directcomposition-portal.md) and [**IDCompositionVisual**](/windows/win32/api/dcomp/nn-dcomp-idcompositionvisual). This attribute is used with the [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance) method to initialize the Media Engine.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-playback-visual#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_COREWINDOW">
            <summary>Describes the core window attribute and provides the attribute's data type, remarks, requirements, and related articles.</summary>
            <remarks>For information more information see [**ICoreWindow interface**](/uwp/api/Windows.UI.Core.ICoreWindow).</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_VIDEO_OUTPUT_FORMAT">
            <summary>Sets the render-target format for the Media Engine.</summary>
            <remarks>Set this attribute if you create the Media Engine in frame-server mode. For more information, see [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance). The value of the attribute is a [DXGI\_FORMAT](../direct3d9/d3dformat.md) value.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_CONTENT_PROTECTION_FLAGS">
            <summary>Specifies whether the Media Engine will play protected content.</summary>
            <remarks>The value of this attribute is a bitwise **OR** of flags from the [**MF\_MEDIA\_ENGINE\_PROTECTION\_FLAGS**](/windows/desktop/api/mfmediaengine/ne-mfmediaengine-mf_media_engine_protection_flags) enumeration. To enable playback of protected content, set the **MF\_MEDIA\_ENGINE\_ENABLE\_PROTECTED\_CONTENT** flag.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_CONTENT_PROTECTION_MANAGER">
            <summary>Enables the Media Engine to play protected content.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the [**IMFContentProtectionManager**](/windows/desktop/api/mfidl/nn-mfidl-imfcontentprotectionmanager) interface. The caller must implement the interface. This attribute can be one of the attributes passed to [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance). It is required if protected content is to be played.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-content-protection-manager#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_AUDIO_ENDPOINT_ROLE">
            <summary>Specifies the device role for the audio stream.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**ERole**](/windows/win32/api/mmdeviceapi/ne-mmdeviceapi-erole) enumeration. This attribute is used with the [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance) method to initialize the Media Engine. The attribute is optional.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-audio-endpoint-role#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_AUDIO_CATEGORY">
            <summary>Specifies the category of the audio stream.</summary>
            <remarks>
            <para>The value of this attribute is a member of the [**AUDIO\_STREAM\_CATEGORY**](/windows/win32/api/audiosessiontypes/ne-audiosessiontypes-audio_stream_category) enumeration. This attribute is used with the [**IMFMediaEngineClassFactory::CreateInstance**](/windows/desktop/api/mfmediaengine/nf-mfmediaengine-imfmediaengineclassfactory-createinstance) method to initialize the Media Engine. The attribute is optional.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-audio-category#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_STREAM_CONTAINS_ALPHA_CHANNEL">
            <summary>Specifies if the stream contains an alpha channel.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-stream-contains-alpha-channel">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_BROWSER_COMPATIBILITY_MODE">
            <summary>Specifies the browser compatibility mode.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-browser-compatibility-mode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_SOURCE_RESOLVER_CONFIG_STORE">
            <summary>Gets the source resolver config store.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-source-resolver-config-store">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MEDIA_ENGINE_TRACK_ID">
            <summary>Specifies the track id.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-media-engine-track-id">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MP2DLNA_USE_MMCSS">
            <summary>Specifies whether the Digital Living Network Alliance (DLNA) media sink uses the Multimedia Class Scheduler Service (MMCSS).</summary>
            <remarks>
            <para>To set this attribute on the DLNA media sink, query the media sink for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. Set the attribute before streaming begins. If this attribute is **TRUE**, the DLNA media sink registers itself with MMCSS.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mp2dlna-use-mmcss#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MP2DLNA_VIDEO_BIT_RATE">
            <summary>Specifies the maximum video bit rate for the Digital Living Network Alliance (DLNA) media sink.</summary>
            <remarks>To set this attribute on the DLNA media sink, query the media sink for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. Set the attribute before streaming begins.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MP2DLNA_AUDIO_BIT_RATE">
            <summary>Specifies the maximum audio bit rate for the Digital Living Network Alliance (DLNA) media sink.</summary>
            <remarks>To set this attribute on the DLNA media sink, query the media sink for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. Set the attribute before streaming begins.</remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MP2DLNA_ENCODE_QUALITY">
            <summary>Specifies the encoding quality for the Digital Living Network Alliance (DLNA) media sink.</summary>
            <remarks>
            <para>Higher numbers indicate better encoding quality. Lower numbers indicate faster encoding, but lower encoding quality. The default value is 9. To set this attribute on the DLNA media sink, query the media sink for the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) interface. Set the attribute before streaming begins.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mp2dlna-encode-quality#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_MP2DLNA_STATISTICS">
            <summary>Gets statistics from the Digital Living Network Alliance (DLNA) media sink.</summary>
            <remarks>
            <para>During streaming, the DLNA media sink updates this attribute with statistics about the encoding and multiplexing of the MPEG-2 streams. The application can query this attribute at any time to get the latest values. Setting this attribute on the DLNA media sink has no effect.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-mp2dlna-statistics#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_ASYNC_CALLBACK">
            <summary>Contains a pointer to the applications callback interface for the Source Reader.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the application's [**IMFSourceReaderCallback**](/windows/desktop/api/mfreadwrite/nn-mfreadwrite-imfsourcereadercallback) interface. Use this attribute with the following functions: -   [**MFCreateSourceReaderFromByteStream**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrombytestream) -   [**MFCreateSourceReaderFromMediaSource**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrommediasource) -   [**MFCreateSourceReaderFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfromurl)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-async-callback#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_D3D_MANAGER">
            <summary>Contains a pointer to the Microsoft Direct3D Device Manager for the Source Reader.</summary>
            <remarks>
            <para>The value of this attribute can be a pointer to the [**IDirect3DDeviceManager9**](/windows/desktop/api/dxva2api/nn-dxva2api-idirect3ddevicemanager9) interface or a [**IMFDXGIDeviceManager**](/windows/desktop/api/mfobjects/nn-mfobjects-imfdxgidevicemanager). Use this attribute to provide a Direct3D device for any video decoders loaded by the source reader. If you set this attribute and the decoder supports Microsoft DirectX Video Acceleration (DXVA), the source reader uses the Direct3D device to allocate video buffers. These buffers are compatible with the DXVA 2 video processor. (See [DXVA Video Processing](dxva-video-processing.md).) Use this attribute with the following functions: -   [**MFCreateSourceReaderFromByteStream**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrombytestream) -   [**MFCreateSourceReaderFromMediaSource**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrommediasource) -   [**MFCreateSourceReaderFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfromurl) Typically you would set this attribute if you are using the source reader to get decoded video frames and using Direct3D to display the frames. Setting this attribute enables the decoder to use DXVA. You would not set this attribute if: -   You are using the source reader to process audio only and not video. -   You are getting compressed video from the source reader. In that case, the source reader does not create a decoder.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-d3d-manager#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_DISABLE_DXVA">
            <summary>Specifies whether the Source Reader enables DirectX Video Acceleration (DXVA) on the video decoder.</summary>
            <remarks>
            <para>This attribute applies if the following conditions are true: -   The source reader decodes a video stream. -   The video decoder supports DXVA decoding. -   The application uses the [MF\_SOURCE\_READER\_D3D\_MANAGER](mf-source-reader-d3d-manager.md) attribute to set the [Direct3D Device Manager](direct3d-device-manager.md) on the source reader. This attribute enables the application to disable DXVA while still decoding to Direct3D surfaces. By default, the source reader uses the [Direct3D Device Manager](direct3d-device-manager.md) for two purposes: -   To enable DXVA decoding in the video decoder. -   To allocate Direct3D surfaces for the video samples. If the value of the MF\_SOURCE\_READER\_DISABLE\_DXVA attribute is **TRUE**, the source reader does disables DXVA decoding, although it still uses the [Direct3D Device Manager](direct3d-device-manager.md) to allocate Direct3D surfaces. If the [MF\_SOURCE\_READER\_D3D\_MANAGER](mf-source-reader-d3d-manager.md) attribute is not set, the MF\_SOURCE\_READER\_DISABLE\_DXVA attribute is ignored. The default value of this attribute is **FALSE**, meaning that DXVA decoding is enabled when available.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-disable-dxva#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_MEDIASOURCE_CONFIG">
            <summary>Contains configuration properties for the Source Reader.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the **IPropertyStore** interface of a property store. You can use this attribute to pass configuration properties to the media source. Use this attribute with the following functions: -   [**MFCreateSourceReaderFromByteStream**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrombytestream) -   [**MFCreateSourceReaderFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfromurl) Internally, the source reader passes the **IPropertyStore** pointer to the source resolver. For more information, see [Configuring a Media Source](configuring-a-media-source.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-mediasource-config#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_MEDIASOURCE_CHARACTERISTICS">
            <summary>Gets the characteristics of the media source from the Source Reader.</summary>
            <remarks>
            <para>To get this attribute, call the [**IMFSourceReader::GetPresentationAttribute**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-getpresentationattribute) method on the source reader. Set the *dwStreamIndex* parameter to **MF\_SOURCE\_READER\_MEDIASOURCE** and the *guidAttribute* parameter to MF\_SOURCE\_READER\_MEDIASOURCE\_CHARACTERISTICS. The **PROPVARIANT** type for this attribute is **VT\_UI4**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-mediasource-characteristics#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_ENABLE_VIDEO_PROCESSING">
            <summary>Enables video processing by the Source Reader.</summary>
            <remarks>
            <para>If this attribute is **TRUE** (nonzero), the source reader can perform the following limited video processing on uncompressed video frames: -   Conversion from YUV to RGB-32. -   Deinterlacing. These operations are performed in software, and are not optimized for playback. This feature is intended for applications that process a small number of frames—for example, to create a video thumbnail—or applications that do not decode frames in real time. The deinterlace operation interpolates data from a single field, so it is lossy. Avoid this setting if you are using Direct3D to display the video frames, because the GPU generally provides better video processing capabilities. If this attribute is **TRUE**, the following attributes must be **FALSE**: -   [MF\_SOURCE\_READER\_D3D\_MANAGER](mf-source-reader-d3d-manager.md) -   [MF\_READWRITE\_DISABLE\_CONVERTERS](mf-readwrite-disable-converters.md)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-enable-video-processing#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_ENABLE_ADVANCED_VIDEO_PROCESSING">
            <summary>Enables advanced video processing by the Source Reader, including color space conversion, deinterlacing, video resizing, and frame-rate conversion.</summary>
            <remarks>
            <para>If this attribute is **TRUE**, the Source Reader can insert a video processor into the processing pipeline, which enables the following types of format conversion: -   Color space conversion (YUV to RGB-32) -   Deinterlacing -   Video resizing -   Frame-rate conversion If this attribute is **TRUE**, the [MF\_READWRITE\_DISABLE\_CONVERTERS](mf-readwrite-disable-converters.md) attribute must be **FALSE**. The Source Reader looks for video processors that are registered in the **MFT\_CATEGORY\_VIDEO\_PROCESSOR** category, including MFTs that are registered for the local process. (See [**MFTRegisterLocal**](/windows/desktop/api/mfapi/nf-mfapi-mftregisterlocal) for more information about local registration of MFTs.) The Source Reader uses the Transcode Video Processor (XVP) if no other suitable video processor is found. The application specifies the desired output type by calling [**IMFSourceReader::SetCurrentMediaType**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsourcereader-setcurrentmediatype). When the Source Reader configures the video processor, it attempts to match the following attributes of the output type: -   Frame rate ([MF\_MT\_FRAME\_RATE](mf-mt-frame-rate-attribute.md)) -   Frame size ([MF\_MT\_FRAME\_SIZE](mf-mt-frame-size-attribute.md)) -   Interlace mode ([MF\_MT\_INTERLACE\_MODE](mf-mt-interlace-mode-attribute.md)) -   Pixel aspect ratio ([MF\_MT\_PIXEL\_ASPECT\_RATIO](mf-mt-pixel-aspect-ratio-attribute.md)) -   Subtype ([MF\_MT\_SUBTYPE](mf-mt-subtype-attribute.md)) This attribute is similar to the [MF\_SOURCE\_READER\_ENABLE\_VIDEO\_PROCESSING](mf-source-reader-enable-video-processing.md) attribute, but offers the following advantages: -   A greater range of format conversions is supported. -   Applications can register their own converters. -   Some conversions can be performed in hardware using the GPU.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-enable-advanced-video-processing#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_DISABLE_CAMERA_PLUGINS">
            <summary>Disables the use of post-processing camera plug-ins by the Source Reader.</summary>
            <remarks>
            <para>This attribute applies when the Source Reader is used with a video capture source. If this attribute is **TRUE**, it prevents the Source Reader from loading any post-processing plug-ins that the camera might provide. Otherwise, by default the Source Reader will load them. The default value of this attribute is **FALSE**. Set the attribute when you create the source reader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-disable-camera-plugins#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_DISCONNECT_MEDIASOURCE_ON_SHUTDOWN">
            <summary>Specifies whether the Source Reader shuts down the media source.</summary>
            <remarks>
            <para>This attribute applies only when the application creates the source reader from an existing media source object, either by calling [**MFCreateSourceReaderFromMediaSource**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrommediasource) or by calling [**IMFReadWriteClassFactory::CreateInstanceFromObject**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfreadwriteclassfactory-createinstancefromobject). By default, when the application releases the source reader, the source reader shuts down the media source by calling [**IMFMediaSource::Shutdown**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-shutdown) on the media source. At that point, the application can no longer use the media source. However, if the MF\_SOURCE\_READER\_DISCONNECT\_MEDIASOURCE\_ON\_SHUTDOWN attribute is **TRUE**, the source reader does not shut down the media source. That means the application can still use the media source after the application releases the source reader. It also means the application is responsible for calling [**IMFMediaSource::Shutdown**](/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-shutdown) on the media source. If the application creates the source reader from a URL or from a byte stream, the source reader always shuts down the media source. The MF\_SOURCE\_READER\_DISCONNECT\_MEDIASOURCE\_ON\_SHUTDOWN attribute is ignored in this case.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-disconnect-mediasource-on-shutdown#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SOURCE_READER_ENABLE_TRANSCODE_ONLY_TRANSFORMS">
            <summary>Enables the Source Reader to use Media Foundation transforms (MFTs) that are optimized for transcoding.</summary>
            <remarks>
            <para>Some MFTs, particularly decoders, are optimized for transcoding rather than playback. By default, the Source Reader will not load such transforms. Set this attribute to **TRUE** if you want to use transcoding MFTs with the Source Reader. An application might set this attribute if it does not process the data in real time (for transcoding or similar scenarios). Otherwise, for real-time playback, use the default behavior. Internally, this attribute causes the Source Reader to include the **MFT\_ENUM\_FLAG\_TRANSCODE\_ONLY** flag when it calls [**MFTEnumEx**](/windows/desktop/api/mfapi/nf-mfapi-mftenumex).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-source-reader-enable-transcode-only-transforms#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SINK_WRITER_ASYNC_CALLBACK">
            <summary>Contains a pointer to the applications callback interface for the sink writer.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the application's [**IMFSinkWriterCallback**](/windows/desktop/api/mfreadwrite/nn-mfreadwrite-imfsinkwritercallback) interface. Use this attribute with the following functions: -   [**MFCreateSinkWriterFromMediaSink**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfrommediasink) -   [**MFCreateSinkWriterFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfromurl)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sink-writer-async-callback#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SINK_WRITER_DISABLE_THROTTLING">
            <summary>Specifies whether the sink writer limits the rate of incoming data.</summary>
            <remarks>
            <para>By default, the sink writer's [**IMFSinkWriter::WriteSample**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-imfsinkwriter-writesample) method limits the data rate by blocking the calling thread. This prevents the application from delivering samples too quickly. To disable this behavior, set the MF\_SINK\_WRITER\_DISABLE\_THROTTLING attribute to **TRUE** when you create the sink writer. Use this attribute with the following functions: -   [**MFCreateSinkWriterFromMediaSink**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfrommediasink) -   [**MFCreateSinkWriterFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfromurl)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sink-writer-disable-throttling#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SINK_WRITER_D3D_MANAGER">
            <summary>Contains a pointer to the DXGI Device Manager for the Sink Writer.</summary>
            <remarks>
            <para>The value of this attribute is a pointer to the [**IMFDXGIDeviceManager**](/windows/desktop/api/mfobjects/nn-mfobjects-imfdxgidevicemanager) interface. Use this attribute to provide a Direct3D device for any video encoders or media sinks loaded by the Sink Writer. Use this attribute with the following functions: -   [**MFCreateSinkWriterFromMediaSink**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfrommediasink) -   [**MFCreateSinkWriterFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfromurl)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sink-writer-d3d-manager#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_SINK_WRITER_ENCODER_CONFIG">
            <summary>Contains a pointer to a property store with encoding properties.</summary>
            <remarks>
            <para>The value of this attribute is an [**IPropertyStore**](/windows/win32/api/propsys/nn-propsys-ipropertystore) pointer. This attribute enables an application to set encoding properties when using the [Sink Writer](sink-writer.md). To set this attribute, perform the following steps: 1.  Call [**PSCreateMemoryPropertyStore**](/windows/win32/api/propsys/nf-propsys-pscreatememorypropertystore) to create a new property store. 2.  Set encoder properties on the property store. The available properties depends on the encoder. For more information, see [Codec Objects](codecobjects.md). 3.  Call [**MFCreateAttributes**](/windows/desktop/api/mfapi/nf-mfapi-mfcreateattributes) to create a new attribute store. 4.  Call [**IMFAttributes::SetUnknown**](/windows/desktop/api/mfobjects/nf-mfobjects-imfattributes-setunknown) to set the [**IPropertyStore**](/windows/win32/api/propsys/nn-propsys-ipropertystore) pointer on the attribute store. 5.  Create a new instance of the Sink Writer. Pass the [**IMFAttributes**](/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes) pointer to the creation function. For more information, see [Sink Writer Attributes](sink-writer-attributes.md). The Sink Writer sets the properties on the encoder before setting the media types.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-sink-writer-encoder-config#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_READWRITE_DISABLE_CONVERTERS">
            <summary>Enables or disables format conversions by the source reader or sink writer.</summary>
            <remarks>
            <para>By default, the source reader and sink writer can perform some format conversions on uncompressed audio and video streams. To disable this behavior, set this attribute to **TRUE** when you create the source reader or sink writer. Use this attribute with the following functions: -   [**MFCreateSourceReaderFromByteStream**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrombytestream) -   [**MFCreateSourceReaderFromMediaSource**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrommediasource) -   [**MFCreateSourceReaderFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfromurl) -   [**MFCreateSinkWriterFromMediaSink**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfrommediasink) -   [**MFCreateSinkWriterFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfromurl)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-readwrite-disable-converters#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_READWRITE_ENABLE_HARDWARE_TRANSFORMS">
            <summary>Enables the source reader or sink writer to use hardware-based Media Foundation transforms (MFTs).</summary>
            <remarks>
            <para>By default, the source reader and sink writer do not use hardware decoders or encoders. To enable the use of hardware MFTs, set this attribute to **TRUE** when you create the source reader or sink writer. Use this attribute with the following functions: -   [**MFCreateSourceReaderFromByteStream**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrombytestream) -   [**MFCreateSourceReaderFromMediaSource**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrommediasource) -   [**MFCreateSourceReaderFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfromurl) -   [**MFCreateSinkWriterFromMediaSink**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfrommediasink) -   [**MFCreateSinkWriterFromURL**](/windows/desktop/api/mfreadwrite/nf-mfreadwrite-mfcreatesinkwriterfromurl) There is one exception to the default behavior. The source reader and sink writer automatically use MFTs that are registered locally in the caller's process. To register an MFT locally, call [**MFTRegisterLocal**](/windows/desktop/api/mfapi/nf-mfapi-mftregisterlocal) or [**MFTRegisterLocalByCLSID**](/windows/desktop/api/mfapi/nf-mfapi-mftregisterlocalbyclsid). Hardware MFTs that are registered locally are used even if the **MF\_READWRITE\_ENABLE\_HARDWARE\_TRANSFORMS** attribute is not set. This attribute does not affect hardware-accelerated video decoding that uses DirectX Video Acceleration (DXVA). To enable DXVA decoding in the source reader, set the [MF\_SOURCE\_READER\_D3D\_MANAGER](mf-source-reader-d3d-manager.md) attribute. If this attribute is **TRUE**, do not set the [MF\_READWRITE\_DISABLE\_CONVERTERS](mf-readwrite-disable-converters.md) attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-readwrite-enable-hardware-transforms#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_READWRITE_MMCSS_CLASS">
            <summary>Specifies a Multimedia Class Scheduler Service (MMCSS) class for the Source Reader or Sink Writer.</summary>
            <remarks>
            <para>Optionally set this attribute when you create an instance of the [Source Reader](source-reader.md) or [Sink Writer](sink-writer.md). The value of the attribute must be a valid MMCSS class name. If this attribute is set, the Source Reader or Sink Writer registers all of its threads with the specified MMCSS class. The MMCSS ensures that data processing in the Source Reader or Sink Writer has priority over other system tasks. To specify the base priority, set the [MF\_READWRITE\_MMCSS\_PRIORITY](mf-readwrite-mmcss-priority.md) attribute. If that attribute is not set, the base priority is zero. For audio-processing threads, the [MF\_READWRITE\_MMCSS\_CLASS\_AUDIO](mf-readwrite-mmcss-class-audio.md) attribute (if set) overrides this attribute.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-readwrite-mmcss-class#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_READWRITE_MMCSS_PRIORITY">
            <summary>Sets the base thread priority for the Source Reader or Sink Writer.</summary>
            <remarks>
            <para>Optionally set this attribute when you create an instance of the [Source Reader](source-reader.md) or [Sink Writer](sink-writer.md). If you set this attribute, also set the [MF\_READWRITE\_MMCSS\_CLASS](mf-readwrite-mmcss-class.md) attribute. Otherwise, this attribute is ignored. When the Source Reader or Sink Writer registers threads with the [Multimedia Class Scheduler Service](../procthread/multimedia-class-scheduler-service.md), the value of this attribute specifies the base thread priority. If this attribute is not set, the default value is zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-readwrite-mmcss-priority#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_READWRITE_MMCSS_CLASS_AUDIO">
            <summary>Specifies a Multimedia Class Scheduler Service (MMCSS) class for audio-processing threads in the Source Reader or Sink Writer.</summary>
            <remarks>
            <para>Optionally set this attribute when you create an instance of the [Source Reader](source-reader.md) or [Sink Writer](sink-writer.md). The value of the attribute must be a valid MMCSS class name. If this attribute is set, the Source Reader or Sink Writer registers its audio-processing threads with the specified MMCSS class. The MMCSS ensures that data processing in the Source Reader or Sink Writer has priority over other system tasks. To specify the base priority for audio threads, set the [MF\_READWRITE\_MMCSS\_PRIORITY\_AUDIO](mf-readwrite-mmcss-priority-audio.md) attribute. If that attribute is not set, the base priority for audio threads is zero. This attribute overrides the [MF\_READWRITE\_MMCSS\_CLASS](mf-readwrite-mmcss-class.md) attribute for audio-processing threads. If neither attribute is set, audio threads are not registered with MCSS. For most applications, audio glitching is much more noticeable to the user than video glitching, and therefore less acceptable. For this reason, an application should typically set MF\_READWRITE\_MMCSS\_CLASS\_AUDIO to a higher-priority MMCSS class than [MF\_READWRITE\_MMCSS\_CLASS](mf-readwrite-mmcss-class.md). This ensures that audio processing is given higher priority than other tasks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-readwrite-mmcss-class-audio#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_READWRITE_MMCSS_PRIORITY_AUDIO">
            <summary>Sets the base priority for audio-processing threads created by the Source Reader or Sink Writer.</summary>
            <remarks>
            <para>Optionally set this attribute when you create an instance of the [Source Reader](source-reader.md) or [Sink Writer](sink-writer.md). If you set this attribute, also set the [MF\_READWRITE\_MMCSS\_CLASS\_AUDIO](mf-readwrite-mmcss-class-audio.md) attribute. Otherwise, this attribute is ignored. When the Source Reader or Sink Writer registers audio-processing threads with the [Multimedia Class Scheduler Service](../procthread/multimedia-class-scheduler-service.md), the value of this attribute specifies the base thread priority. If this attribute is not set, the default value is zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-readwrite-mmcss-priority-audio#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_READWRITE_D3D_OPTIONAL">
            <summary>Specifies whether the application requires Microsoft Direct3D support in the Source Reader or Sink Writer.</summary>
            <remarks>
            <para>This attribute applies only if the application enables Direct3D support using the [MF\_SOURCE\_READER\_D3D\_MANAGER](mf-source-reader-d3d-manager.md) or [MF\_SINK\_WRITER\_D3D\_MANAGER](mf-sink-writer-d3d-manager.md) attribute. If the application enables Direct3D support, the Source Reader and Sink Writer will both try to allocate Direct3D surfaces for video. If this fails, and the MF\_READWRITE\_D3D\_OPTIONAL attribute is **TRUE**, the Source Reader/Sink Writer will fall back to allocating video surfaces in system memory. Otherwise, if Direct3D surfaces cannot be allocated and MF\_READWRITE\_D3D\_OPTIONAL is **FALSE**, an error occurs during processing. If the application does not enable Direct3D support, the Source Reader/Sink Writer uses system memory, and ignores the value of MF\_READWRITE\_D3D\_OPTIONAL. This attribute is optional. The default value is **FALSE**. Set the attribute when you create the Source Reader or Sink Writer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-readwrite-d3d-optional#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_DEVSOURCE_ATTRIBUTE_ENABLE_MS_CAMERA_EFFECTS">
            <summary>Specifies whether Windows Camera Effects are enabled for a capture device.</summary>
            <remarks>
            <para>This attribute should be set during camera creation. If the value is non-zero, Windows Camera Effects are enabled. The following requirements must be met before this feature can be enabled: - An NPU based Video Effects Accelerator is available on the system. - A camera producing streams consumable by the NPU is available on the system. - The camera for which effects are being enabled is front-facing. If any of these requirements are not met, then the specified attribute value is ignored and Windows Camera Effects are not enabled for the camera.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-devsource-attribute-enable-ms-camera-effects#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_VIRTUALCAMERA_ASSOCIATED_CAMERA_SOURCES">
            <summary>Contains an IMFCollection object containing the IMFMediaSourceEx representing the physical cameras associated with a virtual camera.</summary>
            <remarks>
            <para>Request for platform to populate this attribute by setting the [MF_VIRTUALCAMERA_PROVIDE_ASSOCIATED_CAMERA_SOURCES](mf-virtualcamera-provide-associated-camera-sources.md) attribute to a non-zero value. The platform will set this attribute on the [IMFActivate](/windows/win32/api/mfobjects/nn-mfobjects-imfactivate) associated with the virtual camera prior to calling the [IMFActivate::ActivateObject](/windows/win32/api/mfobjects/nf-mfobjects-imfactivate-activateobject) method. The resulting **IMFCollection** can be empty if the associated cameras are no longer present. Virtual camera implementations should handle this scenario gracefully by providing feedback to the end user that the associated camera is not available such as displaying a fixed “video frame".</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-virtualcamera-associated-camera-sources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.MF_VIRTUALCAMERA_PROVIDE_ASSOCIATED_CAMERA_SOURCES">
            <summary>Specifies that the pipeline should provide the list of physical camera sources associated with a virtual camera.</summary>
            <remarks>
            <para>Setting this attribute to a non-zero value to requests that the platform provide a list of physical camera sources associated with a virtual camera. The platform will set the [MF_VIRTUALCAMERA_ASSOCIATED_CAMERA_SOURCES](mf-virtualcamera-associated-camera-sources.md) attribute on the [IMFActivate](/windows/win32/api/mfobjects/nn-mfobjects-imfactivate) associated with the virtual camera prior to calling the [IMFActivate::ActivateObject](/windows/win32/api/mfobjects/nf-mfobjects-imfactivate-activateobject) method. If this value is zero or not set, the **MF_VIRTUALCAMERA_ASSOCIATED_CAMERA_SOURCES** will not be set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/medfound/mf-virtualcamera-provide-associated-camera-sources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.DeleteObject(Windows.Win32.Graphics.Gdi.HGDIOBJ)">
            <summary>The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system resources associated with the object. After the object is deleted, the specified handle is no longer valid.</summary>
            <param name="ho">A handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>
            <para>If the function succeeds, the return value is nonzero. If the specified handle is not valid or is currently selected into a DC, the return value is zero.</para>
            </returns>
            <remarks>
            <para>Do not delete a drawing object (pen or brush) while it is still selected into a DC. When a pattern brush is deleted, the bitmap associated with the brush is not deleted. The bitmap must be deleted independently.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/wingdi/nf-wingdi-deleteobject#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.CloseHandle(Windows.Win32.Foundation.HANDLE)">
            <summary>Closes an open object handle.</summary>
            <param name="hObject">A valid handle to an open object.</param>
            <returns>
            <para>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <a href="https://docs.microsoft.com/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>. If the application is running under a debugger,  the function will throw an exception if it receives either a  handle value that is not valid  or a pseudo-handle value. This can happen if you close a handle twice, or if you  call <b>CloseHandle</b> on a handle returned by the <a href="https://docs.microsoft.com/windows/desktop/api/fileapi/nf-fileapi-findfirstfilea">FindFirstFile</a> function instead of calling the <a href="https://docs.microsoft.com/windows/desktop/api/fileapi/nf-fileapi-findclose">FindClose</a> function.</para>
            </returns>
            <remarks>
            <para>The <b>CloseHandle</b> function closes handles to the following objects: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/handleapi/nf-handleapi-closehandle#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateDeviceSource(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFMediaSource**)">
            <summary>Creates a media source for a hardware capture device.</summary>
            <param name="pAttributes">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes">IMFAttributes</a> interface of an attribute store, which is used to select the device. See Remarks.</param>
            <param name="ppSource">Receives a pointer to the media source's <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfmediasource">IMFMediaSource</a> interface. The caller must release the interface.</param>
            <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para><div class="alert"><b>Important</b>  When the capture device is no longer needed, you must shut down the device by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-shutdown">Shutdown</a> on the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfmediasource">IMFMediaSource</a> object you obtained by calling <b>MFCreateDeviceSource</b>. Failure to call <b>Shutdown</b> can result in memory links because the system may keep a reference to <b>IMFMediaSource</b> resources until <b>Shutdown</b> is called. </div> <div> </div> The <i>pAttributes</i> parameter specifies an attribute store. To create the attribute store, call the <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfcreateattributes">MFCreateAttributes</a> function.  You must set the <a href="https://docs.microsoft.com/windows/desktop/medfound/mf-devsource-attribute-source-type">MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE</a> attribute, which specifies the type of device (audio or video). For audio capture devices, optionally set one of the following attributes:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-mfcreatedevicesource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFEnumDeviceSources(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFActivate**@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.MFEnumDeviceSources(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFActivate***,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFEnumDeviceSources(Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFActivate***,System.UInt32*)">
            <summary>Enumerates a list of audio or video capture devices.</summary>
            <param name="pAttributes">
            <para>Pointer to an attribute store that contains search criteria. To create the attribute store, call <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfcreateattributes">MFCreateAttributes</a>. Set one or more of the following attributes on the attribute store: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-mfenumdevicesources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pppSourceActivate">Receives an array of <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate">IMFActivate</a> interface pointers. Each pointer represents an activation object for a media source. The function allocates the memory for the array. The caller must release the pointers in the array and call <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-cotaskmemfree">CoTaskMemFree</a> to free the memory for the array.</param>
            <param name="pcSourceActivate">Receives the number of elements in the <i>pppSourceActivate</i> array. If no capture devices match the search criteria, this parameter receives the value 0.</param>
            <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>Each returned <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfactivate">IMFActivate</a> pointer represents a capture device, and can be used to create a media source for that device. You can also use the <b>IMFActivate</b> pointer to query for attributes that describe the device. The following attributes might be set: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfidl/nf-mfidl-mfenumdevicesources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFStartup(System.UInt32,System.UInt32)">
            <summary>Initializes Microsoft Media Foundation.</summary>
            <param name="Version">Version number. Use the value <b>MF_VERSION</b>, defined in mfapi.h.</param>
            <param name="dwFlags">
            <para>This parameter is optional when using C++ but required in C. The value must be one of the following flags:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfapi/nf-mfapi-mfstartup#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>The function returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>An application must call this function before using Media Foundation. Before your application quits, call <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfshutdown">MFShutdown</a> once for every previous call to <b>MFStartup</b>. **MFStartup** should be called during should be called during app initialization and not from static constructors during process initialization. Do not call <b>MFStartup</b> or <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfshutdown">MFShutdown</a> from work queue threads. For more information about work queues, see <a href="https://docs.microsoft.com/windows/desktop/medfound/work-queues">Work Queues</a>.</para>
            <para>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfapi/nf-mfapi-mfstartup#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFShutdown">
            <summary>Shuts down the Microsoft Media Foundation platform.</summary>
            <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>**MFShutdown** should be called during should be called during app uninitialization and not from static destructors during process exit.</para>
            <para>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfapi/nf-mfapi-mfshutdown#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateAttributes(Windows.Win32.Media.MediaFoundation.IMFAttributes**,System.UInt32)">
            <summary>Creates an empty attribute store.</summary>
            <param name="ppMFAttributes">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes">IMFAttributes</a> interface. The caller must release the interface.</param>
            <param name="cInitialSize">The initial number of elements allocated for the attribute store. The attribute store grows as needed.</param>
            <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>Attributes are used throughout Microsoft Media Foundation to configure objects, describe media formats, query object properties, and other purposes. For more information, see <a href="https://docs.microsoft.com/windows/desktop/medfound/attributes-and-properties">Attributes in Media Foundation</a>. For a complete list of all the defined attribute GUIDs in Media Foundation, see <a href="https://docs.microsoft.com/windows/desktop/medfound/media-foundation-attributes">Media Foundation Attributes</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfapi/nf-mfapi-mfcreateattributes#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateDXGIDeviceManager(System.UInt32@,Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager**)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.MFCreateDXGIDeviceManager(System.UInt32*,Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager**)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateDXGIDeviceManager(System.UInt32*,Windows.Win32.Media.MediaFoundation.IMFDXGIDeviceManager**)">
            <summary>Creates an instance of the Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.</summary>
            <param name="resetToken">Receives a token that identifies this instance of the DXGI Device Manager. Use this token when calling <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-resetdevice">IMFDXGIDeviceManager::ResetDevice</a>.</param>
            <param name="ppDeviceManager">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfdxgidevicemanager">IMFDXGIDeviceManager</a> interface. The caller must release the interface.</param>
            <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>When you create an <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfdxgidevicemanager">IMFDXGIDeviceManager</a> with <b>MFCreateDXGIDeviceManager</b>, a Microsoft Direct3D 11 device is not associated with the device manager. To associate a Direct3D 11 device with the device manager, call <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nf-mfobjects-imfdxgidevicemanager-resetdevice">IMFDXGIDeviceManager::ResetDevice</a>, passing in the pointer to the Direct3D 11 device. To create a Direct3D 11 device, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a>. The device should be created with the <b>D3D11_CREATE_DEVICE_VIDEO_SUPPORT</b> device creation flag which is defined in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a> enumeration.</remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateMediaType(Windows.Win32.Media.MediaFoundation.IMFMediaType**)">
            <summary>Creates an empty media type.</summary>
            <param name="ppMFType">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfmediatype">IMFMediaType</a> interface. The caller must release the interface.</param>
            <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>The media type is created without any attributes.</remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateSourceReaderFromMediaSource(Windows.Win32.Media.MediaFoundation.IMFMediaSource*,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFSourceReader**)">
            <summary>Creates the source reader from a media source.</summary>
            <param name="pMediaSource">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nn-mfidl-imfmediasource">IMFMediaSource</a> interface of a media source.</param>
            <param name="pAttributes">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes">IMFAttributes</a> interface. You can use this parameter to configure the source reader. For more information, see <a href="https://docs.microsoft.com/windows/desktop/medfound/source-reader-attributes">Source Reader Attributes</a>. This parameter can be <b>NULL</b>.</param>
            <param name="ppSourceReader">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nn-mfreadwrite-imfsourcereader">IMFSourceReader</a> interface. The caller must release the interface.</param>
            <returns>
            <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>Call <b>CoInitialize(Ex)</b> and <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfstartup">MFStartup</a> before calling this function. By default, when the application releases the source reader, the source reader shuts down the media source by calling <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfmediasource-shutdown">IMFMediaSource::Shutdown</a> on the media source. At that point, the application can no longer use the media source. To change this default behavior, set the <a href="https://docs.microsoft.com/windows/desktop/medfound/mf-source-reader-disconnect-mediasource-on-shutdown">MF_SOURCE_READER_DISCONNECT_MEDIASOURCE_ON_SHUTDOWN</a> attribute in the <i>pAttributes</i> parameter. If this attribute is <b>TRUE</b>, the application is responsible for  shutting down the media source. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfrommediasource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateSourceReaderFromURL(System.String,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFSourceReader**)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.MFCreateSourceReaderFromURL(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFSourceReader**)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.MFCreateSourceReaderFromURL(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Media.MediaFoundation.IMFAttributes*,Windows.Win32.Media.MediaFoundation.IMFSourceReader**)">
            <summary>Creates the source reader from a URL.</summary>
            <param name="pwszURL">The URL  of a media file to open.</param>
            <param name="pAttributes">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfobjects/nn-mfobjects-imfattributes">IMFAttributes</a> interface. You can use this parameter to configure the source reader. For more information, see <a href="https://docs.microsoft.com/windows/desktop/medfound/source-reader-attributes">Source Reader Attributes</a>. This parameter can be <b>NULL</b>.</param>
            <param name="ppSourceReader">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/mfreadwrite/nn-mfreadwrite-imfsourcereader">IMFSourceReader</a> interface. The caller must release the interface.</param>
            <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
            <remarks>
            <para>Call <b>CoInitialize(Ex)</b> and <a href="https://docs.microsoft.com/windows/desktop/api/mfapi/nf-mfapi-mfstartup">MFStartup</a> before calling this function. Internally, the source reader calls the <a href="https://docs.microsoft.com/windows/desktop/api/mfidl/nf-mfidl-imfsourceresolver-createobjectfromurl">IMFSourceResolver::CreateObjectFromURL</a> method to create a media source from the URL.</para>
            <para>This function is available on Windows Vista if Platform Update Supplement for Windows Vista is installed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/mfreadwrite/nf-mfreadwrite-mfcreatesourcereaderfromurl#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.CoCreateInstance``1(System.Guid@,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.CLSCTX,``0*@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.CoCreateInstance(System.Guid*,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.CLSCTX,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.CoCreateInstance(System.Guid@,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.CLSCTX,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.CoCreateInstance(System.Guid*,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.CLSCTX,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.CoCreateInstance(System.Guid*,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.CLSCTX,System.Guid*,System.Void**)">
            <summary>Creates a single uninitialized object of the class associated with a specified CLSID.</summary>
            <param name="rclsid">The CLSID associated with the data and code that will be used to create the object.</param>
            <param name="pUnkOuter">If <b>NULL</b>, indicates that the object is not being created as part of an aggregate. If non-<b>NULL</b>, pointer to the aggregate object's <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface (the controlling <b>IUnknown</b>).</param>
            <param name="dwClsContext">Context in which the code that manages the newly created object will run. The values are taken from the enumeration <a href="https://docs.microsoft.com/windows/desktop/api/wtypesbase/ne-wtypesbase-clsctx">CLSCTX</a>.</param>
            <param name="riid">A reference to the identifier of the interface to be used to communicate with the object.</param>
            <param name="ppv">Address of pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppv</i> contains the requested interface pointer. Upon failure, *<i>ppv</i> contains <b>NULL</b>.</param>
            <returns>
            <para>This function can return the following values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>The <b>CoCreateInstance</b> function provides a convenient shortcut by connecting to the class object associated with the specified CLSID, creating a default-initialized instance, and releasing the class object. As such, it encapsulates the following functionality:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/combaseapi/nf-combaseapi-cocreateinstance#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.SysFreeString(Windows.Win32.Foundation.BSTR)">
            <summary>Deallocates a string allocated previously by SysAllocString, SysAllocStringByteLen, SysReAllocString, SysAllocStringLen, or SysReAllocStringLen.</summary>
            <param name="bstrString">The previously allocated string. If this parameter is <b>NULL</b>, the function simply returns.</param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api/oleauto/nf-oleauto-sysfreestring">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.DestroyIcon(Windows.Win32.UI.WindowsAndMessaging.HICON)">
            <summary>Destroys an icon and frees any memory the icon occupied.</summary>
            <param name="hIcon">
            <para>Type: <b>HICON</b> A handle to the icon to be destroyed. The icon must not be in use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/winuser/nf-winuser-destroyicon#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>BOOL</b> If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <a href="https://docs.microsoft.com/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>.</para>
            </returns>
            <remarks>
            <para>It is only necessary to call <b>DestroyIcon</b> for icons and cursors created with the following functions: <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-createiconfromresourceex">CreateIconFromResourceEx</a> (if called without the <b>LR_SHARED</b> flag), <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-createiconindirect">CreateIconIndirect</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-copyicon">CopyIcon</a>. Do not use this function to destroy a shared icon. A shared icon is valid as long as the module from which it was loaded remains in memory. The following functions obtain a shared icon. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api/winuser/nf-winuser-destroyicon#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.SysFreeStringSafeHandle">
            <summary>
            Represents a Win32 handle that can be closed with <see cref="M:Windows.Win32.PInvoke.SysFreeString(Windows.Win32.Foundation.BSTR)"/>.
            </summary>
        </member>
        <member name="M:Windows.Win32.System_Com_IEnumString_Extensions.Next(Windows.Win32.System.Com.IEnumString.Interface,System.Span{Windows.Win32.Foundation.PWSTR},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IEnumString.Interface.Next(System.UInt32,Windows.Win32.Foundation.PWSTR*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_IErrorLog_Extensions.AddError(Windows.Win32.System.Com.IErrorLog.Interface,System.String,Windows.Win32.System.Com.EXCEPINFO@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IErrorLog.Interface.AddError(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.EXCEPINFO*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_IStream_Extensions.Stat(Windows.Win32.System.Com.IStream.Interface,Windows.Win32.System.Com.STATSTG@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.System.Com.IStream.Interface.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeComp_Extensions.Bind(Windows.Win32.System.Com.ITypeComp.Interface,Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt16,Windows.Win32.System.Com.ITypeInfo**,Windows.Win32.System.Com.DESCKIND@,Windows.Win32.System.Com.BINDPTR@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeComp.Interface.Bind(Windows.Win32.Foundation.PWSTR,System.UInt32,System.UInt16,Windows.Win32.System.Com.ITypeInfo**,Windows.Win32.System.Com.DESCKIND*,Windows.Win32.System.Com.BINDPTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetTypeAttr(Windows.Win32.System.Com.ITypeInfo.Interface,Windows.Win32.System.Com.TYPEATTR*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetTypeAttr(Windows.Win32.System.Com.TYPEATTR**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetFuncDesc(Windows.Win32.System.Com.ITypeInfo.Interface,System.UInt32,Windows.Win32.System.Com.FUNCDESC*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetFuncDesc(System.UInt32,Windows.Win32.System.Com.FUNCDESC**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetVarDesc(Windows.Win32.System.Com.ITypeInfo.Interface,System.UInt32,Windows.Win32.System.Com.VARDESC*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetVarDesc(System.UInt32,Windows.Win32.System.Com.VARDESC**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetNames(Windows.Win32.System.Com.ITypeInfo.Interface,System.Int32,Windows.Win32.SysFreeStringSafeHandle@,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetNames(System.Int32,Windows.Win32.Foundation.BSTR*,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetRefTypeOfImplType(Windows.Win32.System.Com.ITypeInfo.Interface,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetRefTypeOfImplType(System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetImplTypeFlags(Windows.Win32.System.Com.ITypeInfo.Interface,System.UInt32,Windows.Win32.System.Com.IMPLTYPEFLAGS@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetImplTypeFlags(System.UInt32,Windows.Win32.System.Com.IMPLTYPEFLAGS*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetIDsOfNames(Windows.Win32.System.Com.ITypeInfo.Interface,System.Span{Windows.Win32.Foundation.PWSTR},System.Span{System.Int32})">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetIDsOfNames(Windows.Win32.Foundation.PWSTR*,System.UInt32,System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.Invoke(Windows.Win32.System.Com.ITypeInfo.Interface,System.Void*,System.Int32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS@,Windows.Win32.System.Variant.VARIANT@,Windows.Win32.System.Com.EXCEPINFO@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.Invoke(System.Void*,System.Int32,Windows.Win32.System.Com.DISPATCH_FLAGS,Windows.Win32.System.Com.DISPPARAMS*,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.System.Com.EXCEPINFO*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetDocumentation(Windows.Win32.System.Com.ITypeInfo.Interface,System.Int32,Windows.Win32.SysFreeStringSafeHandle@,Windows.Win32.SysFreeStringSafeHandle@,System.UInt32@,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetDocumentation(System.Int32,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt32*,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetDllEntry(Windows.Win32.System.Com.ITypeInfo.Interface,System.Int32,Windows.Win32.System.Com.INVOKEKIND,Windows.Win32.SysFreeStringSafeHandle@,Windows.Win32.SysFreeStringSafeHandle@,System.UInt16@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetDllEntry(System.Int32,Windows.Win32.System.Com.INVOKEKIND,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt16*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.AddressOfMember(Windows.Win32.System.Com.ITypeInfo.Interface,System.Int32,Windows.Win32.System.Com.INVOKEKIND,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.AddressOfMember(System.Int32,Windows.Win32.System.Com.INVOKEKIND,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.CreateInstance(Windows.Win32.System.Com.ITypeInfo.Interface,Windows.Win32.System.Com.IUnknown*,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.CreateInstance(Windows.Win32.System.Com.IUnknown*,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetMops(Windows.Win32.System.Com.ITypeInfo.Interface,System.Int32,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetMops(System.Int32,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.GetContainingTypeLib(Windows.Win32.System.Com.ITypeInfo.Interface,Windows.Win32.System.Com.ITypeLib**,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.GetContainingTypeLib(Windows.Win32.System.Com.ITypeLib**,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.ReleaseTypeAttr(Windows.Win32.System.Com.ITypeInfo.Interface,Windows.Win32.System.Com.TYPEATTR@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.ReleaseTypeAttr(Windows.Win32.System.Com.TYPEATTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.ReleaseFuncDesc(Windows.Win32.System.Com.ITypeInfo.Interface,Windows.Win32.System.Com.FUNCDESC@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.ReleaseFuncDesc(Windows.Win32.System.Com.FUNCDESC*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeInfo_Extensions.ReleaseVarDesc(Windows.Win32.System.Com.ITypeInfo.Interface,Windows.Win32.System.Com.VARDESC@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeInfo.Interface.ReleaseVarDesc(Windows.Win32.System.Com.VARDESC*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeLib_Extensions.GetTypeInfoType(Windows.Win32.System.Com.ITypeLib.Interface,System.UInt32,Windows.Win32.System.Com.TYPEKIND@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.Interface.GetTypeInfoType(System.UInt32,Windows.Win32.System.Com.TYPEKIND*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeLib_Extensions.GetTypeInfoOfGuid(Windows.Win32.System.Com.ITypeLib.Interface,System.Guid@,Windows.Win32.System.Com.ITypeInfo**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.Interface.GetTypeInfoOfGuid(System.Guid*,Windows.Win32.System.Com.ITypeInfo**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeLib_Extensions.GetLibAttr(Windows.Win32.System.Com.ITypeLib.Interface,Windows.Win32.System.Com.TLIBATTR*@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.Interface.GetLibAttr(Windows.Win32.System.Com.TLIBATTR**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeLib_Extensions.GetDocumentation(Windows.Win32.System.Com.ITypeLib.Interface,System.Int32,Windows.Win32.SysFreeStringSafeHandle@,Windows.Win32.SysFreeStringSafeHandle@,System.UInt32@,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.Interface.GetDocumentation(System.Int32,Windows.Win32.Foundation.BSTR*,Windows.Win32.Foundation.BSTR*,System.UInt32*,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeLib_Extensions.IsName(Windows.Win32.System.Com.ITypeLib.Interface,System.Span{System.Char}@,System.UInt32,Windows.Win32.Foundation.BOOL@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.Interface.IsName(Windows.Win32.Foundation.PWSTR,System.UInt32,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeLib_Extensions.FindName(Windows.Win32.System.Com.ITypeLib.Interface,System.Span{System.Char}@,System.UInt32,Windows.Win32.System.Com.ITypeInfo**,System.Int32*,System.UInt16@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.Interface.FindName(Windows.Win32.Foundation.PWSTR,System.UInt32,Windows.Win32.System.Com.ITypeInfo**,System.Int32*,System.UInt16*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_ITypeLib_Extensions.ReleaseTLibAttr(Windows.Win32.System.Com.ITypeLib.Interface,Windows.Win32.System.Com.TLIBATTR@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.ITypeLib.Interface.ReleaseTLibAttr(Windows.Win32.System.Com.TLIBATTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IEnumSTATSTG_Extensions.Next(Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Interface,System.Span{Windows.Win32.System.Com.STATSTG},System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG.Interface.Next(System.UInt32,Windows.Win32.System.Com.STATSTG*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IPropertyBag2_Extensions.Read(Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface,System.Span{Windows.Win32.System.Com.StructuredStorage.PROPBAG2},Windows.Win32.System.Com.IErrorLog*,System.Span{Windows.Win32.System.Variant.VARIANT},System.Span{Windows.Win32.Foundation.HRESULT})">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface.Read(System.UInt32,Windows.Win32.System.Com.StructuredStorage.PROPBAG2*,Windows.Win32.System.Com.IErrorLog*,Windows.Win32.System.Variant.VARIANT*,Windows.Win32.Foundation.HRESULT*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IPropertyBag2_Extensions.Write(Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface,System.Span{Windows.Win32.System.Com.StructuredStorage.PROPBAG2},System.Span{Windows.Win32.System.Variant.VARIANT})">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface.Write(System.UInt32,Windows.Win32.System.Com.StructuredStorage.PROPBAG2*,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IPropertyBag2_Extensions.CountProperties(Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface.CountProperties(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IPropertyBag2_Extensions.GetPropertyInfo(Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface,System.UInt32,System.Span{Windows.Win32.System.Com.StructuredStorage.PROPBAG2},System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface.GetPropertyInfo(System.UInt32,System.UInt32,Windows.Win32.System.Com.StructuredStorage.PROPBAG2*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IPropertyBag2_Extensions.LoadObject(Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface,System.String,System.UInt32,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.IErrorLog*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IPropertyBag2.Interface.LoadObject(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.System.Com.IUnknown*,Windows.Win32.System.Com.IErrorLog*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.CreateStream(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.IStream**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.CreateStream(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.IStream**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.OpenStream(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String,Windows.Win32.System.Com.STGM,System.UInt32,Windows.Win32.System.Com.IStream**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.OpenStream(Windows.Win32.Foundation.PCWSTR,System.Void*,Windows.Win32.System.Com.STGM,System.UInt32,Windows.Win32.System.Com.IStream**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.CreateStorage(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.CreateStorage(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.STGM,System.UInt32,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.OpenStorage(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.System.Com.STGM,System.UInt16*@,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.OpenStorage(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.System.Com.STGM,System.UInt16**,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IStorage**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.CopyTo(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.ReadOnlySpan{System.Guid},System.UInt16**,Windows.Win32.System.Com.StructuredStorage.IStorage*)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.CopyTo(System.UInt32,System.Guid*,System.UInt16**,Windows.Win32.System.Com.StructuredStorage.IStorage*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.MoveElementTo(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String,Windows.Win32.System.Com.StructuredStorage.IStorage*,System.String,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.MoveElementTo(Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Com.StructuredStorage.IStorage*,Windows.Win32.Foundation.PCWSTR,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.EnumElements(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG**)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.EnumElements(System.UInt32,System.Void*,System.UInt32,Windows.Win32.System.Com.StructuredStorage.IEnumSTATSTG**)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.DestroyElement(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.DestroyElement(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.RenameElement(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String,System.String)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.RenameElement(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.SetElementTimes(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.String,System.Runtime.InteropServices.ComTypes.FILETIME@,System.Runtime.InteropServices.ComTypes.FILETIME@,System.Runtime.InteropServices.ComTypes.FILETIME@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.SetElementTimes(Windows.Win32.Foundation.PCWSTR,System.Runtime.InteropServices.ComTypes.FILETIME*,System.Runtime.InteropServices.ComTypes.FILETIME*,System.Runtime.InteropServices.ComTypes.FILETIME*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.SetClass(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.SetClass(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.System_Com_StructuredStorage_IStorage_Extensions.Stat(Windows.Win32.System.Com.StructuredStorage.IStorage.Interface,Windows.Win32.System.Com.STATSTG@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.System.Com.StructuredStorage.IStorage.Interface.Stat(Windows.Win32.System.Com.STATSTG*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.GetGuid(Windows.Win32.System.Ole.IRecordInfo.Interface,System.Guid@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.GetGuid(System.Guid*)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.GetName(Windows.Win32.System.Ole.IRecordInfo.Interface,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.GetName(Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.GetSize(Windows.Win32.System.Ole.IRecordInfo.Interface,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.GetSize(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.GetField(Windows.Win32.System.Ole.IRecordInfo.Interface,System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.GetField(System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.GetFieldNoCopy(Windows.Win32.System.Ole.IRecordInfo.Interface,System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.GetFieldNoCopy(System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.PutField(Windows.Win32.System.Ole.IRecordInfo.Interface,System.UInt32,System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.PutField(System.UInt32,System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.PutFieldNoCopy(Windows.Win32.System.Ole.IRecordInfo.Interface,System.UInt32,System.Void*,System.String,Windows.Win32.System.Variant.VARIANT@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.PutFieldNoCopy(System.UInt32,System.Void*,Windows.Win32.Foundation.PCWSTR,Windows.Win32.System.Variant.VARIANT*)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.GetFieldNames(Windows.Win32.System.Ole.IRecordInfo.Interface,System.UInt32@,Windows.Win32.SysFreeStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.GetFieldNames(System.UInt32*,Windows.Win32.Foundation.BSTR*)"/>
        </member>
        <member name="M:Windows.Win32.System_Ole_IRecordInfo_Extensions.RecordCreateCopy(Windows.Win32.System.Ole.IRecordInfo.Interface,System.Void*,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.System.Ole.IRecordInfo.Interface.RecordCreateCopy(System.Void*,System.Void**)"/>
        </member>
    </members>
</doc>
