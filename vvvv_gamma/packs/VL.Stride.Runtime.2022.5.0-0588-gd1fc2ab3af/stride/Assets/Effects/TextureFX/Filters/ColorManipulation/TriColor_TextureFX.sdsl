// source:
// https://github.com/mrvux/dx11-vvvv-girlpower/blob/master/nodes/texture11/Filter/TriColor.tfx

[Category("Filter")]
[Summary("")]
[Tags("colorize")]
shader TriColor_TextureFX : FilterBase
{
    [Color]
    float4 ColorA = float4(0.0f, 0.0f, 0.0f, 1.0f);
    [Color]
    float4 ColorB = float4(0.5f, 0.5f, 0.5f, 1.0f);
    [Color]
    float4 ColorC = float4(1.0f, 1.0f, 1.0f, 1.0f);

    float Smooth = 0.5f;
    float Center = 0.5f;

    bool SingleChannel = true;
    bool ClampColor = true;

    #define linstep(a, b, x) (saturate((x-a)/(b-a)))
    #define linstepf(a, b, x) (((x-a)/(b-a)))

    float4 Filter(float4 tex0col)
    {
        float2 uv = streams.TexCoord;
        float2 R = ViewSize;
        
        float4 col = Texture0.SampleLevel(Sampler0, uv, 0);

        float4 fd = col;

        if(SingleChannel)
        {
            fd = dot(col.rgb, 1./3.);
        }
        
        fd=lerp(fd, sign(fd)*pow(abs(fd), Center/(1.000001-Center)), 1 - .5*saturate(Smooth*2 - 1));

        
        float Smooth2 = saturate(Smooth*2)/2.;
        Smooth2 = saturate(Smooth);
        
        float sm = (1-Smooth2)/(.000001+Smooth2);

        float4 fd1 = max(0, 1-linstepf(0, 1, (fd*2 - .6666)*sm + .6666));
        float4 fd2 = max(0, linstepf(0, 1, (fd*2 - 1.3333)*sm + .3333));

        
        if(ClampColor)
        {
            fd1 = saturate(fd1);
            fd2 = saturate(fd2);
        }

        col = ColorB;
        col = lerp(col, ColorA, fd1);
        col = lerp(col, ColorC, fd2);

        return col;
    }
};