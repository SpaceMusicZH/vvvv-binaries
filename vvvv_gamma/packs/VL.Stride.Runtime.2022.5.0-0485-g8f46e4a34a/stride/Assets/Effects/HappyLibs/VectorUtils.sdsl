shader VectorUtils
{

    ////////////////////////////////////////////////////////////////
    //
    //             HELPER FUNCTIONS/MACROS
    //
    ////////////////////////////////////////////////////////////////

    #ifndef PI
    #define PI 3.1415926535897
    #endif

    #ifndef TWOPI
    #define TWOPI 6.28318531
    #endif

    #ifndef TAU
    #define TAU (2*PI)
    #endif

    #ifndef PHI
    #define PHI (sqrt(5)*0.5 + 0.5)
    #endif

    // glsl style mod
    #ifndef mod
    #define mod(x, y) (x - y * floor((x) / y))
    #endif

    // Sign function that doesn't return 0
    float sgn(float x) {
        return (x<0)?-1:1;
    }

    float2 sgn(float2 v) {
        return float2((v.x<0)?-1:1, (v.y<0)?-1:1);
    }

    float square (float x) {
        return x*x;
    }

    float2 square (float2 x) {
        return x*x;
    }

    float3 square (float3 x) {
        return x*x;
    }

    float lengthSqr(float3 x) {
        return dot(x, x);
    }


    // Maximum/minumum elements of a floattor
    float vmax(float2 v) {
        return max(v.x, v.y);
    }

    float vmax(float3 v) {
        return max(max(v.x, v.y), v.z);
    }

    float vmax(float4 v) {
        return max(max(v.x, v.y), max(v.z, v.w));
    }

    float vmin(float2 v) {
        return min(v.x, v.y);
    }

    float vmin(float3 v) {
        return min(min(v.x, v.y), v.z);
    }

    float vmin(float4 v) {
        return min(min(v.x, v.y), min(v.z, v.w));
    }

    float dot2( in float3 v ) { return dot(v,v); }
};