<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.IO.Redis</name>
    </assembly>
    <members>
        <member name="T:VL.IO.Redis.BindingModel">
            <summary>
            A description of a Redis binding. The <see cref="T:VL.IO.Redis.RedisModule"/> holds one of these per global channel.
            </summary>
            <param name="Key">The Redis key.</param>
            <param name="Initialization">What to do on startup.</param>
            <param name="BindingType">Defines the direction of the binding.</param>
            <param name="CollisionHandling">Defines the behavior when both Redis and vvvv have a value.</param>
            <param name="SerializationFormat">The serialization format to used for this binding. If not specified the one from the <see cref="T:VL.IO.Redis.RedisClient"/> is used.</param>
            <param name="Expiry">Allows to make this key expire (and vanish) from the Redis database. The channel will persist and will pick up values as soon as the key in the Db exists again.</param>
        </member>
        <member name="M:VL.IO.Redis.BindingModel.#ctor(System.String,VL.IO.Redis.Initialization,VL.IO.Redis.RedisBindingType,VL.IO.Redis.CollisionHandling,System.Nullable{VL.IO.Redis.SerializationFormat},System.Nullable{System.TimeSpan})">
            <summary>
            A description of a Redis binding. The <see cref="T:VL.IO.Redis.RedisModule"/> holds one of these per global channel.
            </summary>
            <param name="Key">The Redis key.</param>
            <param name="Initialization">What to do on startup.</param>
            <param name="BindingType">Defines the direction of the binding.</param>
            <param name="CollisionHandling">Defines the behavior when both Redis and vvvv have a value.</param>
            <param name="SerializationFormat">The serialization format to used for this binding. If not specified the one from the <see cref="T:VL.IO.Redis.RedisClient"/> is used.</param>
            <param name="Expiry">Allows to make this key expire (and vanish) from the Redis database. The channel will persist and will pick up values as soon as the key in the Db exists again.</param>
        </member>
        <member name="P:VL.IO.Redis.BindingModel.Key">
            <summary>The Redis key.</summary>
        </member>
        <member name="P:VL.IO.Redis.BindingModel.Initialization">
            <summary>What to do on startup.</summary>
        </member>
        <member name="P:VL.IO.Redis.BindingModel.BindingType">
            <summary>Defines the direction of the binding.</summary>
        </member>
        <member name="P:VL.IO.Redis.BindingModel.CollisionHandling">
            <summary>Defines the behavior when both Redis and vvvv have a value.</summary>
        </member>
        <member name="P:VL.IO.Redis.BindingModel.SerializationFormat">
            <summary>The serialization format to used for this binding. If not specified the one from the <see cref="T:VL.IO.Redis.RedisClient"/> is used.</summary>
        </member>
        <member name="P:VL.IO.Redis.BindingModel.Expiry">
            <summary>Allows to make this key expire (and vanish) from the Redis database. The channel will persist and will pick up values as soon as the key in the Db exists again.</summary>
        </member>
        <member name="T:VL.IO.Redis.Internal.Binding`1">
            <summary>
            Represents a binding of a channel to a Redis key.
            </summary>
        </member>
        <member name="T:VL.IO.Redis.Internal.IParticipant">
            <summary>
            Allows to take part in a Redis transaction created each vvvv frame by the <see cref="T:VL.IO.Redis.RedisClient"/>.
            </summary>
        </member>
        <member name="T:VL.IO.Redis.Internal.IRedisBinding">
            <summary>
            A non-generic view on <see cref="T:VL.IO.Redis.Internal.Binding`1"/>. Used by <see cref="T:VL.IO.Redis.RedisModule"/> to manage bindings.
            </summary>
        </member>
        <member name="T:VL.IO.Redis.Internal.TransactionBuilder">
            <summary>
            Used to build a Redis transaction.
            </summary>
        </member>
    </members>
</doc>
