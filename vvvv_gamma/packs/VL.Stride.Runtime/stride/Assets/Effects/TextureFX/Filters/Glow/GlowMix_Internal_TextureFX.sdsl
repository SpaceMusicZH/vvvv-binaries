[Category("Filter")]
[Summary("")]
[OutputFormat("R8G8B8A8_UNorm_SRgb")]
[WantsMips("Texture0")]
shader GlowMix_Internal_TextureFX : GlowBase
{
    float4 GlowPass()
    {
        float2 R = ViewSize;
        float2 uv = streams.TexCoord;
        float lod = 1 + log2(max(R.x, R.y));
        float4 s = Texture1.Sample(Sampler, uv);
        float4 g = Texture0.SampleLevel(Sampler, uv, 3);
        //float4 c=tex2D(s0,x);
        for(float i=0;i<5;i++){
            g += Texture0.SampleLevel(Sampler, uv + sin((i / 5. + float2(.25, 0)) * acos(-1) * 2) * 2 / R, 3);
        }
        g /= 6;
        float4 c=s;
        float av = pow(max(0, Texture0.SampleLevel(Sampler, uv, 33).a), 1. / PW);
        //s=pow(s,PreGamma);
        //s.rgb=safenormalize(s.rgb)*sqrt(2)*pow(length(s.rgb)/sqrt(2),PreGamma);
    
        //float mc=min(c.r,min(c.g,c.b));
        //c.rgb=(c.rgb-mc)*pow(Saturation,.3)+lerp(mc,dot(c.rgb,1./3),saturate(1-pow(Saturation,.3)));
        c = pow(max(0, s), 1 + g * 2) + g;
        //c=s;
        c *= Exposure / lerp(1, av + .1, AutoExposureFactor);
        //c=s+g*Brightness*318;
    
        //c=g+pow(s,1+g);
        //c.rgb=normalize(s.rgb)*pow(length(s.rgb)/sqrt(3),1+g*2)*sqrt(3)+g;
        //c/=1+3*tex2Dlod(s0,float4(x,0,33));
        c.a = s.a;
    
        c.a = 1;
        return c; 
    }
};