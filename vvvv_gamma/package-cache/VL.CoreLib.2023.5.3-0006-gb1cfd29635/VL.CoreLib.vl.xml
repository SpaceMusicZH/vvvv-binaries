<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.CoreLib.vl</name>
    </assembly>
    <members>
        <member name="T:_VL_Threading_.System.Threading.Lock_FyCN7Vj282lLcqnkwpaV2j">
            <summary>Synchronizes access to a shared resource</summary>
        </member>
        <member name="T:_VL_Threading_.System.Threading.Lock_InterMprocess_ERguMxLK1NKQZpEFFt1hQj">
            <summary>Synchronizes access to a shared resource across process boundaries</summary>
            <tags>mutex</tags>
        </member>
        <member name="T:_VL_Regex_.Text.RegularExpressions.IsMatch_No3CCkpgB8zO94DQbGm6O4">
            <summary>Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.</summary>
            <remarks>
            Ignore Case: Specifies case-insensitive matching.
            
            Culture Invariant: Specifies that cultural differences in language is ignored.
            
            Singleline: Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).
            
            Multiline: Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.
            
            Ignore Pattern Whitespace: Eliminates unescaped white space from the pattern and enables comments marked with #.
            
            Compiled: Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time.
            
            Explicit Capture: Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...).
            
            Right To Left: Specifies that the search will be from right to left instead of from left to right.
            
            ECMAScript: Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the IgnoreCase, Multiline, and Compiled values. The use of this value with any other values results in an exception.
            </remarks>
            <tags>string,regex</tags>
        </member>
        <member name="T:_VL_Regex_.Text.RegularExpressions.Replace_F5NEdQWxM1sMWC1M7hYyBj">
            <summary>In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.</summary>
            <remarks>
            Ignore Case: Specifies case-insensitive matching.
            
            Culture Invariant: Specifies that cultural differences in language is ignored.
            
            Singleline: Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).
            
            Multiline: Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.
            
            Ignore Pattern Whitespace: Eliminates unescaped white space from the pattern and enables comments marked with #.
            
            Compiled: Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time.
            
            Explicit Capture: Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...).
            
            Right To Left: Specifies that the search will be from right to left instead of from left to right.
            
            ECMAScript: Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the IgnoreCase, Multiline, and Compiled values. The use of this value with any other values results in an exception.
            </remarks>
            <tags>substitute,string,regex</tags>
        </member>
        <member name="T:_VL_Regex_.Text.RegularExpressions.Split_NkW4XSRiiqZLVwUsqFQNTW">
            <summary>Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.</summary>
            <remarks>
            Ignore Case: Specifies case-insensitive matching.
            
            Culture Invariant: Specifies that cultural differences in language is ignored.
            
            Singleline: Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).
            
            Multiline: Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.
            
            Ignore Pattern Whitespace: Eliminates unescaped white space from the pattern and enables comments marked with #.
            
            Compiled: Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time.
            
            Explicit Capture: Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...).
            
            Right To Left: Specifies that the search will be from right to left instead of from left to right.
            
            ECMAScript: Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the IgnoreCase, Multiline, and Compiled values. The use of this value with any other values results in an exception.
            </remarks>
            <tags>string,regex</tags>
        </member>
        <member name="T:_VL_Regex_.Text.RegularExpressions.Matches_EWOwsOz68C1Mwnt5excx6S">
            <summary>Searches the specified input string for all occurrences of a specified regular expression.</summary>
            <remarks>
            Ignore Case: Specifies case-insensitive matching.
            
            Culture Invariant: Specifies that cultural differences in language is ignored.
            
            Singleline: Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).
            
            Multiline: Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.
            
            Ignore Pattern Whitespace: Eliminates unescaped white space from the pattern and enables comments marked with #.
            
            Compiled: Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time.
            
            Explicit Capture: Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...).
            
            Right To Left: Specifies that the search will be from right to left instead of from left to right.
            
            ECMAScript: Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the IgnoreCase, Multiline, and Compiled values. The use of this value with any other values results in an exception.
            </remarks>
            <tags>string,regex</tags>
        </member>
        <member name="M:_VL_Regex_.Text.RegularExpressions._Operations_.Escape(System.String,System.String@)">
            <tags>regex,string</tags>
        </member>
        <member name="M:_VL_Regex_.Text.RegularExpressions._Operations_.Unescape(System.String,System.String@)">
            <tags>regex,string</tags>
        </member>
        <member name="M:_VL_Regex_.Text.RegularExpressions._Operations_.RegexOptions(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Text.RegularExpressions.RegexOptions@)">
            <remarks>
            Ignore Case: Specifies case-insensitive matching.
            
            Culture Invariant: Specifies that cultural differences in language is ignored.
            
            Singleline: Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).
            
            Multiline: Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.
            
            Ignore Pattern Whitespace: Eliminates unescaped white space from the pattern and enables comments marked with #.
            
            Compiled: Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time.
            
            Explicit Capture: Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...).
            
            Right To Left: Specifies that the search will be from right to left instead of from left to right.
            
            ECMAScript: Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the IgnoreCase, Multiline, and Compiled values. The use of this value with any other values results in an exception.
            </remarks>
        </member>
        <member name="T:_VL_Typewriter_.Text.TypewriterProcess_GYAqFQ9hd9EOTuTLaXCEBZ">
            <tags>keyboard</tags>
        </member>
        <member name="T:_SubChannelModule_.Reactive.ChannelHub.Modules.SubChannelBinding.Select_ByPath_Global_Dynamic_UAsbGCZXIrnLXRj49CFlQb">
            <summary>Returns a channel which is bound via the given path to the root channel</summary>
            <remarks>The type of the returned channel is determined by the property type the given path points to</remarks>
        </member>
        <member name="M:_System_Memory_.System.IHasMemory._Operations_.CreateDefault``1">
            <summary>Returns empty memory.</summary>
            <returns>The empty memory.</returns>
        </member>
        <member name="M:_System_Memory_.System.IHasMemory._Operations_.ElementSize``1(VL.Core.IHasMemory{``0},System.Int32@)">
            <summary>Returns the size in bytes of one element of the memory.</summary>
            <param name="Input_In">The instance providing the memory.</param>
            <param name="Result_Out">The size of one element in bytes.</param>
        </member>
        <member name="M:_System_Memory_.System.IHasMemory._Operations_.Empty``1(VL.Core.IHasMemory{``0}@)">
            <summary>Returns empty memory.</summary>
            <param name="Result_Out">The empty memory.</param>
        </member>
        <member name="M:_System_Memory_.System.IHasMemory._Operations_.HasData``1(VL.Core.IHasMemory{``0},System.Boolean@)">
            <summary>Wether or not not-empty System.ReadOnlyMemory`1 is available.</summary>
            <param name="Input_In">The instance providing the memory.</param>
            <param name="Result_Out">True if not-empty System.ReadOnlyMemory`1 is available.</param>
        </member>
        <member name="M:_System_Memory_.System.IHasMemory._Operations_.Length``1(VL.Core.IHasMemory{``0},System.Int32@)">
            <summary>The length in elements of the memory block.</summary>
            <param name="Input_In">The instance providing the memory.</param>
            <param name="Result_Out">The length of the memory block.</param>
        </member>
        <member name="M:_System_Memory_.System.IHasMemory._Operations_.Size``1(VL.Core.IHasMemory{``0},System.Int64@)">
            <summary>The size in bytes of the memory block.</summary>
            <param name="Input_In">The instance providing the memory.</param>
            <param name="Result_Out">The size in bytes of the memory block.</param>
        </member>
        <member name="M:_VL_Collections_.Collections._Operations_.BinarySearch_KeySelector``4(``0,System.Func{``1,``2},``2,``1@,``1@,``2@,``2@,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Binary search in a sorted collection for the closest two elements. Takes KeySelector to get the key from the elements in the collection.</summary>
            <tags>timeline,interval</tags>
        </member>
        <member name="M:_VL_Collections_.Collections._Operations_.BinarySearch``3(``0,``1,``1@,``1@,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Binary search in a sorted collection for the closest two elements.</summary>
            <tags>timeline,interval</tags>
        </member>
        <member name="M:_VL_Collections_.Collections._Operations_.BinarySearch_KeyValuePair_Lerp``3(``0,System.Single,``1@,System.Single@,``1@,``1@,System.Single@,System.Single@,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Binary search in a sorted collection of KeyValuePairs for the closest two elements and interpolate linear between them weighted by the search key.</summary>
            <remarks>Needs an adaptive Lerp node defined for the value type of KeyValuePairs in collection.</remarks>
            <tags>timeline,interval</tags>
            <param name="Value_Out">Interpolated value between upper and lower.</param>
            <param name="Position_Out">The position of the search key between the two values from 0..1</param>
        </member>
        <member name="M:_VL_Collections_.Collections._Operations_.BinarySearch_KeySelector_Lerp``3(``0,System.Func{``1,System.Single},System.Single,``1@,System.Single@,``1@,``1@,System.Single@,System.Single@,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Binary search in a sorted collection for the closest two elements and interpolate linear between them weighted by the search key. Takes KeySelector to get the key from the elements in the collection.</summary>
            <remarks>Needs an adaptive Lerp node defined for the element type of collection.</remarks>
            <tags>timeline,interval</tags>
            <param name="Value_Out">Interpolated value between upper and lower.</param>
            <param name="Position_Out">The position of the search key between the two values from 0..1</param>
        </member>
        <member name="M:_VL_Collections_.Collections._Operations_.BinarySearch_KeyValuePair``4(``0,``1,``2@,``2@,``1@,``1@,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Binary search in a sorted collection of KeyValuePairs for the closest two elements.</summary>
            <tags>timeline,interval</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.FromSequence_ElementSelector``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Immutable.ImmutableDictionary{``1,``2}@)">
            <tags>ToDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.FromSequence_KeyValuePair``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Immutable.ImmutableDictionary{``0,``1}@)">
            <tags>ToDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Immutable.ImmutableDictionary{``0,``1}@)">
            <tags>ToDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Immutable.ImmutableDictionary{``1,``0}@)">
            <tags>ToDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Immutable.ImmutableDictionary{``0,``1}@)">
            <tags>ToDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.FromSequence``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Immutable.ImmutableDictionary{``1,``2}@)">
            <tags>ToDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.FromSequence``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2},System.Collections.Immutable.ImmutableDictionary{``1,``2}@)">
            <tags>ToDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.Cons``1(System.Collections.Immutable.ImmutableDictionary{System.String,``0},System.Collections.Immutable.ImmutableDictionary{System.String,``0}@)">
            <summary>Constructs a dictionary from its inputs</summary>
            <remarks>In a stateful patch a new dictionary will only be allocated if one of the inputs change</remarks>
        </member>
        <member name="M:_VL_Collections_.Collections.Dictionary._Operations_.Decons``1(System.Collections.Immutable.ImmutableDictionary{System.String,``0},System.Collections.Immutable.ImmutableDictionary{System.String,``0}@)">
            <summary>Deconstructs a dictionary to its outputs</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.HashSet._Operations_.FromValue``1(``0,System.Collections.Immutable.ImmutableHashSet{``0}@)">
            <tags>create,tohashset</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.HashSet._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Immutable.ImmutableHashSet{``0}@)">
            <tags>ToHashSet</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.HashSet._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Immutable.ImmutableHashSet{``0}@)">
            <tags>ToHashSet</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Interfaces.IMutableList._Operations_.SetSlice``2(``0,``1,System.Int32,``0@)">
            <summary>
            Replaces the item at the specified index with the new value.
                        If the index is out-of-bounds, it will be mapped back into the collection with a modulo operation, i.e. the collection behaves like a ring.
            </summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Interfaces.IReadOnlyList._Operations_.ToImage``1(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,VL.Lib.Basics.Imaging.PixelFormat,System.String,System.Boolean,VL.Lib.Basics.Imaging.IImage@)">
            <summary>Makes the memory accessible as an image. No data gets copied.</summary>
            <param name="Input_In">The pixel data.</param>
            <param name="Width_In">The width of the image.</param>
            <param name="Height_In">The height of the image.</param>
            <param name="Format_In">The pixel format of the image.</param>
            <param name="Original_Format_In">An optional hint at the original pixel format.</param>
            <param name="Is_Volatile_In">Whether or not provided memory is only valid in the current call stack.</param>
            <param name="Result_Out">An image which uses the given memory as its backing store.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Interfaces.IReadOnlyList._Operations_.GetList``1(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,System.Collections.Generic.IReadOnlyList{``0}@)">
            <summary>
            Returns a sub-list of the collection that is addressed via index and count.
                        If the index is out-of-bounds, it will be mapped back into the collection with a modulo operation, i.e. the collection behaves like a ring.
            </summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Interfaces.IReadOnlyList._Operations_.GetSlice``1(System.Collections.Generic.IReadOnlyList{``0},``0,System.Int32,``0@)">
            <summary>
            Returns the item at the specified index or the given default value in case the collection is empty.
                        If the index is out-of-bounds, it will be mapped back into the collection with a modulo operation, i.e. the collection behaves like a ring.
            </summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Interfaces.IReadOnlyList._Operations_.Pairwise``2(System.Collections.Generic.IReadOnlyList{``0},System.Func{``0,``0,``1},System.Collections.Generic.IReadOnlyList{``1}@)">
            <summary>Applies the selector for each pair in the collection and returns a new collection with one less item.</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.CopyTo_Count``1(VL.Lib.Collections.SpreadBuilder{``0},``0[],System.Int32,System.Int32,System.Int32,System.Boolean,VL.Lib.Collections.SpreadBuilder{``0}@,``0[]@)">
            <summary>Copies &apos;Count&apos; elements from &apos;Start Index&apos; to an Array at the &apos;Array Index&apos; position</summary>
            <param name="Input_In">Copies &apos;Count&apos; elements from &apos;Start Index&apos; to an Array at the &apos;Array Index&apos; position</param>
            <param name="Output_Out">Copies &apos;Count&apos; elements from &apos;Start Index&apos; to an Array at the &apos;Array Index&apos; position</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.IndexOf``1(VL.Lib.Collections.SpreadBuilder{``0},``0,VL.Lib.Collections.SpreadBuilder{``0}@,System.Int32@)">
            <summary>Searches for the specified item and returns index of the first occurrence</summary>
            <param name="Input_In">Searches for the specified item and returns index of the first occurrence</param>
            <param name="Output_Out">Searches for the specified item and returns index of the first occurrence</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.Insert``1(VL.Lib.Collections.SpreadBuilder{``0},System.Int32,``0,VL.Lib.Collections.SpreadBuilder{``0}@)">
            <summary>Inserts the item at specified index</summary>
            <param name="Input_In">Inserts the item at specified index</param>
            <param name="Output_Out">Inserts the item at specified index</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.RemoveAt``1(VL.Lib.Collections.SpreadBuilder{``0},System.Int32,VL.Lib.Collections.SpreadBuilder{``0}@)">
            <summary>Removes the item at specified index</summary>
            <param name="Input_In">Removes the item at specified index</param>
            <param name="Output_Out">Removes the item at specified index</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.Sort``1(VL.Lib.Collections.SpreadBuilder{``0},VL.Lib.Collections.SpreadBuilder{``0}@)">
            <summary>Sorts the elements in the entire spread builder using the default comparer</summary>
            <param name="Input_In">Sorts the elements in the entire spread builder using the default comparer</param>
            <param name="Output_Out">Sorts the elements in the entire spread builder using the default comparer</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.Sort_Comparer``1(VL.Lib.Collections.SpreadBuilder{``0},System.Func{``0,``0,System.Int32},VL.Lib.Collections.SpreadBuilder{``0}@)">
            <summary>Sorts the elements in the entire spread builder using the specified comparer function</summary>
            <param name="Input_In">Sorts the elements in the entire spread builder using the specified comparer function</param>
            <param name="Output_Out">Sorts the elements in the entire spread builder using the specified comparer function</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.FromValue``1(``0,VL.Lib.Collections.SpreadBuilder{``0}@)">
            <summary>Returns the input as a SpreadBuilder with one element</summary>
            <tags>create,tospreadbuilder</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.ValuesToVectors__2D(VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector2},System.Collections.Generic.IEnumerable{System.Single},VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector2}@)">
            <summary>Converts a sequence of values to vectors, if the count of the sequence is not divisible by the dimension the remainig value gets omitted</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.ValuesToVectors__3D(VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector3},System.Collections.Generic.IEnumerable{System.Single},VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector3}@)">
            <summary>Converts a sequence of values to vectors, if the count of the sequence is not divisible by the dimension the remainig value gets omitted</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.ValuesToVectors__4D(VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector4},System.Collections.Generic.IEnumerable{System.Single},VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector4}@)">
            <summary>Converts a sequence of values to vectors, if the count of the sequence is not divisible by the dimension the remainig value gets omitted</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.SpreadBuilder._Operations_.RemoveAll``1(VL.Lib.Collections.SpreadBuilder{``0},System.Func{``0,System.Boolean},VL.Lib.Collections.SpreadBuilder{``0}@)">
            <summary>Removes all the elements that match the conditions defined by the specified predicate.</summary>
            <param name="Input_In">Removes all the elements that match the conditions defined by the specified predicate.</param>
            <param name="Output_Out">Removes all the elements that match the conditions defined by the specified predicate.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.MutableArrayBuilder._Operations_.AsMemory_H``1(VL.Lib.Collections.ArrayBuilder{``0},VL.Lib.Collections.ArrayBuilder{``0}@,System.Memory{``0}@)">
            <summary>Exposes the content of the builder as System.Memory`1.</summary>
            <param name="Input_In">Exposes the content of the builder as System.Memory`1.</param>
            <param name="Output_Out">Exposes the content of the builder as System.Memory`1.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Builder.MutableArrayBuilder._Operations_.AsSpan_H``1(VL.Lib.Collections.ArrayBuilder{``0},VL.Lib.Collections.ArrayBuilder{``0}@,System.Span{``0}@)">
            <summary>Exposes the content of the builder as a System.Span`1.</summary>
            <param name="Input_In">Exposes the content of the builder as a System.Span`1.</param>
            <param name="Output_Out">Exposes the content of the builder as a System.Span`1.</param>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.FromSequence_Sustain_ML1zJ7dEH6TPqxRQZ2sF3E`1">
            <summary>Returns the same spread reference as last time if the entries didn&apos;t change.</summary>
            <tags>ToSpread</tags>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.I_Dedn0GP3agoLvHtKBtr1rt">
            <summary>Returns a spread of integers in the given range</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.LinearSpread_UXyN8H5ad7xPndIfMqu94V">
            <summary>Returns a spread of values linearly spread across the given range</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.CircleSpread_VtJNkGC54V8Ncx7LSXj8yA">
            <summary>Returns a spread of 2d vectors describing a circle</summary>
            <tags>circularspread</tags>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.RandomSpread_UNv4cR9YdgkPYF08xpFER9">
            <summary>Returns a spread of random values in the given range</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.RandomSpread__2d_I9bqxWe8mNLM5M2fLOR7WK">
            <summary>Returns a spread of random 2d vectors in the given range</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.RandomSpread__3d_OfbWI1PyXJBQNOMT64mrLn">
            <summary>Returns a spread of random 3d vectors in the given range</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.RectangleSpread_ImHrgx8LdteMTNwaf5kKle">
            <summary>Returns a spread of 2d vectors describing a rectangle</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.RoundRectSpread_Rmt2XaCR3RxM2abd2aMFQm">
            <summary>Returns a spread of 2d vectors describing a rectangle with rounded corners</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.SpiralSpread_ITJBOIsA5GyN2o4e0Az4vv">
            <summary>Returns a spread of 2d vectors describing a spiral</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.StarSpread_FAIbH9p5d7oOdhJHCXhJTA">
            <summary>Returns a spread of 2d vectors describing a star</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.Queue_Dsg6LDbSTKKNmL4xybMFXh`1">
            <summary>Inserts the input at index 0 and drops the last slice.</summary>
            <tags>fifo</tags>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.ResamplePoint_O6Ex8Ha7b3gM1UF4tcByx6`2">
            <summary>Resample the input spread to the number of count slices using point interpolation</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.ResampleLinear_T6XZTYHFIwEPcS5iC1aCi4`2">
            <summary>Resample the input spread to the number of count slices using linear interpolation</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.ResampleRepeat_HcOO13xjH07QObifcX5etq`2">
            <summary>Resample the input spread to the number of count slices by adding more slices from the beginning</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.ResampleBSpline_Oyxv30P5EeJOlRy2CvOyJW`2">
            <summary>Resample the input spread to the number of count slices using b-spline interpolation</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.ResampleBSpline_Tangent_FoeSgW0bZ2tMOSGpSQqnoF`2">
            <summary>Resample the input spread to the number of count slices using b-spline interpolation</summary>
            <remarks>Also returns the tangent of each point</remarks>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.ResampleHermite_E3rKHEXR5BEOguuIPaowVl`1">
            <summary>Resample the input spread to the number of count slices using hermite interpolation</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.Randomizer_UmP6nXJno3hLuovpQ3KDPD`1">
            <tags>shuffle,scramble,mix</tags>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.RandomSpread__4d_SDaG6L4r0h2LG9nOVLXBCG">
            <summary>Returns a spread of random 3d vectors in the given range</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.LinearSpread_Range_GaTuHYHNNNgQXveRZUAHXI`1">
            <summary>Returns a spread of values linearly spread across the given range</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.GridSpread__2D_Fhj5xydYiRTNdXppJ1Dvg1">
            <summary>Returns a spread of values linearly spread across the given range</summary>
            <tags>gridpoints,linearspread,cross</tags>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.GridSpread__3D_GbKoBslUVKWLOhuVujVws1">
            <summary>Returns a spread of values linearly spread across the given range</summary>
            <tags>cross,linearspread</tags>
        </member>
        <member name="T:_VL_Collections_.Collections.Spread.HexGridSpread__2D_U4wxvrTtAK2MQs93CKjwhp">
            <summary>Returns a spread of points arranged in a hexagonal grid specified by its resolution and the center and radius of a single grid cell.</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Add``1(VL.Lib.Collections.Spread{``0},``0,VL.Lib.Collections.Spread{``0}@)">
            <summary>Returns a new spread with the item added at the end</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.AddRange``1(VL.Lib.Collections.Spread{``0},System.Collections.Generic.IEnumerable{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Adds the specified items to the end of the spread</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Clear``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Returns the empty spread</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Concat``1(VL.Lib.Collections.Spread{System.Collections.Generic.IEnumerable{``0}},VL.Lib.Collections.Spread{``0}@)">
            <summary>Concatenates all incoming spreads to one spread</summary>
            <tags>cons</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.FromValue``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Constructs a spread from its inputs</summary>
            <remarks>If used in a stateful context a new spread will only be allocated if one of the inputs change</remarks>
            <tags>ToSpread,zip</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Distinct``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Returns distinct elements from a spread by using the default equality comparer to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Except``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Produces the set difference of two spreads by using the default equality comparer to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.GetSlice``1(VL.Lib.Collections.Spread{``0},``0,System.Int32,``0@)">
            <summary>Returns the slice at the specified index or the given default value in case the spread is empty</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.GetSpread``1(VL.Lib.Collections.Spread{``0},System.Int32,System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Returns a sub-spread of the spread that is addressed via index and count</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.IndexOf``1(VL.Lib.Collections.Spread{``0},``0,System.Int32@)">
            <summary>Searches for the specified item and returns the index of the first occurrence</summary>
            <param name="Input_In">Searches for the specified item and returns the index of the first occurrence</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Insert``1(VL.Lib.Collections.Spread{``0},System.Int32,``0,VL.Lib.Collections.Spread{``0}@)">
            <summary>Inserts the item at the specified index. Can throw ArgumentOutOfRangeException exception</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.InsertSlice``1(VL.Lib.Collections.Spread{``0},System.Int32,``0,VL.Lib.Collections.Spread{``0}@)">
            <summary>Inserts a new slice at the specified index</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.OrderBy``2(VL.Lib.Collections.Spread{``0},System.Boolean,System.Func{``0,``1},VL.Lib.Collections.Spread{``0}@)">
            <summary>Sorts the elements in the entire spread according to a key</summary>
            <tags>sort</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Pairwise``2(VL.Lib.Collections.Spread{``0},System.Func{``0,``0,``1},VL.Lib.Collections.Spread{``1}@)">
            <summary>Applies the selector for each pair in the spread and returns a new spread with one less item</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Select_Many``2(VL.Lib.Collections.Spread{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},VL.Lib.Collections.Spread{``1}@)">
            <summary>Projects each element of a spread to a sequence, and flattens the resulting sequences into one spread</summary>
            <tags>SelectMany</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.RemoveAt``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Removes the item at the specified index. Can throw ArgumentOutOfRangeException exception</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.RemoveSliceAt``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Removes the slice at the specified index</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Repeat``1(``0,System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Generates a spread that contains the same value repeated the given number of times</summary>
            <tags>select</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Resize``1(VL.Lib.Collections.Spread{``0},System.Int32,System.Func{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Returns a new spread of the given size using the item factory to create new items</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Reverse``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Inverts the order of the elements in a spread</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.SetItem``1(VL.Lib.Collections.Spread{``0},System.Int32,``0,VL.Lib.Collections.Spread{``0}@)">
            <summary>Replaces the item at the specified index with the new value. Can throw ArgumentOutOfRangeException exception</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.SetSlice``1(VL.Lib.Collections.Spread{``0},``0,System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Replaces the slice at the specified index with the new value</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Skip``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Bypasses a specified number of elements in the spread and then returns the remaining elements</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.SkipLast``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Bypasses a specified number of contiguous elements from the end of the spread and returns the remaining elements</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Sort``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Sorts the elements in the entire spread using the default comparer</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Sort_Comparer``1(VL.Lib.Collections.Spread{``0},System.Func{``0,``0,System.Int32},VL.Lib.Collections.Spread{``0}@)">
            <summary>Sorts the elements in the entire spread using the specified comparer function</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.SplitAt``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{``0}@,VL.Lib.Collections.Spread{``0}@)">
            <summary>Splits the spread at the given index into two spreads</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.SplitFirst``1(VL.Lib.Collections.Spread{``0},``0,VL.Lib.Collections.Spread{``0}@,``0@)">
            <summary>Splits the spread into its first slice and the rest</summary>
            <tags>CAR</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.SplitLast``1(VL.Lib.Collections.Spread{``0},``0,VL.Lib.Collections.Spread{``0}@,``0@)">
            <summary>Splits the spread into its last slice and the rest</summary>
            <tags>CDR</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Take``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Returns a specified number of contiguous elements from the start of the spread</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.TakeLast``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{``0}@)">
            <summary>Returns a specified number of contiguous elements from the end of the spread</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.ToBuilder``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.SpreadBuilder{``0}@)">
            <summary>Creates a spread builder with the same contents as this spread that can be efficiently modified across multiple operations</summary>
            <tags>create</tags>
            <param name="Input_In">Creates a spread builder with the same contents as this spread that can be efficiently modified across multiple operations</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Union``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Produces the set union of two spreads by using the default equality comparer</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.UnZip``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@,VL.Lib.Collections.Spread{``0}@)">
            <summary>The inverse of Zip. Interprets the input sequence as being interleaved and untangles it</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.ValuesToVectors__2D(System.Collections.Generic.IEnumerable{System.Single},VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Converts a sequence of values to vectors, if the count of the sequence is not divisible by the dimension the remainig value gets omitted</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.ValuesToVectors__3D(System.Collections.Generic.IEnumerable{System.Single},VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector3}@)">
            <summary>Converts a sequence of values to vectors, if the count of the sequence is not divisible by the dimension the remainig value gets omitted</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.ValuesToVectors__4D(System.Collections.Generic.IEnumerable{System.Single},VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector4}@)">
            <summary>Converts a sequence of values to vectors, if the count of the sequence is not divisible by the dimension the remainig value gets omitted</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Where``1(VL.Lib.Collections.Spread{``0},System.Func{``0,System.Int32,System.Boolean},VL.Lib.Collections.Spread{``0}@)">
            <summary>Filters a spread based on a predicate. Each element&apos;s index is used in the logic of the predicate function</summary>
            <tags>find,filter,sift</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Zip``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0},System.Boolean,VL.Lib.Collections.Spread{``0}@)">
            <summary>Interleaves the two input spreads</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.ToImage``1(VL.Lib.Collections.Spread{``0},System.Int32,System.Int32,VL.Lib.Basics.Imaging.PixelFormat,System.Boolean,System.String,VL.Lib.Basics.Imaging.IImage@)">
            <summary>Makes the spread accessible as an image. No data gets copied.</summary>
            <param name="Input_In">The pixel data.</param>
            <param name="Width_In">The width of the image.</param>
            <param name="Height_In">The height of the image.</param>
            <param name="Format_In">The pixel format of the image.</param>
            <param name="Is_Premultiplied_Alpha_In">Are the color channels pre-multiplied with the alpha value.</param>
            <param name="Original_Format_In">An optional hint at the original pixel format.</param>
            <param name="Result_Out">An image which uses the spread as its backing store.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.AvoidEmpty``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@,System.Boolean@)">
            <summary>Returns the default spread on the input If the input spread is empty.</summary>
            <tags>avoidnil,nil</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.AvoidEmpty_Element``1(VL.Lib.Collections.Spread{``0},``0,VL.Lib.Collections.Spread{``0}@,System.Boolean@)">
            <summary>Returns the a spread with the one element on the input if the input spread is empty.</summary>
            <tags>avoidnil,nil</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.AvoidEmpty_ElementCreator``1(VL.Lib.Collections.Spread{``0},System.Func{``0},VL.Lib.Collections.Spread{``0}@,System.Boolean@)">
            <summary>Returns the a spread with one element created by the delegate if the input spread is empty.</summary>
            <remarks>The delegate is only called if the input spread is empty.</remarks>
            <tags>avoidnil,nil</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.AvoidEmpty_Creator``1(VL.Lib.Collections.Spread{``0},System.Func{VL.Lib.Collections.Spread{``0}},VL.Lib.Collections.Spread{``0}@,System.Boolean@)">
            <summary>Returns the a spread created by the delegate if the input spread is empty.</summary>
            <remarks>The delegate is only called if the input spread is empty.</remarks>
            <tags>avoidnil,nil</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateCircleSpread(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single,System.Single,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Creates a spread of 2d vectors describing a circle</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateISpread(System.Int32,System.Int32,VL.Lib.Collections.Spread{System.Int32}@)">
            <summary>Creates a spread of integers in the given range</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateRandomSpread__2D(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Int32,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Creates a spread of random 2d vectors in the given range</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateRandomSpread__3D(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Int32,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector3}@)">
            <summary>Creates a spread of random 3d vectors in the given range</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateRectangleSpread(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Creates a spread of 2d vectors describing a rectangle</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateRoundRectSpread(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single,System.Int32,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Creates a spread of 2d vectors describing a rectangle with rounded corners</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateSpiralSpread(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single,System.Single,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Creates a spread of 2d vectors describing a spiral</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateStarSpread(Stride.Core.Mathematics.Vector2,System.Single,System.Single,System.Single,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Creates a spread of 2d vectors describing a star</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateRandomSpread(System.Single,System.Single,System.Int32,System.Int32,VL.Lib.Collections.Spread{System.Single}@)">
            <summary>Creates a spread of random values in the given range</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.GetInternalArray``1(VL.Lib.Collections.Spread{``0},``0[]@)">
            <summary>Gets the internal data array of the spread to pass it on to low-level operations. Use at your own risk, i.e. never modify it.</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateRandomSpread__4D(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,System.Int32,System.Int32,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector4}@)">
            <summary>Creates a spread of random 3d vectors in the given range</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateGridSpread__2D(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,VL.Lib.Collections.Spread.SpreadGenerators.LinearSpreadAlignment,Stride.Core.Mathematics.Vector2,VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector2},System.Boolean,Stride.Core.Mathematics.Int2,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <param name="Count_In">The number of grid points in X and Y.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateGridSpread__3D(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,VL.Lib.Collections.Spread.SpreadGenerators.LinearSpreadAlignment,Stride.Core.Mathematics.Vector3,VL.Lib.Collections.SpreadBuilder{Stride.Core.Mathematics.Vector3},System.Boolean,Stride.Core.Mathematics.Int3,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector3}@)">
            <param name="Count_In">The number of grid points in X and Y and Z.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.CreateHexGridSpread__2D(Stride.Core.Mathematics.Vector2,System.Single,System.Boolean,Stride.Core.Mathematics.Int2,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Returns a spread of points arranged in a hexagonal grid specified by its resolution and the center and radius of a single grid cell.</summary>
            <param name="Count_In">The number of grid points in X and Y.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},VL.Lib.Collections.Spread{``0}@)">
            <tags>create,tospread</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Decons``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Deconstructs a spread to its outputs</summary>
            <remarks>Throws index out of bounds exception if there are more outputs than the spread has slices</remarks>
            <tags>unzip</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.Cons``1(VL.Lib.Collections.Spread{``0},VL.Lib.Collections.Spread{``0}@)">
            <summary>Constructs a spread from its inputs</summary>
            <remarks>If used in a stateful context a new spread will only be allocated if one of the inputs change</remarks>
            <tags>FromValue,zip,ToSpread</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.RemoveAll``1(VL.Lib.Collections.Spread{``0},System.Func{``0,System.Boolean},VL.Lib.Collections.Spread{``0}@)">
            <summary>Removes all the elements that match the conditions defined by the specified predicate.</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.GroupBy_Length``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{VL.Lib.Collections.Spread{``0}}@,VL.Lib.Collections.Spread{``0}@)">
            <summary>Splits the input into sub-spreads with the requested number of items</summary>
            <tags>partition,split,tokenize</tags>
            <param name="Item_Count_In">The number of elements that should form each sub spread</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Spread._Operations_.GroupBy_Count``1(VL.Lib.Collections.Spread{``0},System.Int32,VL.Lib.Collections.Spread{VL.Lib.Collections.Spread{``0}}@,VL.Lib.Collections.Spread{``0}@)">
            <summary>Splits the input into the requested number of sub-spreads</summary>
            <tags>partition,split,tokenize</tags>
            <param name="Count_In">The number of groups/sub-spreads expected on the output</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableDictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.Dictionary{``1,``0}@)">
            <summary>Creates a System.Collections.Generic.Dictionary`2 from an System.Collections.Generic.IEnumerable`1 according to a specified key selector function.</summary>
            <tags>ToDictionary</tags>
            <param name="Input_In">An System.Collections.Generic.IEnumerable`1 to create a System.Collections.Generic.Dictionary`2 from.</param>
            <param name="Key_Selector_In">A function to extract a key from each element.</param>
            <param name="Result_Out">A System.Collections.Generic.Dictionary`2 that contains keys and values.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableDictionary._Operations_.FromSequence``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.Dictionary{``1,``2}@)">
            <summary>Creates a System.Collections.Generic.Dictionary`2 from an System.Collections.Generic.IEnumerable`1 according to specified key selector and element selector functions.</summary>
            <tags>ToDictionary</tags>
            <param name="Input_In">An System.Collections.Generic.IEnumerable`1 to create a System.Collections.Generic.Dictionary`2 from.</param>
            <param name="Key_Selector_In">A function to extract a key from each element.</param>
            <param name="Element_Selector_In">A transform function to produce a result element value from each element.</param>
            <param name="Result_Out">A System.Collections.Generic.Dictionary`2 that contains values of type TElement selected from the input sequence.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableDictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.Dictionary{``1,``0}@)">
            <summary>Creates a System.Collections.Generic.Dictionary`2 from an System.Collections.Generic.IEnumerable`1 according to a specified key selector function and key comparer.</summary>
            <tags>ToDictionary</tags>
            <param name="Input_In">An System.Collections.Generic.IEnumerable`1 to create a System.Collections.Generic.Dictionary`2 from.</param>
            <param name="Key_Selector_In">A function to extract a key from each element.</param>
            <param name="Comparer_In">An System.Collections.Generic.IEqualityComparer`1 to compare keys.</param>
            <param name="Result_Out">A System.Collections.Generic.Dictionary`2 that contains keys and values.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableDictionary._Operations_.FromSequence``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.Dictionary{``1,``2}@)">
            <summary>Creates a System.Collections.Generic.Dictionary`2 from an System.Collections.Generic.IEnumerable`1 according to a specified key selector function, a comparer, and an element selector function.</summary>
            <tags>ToDictionary</tags>
            <param name="Input_In">An System.Collections.Generic.IEnumerable`1 to create a System.Collections.Generic.Dictionary`2 from.</param>
            <param name="Key_Selector_In">A function to extract a key from each element.</param>
            <param name="Element_Selector_In">A transform function to produce a result element value from each element.</param>
            <param name="Comparer_In">An System.Collections.Generic.IEqualityComparer`1 to compare keys.</param>
            <param name="Result_Out">A System.Collections.Generic.Dictionary`2 that contains values of type TElement selected from the input sequence.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableDictionary._Operations_.Cons``1(System.Collections.Generic.Dictionary{System.String,``0},System.Collections.Generic.Dictionary{System.String,``0}@)">
            <summary>Constructs a dictionary from its inputs</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableDictionary._Operations_.Decons``1(System.Collections.Generic.Dictionary{System.String,``0},System.Collections.Generic.Dictionary{System.String,``0}@)">
            <summary>Deconstructs a dictionary to its outputs</summary>
        </member>
        <member name="T:_VL_Collections_.Collections.Mutable.MutableArray.StoreSequence_C1jOHeGCee4MYa7QQLGZ42`1">
            <summary>Returns the upstream sequence as an array. This can be done efficiently without copying for immutable collections based on arrays like Spread or ImmutableArray. For other collection types the content will be copied into the internal array and returned.</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableArray._Operations_.ToImage``1(``0[],System.Int32,System.Int32,VL.Lib.Basics.Imaging.PixelFormat,System.String,System.Boolean,VL.Lib.Basics.Imaging.IImage@)">
            <summary>Makes the memory accessible as an image. No data gets copied.</summary>
            <param name="Input_In">The pixel data.</param>
            <param name="Width_In">The width of the image.</param>
            <param name="Height_In">The height of the image.</param>
            <param name="Format_In">The pixel format of the image.</param>
            <param name="Original_Format_In">An optional hint at the original pixel format.</param>
            <param name="Is_Volatile_In">Whether or not provided memory is only valid in the current call stack.</param>
            <param name="Result_Out">An image which uses the given memory as its backing store.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableArray._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},``0[]@)">
            <summary>Creates an array from a sequence</summary>
            <tags>ToArray</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableArray._Operations_.Cons``1(``0[],``0[]@)">
            <summary>Constructs an array from its inputs</summary>
            <tags>FromValue,zip</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Mutable.MutableArray._Operations_.Decons``1(``0[],``0[]@)">
            <summary>Deconstructs an array to its outputs</summary>
            <remarks>Throws index out of bounds exception if there are more outputs than the array has slices</remarks>
            <tags>unzip</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedDictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Immutable.ImmutableSortedDictionary{``0,``1}@)">
            <tags>ToSortedDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedDictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Immutable.ImmutableSortedDictionary{``0,``1}@)">
            <tags>ToSortedDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedDictionary._Operations_.FromSequence``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Immutable.ImmutableSortedDictionary{``0,``1}@)">
            <tags>ToSortedDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedDictionary._Operations_.FromSequence``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Immutable.ImmutableSortedDictionary{``1,``2}@)">
            <tags>ToSortedDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedDictionary._Operations_.FromSequence``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Immutable.ImmutableSortedDictionary{``1,``2}@)">
            <tags>ToSortedDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedDictionary._Operations_.FromSequence``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2},System.Collections.Immutable.ImmutableSortedDictionary{``1,``2}@)">
            <tags>ToSortedDictionary</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedSet._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Immutable.ImmutableSortedSet{``0}@)">
            <tags>ToSortedSet</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.SortedSet._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0},System.Collections.Immutable.ImmutableSortedSet{``0}@)">
            <tags>ToSortedSet</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Stack._Operations_.FromValue``1(``0,System.Collections.Immutable.ImmutableStack{``0}@)">
            <tags>create,tostack</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Array._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Immutable.ImmutableArray{``0}@)">
            <tags>ToArray</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Array._Operations_.Cons``1(System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0}@)">
            <summary>Constructs an array from its inputs</summary>
            <remarks>If used in a stateful context a new array will only be allocated if one of the inputs change</remarks>
            <tags>FromValue,zip</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Array._Operations_.Decons``1(System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0}@)">
            <summary>Deconstructs an array to its outputs</summary>
            <remarks>Throws index out of bounds exception if there are more outputs than the array has slices</remarks>
            <tags>unzip</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Queue._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Immutable.ImmutableQueue{``0}@)">
            <tags>create,ToQueue</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Queue._Operations_.FromArray``1(``0[],System.Collections.Immutable.ImmutableQueue{``0}@)">
            <tags>create</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Queue._Operations_.FromValue``1(``0,System.Collections.Immutable.ImmutableQueue{``0}@)">
            <tags>create,toqueue</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean@)">
            <summary>Determines whether all elements of a sequence satisfy a condition</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.AND_Spectral(System.Collections.Generic.IEnumerable{System.Boolean},System.Boolean@)">
            <summary>Determines whether all elements of a bool sequence are true</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Any``1(System.Collections.Generic.IEnumerable{``0},System.Boolean@)">
            <summary>Determines whether a sequence contains any elements</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Any_Predicate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean@)">
            <summary>Determines whether any element of a sequence satisfies a condition</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Average``3(``0,``1@)">
            <tags>mean</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Average_Selector``4(``0,System.Func{``1,``2},``2@)">
            <tags>mean</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.CreateDefault``1">
            <summary>Returns an empty sequence</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.FirstOrDefault``2(``0,``1,``0@,``1@)">
            <summary>Returns the first element of a sequence, or the given default value if the sequence contains no elements</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.FirstOrDefault_Predicate``2(``0,``1,System.Func{``1,System.Boolean},``0@,``1@)">
            <summary>Returns the first element of the sequence that satisfies a condition or the given default value if no such element is found</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.GetPairedSpreadsSwapped``1(System.Collections.Generic.IEnumerable{``0},VL.Lib.Collections.Spread{``0}@,VL.Lib.Collections.Spread{``0}@)">
            <remarks>There is a fixed version available where outputs are not swapped: GetPairedSpreads</remarks>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.LastOrDefault``2(``0,``1,``0@,``1@)">
            <summary>Returns the last element of a sequence, or the given default value if the sequence contains no elements</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.LastOrDefault_Predicate``2(``0,``1,System.Func{``1,System.Boolean},``0@,``1@)">
            <summary>Returns the last element of a sequence that satisfies a condition or the given default value if no such element is found</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Max``3(``0,``1@)">
            <tags>bounds</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Min``3(``0,``1@)">
            <tags>bounds</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.None``1(System.Collections.Generic.IEnumerable{``0},System.Boolean@)">
            <summary>Determines whether a sequence contains no elements</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.None_Predicate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean@)">
            <summary>Determines whether all elements of a sequence do not satisfy a condition</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.OR_Spectral(System.Collections.Generic.IEnumerable{System.Boolean},System.Boolean@)">
            <summary>Determines whether any elements of a bool sequence is true</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean@)">
            <summary>Determines whether two sequences are equal by comparing the elements by using the default equality comparer for their type</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.SplitFirst``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}@,``0@)">
            <summary>Splits the sequence into its first element and the rest</summary>
            <tags>CAR</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.SplitLast``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}@,``0@)">
            <summary>Splits the sequence into its last element and the rest</summary>
            <tags>CDR</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Sum``3(``0,``1@)">
            <tags>+,add,spectral</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.ToStream(System.Collections.Generic.IEnumerable{System.Byte},System.Boolean,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@)">
            <tags>raw</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0}@)">
            <summary>Creates a System.Collections.Generic.List`1 from an System.Collections.Generic.IEnumerable`1.</summary>
            <param name="Input_In">The System.Collections.Generic.IEnumerable`1 to create a System.Collections.Generic.List`1 from.</param>
            <param name="Result_Out">A System.Collections.Generic.List`1 that contains elements from the input sequence.</param>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},``1@)">
            <summary>Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Cast``1(System.Collections.IEnumerable,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Casts the elements of an System.Collections.IEnumerable to the specified type</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Concatenates all incoming sequences to one sequence</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Count``1(System.Collections.Generic.IEnumerable{``0},System.Int32@)">
            <summary>Returns the number of elements in a sequence</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Count_Predicate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32@)">
            <summary>Returns a number that represents how many elements in the specified sequence satisfy a condition</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Returns distinct elements from a sequence by using the default equality comparer to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Empty``1(System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Returns an empty sequence</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Produces the set difference of two sequences by using the default equality comparer to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Except_Selector``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Produces the set difference of two sequences by using a key selector delegate to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``0}}@)">
            <summary>Groups the elements of a sequence according to a specified key selector function</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Produces the set intersection of two sequences by using the default equality comparer to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Intersect_Selector``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Produces the set intersection of two sequences by using a key selector delegate to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.OfType``1(System.Collections.IEnumerable,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Filters the elements of a sequence based on a specified type</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}@)">
            <summary>Sorts the elements of a sequence in ascending order according to a key</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}@)">
            <summary>Sorts the elements of a sequence in descending order according to a key</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1},System.Collections.Generic.IEnumerable{``1}@)">
            <summary>Projects each element of a sequence into a new form by incorporating the element&apos;s index</summary>
            <tags>project</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Select_Many``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Collections.Generic.IEnumerable{``1}@)">
            <summary>Projects each element of a sequence to a sequence, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element</summary>
            <tags>project</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Reverse``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Inverts the order of the elements in a sequence</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Bypasses a specified number of elements in a sequence and then returns the remaining elements</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements. The element&apos;s index is used in the logic of the predicate function</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.SplitAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Splits the sequence at the given index into two sequences</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Returns a specified number of contiguous elements from the start of a sequence</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Returns elements from a sequence as long as a specified condition is true. The element&apos;s index is used in the logic of the predicate function</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}@)">
            <summary>Performs a subsequent ordering of the elements in a sequence in ascending order according to a key</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Linq.IOrderedEnumerable{``0}@)">
            <summary>Performs a subsequent ordering of the elements in a sequence in descending order, according to a key</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.FromValue``1(``0,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Returns the input as a Sequence with one element</summary>
            <tags>create,tosequence</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Produces the set union of two sequences by using the default equality comparer</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Union_Selector``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Produces the set union of two sequences by using a key selector delegate to compare values</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.UnZip``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>The inverse of Zip. Interprets the input sequence as being interleaved and untangles it</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Filters a sequence of values based on a predicate. Each element&apos;s index is used in the logic of the predicate function</summary>
            <tags>find,filter,sift</tags>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Zip``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>Interleaves the two input sequences. To get the functionality as defined in LINQ use Zip (LINQ)</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Sequence._Operations_.Zip_LINQ``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2},System.Collections.Generic.IEnumerable{``2}@)">
            <summary>Applies a specified function to the corresponding elements of two sequences, producing a sequence of the results</summary>
        </member>
        <member name="M:_VL_Collections_.Collections.Trees.Command.Continue._Operations_.OneUp(VL.Lib.Collections.Trees.ITraverseCommand@)">
            <summary>Don&apos;t traverse Children and also don&apos;t traverse the rest of the siblings. Not supported by BreadthFirst traversing.</summary>
            <param name="Result_Out">Don&apos;t traverse Children and also don&apos;t traverse the rest of the siblings. Not supported by BreadthFirst traversing.</param>
        </member>
        <member name="M:_PublicAPI_.VL.ISolution._Operations_.Confirm(VL.Lang.PublicAPI.ISolution,VL.Model.SolutionUpdateKind,VL.Lang.PublicAPI.ISolution@)">
            <summary>Make this solution the current one.</summary>
            <param name="Input_In">Make this solution the current one.</param>
            <param name="Output_Out">Make this solution the current one.</param>
        </member>
        <member name="M:_PublicAPI_.VL.ISolution._Operations_.SetPinValue_OrFurtherOutwards(VL.Lang.PublicAPI.ISolution,System.Collections.Immutable.ImmutableStack{System.UInt32},System.String,System.Object,VL.Lang.PublicAPI.ISolution@)">
            <summary>Sets the pin if not connected. If connected to a pin of the surrounding node definition: goes to caller site and sets the pin there.</summary>
        </member>
        <member name="M:_PublicAPI_.VL.ISolution._Operations_.SetPinValue(VL.Lang.PublicAPI.ISolution,System.UInt32,System.String,System.Object,VL.Lang.PublicAPI.ISolution@)">
            <summary>Sets the value of the given pin.</summary>
            <param name="Input_In">Sets the value of the given pin.</param>
            <param name="Node_In">The unique id of the node application.</param>
            <param name="Pin_In">The name of the input pin on which the value should get set.</param>
            <param name="Value_In">The value to set.</param>
            <param name="Output_Out">A new solution with the value stored in the pin of the given node.</param>
        </member>
        <member name="M:_PublicAPI_.VL.ISolution._Operations_.SetPinValue_OrFurtherOutwards(VL.Lang.PublicAPI.ISolution,System.Collections.Immutable.ImmutableStack{VL.Core.UniqueId},System.String,System.Object,VL.Lang.PublicAPI.ISolution@)">
            <summary>Sets the pin if not connected. If connected to a pin of the surrounding node definition: goes to caller site and sets the pin there.</summary>
        </member>
        <member name="M:_PublicAPI_.VL.ISolution._Operations_.SetPinValue(VL.Lang.PublicAPI.ISolution,VL.Core.UniqueId,System.String,System.Object,VL.Lang.PublicAPI.ISolution@)">
            <summary>Sets the value of the given pin.</summary>
            <param name="Input_In">Sets the value of the given pin.</param>
            <param name="Node_In">The unique id of the node application.</param>
            <param name="Pin_In">The name of the input pin on which the value should get set.</param>
            <param name="Value_In">The value to set.</param>
            <param name="Output_Out">A new solution with the value stored in the pin of the given node.</param>
        </member>
        <member name="M:_PublicAPI_.VL.ISolution._Operations_.ModifyPinGroup(VL.Lang.PublicAPI.ISolution,System.UInt32,System.String,System.Boolean,VL.Lang.PublicAPI.PinGroupBuilder@)">
            <summary>
            Returns a VL.Lang.PublicAPI.PinGroupBuilder which can be used to modify the given pin group.
                        The builder expects all current pins to get added and once finished will synchronize the internal pin group.
            </summary>
            <param name="Input_In">
            Returns a VL.Lang.PublicAPI.PinGroupBuilder which can be used to modify the given pin group.
                        The builder expects all current pins to get added and once finished will synchronize the internal pin group.
            </param>
            <param name="Node_Id_In">The unique id of the node application.</param>
            <param name="Pin_Group_In">The name of the pin group the returned builder should modify.</param>
            <param name="Is_Input_In">Whether or not the group is an input our output group.</param>
            <param name="Result_Out">A VL.Lang.PublicAPI.PinGroupBuilder to modify the given pin group.</param>
        </member>
        <member name="M:_PublicAPI_.VL.ISolution._Operations_.ModifyPinGroup(VL.Lang.PublicAPI.ISolution,VL.Core.UniqueId,System.String,System.Boolean,VL.Lang.PublicAPI.PinGroupBuilder@)">
            <summary>
            Returns a VL.Lang.PublicAPI.PinGroupBuilder which can be used to modify the given pin group.
                        The builder expects all current pins to get added and once finished will synchronize the internal pin group.
            </summary>
            <param name="Input_In">
            Returns a VL.Lang.PublicAPI.PinGroupBuilder which can be used to modify the given pin group.
                        The builder expects all current pins to get added and once finished will synchronize the internal pin group.
            </param>
            <param name="Node_Id_In">The unique id of the node application.</param>
            <param name="Pin_Group_In">The name of the pin group the returned builder should modify.</param>
            <param name="Is_Input_In">Whether or not the group is an input our output group.</param>
            <param name="Result_Out">A VL.Lang.PublicAPI.PinGroupBuilder to modify the given pin group.</param>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Socket.UdpClient_Reactive_BOd1NI2Q70rNLdxNE7z8jj">
            <summary>A reactive UDP client (sender).</summary>
            <remarks>Use in connection with ToDatagrams [IO.Socket].</remarks>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Socket.UdpServer_Reactive_DVOunIaysXuOsl2X0gaBGw">
            <summary>A reactive UDP server (receiver).</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Socket.ToDatagrams_NqOArIZnZHfQJCMXWLcZF9">
            <summary>Returns an observable of datagrams (comprising of an IP endpoint and a payload).</summary>
            <remarks>Use in connection with UDPClient (Reactive) [IO.Socket].</remarks>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Socket.UdpClient_ABWqm1HsYpNPHycPXOjEv8">
            <summary>A UDP client (sender).</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Socket.UdpServer_KWe4UurP6xMOND9k3h1iMA">
            <summary>A UDP server (receiver).</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Socket.ToDatagram_GUYRku2XzpsMgeeeoNpw2g">
            <summary>Returns a datagram comprising of an IP endpoint and a payload.</summary>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Socket.Datagram._Operations_.Create_Array(System.Net.IPEndPoint,System.Byte[],VL.Lib.IO.Socket.Datagram@)">
            <summary>Creates a datagram with a mutable array of bytes as data.</summary>
            <param name="Remote_End_Point_In">The remote end point.</param>
            <param name="Payload_In">The payload.</param>
            <param name="Output_Out">Creates a datagram with a mutable array of bytes as data.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Socket.Datagram._Operations_.Create(VL.Core.NodeContext,System.Net.IPEndPoint,VL.Lib.Collections.Spread{System.Byte},VL.Lib.IO.Socket.Datagram@)">
            <summary>Creates a datagram with a spread of bytes as data.</summary>
            <param name="Remote_End_Point_In">The remote end point.</param>
            <param name="Payload_In">The payload.</param>
            <param name="Output_Out">Creates a datagram with a spread of bytes as data.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Socket.Datagram._Operations_.Split_Array(VL.Lib.IO.Socket.Datagram,System.Net.IPEndPoint@,System.Byte[]@)">
            <summary>Splits the datagram into its remote end point and payload as raw bytes.</summary>
            <param name="Input_In">Splits the datagram into its remote end point and payload as raw bytes.</param>
            <param name="Remote_End_Point_Out">The remote end point from which this datagram was received or will be sent to. Returns none if it&apos;s the default value.</param>
            <param name="Payload_Out">The payload of the datagram. Returns the empty array if it&apos;s the default value.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Socket.Datagram._Operations_.Split(VL.Lib.IO.Socket.Datagram,System.Net.IPEndPoint@,VL.Lib.Collections.Spread{System.Byte}@)">
            <summary>Splits the datagram into its remote end point and payload.</summary>
            <param name="Input_In">Splits the datagram into its remote end point and payload.</param>
            <param name="Remote_End_Point_Out">The remote end point from which this datagram was received or will be sent to. Returns none if it&apos;s the default value.</param>
            <param name="Payload_Out">The payload of the datagram. Returns the empty spread if it&apos;s the default value.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Socket.UdpSocket._Operations_.Update_H(VL.Lib.IO.Socket.UDPSocket,System.Net.IPEndPoint,System.Boolean,System.Boolean,VL.Lib.IO.Socket.UDPSocket@,VL.Lib.Basics.Resources.IResourceProvider{System.Net.Sockets.Socket}@)">
            <summary>Configures the internally managed socket provider.</summary>
            <param name="Input_In">Configures the internally managed socket provider.</param>
            <param name="Local_End_Point_In">The local end point to use.</param>
            <param name="Bind_In">Whether or not to bind the socket.</param>
            <param name="Enabled_In">Whether or not the socket is active.</param>
            <param name="Output_Out">Configures the internally managed socket provider.</param>
            <param name="Result_Out">A socket provider which can be used by multiple threads in parallel.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Socket.Receiver_Datagram._Operations_.Update_H(VL.Lib.IO.Socket.DatagramReceiver,VL.Lib.Basics.Resources.IResourceProvider{System.Net.Sockets.Socket},VL.Lib.IO.Socket.DatagramReceiver@)">
            <summary>Configures the receiver.</summary>
            <param name="Input_In">Configures the receiver.</param>
            <param name="Local_Socket_In">The local socket to receive data from.</param>
            <param name="Output_Out">Configures the receiver.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Socket.Sender_Datagram._Operations_.Update_H(VL.Lib.IO.Socket.DatagramSender,VL.Lib.Basics.Resources.IResourceProvider{System.Net.Sockets.Socket},System.IObservable{VL.Lib.IO.Socket.Datagram},VL.Lib.IO.Socket.DatagramSender@)">
            <summary>Configures the sender.</summary>
            <param name="Input_In">Configures the sender.</param>
            <param name="Local_Socket_In">The local socket to send data out of.</param>
            <param name="Datagrams_In">The datagrams to send.</param>
            <param name="Output_Out">Configures the sender.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Ports.SerialPort._Operations_.Update_H(VL.Lib.IO.Ports.SerialPort,VL.Lib.IO.Ports.ComPort,System.Int32,System.Int32,System.IO.Ports.StopBits,System.IO.Ports.Parity,System.IO.Ports.Handshake,System.Boolean,System.Boolean,System.Boolean,System.Boolean,VL.Lib.IO.Ports.SerialPort@,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Ports.SerialPort}@)">
            <summary>Configures the internally managed serialport provider.</summary>
            <param name="Input_In">Configures the internally managed serialport provider.</param>
            <param name="Output_Out">Configures the internally managed serialport provider.</param>
            <param name="Result_Out">A serialport provider which can be used by multiple threads in parallel.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Ports.Receiver._Operations_.Update_H(VL.Lib.IO.Ports.Receiver,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Ports.SerialPort},VL.Lib.IO.Ports.Receiver@)">
            <summary>Configures the receiver.</summary>
            <param name="Input_In">Configures the receiver.</param>
            <param name="Port_In">The serialport to receive data from.</param>
            <param name="Output_Out">Configures the receiver.</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Ports.Sender._Operations_.Update_H(VL.Lib.IO.Ports.Sender,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Ports.SerialPort},System.IObservable{VL.Lib.Collections.Spread{System.Byte}},VL.Lib.IO.Ports.Sender@)">
            <summary>Configures the sender.</summary>
            <param name="Input_In">Configures the sender.</param>
            <param name="Port_In">The serialport to send data to.</param>
            <param name="Data_In">The bytes to send.</param>
            <param name="Output_Out">Configures the sender.</param>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.SerialPort_AiAKpmuYyUIPIlE9TNeP81">
            <summary>Sends and receives data from serial ports</summary>
            <tags>rs2332</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileReader__1_IjerHItQqY4PCwNKtTBHV2">
            <summary>Reads a file asynchronously and returns its content as a Spread&lt;Byte&gt;, reports Progress and a bang when completed.</summary>
            <remarks>Beware: the output is not available in the same frame the Read input is triggered but only when On Completed bangs.</remarks>
            <tags>load,open</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileReader_String_1_FlSWv1BZxAXQcA8WA0GZhK">
            <summary>Reads a file asynchronously and returns its content as a string, reports Progress and a bang when completed.</summary>
            <remarks>Beware: the output is not available in the same frame the Read input is triggered but only when On Completed bangs.</remarks>
            <tags>load,open</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileWriter_String_1_R7mOvMTuwndMvNCG0IO3Dv">
            <summary>Writes a string to a file asynchronously, reports Progress and a bang when completed.</summary>
            <remarks>Beware: the file is not available on disk the same frame the Write input is triggered but only when On Completed bangs.</remarks>
            <tags>save</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileWriter__1_J7vmTTktovMOYBUQelwW3O">
            <summary>Writes a Spread&lt;Byte&gt; to a file asynchronously, reports Progress and a bang when completed.</summary>
            <remarks>Beware: the file is not available on disk the same frame the Write input is triggered but only when On Completed bangs.</remarks>
            <tags>save</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.StringReader_Reactive_OZuCM5n4eNWP7pF1DYKlef">
            <tags>async</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.StringWriter_Reactive_NvLjtZwaL21LuVr42kqkiy">
            <tags>async</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileReader_String_TT8gWSNJDrLPfzy5QjExui">
            <summary>Reads the data as string from the given text file.</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileReader_Nbs971t4mpQOvLXHem7Bzs">
            <summary>Reads the data from the given file.</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileWriter_U2bWfQ8dEnvPg38ttqISAx">
            <summary>Writes the data to the given file.</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileWriter_String_RhzHb4NoVZQP8wGq101JDK">
            <summary>Writes the string to given text file.</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileReader_Reactive_VixxmbVX6AtMbizi7gZULo">
            <summary>Reads the data from the given file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileReader_String_Reactive_VTFPwrKqLPQOeQrp8g7eWh">
            <summary>Reads the data as string from the given text file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileWriter_Reactive_AtVTqYvzpFTNOhjHcbX8pA">
            <summary>Writes the data to the given file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.FileWriter_String_Reactive_IKMLoIqK7roLwjblZg9cs1">
            <summary>Writes the string to given text file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.SerialPort4_C.SendString(System.String,System.String,System.Boolean)">
            <param name="Terminator_In">Defaults to CRLF, also known as #13#10 or \r\n</param>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Net.IPs_Wifi_MOfJFeomvygPhh7bpt6VEW">
            <summary>Returns wifi IP adresses of this PC.</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Net.IPs_Ethernet_Bka6gkmtoNRQc5HnTGexxa">
            <summary>Returns ethernet IP adresses of this PC.</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Net.IPs_SU385Q2zoCqLj1U3xPCyTo">
            <summary>Returns both wifi and ethernet IP adresses of this PC.</summary>
        </member>
        <member name="T:_VL_CoreLib_IO_.IO.Net.Ping_MapdEBfx7GmNw3zKjfmzsc">
            <summary>Reports the ping status of the given IP.</summary>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Net.Ping_MapdEBfx7GmNw3zKjfmzsc.Update(System.String,System.Single,System.Boolean,System.Boolean@,System.String@,System.Int32@)">
            <param name="Period_In">In seconds</param>
            <param name="Roundtrip_Time_Out">In milliseconds</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Net._Operations_.DefaultAddress(System.Net.IPAddress@)">
            <summary>The default IP address to use for unconnected pins. Points to the 127.0.0.1</summary>
            <param name="Default_Address_Out">The default IP address to use for unconnected pins. Points to the 127.0.0.1</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Net._Operations_.DefaultIPEndPoint(System.Net.IPEndPoint@)">
            <summary>The default IP end point to use for unconnected pins. Points to 127.0.0.1 and port 0</summary>
            <param name="Default_IPEnd_Point_Out">The default IP end point to use for unconnected pins. Points to 127.0.0.1 and port 0</param>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Net._Operations_.GetHostAddresses(System.String,VL.Lib.Collections.Spread{System.Net.IPAddress}@)">
            <summary>Returns the Internet Protocol (IP) addresses for the specified host</summary>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Net._Operations_.GetHostAddressesAsync(System.String,System.IObservable{VL.Lib.Collections.Spread{System.Net.IPAddress}}@)">
            <summary>Returns the Internet Protocol (IP) addresses for the specified host asynchronously</summary>
        </member>
        <member name="M:_VL_CoreLib_IO_.IO.Net._Operations_.GetIPEndPointAsync(System.String,System.Int32,System.IObservable{System.Net.IPEndPoint}@)">
            <summary>Returns the IP end point for the specified host and port asynchronously</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Select_Many_TaON6llvjjFNAoxwHbG7Qy`3">
            <tags>project</tags>
        </member>
        <member name="T:_VL_Reactive_.Reactive.ToBackground_Up0anaeyxPTOUQbikDZ9zh`2">
            <summary>Puts an incoming observable into the background using the TaskPool</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.ToObservable_Switch_Factory_C`1">
            <summary>Retrieves a new obserable from the factory whenever &apos;Send&apos; is true and uses it for the output observable which is always the same an never completes.</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.MultimediaTimer_RPjn37rOx3TMmWWspWTMqJ">
            <summary>Observable timer on a backround thread using the windows multimedia timer with about 1ms precision.</summary>
            <remarks>You should only use one multimedia timer at a time!</remarks>
        </member>
        <member name="M:_VL_Reactive_.Reactive.MultimediaTimer_RPjn37rOx3TMmWWspWTMqJ.Update(System.Int32,VL.Core.TimerMode,System.Boolean,System.Boolean,System.IObservable{VL.Lib.Reactive.TimerClock}@,System.Single@)">
            <param name="Period_In">The period time in milliseconds.</param>
            <param name="Reset_Counter_In">If set to true the frame counter will be reset.</param>
            <param name="Enabled_In">If set to true the timer runs.</param>
            <param name="Result_Out">Observable of a TimerClock that can be used as frame clock input for animation nodes.</param>
            <param name="Last_Period_Out">Last measured period time in milliseconds.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.BusyWaitTimer_Oiuupkv6usHNXRlLQ4SAwb.Update(System.Single,System.Int32,VL.Core.TimerMode,System.Threading.ApartmentState,System.Boolean,System.Boolean,System.IObservable{VL.Lib.Reactive.TimerClock}@,System.Single@)">
            <param name="Period_In">The period time in milliseconds. Values smaller than 1 are possible.</param>
            <param name="Wait_Accuracy_In">Helps to save CPU power for period times higher than this value. It is the start of the busy wait phase before the peroid end in milliseconds. Before that Thread.Sleep(1) is called periodically, the precision of Thread.Spleep(1) depends on the current windows system timer accuracy, usually between 16ms and 4ms.</param>
            <param name="Thread_Apartment_State_In">Set to MTA for background threads and STA if the thread is used for UIs</param>
            <param name="Reset_Counter_In">If set to true the frame counter will be reset.</param>
            <param name="Enabled_In">If set to true the timer runs.</param>
            <param name="Result_Out">Observable of a TimerClock that can be used as frame clock input for animation nodes.</param>
            <param name="Last_Period_Out">Last measured period time in milliseconds.</param>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Subscribe_HQMsg5b9zDWN4pgYzUuHLi`2">
            <summary>Subscribes to the observable sequence without specifying any handlers. This node can be used to evaluate the observable sequence for its side-effects only.</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.CreateDefault``1">
            <summary>Returns a non-terminating observable sequence, which can be used to denote an infinite duration (e.g. when using reactive joins)</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Aggregate``2(System.IObservable{``0},``1,System.Func{``1,``0,``1},System.IObservable{``1}@)">
            <summary>
            Applies an accumulator function over an observable sequence, returning the result of the aggregation as a single element in the result sequence. The specified seed value is used as the initial accumulator value.
                        For aggregation behavior with incremental intermediate results, see System.Reactive.Linq.Observable.Scan``2(System.IObservable{``0},``1,System.Func{``1,``0,``1}).
            </summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence to aggregate over.</param>
            <param name="Seed_In">The initial accumulator value.</param>
            <param name="Accumulator_In">An accumulator function to be invoked on each element.</param>
            <param name="Output_Out">An observable sequence containing a single element with the final accumulator value.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Aggregate_Selector``3(System.IObservable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2},System.IObservable{``2}@)">
            <summary>
            Applies an accumulator function over an observable sequence, returning the result of the aggregation as a single element in the result sequence. The specified seed value is used as the initial accumulator value,
                        and the specified result selector function is used to select the result value.
            </summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence to aggregate over.</param>
            <param name="Seed_In">The initial accumulator value.</param>
            <param name="Accumulator_In">An accumulator function to be invoked on each element.</param>
            <param name="Result_Selector_In">A function to transform the final accumulator value into the result value.</param>
            <param name="Output_Out">An observable sequence containing a single element with the final accumulator value.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.All``1(System.IObservable{``0},System.Func{``0,System.Boolean},System.IObservable{System.Boolean}@)">
            <summary>Determines whether all elements of an observable sequence satisfy a condition.</summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence whose elements to apply the predicate to.</param>
            <param name="Predicate_In">A function to test each element for a condition.</param>
            <param name="Output_Out">An observable sequence containing a single element determining whether all elements in the source sequence pass the test in the specified predicate.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Amb``1(System.Collections.Generic.IEnumerable{System.IObservable{``0}},System.IObservable{``0}@)">
            <summary>Propagates the observable sequence that reacts first.</summary>
            <param name="Input_In">Observable sources competing to react first.</param>
            <param name="Result_Out">An observable sequence that surfaces any of the given sequences, whichever reacted first.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Amb_IObservableLTSourceG_IObservableLTSourceG``1(System.IObservable{``0},System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Propagates the observable sequence that reacts first.</summary>
            <param name="Input_In">First observable sequence.</param>
            <param name="Second_In">Second observable sequence.</param>
            <param name="Output_Out">An observable sequence that surfaces either of the given sequences, whichever reacted first.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.And``2(System.IObservable{``0},System.IObservable{``1},System.Reactive.Joins.Pattern{``0,``1}@)">
            <summary>Creates a pattern that matches when both observable sequences have an available element.</summary>
            <param name="Input_In">Observable sequence to match with the right sequence.</param>
            <param name="Right_In">Observable sequence to match with the left sequence.</param>
            <param name="Result_Out">Pattern object that matches when both observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Any``1(System.IObservable{``0},System.IObservable{System.Boolean}@)">
            <summary>Determines whether an observable sequence contains any elements.</summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence to check for non-emptiness.</param>
            <param name="Output_Out">An observable sequence containing a single element determining whether the source sequence contains any elements.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Any_Predicate``1(System.IObservable{``0},System.Func{``0,System.Boolean},System.IObservable{System.Boolean}@)">
            <summary>Determines whether any element of an observable sequence satisfies a condition.</summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence whose elements to apply the predicate to.</param>
            <param name="Predicate_In">A function to test each element for a condition.</param>
            <param name="Output_Out">An observable sequence containing a single element determining whether any elements in the source sequence pass the test in the specified predicate.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.BackoffAndRetry``1(System.IObservable{``0},System.Double,System.IObservable{``0}@)">
            <summary>Repeats the source observable sequence until it successfully terminates. Each subsequent subscription will be delayed by the given amount of time in seconds</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.BackoffAndRetry_Count``1(System.IObservable{``0},System.Int32,System.Double,System.IObservable{``0}@)">
            <summary>Repeats the source observable sequence the specified number of times or until it successfully terminates. Each subsequent subscription will be delayed by the given amount of time in seconds</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Buffer``1(System.IObservable{``0},System.Int32,System.IObservable{System.Collections.Generic.IList{``0}}@)">
            <summary>Projects each element of an observable sequence into consecutive non-overlapping buffers which are produced based on element count information.</summary>
            <param name="Input_In">Source sequence to produce buffers over.</param>
            <param name="Count_In">Length of each buffer.</param>
            <param name="Output_Out">An observable sequence of buffers.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Buffer_Duration``1(System.IObservable{``0},System.TimeSpan,System.IObservable{System.Collections.Generic.IList{``0}}@)">
            <summary>Projects each element of an observable sequence into consecutive non-overlapping buffers which are produced based on timing information.</summary>
            <remarks>
            Specifying a TimeSpan.Zero value for timeSpan is not recommended but supported, causing the scheduler to create buffers as fast as it can.
                        Because all source sequence elements end up in one of the buffers, some buffers won&apos;t have a zero time span. This is a side-effect of the asynchrony introduced
                        by the scheduler, where the action to close the current buffer and to create a new buffer may not execute immediately, despite the TimeSpan.Zero due time.
            </remarks>
            <param name="Input_In">Source sequence to produce buffers over.</param>
            <param name="Time_Span_In">Length of each buffer.</param>
            <param name="Output_Out">An observable sequence of buffers.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Buffer_Skip_Duration``1(System.IObservable{``0},System.TimeSpan,System.TimeSpan,System.IObservable{System.Collections.Generic.IList{``0}}@)">
            <summary>Projects each element of an observable sequence into zero or more buffers which are produced based on timing information.</summary>
            <remarks>
            Specifying a TimeSpan.Zero value for  is not recommended but supported, causing the scheduler to create buffers with minimum duration
                        length. However, some buffers won&apos;t have a zero time span. This is a side-effect of the asynchrony introduced by the scheduler, where the action to close the
                        current buffer may not execute immediately, despite the TimeSpan.Zero due time.
            
                        Specifying a TimeSpan.Zero value for  is not recommended but supported, causing the scheduler to create buffers as fast as it can.
                        However, this doesn&apos;t mean all buffers will start at the beginning of the source sequence. This is a side-effect of the asynchrony introduced by the scheduler,
                        where the action to create a new buffer may not execute immediately, despite the TimeSpan.Zero due time.
            </remarks>
            <param name="Input_In">Source sequence to produce buffers over.</param>
            <param name="Time_Span_In">Length of each buffer.</param>
            <param name="Time_Shift_In">Interval between creation of consecutive buffers.</param>
            <param name="Output_Out">An observable sequence of buffers.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Buffer_Skip``1(System.IObservable{``0},System.Int32,System.Int32,System.IObservable{System.Collections.Generic.IList{``0}}@)">
            <summary>Projects each element of an observable sequence into zero or more buffers which are produced based on element count information.</summary>
            <param name="Input_In">Source sequence to produce buffers over.</param>
            <param name="Count_In">Length of each buffer.</param>
            <param name="Skip_In">Number of elements to skip between creation of consecutive buffers.</param>
            <param name="Output_Out">An observable sequence of buffers.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Chunkify``1(System.IObservable{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.IList{``0}}@)">
            <summary>Produces an enumerable sequence of consecutive (possibly empty) chunks of the source sequence.</summary>
            <param name="Input_In">Source observable sequence.</param>
            <param name="Result_Out">The enumerable sequence that returns consecutive (possibly empty) chunks upon each iteration.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.CombineLatest``3(System.IObservable{``0},System.IObservable{``1},System.Func{``0,``1,``2},System.IObservable{``2}@)">
            <summary>Merges two observable sequences into one observable sequence by using the selector function whenever one of the observable sequences produces an element.</summary>
            <remarks>If a non-empty source completes, its very last value will be used for creating subsequent combinations until all sources terminate.</remarks>
            <param name="Input_In">First observable source.</param>
            <param name="Second_In">Second observable source.</param>
            <param name="Result_Selector_In">Function to invoke whenever either of the sources produces an element.</param>
            <param name="Output_Out">An observable sequence containing the result of combining elements of both sources using the specified result selector function.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Concat``2(System.IObservable{``0},``1,System.IObservable{``0}@)">
            <summary>Concatenates the second observable sequence to the first observable sequence upon successful termination of the first.</summary>
            <param name="Input_In">First observable sequence.</param>
            <param name="Input_2_In">Second observable sequence.</param>
            <param name="Output_Out">An observable sequence that contains the elements of the first sequence, followed by those of the second the sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Contains``1(System.IObservable{``0},``0,System.IObservable{System.Boolean}@)">
            <summary>Determines whether an observable sequence contains a specified element by using the default equality comparer.</summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence in which to locate a value.</param>
            <param name="Value_In">The value to locate in the source sequence.</param>
            <param name="Output_Out">An observable sequence containing a single element determining whether the source sequence contains an element that has the specified value.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Count``1(System.IObservable{``0},System.IObservable{System.Int32}@)">
            <summary>Returns an observable sequence containing an System.Int32 that represents the total number of elements in an observable sequence.</summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence that contains elements to be counted.</param>
            <param name="Output_Out">An observable sequence containing a single element with the number of elements in the input sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Count_Predicate``1(System.IObservable{``0},System.Func{``0,System.Boolean},System.IObservable{System.Int32}@)">
            <summary>Returns an observable sequence containing an System.Int32 that represents how many elements in the specified observable sequence satisfy a condition.</summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">An observable sequence that contains elements to be counted.</param>
            <param name="Predicate_In">A function to test each element for a condition.</param>
            <param name="Output_Out">An observable sequence containing a single element with a number that represents how many elements in the input sequence satisfy the condition in the predicate function.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Create``1(VL.Core.NodeContext,System.Func{System.IObserver{``0},System.IDisposable},System.IObservable{``0}@)">
            <summary>Creates an observable sequence from a specified Subscribe method implementation.</summary>
            <remarks>
            Use of this operator is preferred over manual implementation of the System.IObservable`1 interface. In case
                        you need a type implementing System.IObservable`1 rather than an anonymous implementation, consider using
                        the System.Reactive.ObservableBase`1 abstract base class.
            </remarks>
            <param name="Subscribe_In">Implementation of the resulting observable sequence&apos;s Subscribe method.</param>
            <param name="Result_Out">The observable sequence with the specified implementation for the Subscribe method.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Create_Action``1(System.Func{System.IObserver{``0},System.Action},System.IObservable{``0}@)">
            <summary>Creates an observable sequence from a specified Subscribe method implementation.</summary>
            <remarks>
            Use of this operator is preferred over manual implementation of the System.IObservable`1 interface. In case
                        you need a type implementing System.IObservable`1 rather than an anonymous implementation, consider using
                        the System.Reactive.ObservableBase`1 abstract base class.
            </remarks>
            <param name="Subscribe_In">Implementation of the resulting observable sequence&apos;s Subscribe method, returning an Action delegate that will be wrapped in an IDisposable.</param>
            <param name="Result_Out">The observable sequence with the specified implementation for the Subscribe method.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Defer``1(System.Func{System.IObservable{``0}},System.IObservable{``0}@)">
            <summary>Returns an observable sequence that invokes the specified factory function whenever a new observer subscribes.</summary>
            <param name="Observable_Factory_In">Observable factory function to invoke for each observer that subscribes to the resulting sequence.</param>
            <param name="Result_Out">An observable sequence whose observers trigger an invocation of the given observable factory function.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Delay``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>
            Time shifts the observable sequence by the specified relative time duration.
                        The relative time intervals between the values are preserved.
            </summary>
            <remarks>
            This operator is less efficient than DelaySubscription because it records all notifications and time-delays those. This allows for immediate propagation of errors.
            
                        Observer callbacks for the resulting sequence will be run on the default scheduler. This effect is similar to using ObserveOn.
            
                        Exceptions signaled by the source sequence through an OnError callback are forwarded immediately to the result sequence. Any OnNext notifications that were in the queue at the point of the OnError callback will be dropped.
                        In order to delay error propagation, consider using the Observable.Materialize and Observable.Dematerialize operators, or use DelaySubscription.
            </remarks>
            <param name="Input_In">Source sequence to delay values for.</param>
            <param name="Due_Time_In">Relative time by which to shift the observable sequence. If this value is equal to TimeSpan.Zero, the scheduler will dispatch observer callbacks as soon as possible.</param>
            <param name="Output_Out">Time-shifted sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Delay_Selector``2(System.IObservable{``0},System.Func{``0,System.IObservable{``1}},System.IObservable{``0}@)">
            <summary>Time shifts the observable sequence based on a delay selector function for each element.</summary>
            <param name="Input_In">Source sequence to delay values for.</param>
            <param name="Delay_Duration_Selector_In">Selector function to retrieve a sequence indicating the delay for each given element.</param>
            <param name="Output_Out">Time-shifted sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.DelaySubscription``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>Time shifts the observable sequence by delaying the subscription with the specified relative time duration.</summary>
            <remarks>
            This operator is more efficient than Delay but postpones all side-effects of subscription and affects error propagation timing.
            
                        The side-effects of subscribing to the source sequence will be run on the default scheduler. Observer callbacks will not be affected.
            </remarks>
            <param name="Input_In">Source sequence to delay subscription for.</param>
            <param name="Due_Time_In">Relative time shift of the subscription.</param>
            <param name="Output_Out">Time-shifted sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Distinct``1(System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Returns an observable sequence that contains only distinct elements.</summary>
            <remarks>Usage of this operator should be considered carefully due to the maintenance of an internal lookup structure which can grow large.</remarks>
            <param name="Input_In">An observable sequence to retain distinct elements for.</param>
            <param name="Output_Out">An observable sequence only containing the distinct elements from the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Distinct_Selector``2(System.IObservable{``0},System.Func{``0,``1},System.IObservable{``0}@)">
            <summary>Returns an observable sequence that contains only distinct elements according to the keySelector.</summary>
            <remarks>Usage of this operator should be considered carefully due to the maintenance of an internal lookup structure which can grow large.</remarks>
            <param name="Input_In">An observable sequence to retain distinct elements for.</param>
            <param name="Key_Selector_In">A function to compute the comparison key for each element.</param>
            <param name="Output_Out">An observable sequence only containing the distinct elements, based on a computed key value, from the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.DistinctUntilChanged``1(System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Returns an observable sequence that contains only distinct contiguous elements.</summary>
            <param name="Input_In">An observable sequence to retain distinct contiguous elements for.</param>
            <param name="Output_Out">An observable sequence only containing the distinct contiguous elements from the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.DistinctUntilChanged_Selector``2(System.IObservable{``0},System.Func{``0,``1},System.IObservable{``0}@)">
            <summary>Returns an observable sequence that contains only distinct contiguous elements according to the keySelector.</summary>
            <param name="Input_In">An observable sequence to retain distinct contiguous elements for, based on a computed key value.</param>
            <param name="Key_Selector_In">A function to compute the comparison key for each element.</param>
            <param name="Output_Out">An observable sequence only containing the distinct contiguous elements, based on a computed key value, from the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Empty``1(System.IObservable{``0}@)">
            <summary>Returns an empty observable sequence</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Finally``1(System.IObservable{``0},System.Action,System.IObservable{``0}@)">
            <summary>Invokes a specified action after the source observable sequence terminates gracefully or exceptionally.</summary>
            <param name="Input_In">Source sequence.</param>
            <param name="Finally_Action_In">Action to invoke after the source observable sequence terminates.</param>
            <param name="Output_Out">Source sequence with the action-invoking termination behavior applied.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.First``1(System.IObservable{``0},``0@)">
            <summary>Returns the first element of an observable sequence.</summary>
            <param name="Input_In">Source observable sequence.</param>
            <param name="Result_Out">The first element in the observable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.First_Selector``1(System.IObservable{``0},System.Func{``0,System.Boolean},``0@)">
            <summary>Returns the first element of an observable sequence that satisfies the condition in the predicate.</summary>
            <param name="Input_In">Source observable sequence.</param>
            <param name="Predicate_In">A predicate function to evaluate for elements in the source sequence.</param>
            <param name="Result_Out">The first element in the observable sequence that satisfies the condition in the predicate.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.ForEach2``1(System.IObservable{``0},System.Action{``0,System.Int32})">
            <summary>Invokes an action for each element in the observable sequence, incorporating the element&apos;s index, and blocks until the sequence is terminated.</summary>
            <remarks>Because of its blocking nature, this operator is mainly used for testing.</remarks>
            <param name="Input_In">Source sequence.</param>
            <param name="On_Next_In">Action to invoke for each element in the observable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.FromSequence``1(System.Collections.Generic.IEnumerable{``0},System.IObservable{``0}@)">
            <summary>Converts an enumerable sequence to an observable sequence.</summary>
            <param name="Input_In">Enumerable sequence to convert to an observable sequence.</param>
            <param name="Result_Out">The observable sequence whose elements are pulled from the given enumerable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.GroupBy``2(System.IObservable{``0},System.Func{``0,``1},System.IObservable{System.Reactive.Linq.IGroupedObservable{``1,``0}}@)">
            <summary>Groups the elements of an observable sequence according to a specified key selector function.</summary>
            <param name="Input_In">An observable sequence whose elements to group.</param>
            <param name="Key_Selector_In">A function to extract the key for each element.</param>
            <param name="Output_Out">A sequence of observable groups, each of which corresponds to a unique key value, containing all elements that share that same key value.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.If2``1(System.Func{System.Boolean},System.IObservable{``0},System.IObservable{``0}@)">
            <summary>If the specified condition evaluates true, select the thenSource sequence. Otherwise, return an empty sequence.</summary>
            <param name="Condition_In">Condition evaluated to decide which sequence to return.</param>
            <param name="Then_Source_In">Sequence returned in case Condition evaluates true.</param>
            <param name="Result_Out">Then Source if Condition evaluates true; an empty sequence otherwise.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.IfElse``1(System.Func{System.Boolean},System.IObservable{``0},System.IObservable{``0},System.IObservable{``0}@)">
            <summary>If the specified condition evaluates true, select the thenSource sequence. Otherwise, select the elseSource sequence.</summary>
            <param name="Condition_In">Condition evaluated to decide which sequence to return.</param>
            <param name="Then_Source_In">Sequence returned in case Condition evaluates true.</param>
            <param name="Else_Source_In">Sequence returned in case Condition evaluates false.</param>
            <param name="Result_Out">Then Source if Condition evaluates true; Else Source otherwise.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.IgnoreElements``1(System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Ignores all elements in an observable sequence leaving only the termination messages.</summary>
            <param name="Input_In">Source sequence.</param>
            <param name="Output_Out">An empty observable sequence that signals termination, successful or exceptional, of the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Interval(System.TimeSpan,System.IObservable{System.Int64}@)">
            <summary>Returns an observable sequence that produces a value after each period.</summary>
            <remarks>
            Intervals are measured between the start of subsequent notifications, not between the end of the previous and the start of the next notification.
                        If the observer takes longer than the interval period to handle the message, the subsequent notification will be delivered immediately after the
                        current one has been handled. In case you need to control the time between the end and the start of consecutive notifications, consider using the
                        System.Reactive.Linq.Observable.Generate``2(``0,System.Func{``0,System.Boolean},System.Func{``0,``0},System.Func{``0,``1},System.Func{``0,System.TimeSpan})
                        operator instead.
            </remarks>
            <param name="Period_In">Period for producing the values in the resulting sequence. If this value is equal to TimeSpan.Zero, the timer will recur as fast as possible.</param>
            <param name="Result_Out">An observable sequence that produces a value after each period.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.IsEmpty``1(System.IObservable{``0},System.IObservable{System.Boolean}@)">
            <summary>Determines whether an observable sequence is empty.</summary>
            <param name="Input_In">An observable sequence to check for emptiness.</param>
            <param name="Output_Out">An observable sequence containing a single element determining whether the source sequence is empty.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Merge``2(System.IObservable{``0},``1,System.IObservable{``0}@)">
            <summary>Merges elements from two observable sequences into a single observable sequence.</summary>
            <param name="Input_In">First observable sequence.</param>
            <param name="Input_2_In">Second observable sequence.</param>
            <param name="Output_Out">The observable sequence that merges the elements of the given sequences.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Merge_Many``1(System.IObservable{System.IObservable{``0}},System.IObservable{``0}@)">
            <summary>Merges elements from all inner observable sequences into a single observable sequence.</summary>
            <param name="Input_In">Observable sequence of inner observable sequences.</param>
            <param name="Output_Out">The observable sequence that merges the elements of the inner sequences.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Merge_Spectral``1(System.Collections.Generic.IEnumerable{System.IObservable{``0}},System.IObservable{``0}@)">
            <summary>Merges elements from all observable sequences in the given enumerable sequence into a single observable sequence.</summary>
            <param name="Input_In">Enumerable sequence of observable sequences.</param>
            <param name="Result_Out">The observable sequence that merges the elements of the observable sequences.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.MostRecent``1(System.IObservable{``0},``0,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>
            Returns an enumerable sequence whose enumeration returns the most recently observed element in the source observable sequence, using the specified initial value in case no element has been sampled yet.
                        Enumerators on the resulting sequence never block and can produce the same element repeatedly.
            </summary>
            <param name="Input_In">Source observable sequence.</param>
            <param name="Initial_Value_In">Initial value that will be yielded by the enumerable sequence if no element has been sampled yet.</param>
            <param name="Result_Out">The enumerable sequence that returns the last sampled element upon each iteration.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Never``1(System.IObservable{``0}@)">
            <summary>Returns a non-terminating observable sequence, which can be used to denote an infinite duration (e.g. when using reactive joins)</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.ObserveOn``1(System.IObservable{``0},System.Reactive.Concurrency.IScheduler,System.IObservable{``0}@)">
            <summary>Wraps the source sequence in order to run its observer callbacks on the specified scheduler.</summary>
            <remarks>
            This only invokes observer callbacks on a scheduler. In case the subscription and/or unsubscription actions have side-effects
                        that require to be run on a scheduler, use System.Reactive.Linq.Observable.SubscribeOn``1(System.IObservable{``0},System.Reactive.Concurrency.IScheduler).
            </remarks>
            <param name="Input_In">Source sequence.</param>
            <param name="Scheduler_In">Scheduler to notify observers on.</param>
            <param name="Output_Out">The source sequence whose observations happen on the specified scheduler.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.OfType``1(System.IObservable{System.Object},System.IObservable{``0}@)">
            <summary>Filters the elements of an observable sequence based on the specified type.</summary>
            <param name="Input_In">The observable sequence that contains the elements to be filtered.</param>
            <param name="Output_Out">An observable sequence that contains elements from the input sequence of type TResult.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.OnErrorResumeNext``1(System.IObservable{``0},System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Concatenates the second observable sequence to the first observable sequence upon successful or exceptional termination of the first.</summary>
            <param name="Input_In">First observable sequence whose exception (if any) is caught.</param>
            <param name="Second_In">Second observable sequence used to produce results after the first sequence terminates.</param>
            <param name="Output_Out">An observable sequence that concatenates the first and second sequence, even if the first sequence terminates exceptionally.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.OnErrorTerminate``1(System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Terminates the sequence upon successful or exceptional termination</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Select``2(System.IObservable{``0},System.Func{``0,System.Int32,``1},System.IObservable{``1}@)">
            <summary>Projects each element of an observable sequence into a new form by incorporating the element&apos;s index.</summary>
            <tags>project</tags>
            <param name="Input_In">A sequence of elements to invoke a transform function on.</param>
            <param name="Selector_In">A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</param>
            <param name="Output_Out">An observable sequence whose elements are the result of invoking the transform function on each element of source.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Select_Many``2(System.IObservable{``0},System.Func{``0,System.Int32,System.IObservable{``1}},System.IObservable{``1}@)">
            <summary>Projects each element of an observable sequence to an observable sequence by incorporating the element&apos;s index and merges the resulting observable sequences into one observable sequence.</summary>
            <tags>project</tags>
            <param name="Input_In">An observable sequence of elements to project.</param>
            <param name="Selector_In">A transform function to apply to each element; the second parameter of the function represents the index of the source element.</param>
            <param name="Output_Out">An observable sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Publish``1(System.IObservable{``0},System.Reactive.Subjects.IConnectableObservable{``0}@)">
            <summary>
            Returns a connectable observable sequence that shares a single subscription to the underlying sequence.
                        This operator is a specialization of Multicast using a regular System.Reactive.Subjects.Subject`1.
            </summary>
            <remarks>Subscribers will receive all notifications of the source from the time of the subscription on.</remarks>
            <param name="Input_In">Source sequence whose elements will be multicasted through a single shared subscription.</param>
            <param name="Result_Out">A connectable observable sequence that shares a single subscription to the underlying sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.PublishLast``1(System.IObservable{``0},System.Reactive.Subjects.IConnectableObservable{``0}@)">
            <summary>
            Returns a connectable observable sequence that shares a single subscription to the underlying sequence containing only the last notification.
                        This operator is a specialization of Multicast using a System.Reactive.Subjects.AsyncSubject`1.
            </summary>
            <remarks>Subscribers will only receive the last notification of the source.</remarks>
            <param name="Input_In">Source sequence whose elements will be multicasted through a single shared subscription.</param>
            <param name="Result_Out">A connectable observable sequence that shares a single subscription to the underlying sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.PubRefCount``1(System.IObservable{``0},System.IObservable{``0}@)">
            <summary>
            Returns an observable sequence that stays connected to the source as long as there is at least one subscription to the observable sequence
                        and shares only one single subscription to the underlying sequence.
            </summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Range(System.Int32,System.Int32,System.IObservable{System.Int32}@)">
            <summary>Generates an observable sequence of integral numbers within a specified range.</summary>
            <param name="Start_In">The value of the first integer in the sequence.</param>
            <param name="Count_In">The number of sequential integers to generate.</param>
            <param name="Result_Out">An observable sequence that contains a range of sequential integral numbers.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.RefCount``1(System.Reactive.Subjects.IConnectableObservable{``0},System.IObservable{``0}@)">
            <summary>Returns an observable sequence that stays connected to the source as long as there is at least one subscription to the observable sequence.</summary>
            <param name="Input_In">Connectable observable sequence.</param>
            <param name="Result_Out">An observable sequence that stays connected to the source as long as there is at least one subscription to the observable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Repeat``1(System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Repeats the observable sequence indefinitely.</summary>
            <param name="Input_In">Observable sequence to repeat.</param>
            <param name="Output_Out">The observable sequence producing the elements of the given sequence repeatedly and sequentially.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Repeat_Count``1(System.IObservable{``0},System.Int32,System.IObservable{``0}@)">
            <summary>Repeats the observable sequence a specified number of times.</summary>
            <param name="Input_In">Observable sequence to repeat.</param>
            <param name="Repeat_Count_In">Number of times to repeat the sequence.</param>
            <param name="Output_Out">The observable sequence producing the elements of the given sequence repeatedly.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Repeat_Value_Count``1(``0,System.Int32,System.IObservable{``0}@)">
            <summary>Generates an observable sequence that repeats the given element the specified number of times.</summary>
            <param name="Value_In">Element to repeat.</param>
            <param name="Repeat_Count_In">Number of times to repeat the element.</param>
            <param name="Result_Out">An observable sequence that repeats the given element the specified number of times.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Repeat_Value``1(``0,System.IObservable{``0}@)">
            <summary>Generates an observable sequence that repeats the given element infinitely.</summary>
            <param name="Value_In">Element to repeat.</param>
            <param name="Result_Out">An observable sequence that repeats the given element infinitely.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Replay``1(System.IObservable{``0},System.Reactive.Subjects.IConnectableObservable{``0}@)">
            <summary>
            Returns a connectable observable sequence that shares a single subscription to the underlying sequence replaying all notifications.
                        This operator is a specialization of Multicast using a System.Reactive.Subjects.ReplaySubject`1.
            </summary>
            <remarks>Subscribers will receive all the notifications of the source.</remarks>
            <param name="Input_In">Source sequence whose elements will be multicasted through a single shared subscription.</param>
            <param name="Result_Out">A connectable observable sequence that shares a single subscription to the underlying sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Retry``1(System.IObservable{``0},System.IObservable{``0}@)">
            <summary>Repeats the source observable sequence until it successfully terminates.</summary>
            <param name="Input_In">Observable sequence to repeat until it successfully terminates.</param>
            <param name="Output_Out">An observable sequence producing the elements of the given sequence repeatedly until it terminates successfully.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Retry_Count``1(System.IObservable{``0},System.Int32,System.IObservable{``0}@)">
            <summary>Repeats the source observable sequence the specified number of times or until it successfully terminates.</summary>
            <param name="Input_In">Observable sequence to repeat until it successfully terminates.</param>
            <param name="Retry_Count_In">Number of times to repeat the sequence.</param>
            <param name="Output_Out">An observable sequence producing the elements of the given sequence repeatedly until it terminates successfully.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Return``1(``0,System.IObservable{``0}@)">
            <summary>Returns an observable sequence that contains a single element.</summary>
            <param name="Value_In">Single element in the resulting observable sequence.</param>
            <param name="Result_Out">An observable sequence containing the single specified element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Sample``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>
            Samples the observable sequence at each interval.
                        Upon each sampling tick, the latest element (if any) in the source sequence during the last sampling interval is sent to the resulting sequence.
            </summary>
            <remarks>
            Specifying a TimeSpan.Zero value for interval doesn&apos;t guarantee all source sequence elements will be preserved. This is a side-effect
                        of the asynchrony introduced by the scheduler, where the sampling action may not execute immediately, despite the TimeSpan.Zero due time.
            </remarks>
            <param name="Input_In">Source sequence to sample.</param>
            <param name="Interval_In">Interval at which to sample. If this value is equal to TimeSpan.Zero, the scheduler will continuously sample the stream.</param>
            <param name="Output_Out">Sampled observable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Sample_Sampler``2(System.IObservable{``0},System.IObservable{``1},System.IObservable{``0}@)">
            <summary>
            Samples the source observable sequence using a sampler observable sequence producing sampling ticks.
                        Upon each sampling tick, the latest element (if any) in the source sequence during the last sampling interval is sent to the resulting sequence.
            </summary>
            <param name="Input_In">Source sequence to sample.</param>
            <param name="Sampler_In">Sampling tick sequence.</param>
            <param name="Output_Out">Sampled observable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Scan``2(System.IObservable{``0},``1,System.Func{``1,``0,``1},System.IObservable{``1}@)">
            <summary>
            Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value.
                        For aggregation behavior with no intermediate results, see System.Reactive.Linq.Observable.Aggregate``2(System.IObservable{``0},``1,System.Func{``1,``0,``1}).
            </summary>
            <param name="Input_In">An observable sequence to accumulate over.</param>
            <param name="Seed_In">The initial accumulator value.</param>
            <param name="Accumulator_In">An accumulator function to be invoked on each element.</param>
            <param name="Output_Out">An observable sequence containing the accumulated values.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.SequenceEqual``1(System.IObservable{``0},System.IObservable{``0},System.IObservable{System.Boolean}@)">
            <summary>Determines whether two sequences are equal by comparing the elements pairwise.</summary>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
            <param name="Input_In">First observable sequence to compare.</param>
            <param name="Second_In">Second observable sequence to compare.</param>
            <param name="Output_Out">An observable sequence that contains a single element which indicates whether both sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Skip``1(System.IObservable{``0},System.Int32,System.IObservable{``0}@)">
            <summary>Bypasses a specified number of elements in an observable sequence and then returns the remaining elements.</summary>
            <param name="Input_In">The sequence to take elements from.</param>
            <param name="Count_In">The number of elements to skip before returning the remaining elements.</param>
            <param name="Output_Out">An observable sequence that contains the elements that occur after the specified index in the input sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Skip_Duration``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>Skips elements for the specified duration from the start of the observable source sequence.</summary>
            <remarks>
            Specifying a TimeSpan.Zero value for  doesn&apos;t guarantee no elements will be dropped from the start of the source sequence.
                        This is a side-effect of the asynchrony introduced by the scheduler, where the action that causes callbacks from the source sequence to be forwarded
                        may not execute immediately, despite the TimeSpan.Zero due time.
            
                        Errors produced by the source sequence are always forwarded to the result sequence, even if the error occurs before the .
            </remarks>
            <param name="Input_In">Source sequence to skip elements for.</param>
            <param name="Duration_In">Duration for skipping elements from the start of the sequence.</param>
            <param name="Output_Out">An observable sequence with the elements skipped during the specified duration from the start of the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.SkipLast``1(System.IObservable{``0},System.Int32,System.IObservable{``0}@)">
            <summary>Bypasses a specified number of elements at the end of an observable sequence.</summary>
            <remarks>
            This operator accumulates a queue with a length enough to store the first count elements. As more elements are
                        received, elements are taken from the front of the queue and produced on the result sequence. This causes elements to be delayed.
            </remarks>
            <param name="Input_In">Source sequence.</param>
            <param name="Count_In">Number of elements to bypass at the end of the source sequence.</param>
            <param name="Output_Out">An observable sequence containing the source sequence elements except for the bypassed ones at the end.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.SkipLast_Duration``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>Skips elements for the specified duration from the end of the observable source sequence.</summary>
            <remarks>
            This operator accumulates a queue with a length enough to store elements received during the initial duration window.
                        As more elements are received, elements older than the specified duration are taken from the queue and produced on the
                        result sequence. This causes elements to be delayed with duration.
            </remarks>
            <param name="Input_In">Source sequence to skip elements for.</param>
            <param name="Duration_In">Duration for skipping elements from the end of the sequence.</param>
            <param name="Output_Out">An observable sequence with the elements skipped during the specified duration from the end of the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.SkipUntil``2(System.IObservable{``0},System.IObservable{``1},System.IObservable{``0}@)">
            <summary>
            Returns the elements from the source observable sequence only after the other observable sequence produces an element.
                        Starting from Rx.NET 4.0, this will subscribe to other before subscribing to source
                        so in case other emits an element right away, elements from source are not missed.
            </summary>
            <param name="Input_In">Source sequence to propagate elements for.</param>
            <param name="Other_In">Observable sequence that triggers propagation of elements of the source sequence.</param>
            <param name="Output_Out">An observable sequence containing the elements of the source sequence starting from the point the other sequence triggered propagation.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.SkipWhile``1(System.IObservable{``0},System.Func{``0,System.Boolean},System.IObservable{``0}@)">
            <summary>Bypasses elements in an observable sequence as long as a specified condition is true and then returns the remaining elements.</summary>
            <param name="Input_In">An observable sequence to return elements from.</param>
            <param name="Predicate_In">A function to test each element for a condition.</param>
            <param name="Output_Out">An observable sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Start``1(System.Func{``0},System.IObservable{``0}@)">
            <summary>Invokes the specified function asynchronously, surfacing the result through an observable sequence.</summary>
            <remarks>The function is called immediately, not during the subscription of the resulting sequence.Multiple subscriptions to the resulting sequence can observe the function&apos;s result.</remarks>
            <param name="Function_In">Function to run asynchronously.</param>
            <param name="Result_Out">An observable sequence exposing the function&apos;s result value, or an exception.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.StartWith``1(System.IObservable{``0},System.Collections.Generic.IEnumerable{``0},System.IObservable{``0}@)">
            <summary>Prepends a sequence of values to an observable sequence.</summary>
            <param name="Input_In">Source sequence to prepend values to.</param>
            <param name="Values_In">Values to prepend to the specified sequence.</param>
            <param name="Output_Out">The source sequence prepended with the specified values.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.SubscribeOn``1(System.IObservable{``0},System.Reactive.Concurrency.IScheduler,System.IObservable{``0}@)">
            <summary>
            Wraps the source sequence in order to run its subscription and unsubscription logic on the specified scheduler. This operation is not commonly used;
                        see the remarks section for more information on the distinction between SubscribeOn and ObserveOn.
            </summary>
            <remarks>
            This only performs the side-effects of subscription and unsubscription on the specified scheduler. In order to invoke observer
                        callbacks on a scheduler, use System.Reactive.Linq.Observable.ObserveOn``1(System.IObservable{``0},System.Reactive.Concurrency.IScheduler).
            </remarks>
            <param name="Input_In">Source sequence.</param>
            <param name="Scheduler_In">Scheduler to perform subscription and unsubscription actions on.</param>
            <param name="Output_Out">The source sequence whose subscriptions and unsubscriptions happen on the specified scheduler.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Switch``1(System.IObservable{System.IObservable{``0}},System.IObservable{``0}@)">
            <summary>
            Transforms an observable sequence of observable sequences into an observable sequence
                        producing values only from the most recent observable sequence.
                        Each time a new inner observable sequence is received, unsubscribe from the
                        previous inner observable sequence.
            </summary>
            <param name="Input_In">Observable sequence of inner observable sequences.</param>
            <param name="Output_Out">The observable sequence that at any point in time produces the elements of the most recent inner observable sequence that has been received.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Take``1(System.IObservable{``0},System.Int32,System.IObservable{``0}@)">
            <summary>Returns a specified number of contiguous elements from the start of an observable sequence.</summary>
            <param name="Input_In">The sequence to take elements from.</param>
            <param name="Count_In">The number of elements to return.</param>
            <param name="Output_Out">An observable sequence that contains the specified number of elements from the start of the input sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Take_Duration``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>Takes elements for the specified duration from the start of the observable source sequence.</summary>
            <remarks>
            Specifying a TimeSpan.Zero value for duration doesn&apos;t guarantee an empty sequence will be returned. This is a side-effect
                        of the asynchrony introduced by the scheduler, where the action that stops forwarding callbacks from the source sequence may not execute
                        immediately, despite the TimeSpan.Zero due time.
            </remarks>
            <param name="Input_In">Source sequence to take elements from.</param>
            <param name="Duration_In">Duration for taking elements from the start of the sequence.</param>
            <param name="Output_Out">An observable sequence with the elements taken during the specified duration from the start of the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.TakeLast``1(System.IObservable{``0},System.Int32,System.IObservable{``0}@)">
            <summary>Returns a specified number of contiguous elements from the end of an observable sequence.</summary>
            <remarks>
            This operator accumulates a buffer with a length enough to store elements count elements. Upon completion of
                        the source sequence, this buffer is drained on the result sequence. This causes the elements to be delayed.
            </remarks>
            <param name="Input_In">Source sequence.</param>
            <param name="Count_In">Number of elements to take from the end of the source sequence.</param>
            <param name="Output_Out">An observable sequence containing the specified number of elements from the end of the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.TakeLast_Duration``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>Returns elements within the specified duration from the end of the observable source sequence.</summary>
            <remarks>
            This operator accumulates a buffer with a length enough to store elements for any duration window during the lifetime of
                        the source sequence. Upon completion of the source sequence, this buffer is drained on the result sequence. This causes the result elements
                        to be delayed with duration.
            </remarks>
            <param name="Input_In">Source sequence to take elements from.</param>
            <param name="Duration_In">Duration for taking elements from the end of the sequence.</param>
            <param name="Output_Out">An observable sequence with the elements taken during the specified duration from the end of the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.TakeUntil``2(System.IObservable{``0},System.IObservable{``1},System.IObservable{``0}@)">
            <summary>Returns the elements from the source observable sequence until the other observable sequence produces an element.</summary>
            <param name="Input_In">Source sequence to propagate elements for.</param>
            <param name="Other_In">Observable sequence that terminates propagation of elements of the source sequence.</param>
            <param name="Output_Out">An observable sequence containing the elements of the source sequence up to the point the other sequence interrupted further propagation.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.TakeWhile``1(System.IObservable{``0},System.Func{``0,System.Boolean},System.IObservable{``0}@)">
            <summary>Returns elements from an observable sequence as long as a specified condition is true.</summary>
            <param name="Input_In">A sequence to return elements from.</param>
            <param name="Predicate_In">A function to test each element for a condition.</param>
            <param name="Output_Out">An observable sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Then``2(System.IObservable{``0},System.Func{``0,``1},System.Reactive.Joins.Plan{``1}@)">
            <summary>Matches when the observable sequence has an available element and projects the element by invoking the selector function.</summary>
            <param name="Input_In">Observable sequence to apply the selector on.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequence.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.TimeInterval``1(System.IObservable{``0},System.IObservable{System.Reactive.TimeInterval{``0}}@)">
            <summary>Records the time interval between consecutive elements in an observable sequence.</summary>
            <param name="Input_In">Source sequence to record time intervals for.</param>
            <param name="Output_Out">An observable sequence with time interval information on elements.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Timer(System.TimeSpan,System.TimeSpan,System.IObservable{System.Int64}@)">
            <summary>Returns an observable sequence that periodically produces a value after the specified initial relative due time has elapsed.</summary>
            <param name="Due_Time_In">Relative time at which to produce the first value. If this value is less than or equal to TimeSpan.Zero, the timer will fire as soon as possible.</param>
            <param name="Period_In">Period to produce subsequent values. If this value is equal to TimeSpan.Zero, the timer will recur as fast as possible.</param>
            <param name="Result_Out">An observable sequence that produces a value after due time has elapsed and then after each period.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Timestamp``1(System.IObservable{``0},System.IObservable{System.Reactive.Timestamped{``0}}@)">
            <summary>Timestamps each element in an observable sequence using the local system clock.</summary>
            <param name="Input_In">Source sequence to timestamp elements for.</param>
            <param name="Output_Out">An observable sequence with timestamp information on elements.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Using``2(System.Func{``0},System.Func{``0,System.IObservable{``1}},System.IObservable{``1}@)">
            <summary>Constructs an observable sequence that depends on a resource object, whose lifetime is tied to the resulting observable sequence&apos;s lifetime.</summary>
            <param name="Resource_Factory_In">Factory function to obtain a resource object.</param>
            <param name="Observable_Factory_In">Factory function to obtain an observable sequence that depends on the obtained resource.</param>
            <param name="Result_Out">An observable sequence whose lifetime controls the lifetime of the dependent resource object.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Where``1(System.IObservable{``0},System.Func{``0,System.Boolean},System.IObservable{``0}@)">
            <summary>Filters the elements of an observable sequence based on a predicate.</summary>
            <param name="Input_In">An observable sequence whose elements to filter.</param>
            <param name="Predicate_In">A function to test each source element for a condition.</param>
            <param name="Output_Out">An observable sequence that contains elements from the input sequence that satisfy the condition.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Zip__2_MG_1``3(System.IObservable{``0},System.IObservable{``1},System.Func{``0,``1,``2},System.IObservable{``2}@)">
            <summary>Merges two observable sequences into one observable sequence by combining their elements in a pairwise fashion.</summary>
            <param name="Input_In">First observable source.</param>
            <param name="Second_In">Second observable source.</param>
            <param name="Result_Selector_In">Function to invoke for each consecutive pair of elements from the first and second source.</param>
            <param name="Output_Out">An observable sequence containing the result of pairwise combining the elements of the first and second source using the specified result selector function.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Zip__3_MG_1``4(System.IObservable{``0},System.IObservable{``1},System.IObservable{``2},System.Func{``0,``1,``2,``3},System.IObservable{``3}@)">
            <summary>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</summary>
            <param name="Input_In">First observable source.</param>
            <param name="Source_2_In">Second observable source.</param>
            <param name="Source_3_In">Third observable source.</param>
            <param name="Result_Selector_In">Function to invoke for each series of elements at corresponding indexes in the sources.</param>
            <param name="Output_Out">An observable sequence containing the result of combining elements of the sources using the specified result selector function.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Zip__4_MG_1``6(System.IObservable{``0},System.IObservable{``1},System.IObservable{``2},System.IObservable{``3},System.IObservable{``4},System.Func{``0,``1,``2,``3,``4,``5},System.IObservable{``5}@)">
            <summary>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</summary>
            <param name="Input_In">First observable source.</param>
            <param name="Source_2_In">Second observable source.</param>
            <param name="Source_3_In">Third observable source.</param>
            <param name="Source_4_In">Fourth observable source.</param>
            <param name="Source_5_In">Fifth observable source.</param>
            <param name="Result_Selector_In">Function to invoke for each series of elements at corresponding indexes in the sources.</param>
            <param name="Output_Out">An observable sequence containing the result of combining elements of the sources using the specified result selector function.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Zip_Many_Selector``2(System.Collections.Generic.IEnumerable{System.IObservable{``0}},System.Func{System.Collections.Generic.IList{``0},``1},System.IObservable{``1}@)">
            <summary>Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.</summary>
            <param name="Input_In">Observable sources.</param>
            <param name="Result_Selector_In">Function to invoke for each series of elements at corresponding indexes in the sources.</param>
            <param name="Result_Out">An observable sequence containing the result of combining elements of the sources using the specified result selector function.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Zip_Many``1(System.Collections.Generic.IEnumerable{System.IObservable{``0}},System.IObservable{System.Collections.Generic.IList{``0}}@)">
            <summary>Merges the specified observable sequences into one observable sequence by emitting a list with the elements of the observable sequences at corresponding indexes.</summary>
            <param name="Input_In">Observable sources.</param>
            <param name="Result_Out">An observable sequence containing lists of elements at corresponding indexes.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Do``1(System.IObservable{``0},System.Action{``0},System.IObservable{``0}@)">
            <summary>
            Invokes an action for each element in the observable sequence, and propagates all observer messages through the result sequence.
                        This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.
            </summary>
            <param name="Input_In">Source sequence.</param>
            <param name="On_Next_In">Action to invoke for each element in the observable sequence.</param>
            <param name="Output_Out">The source sequence with the side-effecting behavior applied.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.ElementAt``1(System.IObservable{``0},System.Int32,System.IObservable{``0}@)">
            <summary>Returns the element at a specified index in a sequence.</summary>
            <param name="Input_In">Observable sequence to return the element from.</param>
            <param name="Index_In">The zero-based index of the element to retrieve.</param>
            <param name="Output_Out">An observable sequence that produces the element at the specified position in the source sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Throttle``1(System.IObservable{``0},System.TimeSpan,System.IObservable{``0}@)">
            <summary>Ignores elements from an observable sequence which are followed by another element within a specified relative time duration.</summary>
            <remarks>
            This operator throttles the source sequence by holding on to each element for the duration specified in . If another
                        element is produced within this time window, the element is dropped and a new timer is started for the current element, repeating this whole
                        process. For streams that never have gaps larger than or equal to  between elements, the resulting stream won&apos;t
                        produce any elements. In order to reduce the volume of a stream whilst guaranteeing the periodic production of elements, consider using the
                        Observable.Sample set of operators.
            
                        Specifying a TimeSpan.Zero value for  is not recommended but supported, causing throttling timers to be scheduled
                        that are due immediately. However, this doesn&apos;t guarantee all elements will be retained in the result sequence. This is a side-effect of the
                        asynchrony introduced by the scheduler, where the action to forward the current element may not execute immediately, despite the TimeSpan.Zero
                        due time. In such cases, the next element may arrive before the scheduler gets a chance to run the throttling action.
            </remarks>
            <param name="Input_In">Source sequence to throttle.</param>
            <param name="Due_Time_In">Throttling duration for each element.</param>
            <param name="Output_Out">The throttled sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Subscribe``1(System.IObservable{``0},System.IDisposable@)">
            <summary>
            Subscribes to the observable sequence without specifying any handlers.
                        This method can be used to evaluate the observable sequence for its side-effects only.
            </summary>
            <param name="Input_In">Observable sequence to subscribe to.</param>
            <param name="Result_Out">System.IDisposable object used to unsubscribe from the observable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Loop``2(System.Func{``0},System.Func{``0,System.IObserver{``1},System.Threading.CancellationToken,``0},System.Int32,System.IObservable{``1}@)">
            <summary>
            Returns an observable which sets up the  on subscription and will thereafter call the update
                        method in a loop on a background thread. The speed of the loop can be controlled with the millisecondsDelay.
                        Notifications can be pushed downstream by using the provided System.IObserver`1 inside the update method.
            </summary>
            <remarks>
            The state will get created and disposed of in the thread which subscribes to the observable while the update of the loop will be called
                        on a background thread.
                        If that is not the desired behavior one can use System.Reactive.Linq.Observable.SubscribeOn``1(System.IObservable{``0},System.Reactive.Concurrency.IScheduler)
                        to force the creation and destruction of the state to happen on a background thread.
            </remarks>
            <param name="Create_In">The method which produces the state.</param>
            <param name="Update_In">The method which will get called in a loop on a background thread.</param>
            <param name="Milliseconds_Delay_In">The amount of time to wait before going into another iteration of the loop.</param>
            <param name="Result_Out">An observable which when subscribed to runs a loop on a background thread.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Subscribe_Provider``1(System.IObservable{``0},VL.Lib.Basics.Resources.IResourceProvider{System.IDisposable}@)">
            <summary>
            Returns a provider managing the lifetime of the subscription of the upsream observable.
                        The provider will subscribe when a handle is requested and unsubscribe when the handle gets returned.
            </summary>
            <param name="Source_In">The upstream observable to subscribe to once a handle is requested.</param>
            <param name="Result_Out">A provider managing the lifetime of the upstream observable.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.PollData``3(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Func{``0,``1},System.Func{``1,``0,System.Threading.CancellationToken,System.Tuple{``1,``2}},System.Int32,System.IObservable{``2}@)">
            <summary>Polls the device for data on a background thread.</summary>
            <param name="Device_Provider_In">The device to poll data from.</param>
            <param name="Create_In">The method which produces the state.</param>
            <param name="Update_In">The method used for polling.</param>
            <param name="Milliseconds_Delay_In">The amount of time to wait before polling again.</param>
            <param name="Result_Out">An observable of the polled data.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.PollResource``3(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Func{``0,``1},System.Func{``1,``0,System.Threading.CancellationToken,System.Tuple{``1,``2}},System.Int32,System.IObservable{``2}@)">
            <summary>Polls the device for a resource on a background thread. Each polled resource will be disposed after all observers have been notified.</summary>
            <param name="Device_Provider_In">The device provider to poll for a resource.</param>
            <param name="Create_In">The method which produces the state.</param>
            <param name="Update_In">The method used for polling.</param>
            <param name="Milliseconds_Delay_In">The amount of time to wait before polling again.</param>
            <param name="Result_Out">An observable of the polled resources.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Using_Provider``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Func{``0,System.IObservable{``1}},System.IObservable{``1}@)">
            <summary>
            Returns an observable sequence that depends on the resource given by the upstream provider. The lifetime of the upstream resource
                        handle will be tied to the resulting observable sequence&apos;s lifetime.
            </summary>
            <param name="Provider_In">The provider which produces the resource.</param>
            <param name="Observable_Factory_In">The factory which produces the observable sequence tied to the resource given by the provider.</param>
            <param name="Result_Out">An observable sequence depending on the upstream resource.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Observable._Operations_.Replay``1(System.IObservable{``0},System.Int32,System.Reactive.Subjects.IConnectableObservable{``0}@)">
            <summary>
            Returns a connectable observable sequence that shares a single subscription to the underlying sequence replaying notifications subject to a maximum element count for the replay buffer.
                        This operator is a specialization of Multicast using a System.Reactive.Subjects.ReplaySubject`1.
            </summary>
            <remarks>Subscribers will receive all the notifications of the source subject to the specified replay buffer trimming policy.</remarks>
            <param name="Input_In">Source sequence whose elements will be multicasted through a single shared subscription.</param>
            <param name="Buffer_Size_In">Maximum element count of the replay buffer.</param>
            <param name="Result_Out">A connectable observable sequence that shares a single subscription to the underlying sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__1._Operations_.Then``2(System.Reactive.Joins.Pattern{``0},System.Func{``0,``1},System.Reactive.Joins.Pattern{``0}@,System.Reactive.Joins.Plan{``1}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__2._Operations_.And``3(System.Reactive.Joins.Pattern{``0,``1},System.IObservable{``2},System.Reactive.Joins.Pattern{``0,``1}@,System.Reactive.Joins.Pattern{``0,``1,``2}@)">
            <summary>Creates a pattern that matches when all three observable sequences have an available element.</summary>
            <param name="Input_In">Creates a pattern that matches when all three observable sequences have an available element.</param>
            <param name="Other_In">Observable sequence to match with the two previous sequences.</param>
            <param name="Output_Out">Creates a pattern that matches when all three observable sequences have an available element.</param>
            <param name="Result_Out">Pattern object that matches when all observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__2._Operations_.Then``3(System.Reactive.Joins.Pattern{``0,``1},System.Func{``0,``1,``2},System.Reactive.Joins.Pattern{``0,``1}@,System.Reactive.Joins.Plan{``2}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__3._Operations_.And``4(System.Reactive.Joins.Pattern{``0,``1,``2},System.IObservable{``3},System.Reactive.Joins.Pattern{``0,``1,``2}@,System.Reactive.Joins.Pattern{``0,``1,``2,``3}@)">
            <summary>Creates a pattern that matches when all four observable sequences have an available element.</summary>
            <param name="Input_In">Creates a pattern that matches when all four observable sequences have an available element.</param>
            <param name="Other_In">Observable sequence to match with the three previous sequences.</param>
            <param name="Output_Out">Creates a pattern that matches when all four observable sequences have an available element.</param>
            <param name="Result_Out">Pattern object that matches when all observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__3._Operations_.Then``4(System.Reactive.Joins.Pattern{``0,``1,``2},System.Func{``0,``1,``2,``3},System.Reactive.Joins.Pattern{``0,``1,``2}@,System.Reactive.Joins.Plan{``3}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__4._Operations_.And``5(System.Reactive.Joins.Pattern{``0,``1,``2,``3},System.IObservable{``4},System.Reactive.Joins.Pattern{``0,``1,``2,``3}@,System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4}@)">
            <summary>Creates a pattern that matches when all five observable sequences have an available element.</summary>
            <param name="Input_In">Creates a pattern that matches when all five observable sequences have an available element.</param>
            <param name="Other_In">Observable sequence to match with the four previous sequences.</param>
            <param name="Output_Out">Creates a pattern that matches when all five observable sequences have an available element.</param>
            <param name="Result_Out">Pattern object that matches when all observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__4._Operations_.Then``5(System.Reactive.Joins.Pattern{``0,``1,``2,``3},System.Func{``0,``1,``2,``3,``4},System.Reactive.Joins.Pattern{``0,``1,``2,``3}@,System.Reactive.Joins.Plan{``4}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__5._Operations_.And``6(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4},System.IObservable{``5},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4}@,System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5}@)">
            <summary>Creates a pattern that matches when all six observable sequences have an available element.</summary>
            <param name="Input_In">Creates a pattern that matches when all six observable sequences have an available element.</param>
            <param name="Other_In">Observable sequence to match with the five previous sequences.</param>
            <param name="Output_Out">Creates a pattern that matches when all six observable sequences have an available element.</param>
            <param name="Result_Out">Pattern object that matches when all observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__5._Operations_.Then``6(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4},System.Func{``0,``1,``2,``3,``4,``5},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4}@,System.Reactive.Joins.Plan{``5}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__6._Operations_.And``7(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5},System.IObservable{``6},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5}@,System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6}@)">
            <summary>Creates a pattern that matches when all seven observable sequences have an available element.</summary>
            <param name="Input_In">Creates a pattern that matches when all seven observable sequences have an available element.</param>
            <param name="Other_In">Observable sequence to match with the six previous sequences.</param>
            <param name="Output_Out">Creates a pattern that matches when all seven observable sequences have an available element.</param>
            <param name="Result_Out">Pattern object that matches when all observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__6._Operations_.Then``7(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5},System.Func{``0,``1,``2,``3,``4,``5,``6},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5}@,System.Reactive.Joins.Plan{``6}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__7._Operations_.And``8(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6},System.IObservable{``7},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6}@,System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6,``7}@)">
            <summary>Creates a pattern that matches when all eight observable sequences have an available element.</summary>
            <param name="Input_In">Creates a pattern that matches when all eight observable sequences have an available element.</param>
            <param name="Other_In">Observable sequence to match with the seven previous sequences.</param>
            <param name="Output_Out">Creates a pattern that matches when all eight observable sequences have an available element.</param>
            <param name="Result_Out">Pattern object that matches when all observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__7._Operations_.Then``8(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6},System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6}@,System.Reactive.Joins.Plan{``7}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__8._Operations_.And``9(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6,``7},System.IObservable{``8},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6,``7}@,System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6,``7,``8}@)">
            <summary>Creates a pattern that matches when all nine observable sequences have an available element.</summary>
            <param name="Input_In">Creates a pattern that matches when all nine observable sequences have an available element.</param>
            <param name="Other_In">Observable sequence to match with the eight previous sequences.</param>
            <param name="Output_Out">Creates a pattern that matches when all nine observable sequences have an available element.</param>
            <param name="Result_Out">Pattern object that matches when all observable sequences have an available element.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Joins.Pattern__8._Operations_.Then``9(System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6,``7},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},System.Reactive.Joins.Pattern{``0,``1,``2,``3,``4,``5,``6,``7}@,System.Reactive.Joins.Plan{``8}@)">
            <summary>Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</summary>
            <param name="Input_In">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Selector_In">Selector that will be invoked for elements in the source sequences.</param>
            <param name="Output_Out">Matches when all observable sequences have an available element and projects the elements by invoking the selector function.</param>
            <param name="Result_Out">Plan that produces the projected results, to be fed (with other plans) to the When operator.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.Create``1(VL.Core.NodeContext,System.Reactive.Subjects.AsyncSubject{``0}@)">
            <summary>Creates a subject that can only receive one value and that value is cached for all future observations.</summary>
            <param name="Output_Out">Creates a subject that can only receive one value and that value is cached for all future observations.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.Destroy``1(System.Reactive.Subjects.AsyncSubject{``0},System.Reactive.Subjects.AsyncSubject{``0}@)">
            <summary>Unsubscribe all observers and release resources.</summary>
            <param name="Input_In">Unsubscribe all observers and release resources.</param>
            <param name="Output_Out">Unsubscribe all observers and release resources.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.GetAwaiter``1(System.Reactive.Subjects.AsyncSubject{``0},System.Reactive.Subjects.AsyncSubject{``0}@,System.Reactive.Subjects.AsyncSubject{``0}@)">
            <summary>Gets an awaitable object for the current AsyncSubject.</summary>
            <param name="Input_In">Gets an awaitable object for the current AsyncSubject.</param>
            <param name="Output_Out">Gets an awaitable object for the current AsyncSubject.</param>
            <param name="Result_Out">Object that can be awaited.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.GetResult``1(System.Reactive.Subjects.AsyncSubject{``0},System.Reactive.Subjects.AsyncSubject{``0}@,``0@)">
            <summary>Gets the last element of the subject, potentially blocking until the subject completes successfully or exceptionally.</summary>
            <param name="Input_In">Gets the last element of the subject, potentially blocking until the subject completes successfully or exceptionally.</param>
            <param name="Output_Out">Gets the last element of the subject, potentially blocking until the subject completes successfully or exceptionally.</param>
            <param name="Result_Out">The last element of the subject. Throws an InvalidOperationException if no element was received.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.OnCompleted``1(System.Reactive.Subjects.AsyncSubject{``0},System.Reactive.Subjects.AsyncSubject{``0}@)">
            <summary>Notifies all subscribed observers about the end of the sequence, also causing the last received value to be sent out (if any).</summary>
            <param name="Input_In">Notifies all subscribed observers about the end of the sequence, also causing the last received value to be sent out (if any).</param>
            <param name="Output_Out">Notifies all subscribed observers about the end of the sequence, also causing the last received value to be sent out (if any).</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.OnCompleted_Action``1(System.Reactive.Subjects.AsyncSubject{``0},System.Action,System.Reactive.Subjects.AsyncSubject{``0}@)">
            <summary>Specifies a callback action that will be invoked when the subject completes.</summary>
            <param name="Input_In">Specifies a callback action that will be invoked when the subject completes.</param>
            <param name="Continuation_In">Callback action that will be invoked when the subject completes.</param>
            <param name="Output_Out">Specifies a callback action that will be invoked when the subject completes.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.OnError``1(System.Reactive.Subjects.AsyncSubject{``0},System.Exception,System.Reactive.Subjects.AsyncSubject{``0}@)">
            <summary>Notifies all subscribed observers about the exception.</summary>
            <param name="Input_In">Notifies all subscribed observers about the exception.</param>
            <param name="Error_In">The exception to send to all observers.</param>
            <param name="Output_Out">Notifies all subscribed observers about the exception.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.OnNext``1(System.Reactive.Subjects.AsyncSubject{``0},``0,System.Reactive.Subjects.AsyncSubject{``0}@)">
            <summary>Sends a value to the subject. The last value received before successful termination will be sent to all subscribed and future observers.</summary>
            <param name="Input_In">Sends a value to the subject. The last value received before successful termination will be sent to all subscribed and future observers.</param>
            <param name="Value_In">The value to store in the subject.</param>
            <param name="Output_Out">Sends a value to the subject. The last value received before successful termination will be sent to all subscribed and future observers.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.AsyncSubject._Operations_.Subscribe``1(System.Reactive.Subjects.AsyncSubject{``0},System.IObserver{``0},System.Reactive.Subjects.AsyncSubject{``0}@,System.IDisposable@)">
            <summary>Subscribes an observer to the subject.</summary>
            <param name="Input_In">Subscribes an observer to the subject.</param>
            <param name="Observer_In">Observer to subscribe to the subject.</param>
            <param name="Output_Out">Subscribes an observer to the subject.</param>
            <param name="Result_Out">Disposable object that can be used to unsubscribe the observer from the subject.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.BehaviorSubject._Operations_.Create``1(VL.Core.NodeContext,``0,System.Reactive.Subjects.BehaviorSubject{``0}@)">
            <summary>Initializes a new instance of the System.Reactive.Subjects.BehaviorSubject`1 class which creates a subject that caches its last value and starts with the specified value.</summary>
            <param name="Value_In">Initial value sent to observers when no other value has been received by the subject yet.</param>
            <param name="Output_Out">Initializes a new instance of the System.Reactive.Subjects.BehaviorSubject`1 class which creates a subject that caches its last value and starts with the specified value.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.BehaviorSubject._Operations_.Destroy``1(System.Reactive.Subjects.BehaviorSubject{``0},System.Reactive.Subjects.BehaviorSubject{``0}@)">
            <summary>Unsubscribe all observers and release resources.</summary>
            <param name="Input_In">Unsubscribe all observers and release resources.</param>
            <param name="Output_Out">Unsubscribe all observers and release resources.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.BehaviorSubject._Operations_.OnCompleted``1(System.Reactive.Subjects.BehaviorSubject{``0},System.Reactive.Subjects.BehaviorSubject{``0}@)">
            <summary>Notifies all subscribed observers about the end of the sequence.</summary>
            <param name="Input_In">Notifies all subscribed observers about the end of the sequence.</param>
            <param name="Output_Out">Notifies all subscribed observers about the end of the sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.BehaviorSubject._Operations_.OnError``1(System.Reactive.Subjects.BehaviorSubject{``0},System.Exception,System.Reactive.Subjects.BehaviorSubject{``0}@)">
            <summary>Notifies all subscribed observers about the exception.</summary>
            <param name="Input_In">Notifies all subscribed observers about the exception.</param>
            <param name="Error_In">The exception to send to all observers.</param>
            <param name="Output_Out">Notifies all subscribed observers about the exception.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.BehaviorSubject._Operations_.OnNext``1(System.Reactive.Subjects.BehaviorSubject{``0},``0,System.Reactive.Subjects.BehaviorSubject{``0}@)">
            <summary>Notifies all subscribed observers about the arrival of the specified element in the sequence.</summary>
            <param name="Input_In">Notifies all subscribed observers about the arrival of the specified element in the sequence.</param>
            <param name="Value_In">The value to send to all observers.</param>
            <param name="Output_Out">Notifies all subscribed observers about the arrival of the specified element in the sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.BehaviorSubject._Operations_.Subscribe``1(System.Reactive.Subjects.BehaviorSubject{``0},System.IObserver{``0},System.Reactive.Subjects.BehaviorSubject{``0}@,System.IDisposable@)">
            <summary>Subscribes an observer to the subject.</summary>
            <param name="Input_In">Subscribes an observer to the subject.</param>
            <param name="Observer_In">Observer to subscribe to the subject.</param>
            <param name="Output_Out">Subscribes an observer to the subject.</param>
            <param name="Result_Out">Disposable object that can be used to unsubscribe the observer from the subject.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.Subject._Operations_.Create``1(VL.Core.NodeContext,System.Reactive.Subjects.Subject{``0}@)">
            <summary>Creates a subject.</summary>
            <param name="Output_Out">Creates a subject.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.Subject._Operations_.Destroy``1(System.Reactive.Subjects.Subject{``0},System.Reactive.Subjects.Subject{``0}@)">
            <summary>Releases all resources used by the current instance of the System.Reactive.Subjects.Subject`1 class and unsubscribes all observers.</summary>
            <param name="Input_In">Releases all resources used by the current instance of the System.Reactive.Subjects.Subject`1 class and unsubscribes all observers.</param>
            <param name="Output_Out">Releases all resources used by the current instance of the System.Reactive.Subjects.Subject`1 class and unsubscribes all observers.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.Subject._Operations_.OnCompleted``1(System.Reactive.Subjects.Subject{``0},System.Reactive.Subjects.Subject{``0}@)">
            <summary>Notifies all subscribed observers about the end of the sequence.</summary>
            <param name="Input_In">Notifies all subscribed observers about the end of the sequence.</param>
            <param name="Output_Out">Notifies all subscribed observers about the end of the sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.Subject._Operations_.OnError``1(System.Reactive.Subjects.Subject{``0},System.Exception,System.Reactive.Subjects.Subject{``0}@)">
            <summary>Notifies all subscribed observers about the specified exception.</summary>
            <param name="Input_In">Notifies all subscribed observers about the specified exception.</param>
            <param name="Error_In">The exception to send to all currently subscribed observers.</param>
            <param name="Output_Out">Notifies all subscribed observers about the specified exception.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.Subject._Operations_.OnNext``1(System.Reactive.Subjects.Subject{``0},``0,System.Reactive.Subjects.Subject{``0}@)">
            <summary>Notifies all subscribed observers about the arrival of the specified element in the sequence.</summary>
            <param name="Input_In">Notifies all subscribed observers about the arrival of the specified element in the sequence.</param>
            <param name="Value_In">The value to send to all currently subscribed observers.</param>
            <param name="Output_Out">Notifies all subscribed observers about the arrival of the specified element in the sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Subjects.Subject._Operations_.Subscribe``1(System.Reactive.Subjects.Subject{``0},System.IObserver{``0},System.Reactive.Subjects.Subject{``0}@,System.IDisposable@)">
            <summary>Subscribes an observer to the subject.</summary>
            <param name="Input_In">Subscribes an observer to the subject.</param>
            <param name="Observer_In">Observer to subscribe to the subject.</param>
            <param name="Output_Out">Subscribes an observer to the subject.</param>
            <param name="Result_Out">Disposable object that can be used to unsubscribe the observer from the subject.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.ConnectableObservable._Operations_.Connect``1(System.Reactive.Subjects.IConnectableObservable{``0},System.IDisposable@)">
            <summary>Connects the observable wrapper to its source. All subscribed observers will receive values from the underlying observable sequence as long as the connection is established.</summary>
            <param name="Input_In">Connects the observable wrapper to its source. All subscribed observers will receive values from the underlying observable sequence as long as the connection is established.</param>
            <param name="Result_Out">Disposable used to disconnect the observable wrapper from its source, causing subscribed observer to stop receiving values from the underlying observable sequence.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.TimeInterval._Operations_.NE``1(System.Reactive.TimeInterval{``0},System.Reactive.TimeInterval{``0},System.Boolean@)">
            <summary>Determines whether the two specified System.Reactive.TimeInterval`1 values don&apos;t have the same P:System.Reactive.TimeInterval`1.Value and P:System.Reactive.TimeInterval`1.Interval.</summary>
            <param name="Input_In">The first System.Reactive.TimeInterval`1 value to compare.</param>
            <param name="Input_2_In">The second System.Reactive.TimeInterval`1 value to compare.</param>
            <param name="Result_Out">true if the first System.Reactive.TimeInterval`1 value has a different P:System.Reactive.TimeInterval`1.Value or P:System.Reactive.TimeInterval`1.Interval as the second System.Reactive.TimeInterval`1 value; otherwise, false.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.TimeInterval._Operations_.OperatorEquals``1(System.Reactive.TimeInterval{``0},System.Reactive.TimeInterval{``0},System.Boolean@)">
            <summary>Determines whether the two specified System.Reactive.TimeInterval`1 values have the same P:System.Reactive.TimeInterval`1.Value and P:System.Reactive.TimeInterval`1.Interval.</summary>
            <param name="Input_In">The first System.Reactive.TimeInterval`1 value to compare.</param>
            <param name="Input_2_In">The second System.Reactive.TimeInterval`1 value to compare.</param>
            <param name="Result_Out">true if the first System.Reactive.TimeInterval`1 value has the same P:System.Reactive.TimeInterval`1.Value and P:System.Reactive.TimeInterval`1.Interval as the second System.Reactive.TimeInterval`1 value; otherwise, false.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Timestamped._Operations_.NE``1(System.Reactive.Timestamped{``0},System.Reactive.Timestamped{``0},System.Boolean@)">
            <summary>Determines whether the two specified System.Reactive.Timestamped`1 values don&apos;t have the same P:System.Reactive.Timestamped`1.Value and P:System.Reactive.Timestamped`1.Timestamp.</summary>
            <param name="Input_In">The first System.Reactive.Timestamped`1 value to compare.</param>
            <param name="Input_2_In">The second System.Reactive.Timestamped`1 value to compare.</param>
            <param name="Result_Out">true if the first System.Reactive.Timestamped`1 value has a different P:System.Reactive.Timestamped`1.Value or P:System.Reactive.Timestamped`1.Timestamp as the second System.Reactive.Timestamped`1 value; otherwise, false.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Timestamped._Operations_.OperatorEquals``1(System.Reactive.Timestamped{``0},System.Reactive.Timestamped{``0},System.Boolean@)">
            <summary>Determines whether the two specified System.Reactive.Timestamped`1 values have the same P:System.Reactive.Timestamped`1.Value and P:System.Reactive.Timestamped`1.Timestamp.</summary>
            <param name="Input_In">The first System.Reactive.Timestamped`1 value to compare.</param>
            <param name="Input_2_In">The second System.Reactive.Timestamped`1 value to compare.</param>
            <param name="Result_Out">true if the first System.Reactive.Timestamped`1 value has the same P:System.Reactive.Timestamped`1.Value and P:System.Reactive.Timestamped`1.Timestamp as the second System.Reactive.Timestamped`1 value; otherwise, false.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.EventPattern._Operations_.OperatorEquals``2(System.Reactive.EventPattern{``0,``1},System.Reactive.EventPattern{``0,``1},System.Boolean@)">
            <summary>Determines whether two specified System.Reactive.EventPattern`2 objects represent the same event.</summary>
            <param name="Input_In">The first System.Reactive.EventPattern`2 to compare, or null.</param>
            <param name="Input_2_In">The second System.Reactive.EventPattern`2 to compare, or null.</param>
            <param name="Result_Out">true if both System.Reactive.EventPattern`2 objects represent the same event; otherwise, false.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.EventPattern._Operations_.NE``2(System.Reactive.EventPattern{``0,``1},System.Reactive.EventPattern{``0,``1},System.Boolean@)">
            <summary>Determines whether two specified System.Reactive.EventPattern`2 objects represent a different event.</summary>
            <param name="Input_In">The first System.Reactive.EventPattern`2 to compare, or null.</param>
            <param name="Input_2_In">The second System.Reactive.EventPattern`2 to compare, or null.</param>
            <param name="Result_Out">true if both System.Reactive.EventPattern`2 objects don&apos;t represent the same event; otherwise, false.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.EventPattern._Operations_.Create``2(VL.Core.NodeContext,``0,``1,System.Reactive.EventPattern{``0,``1}@)">
            <summary>Creates a new data representation instance of a .NET event invocation with the given sender and event data.</summary>
            <param name="Sender_In">The sender object that raised the event.</param>
            <param name="E_In">The event data that was generated by the event.</param>
            <param name="Output_Out">Creates a new data representation instance of a .NET event invocation with the given sender and event data.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.EventPattern._Operations_.CreateDefault``3">
            <summary>Creates a new data representation instance of a .NET event invocation with the given sender and event data.</summary>
            <returns>Creates a new data representation instance of a .NET event invocation with the given sender and event data.</returns>
        </member>
        <member name="M:_VL_Reactive_.Reactive.EventPattern2._Operations_.Create``1(VL.Core.NodeContext,System.Object,``0,System.Reactive.EventPattern{``0}@)">
            <summary>Creates a new data representation instance of a .NET event invocation with the given sender and event data.</summary>
            <param name="Sender_In">The sender object that raised the event.</param>
            <param name="E_In">The event data that was generated by the event.</param>
            <param name="Output_Out">Creates a new data representation instance of a .NET event invocation with the given sender and event data.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.EventPattern2._Operations_.CreateDefault``2">
            <summary>Creates a new data representation instance of a .NET event invocation with the given sender and event data.</summary>
            <returns>Creates a new data representation instance of a .NET event invocation with the given sender and event data.</returns>
        </member>
        <member name="M:_VL_Reactive_.Reactive.BlockingReceiver._Operations_.Receive``1(VL.Lib.Reactive.ObservableNodes.BlockingReceiver{``0},System.IObservable{``0},``0,System.Threading.CancellationToken,VL.Lib.Reactive.ObservableNodes.BlockingReceiver{``0}@,``0@,System.Boolean@)">
            <summary>
            Blocks until the next item is produced by the input sequence and returns the value.
                        Since the call is blocking make sure to use it on a different thread than the producer and provide it with a proper cancellation token.
                        Without a token the method will return immediately with the default value.
            </summary>
            <param name="Input__this__In">
            Blocks until the next item is produced by the input sequence and returns the value.
                        Since the call is blocking make sure to use it on a different thread than the producer and provide it with a proper cancellation token.
                        Without a token the method will return immediately with the default value.
            </param>
            <param name="Input_In">The sequence to receive values from.</param>
            <param name="Default_Value_In">The value to return in case the receive call fails.</param>
            <param name="Cancellation_Token_In">The cancellation token to cancel the blocking receive call.</param>
            <param name="Output_Out">
            Blocks until the next item is produced by the input sequence and returns the value.
                        Since the call is blocking make sure to use it on a different thread than the producer and provide it with a proper cancellation token.
                        Without a token the method will return immediately with the default value.
            </param>
            <param name="Result_Out">The received value.</param>
            <param name="Success_Out">Whether or not a value was received.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Task._Operations_.ToObservable``1(System.Threading.Tasks.Task{``0},System.IObservable{``0}@)">
            <summary>Returns an observable sequence that propagates the result of the task.</summary>
            <remarks>If the specified task object supports cancellation, consider using System.Reactive.Linq.Observable.FromAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}}) instead.</remarks>
            <param name="Input_In">Task to convert to an observable sequence.</param>
            <param name="Result_Out">An observable sequence that produces the task&apos;s result, or propagates the exception produced by the task.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Task._Operations_.ToObservable_Scheduler``1(System.Threading.Tasks.Task{``0},System.Reactive.Concurrency.IScheduler,System.IObservable{``0}@)">
            <summary>Returns an observable sequence that propagates the result of the task.</summary>
            <remarks>If the specified task object supports cancellation, consider using System.Reactive.Linq.Observable.FromAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}}) instead.</remarks>
            <param name="Input_In">Task to convert to an observable sequence.</param>
            <param name="Scheduler_In">Scheduler on which to notify observers about completion, cancellation or failure.</param>
            <param name="Result_Out">An observable sequence that produces the task&apos;s result, or propagates the exception produced by the task.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Task_NonGeneric._Operations_.ToObservable_Scheduler(System.Threading.Tasks.Task,System.Reactive.Concurrency.IScheduler,System.IObservable{System.Reactive.Unit}@)">
            <summary>Returns an observable sequence that signals when the task completes.</summary>
            <remarks>If the specified task object supports cancellation, consider using System.Reactive.Linq.Observable.FromAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}) instead.</remarks>
            <param name="Input_In">Task to convert to an observable sequence.</param>
            <param name="Scheduler_In">Scheduler on which to notify observers about completion, cancellation or failure.</param>
            <param name="Result_Out">An observable sequence that produces a unit value when the task completes, or propagates the exception produced by the task.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Task_NonGeneric._Operations_.ToObservable(System.Threading.Tasks.Task,System.IObservable{System.Reactive.Unit}@)">
            <summary>Returns an observable sequence that signals when the task completes.</summary>
            <remarks>If the specified task object supports cancellation, consider using System.Reactive.Linq.Observable.FromAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}) instead.</remarks>
            <param name="Input_In">Task to convert to an observable sequence.</param>
            <param name="Result_Out">An observable sequence that produces a unit value when the task completes, or propagates the exception produced by the task.</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Disposables.SerialDisposable._Operations_.Create(VL.Core.NodeContext,System.Reactive.Disposables.SerialDisposable@)">
            <summary>Initializes a new instance of the System.Reactive.Disposables.SerialDisposable class.</summary>
            <param name="Output_Out">Initializes a new instance of the System.Reactive.Disposables.SerialDisposable class.</param>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Channel.Merge_Selector_IfteV1cmsaVNz4Rs1HKxBO`2">
            <summary>Creates a two-way binding by converting values in both directions.</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Channel.Select_ByPath_F87Ra7AEG4ZPmhLyVvgFL3`2">
            <summary>Returns a channel which is bound via the given path to the root channel</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Channel.Merge_RgiEfzDHxRONa9wSNbvSjL`3">
            <summary>Creates a two-way binding</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Channel.Consume_TosjFPyDZxdLxWPIFii2aJ`1">
            <summary>Creates a one-way binding.</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Channel.Merge_Selector_Optional_PVBrIJlg1TxNSt4LAlCd47`2">
            <summary>Creates a two-way binding by converting values in both directions. You may filter out values by returning no value.</summary>
        </member>
        <member name="T:_VL_Reactive_.Reactive.Channel.Select_ByPath_Dynamic_H1BMXa3hQZOLlT0ASGV8Fo">
            <summary>Returns a channel which is bound via the given path to the root channel</summary>
            <remarks>The type of the returned channel is determined by the property type the given path points to</remarks>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Channel._Operations_.EnsureValue``2(``0,``1,System.String,System.Boolean,System.Boolean,``0@)">
            <summary>Sets the value of the channel if it differs from the current value of the channel.</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.ChannelHub.Modules._Operations_.RegisterModule(VL.Core.Reactive.IChannelHub,VL.Core.Reactive.IModule,VL.Core.Reactive.IChannelHub@)">
            <param name="Output_Out">Please call this inside a static RegisterServices operation</param>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Channel_Ungeneric._Operations_.Attributes(VL.Lib.Reactive.IChannel,VL.Lib.Reactive.IChannel{System.Collections.Generic.IReadOnlyCollection{System.Attribute}}@)">
            <summary>Retrieves attached meta data. You can push to this channel to update the meta data and inform all subscribers.</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Channel_Ungeneric._Operations_.Disable(VL.Lib.Reactive.IChannel,VL.Lib.Reactive.IChannel@)">
            <summary>Disable</summary>
        </member>
        <member name="M:_VL_Reactive_.Reactive.Channel_Ungeneric._Operations_.Enable(VL.Lib.Reactive.IChannel,VL.Lib.Reactive.IChannel@)">
            <summary>Enable</summary>
        </member>
        <member name="T:_VL_HTTP_.IO.HTTP.HTTPPost_MultiPart_UatTgPw0WkwOTteoGmIGaG">
            <summary>Basic stateful template with one in/out</summary>
        </member>
        <member name="T:_VL_HTTP_.IO.HTTP.HTTPPost_RpG0YiYPPd5QF184dDTNoU">
            <summary>Send data to a server to create/update a resource</summary>
        </member>
        <member name="T:_VL_HTTP_.IO.HTTP.HTTPGet_IYIjPPVGEoFPAAup5UWplL">
            <summary>Request data from a specified resource</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.Try_Stateless``1(System.Func{``0},``0,``0@,System.Boolean@,System.String@)">
            <summary>Runs the given stateless patch and returns whether it has been successful or not</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.Try2__2Outputs_Stateless``2(System.Func{System.Tuple{``0,``1}},``0,``1,``0@,``1@,System.Boolean@,System.String@)">
            <summary>Runs the given stateless patch and returns whether it has been successful or not. Supports 2 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.Try3__3Outputs_Stateless``3(System.Func{System.Tuple{``0,``1,``2}},``0,``1,``2,``0@,``1@,``2@,System.Boolean@,System.String@)">
            <summary>Runs the given stateless patch and returns whether it has been successful or not. Supports 3 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.Try4__4Outputs_Stateless``4(System.Func{System.Tuple{``0,``1,``2,``3}},``0,``1,``2,``3,``0@,``1@,``2@,``3@,System.Boolean@,System.String@)">
            <summary>Runs the given stateless patch and returns whether it has been successful or not. Supports 4 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.Try5__5Outputs_Stateless``5(System.Func{System.Tuple{``0,``1,``2,``3,``4}},``0,``1,``2,``3,``4,``0@,``1@,``2@,``3@,``4@,System.Boolean@,System.String@)">
            <summary>Runs the given stateless patch and returns whether it has been successful or not. Supports 5 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatch_Stateless``1(System.Func{``0},System.Func{System.Exception,``0},``0@)">
            <summary>Runs the given stateless patch, runs catch instead if it has been unsuccessful</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatch2__2Outputs_Stateless``2(System.Func{System.Tuple{``0,``1}},System.Func{System.Exception,System.Tuple{``0,``1}},``0@,``1@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Supports 2 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatch3__3Outputs_Stateless``3(System.Func{System.Tuple{``0,``1,``2}},System.Func{System.Exception,System.Tuple{``0,``1,``2}},``0@,``1@,``2@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Supports 3 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatch4__4Outputs_Stateless``4(System.Func{System.Tuple{``0,``1,``2,``3}},System.Func{System.Exception,System.Tuple{``0,``1,``2,``3}},``0@,``1@,``2@,``3@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Supports 4 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatch5__5Outputs_Stateless``5(System.Func{System.Tuple{``0,``1,``2,``3,``4}},System.Func{System.Exception,System.Tuple{``0,``1,``2,``3,``4}},``0@,``1@,``2@,``3@,``4@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Supports 5 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatchFinally_Stateless``2(System.Func{``0},System.Func{System.Exception,``0},System.Func{``0,``1},``1@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Guarantees to run Finally afterwards</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatchFinally2__2Outputs_Stateless``4(System.Func{System.Tuple{``0,``1}},System.Func{System.Exception,System.Tuple{``0,``1}},System.Func{System.Tuple{``0,``1},System.Tuple{``2,``3}},``2@,``3@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Guarantees to run Finally afterwards. Supports 2 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatchFinally3__3Outputs_Stateless``6(System.Func{System.Tuple{``0,``1,``2}},System.Func{System.Exception,System.Tuple{``0,``1,``2}},System.Func{System.Tuple{``0,``1,``2},System.Tuple{``3,``4,``5}},``3@,``4@,``5@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Guarantees to run Finally afterwards. Supports 3 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatchFinally4__4Outputs_Stateless``8(System.Func{System.Tuple{``0,``1,``2,``3}},System.Func{System.Exception,System.Tuple{``0,``1,``2,``3}},System.Func{System.Tuple{``0,``1,``2,``3},System.Tuple{``4,``5,``6,``7}},``4@,``5@,``6@,``7@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Guarantees to run Finally afterwards. Supports 4 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control._Operations_.TryCatchFinally5__5Outputs_Stateless``10(System.Func{System.Tuple{``0,``1,``2,``3,``4}},System.Func{System.Exception,System.Tuple{``0,``1,``2,``3,``4}},System.Func{System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``5,``6,``7,``8,``9}},``5@,``6@,``7@,``8@,``9@)">
            <summary>Runs the given stateless patch, runs Catch instead if it has been unsuccessful. Guarantees to run Finally afterwards. Supports 5 regular outputs</summary>
        </member>
        <member name="M:_VL_CoreLib_Experimental_.Control.Parallel._Operations_.CurrentThreadId(System.Int32@)">
            <summary>Returns the managed thread ID of the current call.</summary>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLObject._Operations_.TryGetValue``1(VL.Core.IVLObject,System.String,``0,``0@,System.Boolean@)">
            <summary>Tries to retrieve the value from the given property.</summary>
            <param name="Input_In">The instance to retrieve the value from.</param>
            <param name="Name_In">The name of the property.</param>
            <param name="Default_Value_In">The default value to use in case retrieval failed.</param>
            <param name="Value_Out">The returned values.</param>
            <param name="Result_Out">True if the retrieval succeeded.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLObject._Operations_.TryGetValueByPath``1(VL.Core.IVLObject,System.String,``0,``0@,System.Boolean@)">
            <summary>Tries to retrieve the value from the given path. The path is a dot separated string of property names.</summary>
            <param name="Input_In">The root instance to start the lookup from.</param>
            <param name="Path_In">A dot separated string of property names. Spreaded properties can be indexed using [N] for example &quot;MySpread[0]&quot; retrieves the first value in MySpread.</param>
            <param name="Default_Value_In">The default value to use in case the lookup failed.</param>
            <param name="Value_Out">The returned value.</param>
            <param name="Result_Out">True if the lookup succeeded.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLObject._Operations_.WithValue``2(``0,System.String,``1,``0@)">
            <summary>Tries to set the value of the given property and returns a new instance (if it is a record) with the set value.</summary>
            <param name="Input_In">The instance to set the property value on.</param>
            <param name="Name_In">The name of the property.</param>
            <param name="Value_In">The value to set.</param>
            <param name="Output_Out">The new instance (if it is a record) with the set value.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLObject._Operations_.WithValueByPath``2(``0,System.String,``1,``0@)">
            <summary>Tries to set the value of the given path. The path is a dot separated string of property names.</summary>
            <param name="Input_In">The root instance to start the lookup from.</param>
            <param name="Path_In">A dot separated string of property names. Spreaded properties can be indexed using [N] for example &quot;MySpread[0]&quot; sets the first value in MySpread.</param>
            <param name="Value_In">The value to set.</param>
            <param name="Output_Out">The new root instance (if it is a record) with the updated spine.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLObject._Operations_.TryReplaceDescendant``2(``0,``1,``0@,System.Boolean@)">
            <summary>
            Traverses into the object graph of instance and if it can find a descendant with the same P:VL.Core.IVLObject.Identity
                        as the given descendant replaces it and outputs a new updatedInstance.
            </summary>
            <remarks>Only user defined properties will be traversed. If a property holds many children it must be of type VL.Lib.Collections.ISpread or System.Collections.IDictionary. Other collection types will not be looked at.</remarks>
            <param name="Input_In">The instance to traverse into.</param>
            <param name="Descendant_In">The new descendant.</param>
            <param name="Updated_Instance_Out">The updated instance with the descendant replaced.</param>
            <param name="Result_Out">Returns true if a descendant with the same P:VL.Core.IVLObject.Identity as the given one was found and replaced.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLObject._Operations_.IsSupportedCollectionType(VL.Core.IVLTypeInfo,System.Boolean@)">
            <summary>Whether or not the type is supported by VL.Core.VLObjectExtensions.TryReplaceDescendant``2(``0,``1,``0@).</summary>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLObject._Operations_.TryGetPath(VL.Core.IVLObject,VL.Core.IVLObject,System.Boolean@,System.String@)">
            <summary>Tries to retrieve the path from the instance to the descendant.</summary>
            <remarks>
            The function does a depth first search into the object tree given by the instance.
                        It will traverse all user defined properties which are either a VL object or a collection of VL objects.
                        The supported collection types are spreads and dictionaries.
            </remarks>
            <param name="Input_In">The instance from where the search shall start.</param>
            <param name="Descendant_In">The descendant to look for.</param>
            <param name="Result_Out">True if the descendant was found.</param>
            <param name="Path_Out">The path from the instance to the descendant.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLPropertyInfo._Operations_.TryGetValue``3(``0,``1,``2,``2@,System.Boolean@)">
            <summary>Tries to get the property value of the given instance.</summary>
            <param name="Input_In">The instance to get the property value from.</param>
            <param name="Property_In">The property to read.</param>
            <param name="Default_Value_In">The value to return in case retrieval failed.</param>
            <param name="Value_Out">The retrieved property value.</param>
            <param name="Success_Out">Whether or not the operation succeeded.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLPropertyInfo._Operations_.WithValue``3(``0,``1,``2,``0@)">
            <summary>Sets the property value of the given instance.</summary>
            <param name="Input_In">The instance to set the property value on.</param>
            <param name="Property_In">The property to write.</param>
            <param name="Value_In">The value to set.</param>
            <param name="Output_Out">The instance with the set value.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.CreateInstance(VL.Core.IVLFactory,System.Type,VL.Core.NodeContext,VL.Core.IVLFactory@,System.Object@)">
            <summary>Creates a new instance of the given type using the VL generated constructor.</summary>
            <param name="Input_In">Creates a new instance of the given type using the VL generated constructor.</param>
            <param name="Type_In">The type to create a new instance of.</param>
            <param name="Node_Context_In">The context to use when creating the instance.</param>
            <param name="Output_Out">Creates a new instance of the given type using the VL generated constructor.</param>
            <param name="Result_Out">The newly created instance or null if the type is not known to VL.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.TryCreateInstance``1(VL.Core.IVLFactory,``0,VL.Core.NodeContext,System.Boolean@,``0@)">
            <summary>
            Tries to create an instance of the given type  using the VL generated constructor.
                        Returns true in case an instance was created.
            </summary>
            <param name="Input_In">The factory which will create the instance.</param>
            <param name="Default_Value_In">The default value to use in case an instance couldn&apos;t be created.</param>
            <param name="Node_Context_In">The context in which the new instance will be created.</param>
            <param name="Success_Out">True in case a new instance was created.</param>
            <param name="Instance_Out">The newly created instance or the given default value.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.GetDefaultValue(VL.Core.IVLFactory,System.Type,VL.Core.IVLFactory@,System.Object@)">
            <summary>Returns the default value of the given type as defined by VL through the CreateDefault operations.</summary>
            <param name="Input_In">Returns the default value of the given type as defined by VL through the CreateDefault operations.</param>
            <param name="Type_In">The type to return the default value of.</param>
            <param name="Output_Out">Returns the default value of the given type as defined by VL through the CreateDefault operations.</param>
            <param name="Result_Out">The default value of the given type as defined by VL or null if the type is not known to VL or no default has been defined.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.GetTypeByName(VL.Core.IVLFactory,System.String,VL.Core.IVLFactory@,System.Type@)">
            <summary>
            Lookup a type by name. The name will be parsed based on the usual VL type annotation rules.
                        For example &quot;Integer32&quot; or &quot;Spread [Collections] &lt;Float32&gt;&quot;.
            </summary>
            <param name="Input_In">
            Lookup a type by name. The name will be parsed based on the usual VL type annotation rules.
                        For example &quot;Integer32&quot; or &quot;Spread [Collections] &lt;Float32&gt;&quot;.
            </param>
            <param name="Name_In">The name of the type.</param>
            <param name="Output_Out">
            Lookup a type by name. The name will be parsed based on the usual VL type annotation rules.
                        For example &quot;Integer32&quot; or &quot;Spread [Collections] &lt;Float32&gt;&quot;.
            </param>
            <param name="Result_Out">The first type which matches the name or null.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.GetTypeInfo(VL.Core.IVLFactory,System.Type,VL.Core.IVLFactory@,VL.Core.IVLTypeInfo@)">
            <summary>Fetch the VL type info for a given CLR type.</summary>
            <param name="Input_In">Fetch the VL type info for a given CLR type.</param>
            <param name="Type_In">The CLR type to fetch the VL type info for.</param>
            <param name="Output_Out">Fetch the VL type info for a given CLR type.</param>
            <param name="Result_Out">The VL type info wrapping the given CLR type.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.RegisterService``2(VL.Core.IVLFactory,System.Func{``0,``1},VL.Core.IVLFactory@)">
            <summary>
            Registers a factory function which gets invoked when a service of type  is requested for
                        a value of type .
            </summary>
            <param name="Input_In">The factory to register the service in.</param>
            <param name="Create_In">The factory function to invoke when such a service is requested.</param>
            <param name="Output_Out">The factory with the registered service.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.TryCreateService``1(VL.Core.IVLFactory,System.Object,System.Type,``0,System.Boolean@,``0@)">
            <summary>
            Tries to create a service of the given type  for the given value.
                        Returns true if such a service was found for the given value, otherwise the given default service will be used.
            </summary>
            <param name="Input_In">The factory which creates the service.</param>
            <param name="Value_In">The value which will be passed to the service constructor.</param>
            <param name="For_Type_In">The type for which to create the service for. If null the type of the value will be used.</param>
            <param name="Default_Service_In">The default service to use in case no service of that type was registered for the type of the value.</param>
            <param name="Result_Out">True in case a service was found and created.</param>
            <param name="Service_Out">The registered service or the given default service.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.IVLFactory._Operations_.GetService``1(VL.Core.IVLFactory,``0@)">
            <summary>Gets the service type  or null.</summary>
            <param name="Input_In">The factory which contains the service.</param>
            <param name="Result_Out">The service or null in case no service of type  was registered.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.NodeContext._Operations_.Factory(VL.Core.NodeContext,VL.Core.IVLFactory@)">
            <summary>The VL factory.</summary>
            <param name="Input_In">The VL factory.</param>
            <param name="Factory_Out">The VL factory.</param>
        </member>
        <member name="M:_System_Reflection_.System.Reflection.NodeContext._Operations_.Path(VL.Core.NodeContext,VL.Core.NodePath@)">
            <summary>The path to the node.</summary>
            <param name="Input_In">The path to the node.</param>
            <param name="Path_Out">The path to the node.</param>
        </member>
        <member name="T:_System_Serialization_.System.Serialization.Persistent_Ordux5u8MUjPFUJ6OrYaW1">
            <summary>Reads and writes a VL data type to disc.</summary>
            <remarks>Use this as the first node in your data flow to load save data persistently.</remarks>
            <tags>serialize,deserialize,load,save</tags>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Persistent_Ordux5u8MUjPFUJ6OrYaW1.Update``1(``0,VL.Lib.IO.Path,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,``0@)">
            <param name="Input_In">The data to serialize.</param>
            <param name="File_Path_In">File path for load/save.</param>
            <param name="Read_On_Open_In">Read when patch opens or gets created.</param>
            <param name="Include_Defaults_In">If true, default values will also be serialized.</param>
            <param name="Throw_On_Error_In">If true, serialization errors will throw an exception.</param>
            <param name="Output_Out">Either the input or the loaded data when &apos;Read&apos; is true.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization._Operations_.Serialize``1(VL.Core.SerializationContext,System.String,``0,System.Boolean,System.Object@)">
            <summary>Serializes the given value and if a name is provided wraps the serialized content into an System.Xml.Linq.XElement or System.Xml.Linq.XAttribute.</summary>
            <param name="Input_In">Serializes the given value and if a name is provided wraps the serialized content into an System.Xml.Linq.XElement or System.Xml.Linq.XAttribute.</param>
            <param name="Name_In">The name to use (if any) for the element or attribute wrapping the serialized content.</param>
            <param name="Value_In">The value to serialize.</param>
            <param name="Force_Element_In">If true the content will always be wrapped in an System.Xml.Linq.XElement.</param>
            <param name="Result_Out">The serialized content or if any wrapping happended the System.Xml.Linq.XAttribute or System.Xml.Linq.XElement.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization._Operations_.Deserialize``1(VL.Core.SerializationContext,System.Object,System.String,``0@)">
            <summary>Deserializes the given content or if a name is provided extracts and deserializes the attribute or child element with the given name.</summary>
            <param name="Input_In">Deserializes the given content or if a name is provided extracts and deserializes the attribute or child element with the given name.</param>
            <param name="Content_In">The content to deserialize.</param>
            <param name="Name_In">The name of the attribute or child element to extract from the content and deserialize.</param>
            <param name="Result_Out">The deserialized value or the given default value in case deserialization failed.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization._Operations_.RegisterSerializer``2(VL.Core.IVLFactory,``0,VL.Core.IVLFactory@)">
            <summary>
            Registers a VL serializer to the factory.
                        In case the type for which the serializer gets registered is generic a dummy type instantiation paired with a dummy
                        serializer instantiation containing a public default constructor has to be registered. For example a serializer implementation
                        of type FooSerializer&lt;T&gt; for the generic type Foo&lt;T&gt; has to be registered for the dummy instantiaton Foo&lt;object&gt;.
            </summary>
            <param name="Input_In">The factory in which the serializer gets registered.</param>
            <param name="Serializer_In">The serializer to register.</param>
            <param name="Output_Out">The factory with the registered serializer.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization._Operations_.Serialize_Log_Errors``1(``0,System.Boolean,System.Boolean,VL.Core.NodeContext,System.Xml.Linq.XElement@,System.Collections.Generic.IReadOnlyList{System.String}@)">
            <summary>Serializes the given value into an System.Xml.Linq.XElement.</summary>
            <remarks>Paths are made relative to the application entry point.</remarks>
            <param name="Value_In">The value to serialize.</param>
            <param name="Throw_On_Error_In">Whether or not serialization errors should lead to an exception.</param>
            <param name="Include_Defaults_In">If true default values will also be serialized.</param>
            <param name="Node_Context_In">The node context to use for serialization.</param>
            <param name="Result_Out">The serialized content as an System.Xml.Linq.XElement.</param>
            <param name="Error_Messages_Out">The accumulated error messages in case Throw On Error is disabled.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization._Operations_.Deserialize_Log_Errors``1(System.Xml.Linq.XElement,System.Boolean,VL.Core.NodeContext,``0@,System.Collections.Generic.IReadOnlyList{System.String}@)">
            <summary>Deserializes the given content.</summary>
            <remarks>Relative paths are made absolute to the application entry point.</remarks>
            <param name="Content_In">The content to deserialize.</param>
            <param name="Throw_On_Error_In">Whether or not deserialization errors should lead to an exception.</param>
            <param name="Node_Context_In">The node context to use for deserialization.</param>
            <param name="Result_Out">The deserialized value.</param>
            <param name="Error_Messages_Out">The accumulated error messages in case Throw On Error is disabled.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization._Operations_.Serialize``1(``0,VL.Core.NodeContext,System.Boolean,System.Xml.Linq.XElement@)">
            <summary>Serializes the given value into an System.Xml.Linq.XElement.</summary>
            <remarks>
            Paths are made relative to the application entry point.
                        Throws a VL.Core.SerializationException in case serialization fails.
            </remarks>
            <param name="Value_In">The value to serialize.</param>
            <param name="Node_Context_In">The node context to use for serialization.</param>
            <param name="Include_Defaults_In">Whether or not default values should be serialized.</param>
            <param name="Result_Out">The serialized content as an System.Xml.Linq.XElement.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization._Operations_.Deserialize``1(System.Xml.Linq.XElement,VL.Core.NodeContext,``0@)">
            <summary>Deserializes the given content.</summary>
            <remarks>
            Relative paths are made absolute to the application entry point.
                        Throws a VL.Core.SerializationException in case deserialization fails.
            </remarks>
            <param name="Content_In">The content to deserialize.</param>
            <param name="Node_Context_In">The node context to use for deserialization.</param>
            <param name="Result_Out">The deserialized value.</param>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Deserialize_Binary_ReadOnlyMemory``1(System.ReadOnlyMemory{System.Byte},System.Boolean,``0@)">
            <summary>Counterpart of Serialize (Binary)</summary>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Deserialize_Bson``1(System.Byte[],``0@)">
            <summary>Counterpart of Serialize (Bson)</summary>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Deserialize_Json_Slicewise``2(``0,System.Boolean,System.Boolean,VL.Lib.Collections.Spread{``1}@)">
            <summary>Counterpart of Serialize (Json Slicewise)</summary>
            <remarks>Deserializing JSON that was not generated with the corresponding Serialize node will fail, if the individual attributes are not ordered alphabetically! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Deserialize_Json``1(System.String,System.Boolean,System.Boolean,``0@)">
            <summary>Counterpart of Serialize (Json)</summary>
            <remarks>Deserializing JSON that was not generated with the corresponding Serialize node will fail, if the individual attributes are not ordered alphabetically! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Deserialize_Xml_Slicewise``2(``0,System.Boolean,VL.Lib.Collections.Spread{``1}@)">
            <summary>Counterpart of Serialize (Xml Slicewise)</summary>
            <remarks>Deserializing XML that was not generated with the corresponding Serialize node will fail, if the individual attributes are not ordered alphabetically! For details, see:https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Deserialize_Xml``1(System.String,System.Boolean,``0@)">
            <summary>Counterpart of Serialize (Xml)</summary>
            <remarks>Deserializing XML that was not generated with the corresponding Serialize node will fail, if the individual attributes are not ordered alphabetically! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Serialize_Binary``1(``0,System.Boolean,System.Byte[]@)">
            <summary>Easy serialization into a binary format best used for non-persistent, network communication.</summary>
            <remarks>Avoid using for long-term persistence! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Serialize_Bson``1(``0,System.Byte[]@)">
            <summary>Easy serialization into a BSON format best used for non-persistent, network communication.</summary>
            <remarks>Avoid using for long-term persistence! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Serialize_Json_Slicewise``2(``0,System.Boolean,System.Boolean,VL.Lib.Collections.Spread{System.String}@)">
            <summary>Same as Serialize (Json) but serializes the slices of a sequence individually and returns a spread of Json strings</summary>
            <remarks>Avoid using for long-term persistence! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Serialize_Json``1(``0,System.Boolean,System.Boolean,System.String@)">
            <summary>Easy serialization into a JSON format best used for non-persistent, network communication.</summary>
            <remarks>Avoid using for long-term persistence! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Serialize_Xml_Slicewise``2(``0,System.Boolean,VL.Lib.Collections.Spread{System.String}@)">
            <summary>Same as Serialize (Xml) but serializes the slices of a sequence individually and returns a spread of Xml strings</summary>
            <remarks>Avoid using for long-term persistence! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Serialize_Xml``1(``0,System.Boolean,System.String@)">
            <summary>Easy serialization into a XML format best used for non-persistent, network communication.</summary>
            <remarks>Avoid using for long-term persistence! For details, see: https://thegraybook.vvvv.org/reference/libraries/serialization.html</remarks>
        </member>
        <member name="M:_System_Serialization_.System.Serialization.Volatile._Operations_.Deserialize_Binary``1(System.Byte[],System.Boolean,``0@)">
            <summary>Counterpart of Serialize (Binary)</summary>
        </member>
        <member name="T:_VL_Xml_.IO.FileReader_JSON_1_ONznqaraFfTO17wD7cHvB2">
            <summary>Reads a .json text file and returns an XDocument</summary>
            <remarks>Beware: the output is not available in the same frame the Read input is triggered but only when On Completed bangs.</remarks>
            <tags>load,open</tags>
        </member>
        <member name="T:_VL_Xml_.IO.FileReader_XML_1_KNjbqVB34ftQTFNbReBMiE">
            <summary>Reads a .xml text file and returns an XDocument</summary>
            <remarks>Beware: the output is not available in the same frame the Read input is triggered but only when On Completed bangs.</remarks>
            <tags>load,open</tags>
        </member>
        <member name="T:_VL_Xml_.IO.FileWriter_JSON_1_LO29WxGQZ6eMZ1jTmWQ24C">
            <summary>Takes an XDocument or XElement and writes it to a .json text file asynchronously</summary>
            <remarks>Beware: the file is not available on disk the same frame the Write input is triggered but only when On Completed bangs.</remarks>
            <tags>save</tags>
        </member>
        <member name="T:_VL_Xml_.IO.FileWriter_XML_1_Iv8uSC23OROOGCWLfpOrIq">
            <summary>Takes an XDocument or XElement and writes it to a .xml text file asynchronously</summary>
            <remarks>Beware: the file is not available on disk the same frame the Write input is triggered but only when On Completed bangs.</remarks>
            <tags>save</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLReader_XDocument_OPrbd3hV1yTQAohaXbZTAZ">
            <summary>Reads the XDocument from the given XML file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLWriter_XDocument_PVpTLN2ieLzPuDrY7SZ3Tv">
            <summary>Writes a XDocument to the given XML file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLReader_XDocument_Reactive_SYtLNqgLVojLPTlgG6zowT">
            <summary>Reads the XDocument from the given XML file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLWriter_XDocument_Reactive_Jn58QSZGMUmNfBVEabutgv">
            <summary>Writes a XDocument to the given XML file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONReader_XDocument_NbGfJLYlal5O49GfRvntMG">
            <summary>Reads the XDocument from the given JSON file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONWriter_XDocument_Rk0S9JlrxWRMdVQDEsXCS7">
            <summary>Writes a XDocument to the given JSON file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONReader_XDocument_Reactive_TgZP25u6vCjPyckNhH9sai">
            <summary>Reads the XDocument from the given JSON file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONWriter_XDocument_Reactive_IWXVEYl2Q9nMFA1Ol9XYnk">
            <summary>Writes a XDocument to the given JSON file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLReader_OcM6yTDIunKLXht5WzCyyW">
            <summary>Returns the root XElement from the given XML file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONReader_SKFRbeanCu4NWa79zKnx9Q">
            <summary>Returns the root XElement from the given JSON file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLWriter_K3RuV8m5vRVMCM7TAI7w2R">
            <summary>Writes an XElement as the root element to the given XML file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONWriter_G5eJOYNGp5vO7mYwtKIE40">
            <summary>Writes an XElement as the root element to the given JSON file.</summary>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLReader_Reactive_BrT4tiQ7m76MQPPcJOvDX2">
            <summary>Returns the root XElement from the given XML file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONReader_Reactive_NjSdpwlJJeQO9pvEf8bCYm">
            <summary>Returns the root XElement from the given JSON file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.XMLWriter_Reactive_MqVhXYAsYAJNTdWUWjIBSd">
            <summary>Writes an XElement as the root element to the given XML file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="T:_VL_Xml_.System.XML.JSONWriter_Reactive_D9F91fz2SCnN1P2g3oMjAS">
            <summary>Writes an XElement as the root element to the given JSON file in background.</summary>
            <tags>async</tags>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.IsValid(System.Xml.Linq.XNode,VL.Lib.IO.Path,System.Boolean@,System.String@)">
            <summary>Validates an XDocument or XElement against an XML Schema Definition and returns whether it is valid or not</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.Parse(System.String,System.Xml.Linq.LoadOptions,System.Xml.Linq.XElement@)">
            <summary>Creates a new XElement from a string, optionally preserving white space, setting the base URI, and retaining line information.</summary>
            <tags>XElement,Deserialize,ToXElement,AsXElement,FromString</tags>
            <param name="Result_Out">An XElement populated from the string that contains XML.</param>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.ParseJSON(System.String,System.String,System.Boolean,System.Xml.Linq.XElement@)">
            <summary>Deserializes an XElement from a JSON string</summary>
            <tags>Deserialize,ToXElement,AsXElement,FromString</tags>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.ToJSON(System.Xml.Linq.XNode,System.Boolean,System.Boolean,System.String@)">
            <summary>Serializes an XDocument or XElement to a JSON string</summary>
            <tags>XDocument,XElement,Serialize,FromXDocument,FromXElement</tags>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XAttribute_Join(System.String,System.String,System.Xml.Linq.XAttribute@)">
            <summary>Creates an XAttribute</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XAttribute_Split(System.Xml.Linq.XAttribute,System.String@,System.String@)">
            <summary>Splits an XAttribute into its components</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XAttributeByName(System.Xml.Linq.XElement,System.String,System.Xml.Linq.XAttribute@)">
            <summary>Returns the XAttribute with the given name</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XDeclaration_Join(System.String,System.String,System.String,System.Xml.Linq.XDeclaration@)">
            <summary>Creates an XDeclaration</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XDeclaration_Split(System.Xml.Linq.XDeclaration,System.String@,System.String@,System.String@)">
            <summary>Splits an XDeclaration into its components</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XDocument_Join(System.Xml.Linq.XElement,System.Xml.Linq.XDeclaration,System.Xml.Linq.XDocumentType,System.Xml.Linq.XDocument@)">
            <summary>Creates an XDocument</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XDocument_Split(System.Xml.Linq.XDocument,System.Xml.Linq.XElement@,System.Xml.Linq.XDeclaration@,System.Xml.Linq.XDocumentType@)">
            <summary>Splits an XDocument into its components</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XDocumentType_Join(System.String,System.String,System.String,System.String,System.Xml.Linq.XDocumentType@)">
            <summary>Creates an XDocumentType</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XDocumentType_Split(System.Xml.Linq.XDocumentType,System.String@,System.String@,System.String@,System.String@)">
            <summary>Splits an XDocumentType into its components</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XElement_Join(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute},System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XElement@)">
            <summary>Creates an XElement</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XElement_Split(System.Xml.Linq.XElement,System.String@,System.String@,VL.Lib.Collections.Spread{System.Xml.Linq.XElement}@,VL.Lib.Collections.Spread{System.Xml.Linq.XAttribute}@)">
            <summary>Splits an XElement into its components</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.XElementsByName(System.Xml.Linq.XElement,System.String,System.Boolean,VL.Lib.Collections.Spread{System.Xml.Linq.XElement}@)">
            <summary>Returns a spread of XElements with the given name</summary>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.Parse_XDocument(System.String,System.Xml.Linq.LoadOptions,System.Xml.Linq.XDocument@)">
            <summary>Creates a new XDocument from a string, optionally preserving white space, setting the base URI, and retaining line information.</summary>
            <tags>XDocument,Deserialize,ToXDocument,AsXDocument,FromString</tags>
        </member>
        <member name="M:_VL_Xml_.System.XML._Operations_.ParseJSON_XDocument(System.String,System.String,System.Boolean,System.Xml.Linq.XDocument@)">
            <summary>Deserializes an XDocument from a JSON string</summary>
            <tags>XDocument,Deserialize,ToXDocument,AsXDocument,FromString</tags>
        </member>
        <member name="T:_VL_Animation_.Animation.Sequencer_Gow6VG33IYdQWs58olyP8x`1">
            <summary>Records the input into an internal track that can be played back.</summary>
        </member>
        <member name="T:_VL_Animation_.Animation.Delay_IdvSxYASvkgOhJLGiNGDdg`2">
            <summary>Returns the incoming value delayed for the given duration.</summary>
        </member>
        <member name="T:_VL_Animation_.Animation.Recorder_QCyUM9b0UOjLhRjcdjQMmm`1">
            <summary>Like the Sequencer [Animation] but can additionally save/load the track to/from disk.</summary>
        </member>
        <member name="T:_VL_Animation_.Animation.Damper_Fast_E4dfedvLjPfOjMfJ9kcvG7`1">
            <summary>Value smoothing based on physical mass-spring simulation.</summary>
            <remarks>About 5x faster than the normal Damper, but less features. Works for all data types that have +, -, * and * (Scale) implemented.</remarks>
            <tags>smoothing,oscillator,mass,spring,runge,kutta</tags>
        </member>
        <member name="T:_VL_Animation_.Animation.Oscillator_Fast_NV7Jp8StqbYLmGMQsFc4RH`1">
            <summary>Value smoothing based on physical mass-spring simulation.</summary>
            <remarks>About 5x faster than the normal Oscillator, but less features. Works for all data types that have +, -, * and * (Scale) implemented.</remarks>
            <tags>smoothing,damping,mass,spring,runge,kutta,RK4</tags>
        </member>
        <member name="M:_VL_Animation_.Animation.Oscillator_Fast_NV7Jp8StqbYLmGMQsFc4RH`1.Update``1(`0,System.Single,System.Single,`0@,`0@)">
            <param name="Damping_In">Values below 2 add oscillations to the damping curve.</param>
        </member>
        <member name="T:_VL_Animation_.Animation.Delay_Linear_PJK5DlkbAiFMqldihFJJpm`2">
            <summary>Returns the incoming value delayed for the given duration.</summary>
            <remarks>The incoming values are not precisely replicated on the output but linearly interpolated between.</remarks>
        </member>
        <member name="T:_VL_Animation_.Animation.FrameBased.MassSpring_ThiX3p7ISOINTOij9kpcDi`1">
            <summary>Mass-spring simulation based on Runge-Kutta (RK4) integration.</summary>
            <remarks>Works for all data types that have +, -, * and * (Scale) implemented.</remarks>
            <tags>rungekutta,RK4,damper</tags>
        </member>
        <member name="T:_VL_Animation_.Animation.FrameBased.Wanderer__2D_DYC8agHhNE6Lg7Y7GtSql2">
            <summary>Returns the position of a randomly walking vector.</summary>
            <tags>random,walk</tags>
        </member>
        <member name="T:_VL_Animation_.Animation.FrameBased.Wanderer__3D_JQUTAyrKDKqQA9wwhm7VZl">
            <summary>Returns the position of a randomly walking vector.</summary>
            <tags>random,walk</tags>
        </member>
        <member name="M:_VL_Imaging_.Graphics.Imaging.Image._Operations_.Clone(VL.Lib.Basics.Imaging.IImage,VL.Lib.Basics.Imaging.IImage@)">
            <summary>Clones the image.</summary>
            <param name="Input_In">The image to clone.</param>
            <param name="Output_Out">The cloned image.</param>
        </member>
        <member name="M:_VL_Imaging_.Graphics.Imaging.Image._Operations_.CloneEmpty(VL.Lib.Basics.Imaging.IImage,VL.Lib.Basics.Imaging.IImage@)">
            <summary>Creates an empty clone of the image.</summary>
            <param name="Input_In">The image to clone.</param>
            <param name="Output_Out">An image of the same size and format but with all pixels set to zero.</param>
        </member>
        <member name="M:_VL_Imaging_.Graphics.Imaging.Image._Operations_.ToStream(VL.Lib.Basics.Imaging.IImage,System.IO.Stream@)">
            <summary>Makes the image accessible as a stream.</summary>
            <param name="Input_In">The image to wrap.</param>
            <param name="Result_Out">A stream which will read from the image.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Collision._Operations_.CircleContainsCircle(VL.Lib.Mathematics.Circle,VL.Lib.Mathematics.Circle,System.Boolean@)">
            <summary>Checks whether Circle 1 contains Circle 2</summary>
            <tags>hittest,picking</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Collision._Operations_.CircleContainsPoint(VL.Lib.Mathematics.Circle,Stride.Core.Mathematics.Vector2,System.Boolean@)">
            <summary>Checks whether the circle contains the point</summary>
            <tags>hittest,picking</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Collision._Operations_.CircleIntersectsCircle(VL.Lib.Mathematics.Circle,VL.Lib.Mathematics.Circle,System.Boolean@)">
            <summary>Checks whether the circles intersect</summary>
            <tags>hittest,picking</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Collision._Operations_.CircleIntersectsRect(VL.Lib.Mathematics.Circle,Stride.Core.Mathematics.RectangleF,System.Boolean@)">
            <summary>Checks whether the circle and the rect intersect</summary>
            <tags>hittest,picking</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Collision._Operations_.RectContainsPoint(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Vector2,System.Boolean@)">
            <summary>Checks whether the rectangle contains the point</summary>
            <tags>hittest,picking</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Collision._Operations_.RectContainsRect(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF,System.Boolean@)">
            <summary>Checks whether Rectangle 1 contains Rectangle 2</summary>
            <tags>hittest,picking</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Collision._Operations_.RectIntersectsRect(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF,System.Boolean@)">
            <summary>Checks whether the rectangles intersect</summary>
            <tags>hittest,picking</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.Rotate(Stride.Core.Mathematics.Matrix,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix rotated.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.Rotate_Center(Stride.Core.Mathematics.Matrix,System.Single,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix rotated.</summary>
            <remarks>Changing the center does not influence the translation but only define the pivot point for the rotation.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.Scale(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix scaled.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.Scale_Center(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix scaled.</summary>
            <remarks>Changing the center does not influence the translation but only define the pivot point for the scaling.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.TransformSRT(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector2,System.Single,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix transformed by first scaling, then rotating and finally translating it.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.TransformSRT_Center(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector2,System.Single,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix transformed by first scaling, then rotating and finally translating it.</summary>
            <remarks>Changing the center does not influence the translation but only define the pivot point for rotation and scaling.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.Translate(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix translated.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Transform._Operations_.UniformScale(Stride.Core.Mathematics.Matrix,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix scaled, where the scaling for both X and Y is specified by the same value.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.Angle(Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>Calculates the angle between the direction of a 2d vector and the X-Axis in cycles</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.AngleBetween(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>Returns the angle between two given 2D vectors in cycles.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.Confine(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@,Stride.Core.Mathematics.Vector2@,System.Boolean@)">
            <summary>Confines a moving point to a given area, bouncing it on the borders, keeping its velocity intact.</summary>
            <tags>constrain</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.FromPolar(System.Single,System.Single,Stride.Core.Mathematics.Vector2@)">
            <summary>Converts polar coordinates (angle, radius) to a 2D Vector.</summary>
            <tags>cartesian</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.GridPick(System.Single,System.Single,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Int32@,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@,Stride.Core.Mathematics.Vector2@)">
            <summary>Returns the index of the cell in a grid specified by rows, colums and size, that contains the given point.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.GridSplit(System.Single,System.Single,Stride.Core.Mathematics.Vector2,System.Int32,Stride.Core.Mathematics.Vector2@,Stride.Core.Mathematics.Vector2@)">
            <summary>Returns the center and size of a cell in a grid specified by rows, columns and size, that contains the given position.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.HexGridPoints__2D(Stride.Core.Mathematics.Vector2,System.Single,System.Boolean,Stride.Core.Mathematics.Vector2,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Returns a spread of points arranged in a hexagonal grid specified by its resolution and the center and radius of a single grid cell.</summary>
            <param name="Resolution_In">The number of grid points in X and Y.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.Slope(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>Returns the slope of the line defined by two points in cycles.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.ToPolar(Stride.Core.Mathematics.Vector2,System.Single@,System.Single@)">
            <summary>Converts a 2D Vector to polar coordinates (angle, radius).</summary>
            <tags>cartesian</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.GridPoints__2d(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Boolean,Stride.Core.Mathematics.Vector2,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Returns a spread of points arranged in a grid specified by its resolution, center and size.</summary>
            <tags>cross</tags>
            <param name="Resolution_In">The number of grid points in X and Y.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.CalcLinearScaleAndOffset``2(``0,``0,System.Boolean,``0,``0@,``0@)">
            <summary>Returns a spread of points arranged in a grid specified by its resolution, center and size.</summary>
            <tags>cross</tags>
            <param name="Resolution_In">The number of grid points in X and Y.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D._Operations_.GetBoundsTransformation(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Matrix@)">
            <summary>Creates a transformation from one Rectangle to another.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.NE(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF,System.Boolean@)">
            <summary>Implements the operator !=.</summary>
            <param name="Input_In">The left.</param>
            <param name="Input_2_In">The right.</param>
            <param name="Result_Out">The result of the operator.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.OperatorEquals(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF,System.Boolean@)">
            <summary>Implements the operator ==.</summary>
            <param name="Input_In">The left.</param>
            <param name="Input_2_In">The right.</param>
            <param name="Result_Out">The result of the operator.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Empty(Stride.Core.Mathematics.RectangleF@)">
            <summary>An empty rectangle</summary>
            <param name="Empty_Out">An empty rectangle</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Height(Stride.Core.Mathematics.RectangleF,System.Single@)">
            <summary>Gets or sets the height.</summary>
            <param name="Input_In">Gets or sets the height.</param>
            <param name="Height_Out">Gets or sets the height.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Intersection(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF@)">
            <summary>Creates a rectangle defining the area where one rectangle overlaps with another rectangle.</summary>
            <param name="Value_1_In">The first rectangle to compare.</param>
            <param name="Value_2_In">The second rectangle to compare.</param>
            <param name="Output_Out">[OutAttribute] The area where the two first parameters overlap.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Rectangle_Join_Edges(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Creates a rectangle defined the coordinates values of the edges.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Split_Edges(Stride.Core.Mathematics.RectangleF,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>Gets the coordinate values of the edges.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Translate(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.RectangleF@)">
            <summary>Changes the position of the rectangle</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Union(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.RectangleF@)">
            <summary>Creates a new rectangle that exactly contains two other rectangles.</summary>
            <param name="Value_1_In">The first rectangle to contain.</param>
            <param name="Value_2_In">The second rectangle to contain.</param>
            <param name="Output_Out">[OutAttribute] The rectangle that must be the union of the first two rectangles.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Width(Stride.Core.Mathematics.RectangleF,System.Single@)">
            <summary>Gets or sets the width.</summary>
            <param name="Input_In">Gets or sets the width.</param>
            <param name="Width_Out">Gets or sets the width.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Rectangle_Join(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,VL.Lib.Mathematics.RectangleAnchor,Stride.Core.Mathematics.RectangleF@)">
            <summary>Creates the rectangle defined by anchor position and size.</summary>
            <remarks>Size can be negative.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Rectangle_Join_Componentwise(System.Single,System.Single,System.Single,System.Single,VL.Lib.Mathematics.RectangleAnchor,Stride.Core.Mathematics.RectangleF@)">
            <summary>Creates the rectangle defined by anchor position and size.</summary>
            <remarks>Size can be negative.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Split(Stride.Core.Mathematics.RectangleF,VL.Lib.Mathematics.RectangleAnchor,Stride.Core.Mathematics.Vector2@,Stride.Core.Mathematics.Vector2@)">
            <summary>Gets anchor position and size of the rectangle.</summary>
            <remarks>Size can be negative.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Split_Componentwise(Stride.Core.Mathematics.RectangleF,VL.Lib.Mathematics.RectangleAnchor,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>Gets anchor position and size of the rectangle.</summary>
            <remarks>Size can be negative.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Rectangle_Join_Points(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.RectangleF@)">
            <summary>Creates the rectangle spanned by the points.</summary>
            <remarks>Size will always be positive.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.TopCenter(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Vector2@)">
            <summary>Center of the upper edge.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.BottomCenter(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Vector2@)">
            <summary>Center of the lower edge.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.MiddleLeft(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Vector2@)">
            <summary>Center of the left edge.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.MiddleRight(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Vector2@)">
            <summary>Center of the right edge.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Rectangle_Join_1(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.RectangleF struct.</summary>
            <param name="Left_In">The left.</param>
            <param name="Top_In">The top.</param>
            <param name="Width_In">The width.</param>
            <param name="Height_In">The height.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.RectangleF struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Scale__1(Stride.Core.Mathematics.RectangleF,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.RectangleF@)">
            <summary>Scales the rectangle in horizontal and vertical direction</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Scale(Stride.Core.Mathematics.RectangleF,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Scales the edges of the rectangle in each direction away from center. Negative values flip the rectangle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Scale_Centered(Stride.Core.Mathematics.RectangleF,System.Single,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Scales the edges of the rectangle horizontally and vertically away from center. Negative values flip the rectangle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Scale_Uniform(Stride.Core.Mathematics.RectangleF,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Scales all edges of the rectangle away from center. Negative values flip the rectangle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Inflate(Stride.Core.Mathematics.RectangleF,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Offsets the edges of the rectangle in each direction away from center. Negative values deflate the rectngle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Inflate_Centered(Stride.Core.Mathematics.RectangleF,System.Single,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Offsets the edges of the rectangle horizontally and vertically away from center. Negative values deflate the rectangle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.Inflate_Uniform(Stride.Core.Mathematics.RectangleF,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Offsets all edges of the rectangle away from center. Negative values deflate the rectangle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.OperatorMultiply_Scale(Stride.Core.Mathematics.RectangleF,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Scales all edges of the rectangle away from center. Negative values flip the rectangle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.OperatorDivide_Scale(Stride.Core.Mathematics.RectangleF,System.Single,Stride.Core.Mathematics.RectangleF@)">
            <summary>Scales all edges of the rectangle away from center. Negative values flip the rectangle.</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Rectangle._Operations_.SetAnchor(Stride.Core.Mathematics.RectangleF,VL.Lib.Mathematics.RectangleAnchor,VL.Lib.Mathematics.RectangleAnchor,Stride.Core.Mathematics.RectangleF@)">
            <summary>Takes an anchor position from the input rectangle and creates a new rectangle at this position.</summary>
            <tags>translate</tags>
            <param name="Source_Anchor_In">Chooses an anchor from the input rectangle.</param>
            <param name="Destination_Anchor_In">Anchor of the output rectangle.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.OperatorMinus(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Subtracts two vectors.</summary>
            <param name="Input_In">The first vector to subtract.</param>
            <param name="Input_2_In">The second vector to subtract.</param>
            <param name="Output_Out">When the method completes, contains the difference of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.OperatorMinus_Negate(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Reverses the direction of a given vector.</summary>
            <param name="Input_In">The vector to negate.</param>
            <param name="Output_Out">When the method completes, contains a vector facing in the opposite direction.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.NE(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.OperatorMultiply(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Multiplies a vector with another by performing component-wise multiplication.</summary>
            <param name="Input_In">The first vector to multiply.</param>
            <param name="Input_2_In">The second vector to multiply.</param>
            <param name="Output_Out">When the method completes, contains the multiplied vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.OperatorDivide(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Divides a vector by the given vector, component-wise.</summary>
            <param name="Input_In">The vector to scale.</param>
            <param name="Input_2_In">The by.</param>
            <param name="Output_Out">The scaled vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.OperatorPlus(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Adds two vectors.</summary>
            <param name="Input_In">The first vector to add.</param>
            <param name="Input_2_In">The second vector to add.</param>
            <param name="Output_Out">When the method completes, contains the sum of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.OperatorEquals(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Boolean@)">
            <summary>Determines whether the specified Stride.Core.Mathematics.Vector2 is equal to this instance.</summary>
            <param name="Input_2_In">The Stride.Core.Mathematics.Vector2 to compare with this instance.</param>
            <param name="Result_Out">
            true if the specified Stride.Core.Mathematics.Vector2 is equal to this instance; otherwise, false.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.CreateDefault">
            <summary>A Stride.Core.Mathematics.Vector2 with all of its components set to zero.</summary>
            <returns>A Stride.Core.Mathematics.Vector2 with all of its components set to zero.</returns>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Cross(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>Two dimensional cross product, also called perp dot product</summary>
            <tags>PerpDot</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Dot(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>Calculates the dot product of two vectors.</summary>
            <param name="Input_In">First source vector.</param>
            <param name="Input_2_In">Second source vector.</param>
            <param name="Result_Out">When the method completes, contains the dot product of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.FromValues(System.Collections.Generic.IEnumerable{System.Single},Stride.Core.Mathematics.Vector2@)">
            <summary>Creates a vector from the first values of a sequence, if the count of the sequence is lower than the dimension the remainig values get filled with 0</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.IsNaN(Stride.Core.Mathematics.Vector2,System.Boolean@)">
            <summary>Checks if ANY of the vector components is NaN</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.IsNaN_Component(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Checks all vector components for NaN</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Length(Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>Calculates the length of the vector.</summary>
            <remarks>
            Stride.Core.Mathematics.Vector2.LengthSquared may be preferred when only the relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the length of the vector.</param>
            <param name="Result_Out">The length of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.LengthSquared(Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>Calculates the squared length of the vector.</summary>
            <remarks>
            This method may be preferred to Stride.Core.Mathematics.Vector2.Length when only a relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the squared length of the vector.</param>
            <param name="Result_Out">The squared length of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Normalize(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Converts the vector into a unit vector.</summary>
            <param name="Input_In">The vector to normalize.</param>
            <param name="Output_Out">When the method completes, contains the normalized vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.One(Stride.Core.Mathematics.Vector2@)">
            <summary>A Stride.Core.Mathematics.Vector2 with all of its components set to one.</summary>
            <param name="One_Out">A Stride.Core.Mathematics.Vector2 with all of its components set to one.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Reflect(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2@)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <remarks>
            Reflect only gives the direction of a reflection off a surface, it does not determine
                        whether the original vector was close enough to the surface to hit it.
            </remarks>
            <param name="Vector_In">The source vector.</param>
            <param name="Normal_In">Normal of the surface.</param>
            <param name="Output_Out">When the method completes, contains the reflected vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Rotate_Quaternion(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Vector2@)">
            <summary>Transforms a 2D vector by the given Stride.Core.Mathematics.Quaternion rotation.</summary>
            <param name="Input_In">The vector to rotate.</param>
            <param name="Rotation_In">The Stride.Core.Mathematics.Quaternion rotation to apply.</param>
            <param name="Output_Out">When the method completes, contains the transformed Stride.Core.Mathematics.Vector4.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.SetSlice(Stride.Core.Mathematics.Vector2,System.Single,System.Int32,Stride.Core.Mathematics.Vector2@)">
            <summary>Sets the specified component of the vector, wraps the index if out of bounds. Use SetItem if you want better performance</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.ToVector3(Stride.Core.Mathematics.Vector2,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts to a Vector3 with a specified z</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.ToVector4(Stride.Core.Mathematics.Vector2,System.Single,System.Single,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts to a Vector4 with a specified z and w</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Transform(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector2@)">
            <summary>Performs a coordinate transformation using the given Stride.Core.Mathematics.Matrix.</summary>
            <remarks>
            A coordinate transform performs the transformation with the assumption that the w component
                        is one. The four dimensional vector obtained from the transformation operation has each
                        component in the vector divided by the w component. This forces the wcomponent to be one and
                        therefore makes the vector homogeneous. The homogeneous vector is often prefered when working
                        with coordinates as the w component can safely be ignored.
            </remarks>
            <tags>applytransform,*</tags>
            <param name="Input_In">The coordinate vector to transform.</param>
            <param name="Transform_In">The transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Output_Out">When the method completes, contains the transformed coordinates.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.UnitX(Stride.Core.Mathematics.Vector2@)">
            <summary>The X unit Stride.Core.Mathematics.Vector2 (1, 0).</summary>
            <param name="Unit_X_Out">The X unit Stride.Core.Mathematics.Vector2 (1, 0).</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.UnitY(Stride.Core.Mathematics.Vector2@)">
            <summary>The Y unit Stride.Core.Mathematics.Vector2 (0, 1).</summary>
            <param name="Unit_Y_Out">The Y unit Stride.Core.Mathematics.Vector2 (0, 1).</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Vector_Join(System.Single,System.Single,Stride.Core.Mathematics.Vector2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Vector2 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Vector2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Vector_Split(Stride.Core.Mathematics.Vector2,System.Single@,System.Single@)">
            <summary>Splits a vector into its components</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.X(Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>The X component of the vector.</summary>
            <param name="Input_In">The X component of the vector.</param>
            <param name="X_Out">The X component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Y(Stride.Core.Mathematics.Vector2,System.Single@)">
            <summary>The Y component of the vector.</summary>
            <param name="Input_In">The Y component of the vector.</param>
            <param name="Y_Out">The Y component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Zero(Stride.Core.Mathematics.Vector2@)">
            <summary>A Stride.Core.Mathematics.Vector2 with all of its components set to zero.</summary>
            <param name="Zero_Out">A Stride.Core.Mathematics.Vector2 with all of its components set to zero.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.CatmullRom(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single,Stride.Core.Mathematics.Vector2@)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="Value_1_In">The first position in the interpolation.</param>
            <param name="Value_2_In">The second position in the interpolation.</param>
            <param name="Value_3_In">The third position in the interpolation.</param>
            <param name="Value_4_In">The fourth position in the interpolation.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">When the method completes, contains the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Hermite(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Single,Stride.Core.Mathematics.Vector2@)">
            <summary>Performs a Hermite spline interpolation.</summary>
            <param name="Value_1_In">First source position vector.</param>
            <param name="Tangent_1_In">First source tangent vector.</param>
            <param name="Value_2_In">Second source position vector.</param>
            <param name="Tangent_2_In">Second source tangent vector.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">When the method completes, contains the result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.ToArray(Stride.Core.Mathematics.Vector2,System.Single[]@)">
            <summary>Creates an array containing the elements of the vector.</summary>
            <param name="Input_In">Creates an array containing the elements of the vector.</param>
            <param name="Result_Out">A two-element array containing the components of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.GetItem(Stride.Core.Mathematics.Vector2,System.Int32,System.Single@)">
            <summary>Gets the specified component of the vector, throws an exception when out of bounds. Use GetSlice if you want to auto wrap the index</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.SetItem(Stride.Core.Mathematics.Vector2,System.Single,System.Int32,Stride.Core.Mathematics.Vector2@)">
            <summary>Sets the specified component of the vector, throws an exception when out of bounds. Use SetSlice if you want to auto wrap the index</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Transform_Homogeneous(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector4@)">
            <summary>Transforms a 2D vector by the given Stride.Core.Mathematics.Matrix.</summary>
            <param name="Input_In">The source vector.</param>
            <param name="Transform_In">The transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Result_Out">When the method completes, contains the transformed Stride.Core.Mathematics.Vector4.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.Transform_Normal(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector2@)">
            <summary>Performs a normal transformation using the given Stride.Core.Mathematics.Matrix.</summary>
            <remarks>
            A normal transform performs the transformation with the assumption that the w component
                        is zero. This causes the fourth row and fourth collumn of the matrix to be unused. The
                        end result is a vector that is not translated, but all other transformation properties
                        apply. This is often prefered for normal vectors as normals purely represent direction
                        rather than location because normal vectors should not be translated.
            </remarks>
            <param name="Input_In">The normal vector to transform.</param>
            <param name="Transform_In">The transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Output_Out">When the method completes, contains the transformed normal.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.GetSlice(Stride.Core.Mathematics.Vector2,System.Int32,System.Single@)">
            <summary>Gets the specified component of the vector, wraps the index if out of bounds. Use GetItem if you want better performance</summary>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.XYz(Stride.Core.Mathematics.Vector2,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Returns the inputs XY components as a Vector3, completed with the specified Z component.</summary>
            <tags>swizzle</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.XyZ(Stride.Core.Mathematics.Vector2,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Returns the inputs XY components as X and Z of a Vector3, completed with the specified Y component.</summary>
            <tags>swizzle</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.xYZ(System.Single,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector3@)">
            <summary>Returns the inputs XY components as Y and Z of a Vector3, completed with the specified X component.</summary>
            <tags>swizzle</tags>
        </member>
        <member name="M:_CoreLibBasics_._2D.Vector2._Operations_.ToVector2_Float32(System.Single,Stride.Core.Mathematics.Vector2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Vector2 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Vector2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._2D.Geometry._Operations_.PolyLine(System.Collections.Generic.IEnumerable{Stride.Core.Mathematics.Vector2},System.Single,System.Single,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2}@)">
            <summary>Computes the vertices of a 2d polyline mesh width UV coordinates</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsBox(VL.Lib.Mathematics.OrientedBoundingBox,VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Check the intersection between two VL.Lib.Mathematics.OrientedBoundingBox</summary>
            <remarks>
            For accuracy, The transformation matrix for both VL.Lib.Mathematics.OrientedBoundingBox must not have any scaling applied to it.
                        Anyway, scaling using Scale method will keep this method accurate.
            </remarks>
            <tags>hittest,picking</tags>
            <param name="Input_In">Check the intersection between two VL.Lib.Mathematics.OrientedBoundingBox</param>
            <param name="Obb_In">The OrientedBoundingBoxs to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsBox_Aligned(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Check the intersection between an VL.Lib.Mathematics.OrientedBoundingBox and Stride.Core.Mathematics.BoundingBox</summary>
            <remarks>
            For accuracy, The transformation matrix for the VL.Lib.Mathematics.OrientedBoundingBox must not have any scaling applied to it.
                        Anyway, scaling using Scale method will keep this method accurate.
            </remarks>
            <tags>hittest,picking</tags>
            <param name="Input_In">Check the intersection between an VL.Lib.Mathematics.OrientedBoundingBox and Stride.Core.Mathematics.BoundingBox</param>
            <param name="Box_In">The BoundingBox to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsBox_BothAligned(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a Stride.Core.Mathematics.BoundingBox contains a Stride.Core.Mathematics.BoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_1_In">The first box to test.</param>
            <param name="Box_2_In">The second box to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsLineSegment(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Check the intersection between an VL.Lib.Mathematics.OrientedBoundingBox and a line defined by two points</summary>
            <remarks>
            For accuracy, The transformation matrix for the VL.Lib.Mathematics.OrientedBoundingBox must not have any scaling applied to it.
                        Anyway, scaling using Scale method will keep this method accurate.
            </remarks>
            <tags>hittest,picking</tags>
            <param name="Input_In">Check the intersection between an VL.Lib.Mathematics.OrientedBoundingBox and a line defined by two points</param>
            <param name="L1_In">The first point in the line.</param>
            <param name="L2_In">The second point in the line.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsPoint(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a VL.Lib.Mathematics.OrientedBoundingBox contains a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Input_In">Determines whether a VL.Lib.Mathematics.OrientedBoundingBox contains a point.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsPoint_Aligned(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a Stride.Core.Mathematics.BoundingBox contains a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_In">The box to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsPoints(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3[],Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a VL.Lib.Mathematics.OrientedBoundingBox contains an array of points&gt;.</summary>
            <tags>hittest,picking</tags>
            <param name="Input_In">Determines whether a VL.Lib.Mathematics.OrientedBoundingBox contains an array of points&gt;.</param>
            <param name="Points_In">The points array to test.</param>
            <param name="Result_Out">The type of containment.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsSphere(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.BoundingSphere,System.Boolean,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a VL.Lib.Mathematics.OrientedBoundingBox contains a Stride.Core.Mathematics.BoundingSphere.</summary>
            <remarks>
            This method is not designed for VL.Lib.Mathematics.OrientedBoundingBox which has a non-uniform scaling applied to its transformation matrix.
                        But any type of scaling applied using Scale method will keep this method accurate.
            </remarks>
            <tags>hittest,picking</tags>
            <param name="Input_In">Determines whether a VL.Lib.Mathematics.OrientedBoundingBox contains a Stride.Core.Mathematics.BoundingSphere.</param>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Ignore_Scale_In">Optimize the check operation by assuming that VL.Lib.Mathematics.OrientedBoundingBox has no scaling applied</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxContainsSphere_Aligned(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a Stride.Core.Mathematics.BoundingBox contains a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_In">The box to test.</param>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxIntersectsBox(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingBox,System.Boolean@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.BoundingBox and a Stride.Core.Mathematics.BoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_1_In">The first box to test.</param>
            <param name="Box_2_In">The second box to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.BoxIntersectsSphere(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingSphere,System.Boolean@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.BoundingBox and a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_In">The box to test.</param>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.ClosestPointBoxPoint(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines the closest point between a Stride.Core.Mathematics.BoundingBox and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_In">The box to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">When the method completes, contains the closest point between the two objects.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.ClosestPointPlanePoint(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines the closest point between a Stride.Core.Mathematics.Plane and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Plane_In">The plane to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">When the method completes, contains the closest point between the two objects.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.ClosestPointSpherePoint(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines the closest point between a Stride.Core.Mathematics.BoundingSphere and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_In">The bounding sphere.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">
            When the method completes, contains the closest point between the two objects;
                        or, if the point is directly in the center of the sphere, contains F:Stride.Core.Mathematics.Vector3.Zero.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.ClosestPointSphereSphere(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines the closest point between a Stride.Core.Mathematics.BoundingSphere and a Stride.Core.Mathematics.BoundingSphere.</summary>
            <remarks>
            If the two spheres are overlapping, but not directly ontop of each other, the closest point
                        is the &apos;closest&apos; point of intersection. This can also be considered is the deepest point of
                        intersection.
            </remarks>
            <tags>hittest,picking</tags>
            <param name="Sphere_1_In">The first sphere to test.</param>
            <param name="Sphere_2_In">The second sphere to test.</param>
            <param name="Result_Out">
            When the method completes, contains the closest point between the two objects;
                        or, if the point is directly in the center of the sphere, contains F:Stride.Core.Mathematics.Vector3.Zero.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.DistanceBoxBox(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingBox,System.Single@)">
            <summary>Determines the distance between a Stride.Core.Mathematics.BoundingBox and a Stride.Core.Mathematics.BoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_1_In">The first box to test.</param>
            <param name="Box_2_In">The second box to test.</param>
            <param name="Result_Out">The distance between the two objects.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.DistanceBoxPoint(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>Determines the distance between a Stride.Core.Mathematics.BoundingBox and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_In">The box to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">The distance between the two objects.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.DistancePlanePoint(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>Determines the distance between a Stride.Core.Mathematics.Plane and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Plane_In">The plane to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">The distance between the two objects.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.DistanceSpherePoint(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>Determines the distance between a Stride.Core.Mathematics.BoundingSphere and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">The distance between the two objects.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.DistanceSphereSphere(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere,System.Single@)">
            <summary>Determines the distance between a Stride.Core.Mathematics.BoundingSphere and a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_1_In">The first sphere to test.</param>
            <param name="Sphere_2_In">The second sphere to test.</param>
            <param name="Result_Out">The distance between the two objects.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.FrustumContainsBox(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines the intersection relationship between the frustum and a bounding box.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_In">The box.</param>
            <param name="Result_Out">Type of the containment</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.FrustumContainsPoint(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Checks whether a point lay inside, intersects or lay outside the frustum.</summary>
            <tags>hittest,picking</tags>
            <param name="Point_In">The point.</param>
            <param name="Result_Out">Type of the containment</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.FrustumContainsSphere(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines the intersection relationship between the frustum and a bounding sphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_In">The sphere.</param>
            <param name="Result_Out">Type of the containment</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.FrustumIntersectsBox(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.BoundingBox,System.Boolean@)">
            <summary>Checks whether the current BoundingFrustum intersects a BoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Box_In">The box.</param>
            <param name="Result_Out">true if the current BoundingFrustum intersects a BoundingSphere.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.FrustumIntersectsPlane(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.PlaneIntersectionType@)">
            <summary>Checks whether the current BoundingFrustum intersects the specified Plane.</summary>
            <tags>hittest,picking</tags>
            <param name="Plane_In">The plane.</param>
            <param name="Result_Out">Plane intersection type.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.FrustumIntersectsRay(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Ray,System.Boolean@,System.Nullable{System.Single}@,System.Nullable{System.Single}@)">
            <summary>Checks whether the current BoundingFrustum intersects the specified Ray.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The Ray to check for intersection with.</param>
            <param name="Result_Out">true if the current BoundingFrustum intersects the specified Ray.</param>
            <param name="In_Distance_Out">The distance at which the ray enters the frustum if there is an intersection and the ray starts outside the frustum.</param>
            <param name="Out_Distance_Out">The distance at which the ray exits the frustum if there is an intersection.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.FrustumIntersectsSphere(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.BoundingSphere,System.Boolean@)">
            <summary>Checks whether the current BoundingFrustum intersects a BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_In">The sphere.</param>
            <param name="Result_Out">Type of the containment</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.PlaneIntersectsBox(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.PlaneIntersectionType@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Plane and a Stride.Core.Mathematics.BoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Plane_In">The plane to test.</param>
            <param name="Box_In">The box to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.PlaneIntersectsPlane(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Plane,System.Boolean@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Plane and a Stride.Core.Mathematics.Plane.</summary>
            <tags>hittest,picking</tags>
            <param name="Plane_1_In">The first plane to test.</param>
            <param name="Plane_2_In">The second plane to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.PlaneIntersectsPlane_IntersectionLine(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Plane,System.Boolean@,Stride.Core.Mathematics.Ray@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Plane and a Stride.Core.Mathematics.Plane.</summary>
            <remarks>
            Although a ray is set to have an origin, the ray returned by this method is really
                        a line in three dimensions which has no real origin. The ray is considered valid when
                        both the positive direction is used and when the negative direction is used.
            </remarks>
            <tags>hittest,picking</tags>
            <param name="Plane_1_In">The first plane to test.</param>
            <param name="Plane_2_In">The second plane to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
            <param name="Line_Out">
            When the method completes, contains the line of intersection
                        as a Stride.Core.Mathematics.Ray, or a zero ray if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.PlaneIntersectsPoint(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.PlaneIntersectionType@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Plane and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Plane_In">The plane to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.PlaneIntersectsSphere(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.PlaneIntersectionType@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Plane and a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Plane_In">The plane to test.</param>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsBox(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Ray,System.Boolean@,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a VL.Lib.Mathematics.OrientedBoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Input_In">Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a VL.Lib.Mathematics.OrientedBoundingBox.</param>
            <param name="Ray_In">The ray to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
            <param name="Point_Out">
            When the method completes, contains the point of intersection,
                        or F:Stride.Core.Mathematics.Vector3.Zero if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsBox_Aligned_Distance(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.BoundingBox,System.Boolean@,System.Single@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a Stride.Core.Mathematics.BoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The ray to test.</param>
            <param name="Box_In">The box to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
            <param name="Distance_Out">
            When the method completes, contains the distance of the intersection,
                        or 0 if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsBox_Aligned(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.BoundingBox,System.Boolean@,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a Stride.Core.Mathematics.Plane.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The ray to test.</param>
            <param name="Box_In">The box to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
            <param name="Point_Out">
            When the method completes, contains the point of intersection,
                        or F:Stride.Core.Mathematics.Vector3.Zero if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsPlane(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Plane,System.Boolean@,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a Stride.Core.Mathematics.Plane.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The ray to test.</param>
            <param name="Plane_In">The plane to test</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
            <param name="Point_Out">
            When the method completes, contains the point of intersection,
                        or F:Stride.Core.Mathematics.Vector3.Zero if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsPlane_Distance(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Plane,System.Boolean@,System.Single@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a Stride.Core.Mathematics.Plane.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The ray to test.</param>
            <param name="Plane_In">The plane to test.</param>
            <param name="Result_Out">Whether the two objects intersect.</param>
            <param name="Distance_Out">
            When the method completes, contains the distance of the intersection,
                        or 0 if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsPoint(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Vector3,System.Boolean@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The ray to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">Whether the two objects intersect.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsRay(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Ray,System.Boolean@,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a Stride.Core.Mathematics.Ray.</summary>
            <remarks>
            This method performs a ray vs ray intersection test based on the following formula
                        from Goldman.
                        s = det([o_2 - o_1, d_2, d_1 x d_2]) / ||d_1 x d_2||^2t = det([o_2 - o_1, d_1, d_1 x d_2]) / ||d_1 x d_2||^2
                        Where o_1 is the position of the first ray, o_2 is the position of the second ray,
                        d_1 is the normalized direction of the first ray, d_2 is the normalized direction
                        of the second ray, det denotes the determinant of a matrix, x denotes the cross
                        product, [ ] denotes a matrix, and || || denotes the length or magnitude of a vector.
            </remarks>
            <tags>hittest,picking</tags>
            <param name="Ray_1_In">The first ray to test.</param>
            <param name="Ray_2_In">The second ray to test.</param>
            <param name="Result_Out">Whether the two objects intersect.</param>
            <param name="Point_Out">
            When the method completes, contains the point of intersection,
                        or F:Stride.Core.Mathematics.Vector3.Zero if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsSphere(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.BoundingSphere,System.Boolean@,Stride.Core.Mathematics.Vector3@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The ray to test.</param>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
            <param name="Point_Out">
            When the method completes, contains the point of intersection,
                        or F:Stride.Core.Mathematics.Vector3.Zero if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.RayIntersectsSphere_Distance(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.BoundingSphere,System.Boolean@,System.Single@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.Ray and a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Ray_In">The ray to test.</param>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
            <param name="Distance_Out">
            When the method completes, contains the distance of the intersection,
                        or 0 if there was no intersection.
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.SphereContainsBox(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a Stride.Core.Mathematics.BoundingSphere contains a Stride.Core.Mathematics.BoundingBox.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Box_In">The box to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.SphereContainsPoint(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a Stride.Core.Mathematics.BoundingSphere contains a point.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_In">The sphere to test.</param>
            <param name="Point_In">The point to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.SphereContainsSphere(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.ContainmentType@)">
            <summary>Determines whether a Stride.Core.Mathematics.BoundingSphere contains a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_1_In">The first sphere to test.</param>
            <param name="Sphere_2_In">The second sphere to test.</param>
            <param name="Result_Out">The type of containment the two objects have.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Collision._Operations_.SphereIntersectsSphere(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere,System.Boolean@)">
            <summary>Determines whether there is an intersection between a Stride.Core.Mathematics.BoundingSphere and a Stride.Core.Mathematics.BoundingSphere.</summary>
            <tags>hittest,picking</tags>
            <param name="Sphere_1_In">First sphere to test.</param>
            <param name="Sphere_2_In">Second sphere to test.</param>
            <param name="Result_Out">Whether the two objects intersected.</param>
        </member>
        <member name="T:_CoreLibBasics_._3D.Transform.Rotation_Successive_L0Itg9mNHy3LfX6B8bCwJo">
            <summary>Returns an acumulated rotation around the local (own) or global (world) XYZ-axis.</summary>
            <remarks>Angular Speed is specified in rotations / second.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Billboard``1(``0,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix@)">
            <summary>Rotates towards the viewer.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Homography__2D_Quad(Stride.Core.Mathematics.Matrix,VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2},System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the 2D-homography matrix between a unit square centered at the origin and 4 points.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Homography__2D(Stride.Core.Mathematics.Matrix,System.Collections.Generic.IReadOnlyList{Stride.Core.Mathematics.Vector2},System.Collections.Generic.IReadOnlyList{Stride.Core.Mathematics.Vector2},System.Single,Stride.Core.Mathematics.Matrix@,System.Boolean@)">
            <summary>Returns the 2D-homography matrix between two sets of 4 points.</summary>
            <param name="Input__In">description for the input: Input</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.ParallelEpiped(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Defines a new coordinate system with three arbitrary vectors (x,y,z) for the three axes, building a parallelepiped starting at the given position.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Perspective(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed perspective projection.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Perspective_OffCenter(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed perspective projection.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Rotate(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix rotated.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Rotate_Center(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix rotated.</summary>
            <remarks>Changing the center does not influence the translation but only define the pivot point for the rotation.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Scale(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix scaled.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Scale_Center(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix scaled.</summary>
            <remarks>Changing the center does not influence the translation but only define the pivot point for the scaling.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.TransformSRT(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix transformed by first scaling, then rotating and finally translating it.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.TransformSRT_Center(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix transformed by first scaling, then rotating and finally translating it.</summary>
            <remarks>Changing the center does not influence the translation but only define the pivot point for rotation and scaling.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Translate(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix translated.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.UniformScale(Stride.Core.Mathematics.Matrix,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns the input matrix scaled, where the scaling for X, Y and Z is specified by the same value.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Vertigo(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a perspective projection.</summary>
            <remarks>Allows to keep a plane at certain distance in focus. Changing the field of view (FOV) will dolly the camera position accordingly so that objects at a certain distance keep their size.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Vertigo_Planes(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a perspective projection.</summary>
            <remarks>Allows to keep a plane at certain distance in focus. Changing the field of view (FOV) will dolly the camera position accordingly so that objects at a certain distance keep their size.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.AlignBetween(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Rotates the input so that the input direction alignes to a line between the two positions.</summary>
            <tags>rotate</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.RotateBetween(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Applies a rotation from one direction to another direction.</summary>
            <tags>align</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Perspective_OffCenter_Distance(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed perspective projection.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Perspective_RightHanded(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed perspective projection.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Perspective_OffCenter_RightHanded(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed perspective projection.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.Perspective_OffCenter_Distance_RightHanded(Stride.Core.Mathematics.Matrix,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed perspective projection.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.TransformBetween(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Transforms a line [(0, -0.5, 0), (0, 0.5, 0)] to the two input positions.</summary>
            <remarks>Can be used to put a cylinder between two positions.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Transform._Operations_.PerspectiveLookAtRect_RightHanded(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix,System.Boolean,System.Single,System.Single,Stride.Core.Mathematics.Matrix@,Stride.Core.Mathematics.Matrix@,Stride.Core.Mathematics.Matrix@,Stride.Core.Mathematics.Vector3@)">
            <summary>Returns a right-handed perspective camera that sees exactly the given rectangle from a given position.</summary>
            <remarks>The camera cone might be distorted heavily, however it is guaranteed that you will look at the specified rectangle which can placed arbitrarily in space.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.Angle(Stride.Core.Mathematics.Vector3,System.Single@,System.Single@,System.Single@)">
            <summary>Returns yaw and pitch for the direction of a Vector3 in cycles.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.AngleBetween(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>Returns the angle between two given 3D vectors in cycles.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.Confine(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@,Stride.Core.Mathematics.Vector3@,System.Boolean@)">
            <summary>Confines a moving point to a given box, bouncing it on the walls, keeping its velocity intact.</summary>
            <tags>constrain</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.FromCylindrical(System.Single,System.Single,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts cylindrical coordinates (Angle, Radius, Height) to a 3D Vector.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.FromGeographic(System.Single,System.Single,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts geographic coordinates (Latitude, Longitude, Radius) to a 3D Vector.</summary>
            <tags>cartesian,polar</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.FromSpherical(System.Single,System.Single,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts spherical coordinates (Polar, Azimuthal, Radius) to a 3D Vector.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.Slope(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single@,System.Single@,System.Single@)">
            <summary>Returns the slope of the line defined by two points in cycles.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.ToCylindrical(Stride.Core.Mathematics.Vector3,System.Single@,System.Single@,System.Single@)">
            <summary>Converts a 3D Vector to cylindrical coordinates (Angle, Radius, Height).</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.ToGeographic(Stride.Core.Mathematics.Vector3,System.Single@,System.Single@,System.Single@)">
            <summary>Converts a 3D Vector to geographic coordinates (Latitude, Longitude, Radius).</summary>
            <tags>cartesian,polar</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.ToSpherical(Stride.Core.Mathematics.Vector3,System.Single@,System.Single@,System.Single@)">
            <summary>Converts a 3D Vector to spherical coordinates (Polar, Azimuthal, Radius).</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D._Operations_.FromGeographic_Old(System.Single,System.Single,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts geographic coordinates (Latitude, Longitude, Radius) to a 3D Vector.</summary>
            <tags>cartesian,polar</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.NE(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingBox,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.OperatorEquals(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingBox,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.AlignedBox_Join_Center_Size(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.BoundingBox@)">
            <summary>Creates an AlignedBox from center position and size vector</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.AlignedBox_Join(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.BoundingBox@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.BoundingBox struct.</summary>
            <param name="Minimum_In">The minimum vertex of the bounding box.</param>
            <param name="Maximum_In">The maximum vertex of the bounding box.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.BoundingBox struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.Corners(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.Vector3[]@)">
            <summary>Retrieves the eight corners of the bounding box.</summary>
            <param name="Input_In">Retrieves the eight corners of the bounding box.</param>
            <param name="Result_Out">An array of points representing the eight corners of the bounding box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.FromPointCloud(Stride.Core.Mathematics.Vector3[],Stride.Core.Mathematics.BoundingBox@)">
            <summary>Constructs a Stride.Core.Mathematics.BoundingBox that fully contains the given points.</summary>
            <param name="Points_In">The points that will be contained by the box.</param>
            <param name="Result_Out">When the method completes, contains the newly constructed bounding box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.FromSphere(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingBox@)">
            <summary>Constructs a Stride.Core.Mathematics.BoundingBox from a given sphere.</summary>
            <param name="Sphere_In">The sphere that will designate the extents of the box.</param>
            <param name="Result_Out">When the method completes, contains the newly constructed bounding box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.Maximum(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.Vector3@)">
            <summary>The maximum point of the box.</summary>
            <param name="Input_In">The maximum point of the box.</param>
            <param name="Maximum_Out">The maximum point of the box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.Merge(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingBox@)">
            <summary>Constructs a Stride.Core.Mathematics.BoundingBox that is as large as the total combined area of the two specified boxes.</summary>
            <param name="Value_1_In">The first box to merge.</param>
            <param name="Value_2_In">The second box to merge.</param>
            <param name="Output_Out">When the method completes, contains the newly constructed bounding box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.AlignedBox._Operations_.Minimum(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.Vector3@)">
            <summary>The minimum point of the box.</summary>
            <param name="Input_In">The minimum point of the box.</param>
            <param name="Minimum_Out">The minimum point of the box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.NE(VL.Lib.Mathematics.OrientedBoundingBox,VL.Lib.Mathematics.OrientedBoundingBox,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.OperatorEquals(VL.Lib.Mathematics.OrientedBoundingBox,VL.Lib.Mathematics.OrientedBoundingBox,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Box_Join_AlignedBox(Stride.Core.Mathematics.BoundingBox,VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Creates an VL.Lib.Mathematics.OrientedBoundingBox from a BoundingBox.</summary>
            <remarks>Initially, the OBB is axis-aligned box, but it can be rotated and transformed later.</remarks>
            <param name="Bb_In">The BoundingBox to create from.</param>
            <param name="Output_Out">Creates an VL.Lib.Mathematics.OrientedBoundingBox from a BoundingBox.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Box_Join_Center_Size(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Creates a Box from center position and size vector. Initially, the Box is axis-aligned box, but it can be rotated and transformed later</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Box_Join_Min_Max(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Creates an VL.Lib.Mathematics.OrientedBoundingBox which contained between two minimum and maximum points.</summary>
            <remarks>Initially, the OrientedBoundingBox is axis-aligned box, but it can be rotated and transformed later.</remarks>
            <param name="Minimum_In">The minimum vertex of the bounding box.</param>
            <param name="Maximum_In">The maximum vertex of the bounding box.</param>
            <param name="Output_Out">Creates an VL.Lib.Mathematics.OrientedBoundingBox which contained between two minimum and maximum points.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Box_Join(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix,VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Creates a Box from extends (half size for each axis) and transformation</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.BoxToBoxMatrix(VL.Lib.Mathematics.OrientedBoundingBox,VL.Lib.Mathematics.OrientedBoundingBox,System.Boolean,Stride.Core.Mathematics.Matrix@)">
            <summary>Calculates the matrix required to transfer any point from one VL.Lib.Mathematics.OrientedBoundingBox local coordinates to another.</summary>
            <param name="A_In">The source OrientedBoundingBox.</param>
            <param name="B_In">The target OrientedBoundingBox.</param>
            <param name="No_Scaling_In">
            
                        If true, the method will use a fast algorithm which is inapplicable if a scale is applied to the transformation matrix of the OrientedBoundingBox.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Corners(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3[]@)">
            <summary>Retrieves the eight corners of the bounding box.</summary>
            <param name="Input_In">Retrieves the eight corners of the bounding box.</param>
            <param name="Result_Out">An array of points representing the eight corners of the bounding box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.FromPointCloud(Stride.Core.Mathematics.Vector3[],VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Creates an VL.Lib.Mathematics.OrientedBoundingBox that fully contains the given points.</summary>
            <remarks>
            This method is not for computing the best tight-fitting OrientedBoundingBox.
                        And initially, the OrientedBoundingBox is axis-aligned box, but it can be rotated and transformed later.
            </remarks>
            <param name="Points_In">The points that will be contained by the box.</param>
            <param name="Output_Out">Creates an VL.Lib.Mathematics.OrientedBoundingBox that fully contains the given points.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.GetSize(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3@)">
            <summary>Returns the size of the VL.Lib.Mathematics.OrientedBoundingBox taking into consideration the scaling applied to the transformation matrix.</summary>
            <remarks>
            This method is computationally expensive, so if no scale is applied to the transformation matrix
                        use P:VL.Lib.Mathematics.OrientedBoundingBox.Size property instead.
            </remarks>
            <param name="Input_In">Returns the size of the VL.Lib.Mathematics.OrientedBoundingBox taking into consideration the scaling applied to the transformation matrix.</param>
            <param name="Result_Out">The size of the consideration</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.GetSizeSquared(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3@)">
            <summary>Returns the square size of the VL.Lib.Mathematics.OrientedBoundingBox taking into consideration the scaling applied to the transformation matrix.</summary>
            <param name="Input_In">Returns the square size of the VL.Lib.Mathematics.OrientedBoundingBox taking into consideration the scaling applied to the transformation matrix.</param>
            <param name="Result_Out">The size of the consideration</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Merge(VL.Lib.Mathematics.OrientedBoundingBox,VL.Lib.Mathematics.OrientedBoundingBox,System.Boolean)">
            <summary>Merge an OrientedBoundingBox B into another OrientedBoundingBox A, by expanding A to contain B and keeping A orientation.</summary>
            <remarks>Unlike merging axis aligned boxes, The operation is not interchangeable, because it keeps A orientation and merge B into it.</remarks>
            <param name="A_In">The VL.Lib.Mathematics.OrientedBoundingBox to merge into it.</param>
            <param name="B_In">The VL.Lib.Mathematics.OrientedBoundingBox to be merged</param>
            <param name="NoScaling_In">
            
                        If true, the method will use a fast algorithm which is inapplicable if a scale is applied to the transformation matrix of the OrientedBoundingBox.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Radii(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3@)">
            <summary>Half lengths of the box along each axis.</summary>
            <param name="Input_In">Half lengths of the box along each axis.</param>
            <param name="Extents_Out">Half lengths of the box along each axis.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Scale(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3,VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Scales the Box by scaling its Extents without affecting the Transformation matrix. By keeping Transformation matrix scaling-free, the collision detection methods will be more accurate</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Transform(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Matrix,VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Transforms this Box using a transformation matrix. While any kind of transformation can be applied, it is recommended to apply scaling using scale method instead, which scales the Extents and keeps the Transformation matrix for rotation only, and that preserves collision detection accuracy</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Transformation(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Matrix@)">
            <summary>The matrix which aligns and scales the box, and its translation vector represents the center of the box.</summary>
            <param name="Input_In">The matrix which aligns and scales the box, and its translation vector represents the center of the box.</param>
            <param name="Transformation_Out">The matrix which aligns and scales the box, and its translation vector represents the center of the box.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Box._Operations_.Translate(VL.Lib.Mathematics.OrientedBoundingBox,Stride.Core.Mathematics.Vector3,VL.Lib.Mathematics.OrientedBoundingBox@)">
            <summary>Translates the Box to a new position using a translation vector</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.NE(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.BoundingFrustum,System.Boolean@)">
            <summary>Determines whether the specified Stride.Core.Mathematics.BoundingFrustum is not equal to this instance.</summary>
            <param name="Input_2_In">The Stride.Core.Mathematics.BoundingFrustum to compare with this instance.</param>
            <param name="Result_Out">
            true if the specified Stride.Core.Mathematics.BoundingFrustum is equal to this instance; otherwise, false.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.OperatorEquals(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.BoundingFrustum,System.Boolean@)">
            <summary>Determines whether the specified Stride.Core.Mathematics.BoundingFrustum is equal to this instance.</summary>
            <param name="Input_2_In">The Stride.Core.Mathematics.BoundingFrustum to compare with this instance.</param>
            <param name="Result_Out">
            true if the specified Stride.Core.Mathematics.BoundingFrustum is equal to this instance; otherwise, false.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.Bottom(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Plane@)">
            <summary>The bottom plane of this frustum.</summary>
            <param name="Input_In">The bottom plane of this frustum.</param>
            <param name="Bottom_Out">The bottom plane of this frustum.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.Far(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Plane@)">
            <summary>The far plane of this frustum.</summary>
            <param name="Input_In">The far plane of this frustum.</param>
            <param name="Far_Out">The far plane of this frustum.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.FromCamera(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.BoundingFrustum@)">
            <summary>Creates a new frustum relaying on perspective camera parameters</summary>
            <param name="Camera_Pos_In">The camera pos.</param>
            <param name="Look_Dir_In">The look dir.</param>
            <param name="Up_Dir_In">Up dir.</param>
            <param name="Fov_In">The fov.</param>
            <param name="Znear_In">The znear.</param>
            <param name="Zfar_In">The zfar.</param>
            <param name="Aspect_In">The aspect.</param>
            <param name="Result_Out">The bounding frustum calculated from perspective camera</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.Frustum_Join(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.BoundingFrustum@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.BoundingFrustum struct from a matrix view-projection.</summary>
            <param name="Matrix_In">The matrix view projection.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.BoundingFrustum struct from a matrix view-projection.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.IsOrthographic(Stride.Core.Mathematics.BoundingFrustum,System.Boolean@)">
            <summary>Indicate whether the current BoundingFrustrum is Orthographic.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.Left(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Plane@)">
            <summary>The left plane of this frustum.</summary>
            <param name="Input_In">The left plane of this frustum.</param>
            <param name="Left_Out">The left plane of this frustum.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.Near(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Plane@)">
            <summary>The near plane of this frustum.</summary>
            <param name="Input_In">The near plane of this frustum.</param>
            <param name="Near_Out">The near plane of this frustum.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.Right(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Plane@)">
            <summary>The right plane of this frustum.</summary>
            <param name="Input_In">The right plane of this frustum.</param>
            <param name="Right_Out">The right plane of this frustum.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Frustum._Operations_.Top(Stride.Core.Mathematics.BoundingFrustum,Stride.Core.Mathematics.Plane@)">
            <summary>The top  plane of this frustum.</summary>
            <param name="Input_In">The top  plane of this frustum.</param>
            <param name="Top_Out">The top  plane of this frustum.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.NE(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.OperatorMultiply(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix@)">
            <summary>
            Determines the product of two matrices.
                        Variables passed as left or right must not be used as the out parameter
                        result, because result is calculated in-place.
            </summary>
            <param name="Input_In">The first matrix to multiply.</param>
            <param name="Input_2_In">The second matrix to multiply.</param>
            <param name="Output_Out">The product of the two matrices.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.OperatorEquals(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.CreateDefault">
            <summary>The identity Stride.Core.Mathematics.Matrix.</summary>
            <returns>The identity Stride.Core.Mathematics.Matrix.</returns>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Decompose(Stride.Core.Mathematics.Matrix,System.Boolean@,Stride.Core.Mathematics.Vector3@,Stride.Core.Mathematics.Quaternion@,Stride.Core.Mathematics.Vector3@)">
            <summary>Decomposes a matrix into a scale, rotation, and translation.</summary>
            <remarks>This method is designed to decompose an SRT transformation matrix only.</remarks>
            <param name="Input_In">Decomposes a matrix into a scale, rotation, and translation.</param>
            <param name="Scale_Out">When the method completes, contains the scaling component of the decomposed matrix.</param>
            <param name="Rotation_Out">When the method completes, contains the rotation component of the decomposed matrix.</param>
            <param name="Translation_Out">When the method completes, contains the translation component of the decomposed matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.GetValues(Stride.Core.Mathematics.Matrix,VL.Lib.Collections.Spread{System.Single}@)">
            <summary>Gets the matrix values as a spread of floats</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Homography__2D_UnitSquare(VL.Lib.Collections.Spread{Stride.Core.Mathematics.Vector2},System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Very fast and direct solution of a 4-point homography, assumes that the original points are (0, 1), (1, 1), (1, 0) and (0, 0)</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Identity(Stride.Core.Mathematics.Matrix@)">
            <summary>The identity Stride.Core.Mathematics.Matrix.</summary>
            <param name="Identity_Out">The identity Stride.Core.Mathematics.Matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Invert(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix@)">
            <summary>
            Calculates the inverse of the specified matrix.
                        If the matrix cannot be inverted (eg. Determinant was zero), then result will be F:Stride.Core.Mathematics.Matrix.Zero.
            </summary>
            <param name="Input_In">The matrix whose inverse is to be calculated.</param>
            <param name="Output_Out">When the method completes, contains the inverse of the specified matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.LookAt(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed, look-at matrix.</summary>
            <param name="Eye_In">The position of the viewer&apos;s eye.</param>
            <param name="Target_In">The camera look-at target.</param>
            <param name="Up_In">The camera&apos;s up vector.</param>
            <param name="Result_Out">When the method completes, contains the created look-at matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.LookAt_RightHanded(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed, look-at matrix.</summary>
            <param name="Eye_In">The position of the viewer&apos;s eye.</param>
            <param name="Target_In">The camera look-at target.</param>
            <param name="Up_In">The camera&apos;s up vector.</param>
            <param name="Result_Out">When the method completes, contains the created look-at matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Matrix_Join_Array(System.Single[],Stride.Core.Mathematics.Matrix@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Matrix struct.</summary>
            <param name="Values_In">The values to assign to the components of the matrix. This must be an array with sixteen elements.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Matrix struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Matrix_Join(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Matrix struct.</summary>
            <param name="M11_In">The value to assign at row 1 column 1 of the matrix.</param>
            <param name="M12_In">The value to assign at row 1 column 2 of the matrix.</param>
            <param name="M13_In">The value to assign at row 1 column 3 of the matrix.</param>
            <param name="M14_In">The value to assign at row 1 column 4 of the matrix.</param>
            <param name="M21_In">The value to assign at row 2 column 1 of the matrix.</param>
            <param name="M22_In">The value to assign at row 2 column 2 of the matrix.</param>
            <param name="M23_In">The value to assign at row 2 column 3 of the matrix.</param>
            <param name="M24_In">The value to assign at row 2 column 4 of the matrix.</param>
            <param name="M31_In">The value to assign at row 3 column 1 of the matrix.</param>
            <param name="M32_In">The value to assign at row 3 column 2 of the matrix.</param>
            <param name="M33_In">The value to assign at row 3 column 3 of the matrix.</param>
            <param name="M34_In">The value to assign at row 3 column 4 of the matrix.</param>
            <param name="M41_In">The value to assign at row 4 column 1 of the matrix.</param>
            <param name="M42_In">The value to assign at row 4 column 2 of the matrix.</param>
            <param name="M43_In">The value to assign at row 4 column 3 of the matrix.</param>
            <param name="M44_In">The value to assign at row 4 column 4 of the matrix.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Matrix struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Ortho(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed, orthographic projection matrix.</summary>
            <param name="Width_In">Width of the viewing volume.</param>
            <param name="Height_In">Height of the viewing volume.</param>
            <param name="Z_Near_In">Minimum z-value of the viewing volume.</param>
            <param name="Z_Far_In">Maximum z-value of the viewing volume.</param>
            <param name="Result_Out">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Ortho_OffCenter_RightHanded(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed, customized orthographic projection matrix.</summary>
            <param name="Left_In">Minimum x-value of the viewing volume.</param>
            <param name="Right_In">Maximum x-value of the viewing volume.</param>
            <param name="Bottom_In">Minimum y-value of the viewing volume.</param>
            <param name="Top_In">Maximum y-value of the viewing volume.</param>
            <param name="Z_Near_In">Minimum z-value of the viewing volume.</param>
            <param name="Z_Far_In">Maximum z-value of the viewing volume.</param>
            <param name="Result_Out">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Ortho_OffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed, customized orthographic projection matrix.</summary>
            <param name="Left_In">Minimum x-value of the viewing volume.</param>
            <param name="Right_In">Maximum x-value of the viewing volume.</param>
            <param name="Bottom_In">Minimum y-value of the viewing volume.</param>
            <param name="Top_In">Maximum y-value of the viewing volume.</param>
            <param name="Z_Near_In">Minimum z-value of the viewing volume.</param>
            <param name="Z_Far_In">Maximum z-value of the viewing volume.</param>
            <param name="Result_Out">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed, perspective projection matrix.</summary>
            <param name="Width_In">Width of the viewing volume.</param>
            <param name="Height_In">Height of the viewing volume.</param>
            <param name="Z_Near_In">Minimum z-value of the viewing volume.</param>
            <param name="Z_Far_In">Maximum z-value of the viewing volume.</param>
            <param name="Result_Out">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective_FOV_RightHanded(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed, perspective projection matrix.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective_FOV(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed, perspective projection matrix.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective_OffCenter_RightHanded(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed, customized perspective projection matrix.</summary>
            <param name="Left_In">Minimum x-value of the viewing volume.</param>
            <param name="Right_In">Maximum x-value of the viewing volume.</param>
            <param name="Bottom_In">Minimum y-value of the viewing volume.</param>
            <param name="Top_In">Maximum y-value of the viewing volume.</param>
            <param name="Z_Near_In">Minimum z-value of the viewing volume.</param>
            <param name="Z_Far_In">Maximum z-value of the viewing volume.</param>
            <param name="Result_Out">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective_OffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed, customized perspective projection matrix.</summary>
            <param name="Left_In">Minimum x-value of the viewing volume.</param>
            <param name="Right_In">Maximum x-value of the viewing volume.</param>
            <param name="Bottom_In">Minimum y-value of the viewing volume.</param>
            <param name="Top_In">Maximum y-value of the viewing volume.</param>
            <param name="Z_Near_In">Minimum z-value of the viewing volume.</param>
            <param name="Z_Far_In">Maximum z-value of the viewing volume.</param>
            <param name="Result_Out">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective_RightHanded(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed, perspective projection matrix.</summary>
            <param name="Width_In">Width of the viewing volume.</param>
            <param name="Height_In">Height of the viewing volume.</param>
            <param name="Z_Near_In">Minimum z-value of the viewing volume.</param>
            <param name="Z_Far_In">Maximum z-value of the viewing volume.</param>
            <param name="Result_Out">When the method completes, contains the created projection matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Rotation_Quaternion(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Matrix@)">
            <summary>Creates a rotation matrix from a quaternion.</summary>
            <param name="Rotation_In">The quaternion to use to build the matrix.</param>
            <param name="Result_Out">The created rotation matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Scaling(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Creates a matrix that scales along the x-axis, y-axis, and y-axis.</summary>
            <param name="Scale_In">Scaling factor for all three axes.</param>
            <param name="Result_Out">When the method completes, contains the created scaling matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Transform(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix@)">
            <summary>Transforms one matrix by another</summary>
            <param name="Input_In">The second matrix to multiply.</param>
            <param name="Transformation_In">The first matrix to multiply.</param>
            <param name="Output_Out">The product of the two matrices.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Translation(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Creates a translation matrix using the specified offsets.</summary>
            <param name="Translation_In">The offset for all three coordinate planes.</param>
            <param name="Result_Out">When the method completes, contains the created translation matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Transpose(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Matrix@)">
            <summary>Calculates the transpose of the specified matrix.</summary>
            <param name="Input_In">The matrix whose transpose is to be calculated.</param>
            <param name="Output_Out">When the method completes, contains the transpose of the specified matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Zero(Stride.Core.Mathematics.Matrix@)">
            <summary>A Stride.Core.Mathematics.Matrix with all of its components set to zero.</summary>
            <param name="Zero_Out">A Stride.Core.Mathematics.Matrix with all of its components set to zero.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Split(Stride.Core.Mathematics.Matrix,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>Returns all individual values of the matrix.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective_OffCenter_Distance(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a left-handed, customized perspective projection matrix.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Perspective_OffCenter_Distance_RightHanded(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Matrix@)">
            <summary>Returns a right-handed, customized perspective projection matrix.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.Determinant(Stride.Core.Mathematics.Matrix,System.Single@)">
            <summary>Calculates the determinant of the matrix.</summary>
            <param name="Input_In">Calculates the determinant of the matrix.</param>
            <param name="Result_Out">The determinant of the matrix.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Matrix._Operations_.TransformationBetween(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix@)">
            <summary>Creates a transformation that puts a line [(0, -0.5, 0), (0, 0.5, 0)] between two positions.</summary>
            <remarks>Can be used to put a cylinder between two positions.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.CreateDefault">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</summary>
            <returns>Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</returns>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.D(Stride.Core.Mathematics.Plane,System.Single@)">
            <summary>The distance of the plane along its normal from the origin.</summary>
            <param name="Input_In">The distance of the plane along its normal from the origin.</param>
            <param name="D_Out">The distance of the plane along its normal from the origin.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.From3Points(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Plane@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</summary>
            <param name="Point_1_In">First point of a triangle defining the plane.</param>
            <param name="Point_2_In">Second point of a triangle defining the plane.</param>
            <param name="Point_3_In">Third point of a triangle defining the plane.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.Normal(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Vector3@)">
            <summary>The normal vector of the plane.</summary>
            <param name="Input_In">The normal vector of the plane.</param>
            <param name="Normal_Out">The normal vector of the plane.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.Plane_Join_Position_Normal(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Plane@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</summary>
            <param name="Point_In">Any point that lies along the plane.</param>
            <param name="Normal_In">The normal vector to the plane.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.Plane_Join_Vector(Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.Plane@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</summary>
            <param name="Normal_In">The normal of the plane.</param>
            <param name="D_In">The distance of the plane along its normal from the origin</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.Plane_Join(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Plane@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</summary>
            <param name="A_In">The X component of the normal.</param>
            <param name="B_In">The Y component of the normal.</param>
            <param name="C_In">The Z component of the normal.</param>
            <param name="D_In">The distance of the plane along its normal from the origin.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Plane struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.Rotate_Quaternion(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Plane@)">
            <summary>Transforms a normalized plane by a quaternion rotation.</summary>
            <param name="Plane_In">The normalized source plane.</param>
            <param name="Rotation_In">The quaternion rotation.</param>
            <param name="Output_Out">When the method completes, contains the transformed plane.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Plane._Operations_.Transform(Stride.Core.Mathematics.Plane,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Plane@)">
            <summary>Transforms a normalized plane by a matrix.</summary>
            <param name="Plane_In">The normalized source plane.</param>
            <param name="Transformation_In">The transformation matrix.</param>
            <param name="Output_Out">When the method completes, contains the transformed plane.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Invert(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Conjugates and renormalizes the quaternion.</summary>
            <param name="Input_In">The quaternion to conjugate and renormalize.</param>
            <param name="Output_Out">When the method completes, contains the conjugated and renormalized quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Slerp(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion,System.Single,Stride.Core.Mathematics.Quaternion@)">
            <summary>Interpolates between two quaternions, using spherical linear interpolation.</summary>
            <param name="Start_In">Start quaternion.</param>
            <param name="End_In">End quaternion.</param>
            <param name="Amount_In">Value between 0 and 1 indicating the weight of End.</param>
            <param name="Output_Out">When the method completes, contains the spherical linear interpolation of the two quaternions.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.OperatorMinus(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Subtracts two quaternions.</summary>
            <param name="Input_In">The first quaternion to subtract.</param>
            <param name="Input_2_In">The second quaternion to subtract.</param>
            <param name="Output_Out">When the method completes, contains the difference of the two quaternions.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.OperatorMinus_Negate(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Reverses the direction of a given quaternion.</summary>
            <param name="Value_In">The quaternion to negate.</param>
            <param name="Output_Out">When the method completes, contains a quaternion facing in the opposite direction.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.NE(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.OperatorMultiply(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Modulates a quaternion by another.</summary>
            <param name="Input_In">The first quaternion to modulate.</param>
            <param name="Input_2_In">The second quaternion to modulate.</param>
            <param name="Output_Out">When the moethod completes, contains the modulated quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.OperatorPlus(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Adds two quaternions.</summary>
            <param name="Input_In">The first quaternion to add.</param>
            <param name="Input_2_In">The second quaternion to add.</param>
            <param name="Output_Out">When the method completes, contains the sum of the two quaternions.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.OperatorEquals(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Conjugate(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Conjugates a quaternion.</summary>
            <param name="Input_In">The quaternion to conjugate.</param>
            <param name="Output_Out">When the method completes, contains the conjugated quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.CreateDefault">
            <summary>The identity Stride.Core.Mathematics.Quaternion (0, 0, 0, 1).</summary>
            <returns>The identity Stride.Core.Mathematics.Quaternion (0, 0, 0, 1).</returns>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Dot(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion,System.Single@)">
            <summary>Calculates the dot product of two quaternions.</summary>
            <param name="Input_In">First source quaternion.</param>
            <param name="Input_2_In">Second source quaternion.</param>
            <param name="Result_Out">When the method completes, contains the dot product of the two quaternions.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Exp(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Exponentiates a quaternion.</summary>
            <param name="Input_In">The quaternion to exponentiate.</param>
            <param name="Output_Out">When the method completes, contains the exponentiated quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Identity(Stride.Core.Mathematics.Quaternion@)">
            <summary>The identity Stride.Core.Mathematics.Quaternion (0, 0, 0, 1).</summary>
            <param name="Identity_Out">The identity Stride.Core.Mathematics.Quaternion (0, 0, 0, 1).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Length(Stride.Core.Mathematics.Quaternion,System.Single@)">
            <summary>Calculates the length of the quaternion.</summary>
            <remarks>
            Stride.Core.Mathematics.Quaternion.LengthSquared may be preferred when only the relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the length of the quaternion.</param>
            <param name="Result_Out">The length of the quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.LengthSquared(Stride.Core.Mathematics.Quaternion,System.Single@)">
            <summary>Calculates the squared length of the quaternion.</summary>
            <remarks>
            This method may be preferred to Stride.Core.Mathematics.Quaternion.Length when only a relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the squared length of the quaternion.</param>
            <param name="Result_Out">The squared length of the quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Ln(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Calculates the natural logarithm of the specified quaternion.</summary>
            <param name="Input_In">The quaternion whose logarithm will be calculated.</param>
            <param name="Output_Out">When the method completes, contains the natural logarithm of the quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.LookAt(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Returns a left-handed, look-at quaternion.</summary>
            <param name="Eye_In">The position of the viewer&apos;s eye.</param>
            <param name="Target_In">The camera look-at target.</param>
            <param name="Up_In">The camera&apos;s up vector.</param>
            <param name="Result_Out">When the method completes, contains the created look-at quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.LookAt_Direction_RightHanded(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Returns a right-handed, look-at quaternion.</summary>
            <param name="Forward_In">The camera&apos;s forward direction.</param>
            <param name="Up_In">The camera&apos;s up vector.</param>
            <param name="Result_Out">When the method completes, contains the created look-at quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.LookAt_Direction(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Returns a left-handed, look-at quaternion.</summary>
            <param name="Forward_In">The camera&apos;s forward direction.</param>
            <param name="Up_In">The camera&apos;s up vector.</param>
            <param name="Result_Out">When the method completes, contains the created look-at quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.LookAt_RightHanded(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Returns a right-handed, look-at quaternion.</summary>
            <param name="Eye_In">The position of the viewer&apos;s eye.</param>
            <param name="Target_In">The camera look-at target.</param>
            <param name="Up_In">The camera&apos;s up vector.</param>
            <param name="Result_Out">When the method completes, contains the created look-at quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Normalize(Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Quaternion@)">
            <summary>Converts the quaternion into a unit quaternion.</summary>
            <param name="Input_In">The quaternion to normalize.</param>
            <param name="Output_Out">When the method completes, contains the normalized quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Quaternion_Join(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Quaternion@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Quaternion struct.</summary>
            <param name="X_In">Initial value for the X component of the quaternion.</param>
            <param name="Y_In">Initial value for the Y component of the quaternion.</param>
            <param name="Z_In">Initial value for the Z component of the quaternion.</param>
            <param name="W_In">Initial value for the W component of the quaternion.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Quaternion struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Quaternion_Split(Stride.Core.Mathematics.Quaternion,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>Splits a quaternion into its components</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.RotationMatrix(Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Quaternion@)">
            <summary>Creates a quaternion given a rotation matrix.</summary>
            <param name="Matrix_In">The rotation matrix.</param>
            <param name="Result_Out">When the method completes, contains the newly created quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.W(Stride.Core.Mathematics.Quaternion,System.Single@)">
            <summary>The W component of the quaternion.</summary>
            <param name="Input_In">The W component of the quaternion.</param>
            <param name="W_Out">The W component of the quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.X(Stride.Core.Mathematics.Quaternion,System.Single@)">
            <summary>The X component of the quaternion.</summary>
            <param name="Input_In">The X component of the quaternion.</param>
            <param name="X_Out">The X component of the quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Y(Stride.Core.Mathematics.Quaternion,System.Single@)">
            <summary>The Y component of the quaternion.</summary>
            <param name="Input_In">The Y component of the quaternion.</param>
            <param name="Y_Out">The Y component of the quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Z(Stride.Core.Mathematics.Quaternion,System.Single@)">
            <summary>The Z component of the quaternion.</summary>
            <param name="Input_In">The Z component of the quaternion.</param>
            <param name="Z_Out">The Z component of the quaternion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.RotationBetween(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Creates a rotation from one direction to another direction.</summary>
            <remarks>Input direction vectors don&apos;t need to be normalized.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.RotationBetween_UnitVectors(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Creates a rotation from one direction to another direction.</summary>
            <remarks>Input direction vectors must be normalized.</remarks>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.AlignmentBetween(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Creates a rotation that aligns the input direction to a line between two positions.</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Rotation(System.Single,System.Single,System.Single,Stride.Core.Mathematics.Quaternion@)">
            <summary>Converts euler angles into a quaternion</summary>
            <remarks>Euler angles are multiplicated in the order: yaw*pitch*roll. Input angles are in cycles</remarks>
            <tags>fromeuler</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.Rotation_Vector3(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion@)">
            <summary>Converts euler angles into a quaternion</summary>
            <remarks>Euler angles are multiplicated in the order: yaw*pitch*roll. Input angles are in cycles</remarks>
            <tags>fromeuler</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.Quaternion._Operations_.ToEulerAngles(Stride.Core.Mathematics.Quaternion,System.Single@,System.Single@,System.Single@)">
            <summary>
            Converts a quaternion into euler angles, assuming that the euler angle multiplication to create the quaternion was yaw*pitch*roll.
                        Output angles are in cycles.
            </summary>
            <param name="Q_In">A quaternion, can be non normalized</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Ray._Operations_.NE(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Ray,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Ray._Operations_.OperatorEquals(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Ray,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Ray._Operations_.Direction(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Vector3@)">
            <summary>The normalized direction in which the ray points.</summary>
            <param name="Input_In">The normalized direction in which the ray points.</param>
            <param name="Direction_Out">The normalized direction in which the ray points.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Ray._Operations_.GetPickRay(System.Int32,System.Int32,VL.Lib.Mathematics.ViewportF,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Ray@)">
            <summary>Calculates a world space Stride.Core.Mathematics.Ray from 2d screen coordinates.</summary>
            <param name="X_In">X coordinate on 2d screen.</param>
            <param name="Y_In">Y coordinate on 2d screen.</param>
            <param name="Viewport_In">VL.Lib.Mathematics.ViewportF.</param>
            <param name="World_View_Projection_In">Transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Result_Out">Resulting Stride.Core.Mathematics.Ray.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Ray._Operations_.Position(Stride.Core.Mathematics.Ray,Stride.Core.Mathematics.Vector3@)">
            <summary>The position in three dimensional space where the ray starts.</summary>
            <param name="Input_In">The position in three dimensional space where the ray starts.</param>
            <param name="Position_Out">The position in three dimensional space where the ray starts.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Ray._Operations_.Ray_Join(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Ray@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Ray struct.</summary>
            <param name="Position_In">The position in three dimensional space of the origin of the ray.</param>
            <param name="Direction_In">The normalized direction of the ray.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Ray struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.NE(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.OperatorEquals(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.Center(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.Vector3@)">
            <summary>The center of the sphere in three dimensional space.</summary>
            <param name="Input_In">The center of the sphere in three dimensional space.</param>
            <param name="Center_Out">The center of the sphere in three dimensional space.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.FromBox(Stride.Core.Mathematics.BoundingBox,Stride.Core.Mathematics.BoundingSphere@)">
            <summary>Constructs a Stride.Core.Mathematics.BoundingSphere from a given box.</summary>
            <param name="Box_In">The box that will designate the extents of the sphere.</param>
            <param name="Result_Out">When the method completes, the newly constructed bounding sphere.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.FromPointCloud(Stride.Core.Mathematics.Vector3[],Stride.Core.Mathematics.BoundingSphere@)">
            <summary>Constructs a Stride.Core.Mathematics.BoundingSphere that fully contains the given points.</summary>
            <param name="Points_In">The points that will be contained by the sphere.</param>
            <param name="Result_Out">When the method completes, contains the newly constructed bounding sphere.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.Merge(Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere,Stride.Core.Mathematics.BoundingSphere@)">
            <summary>Constructs a Stride.Core.Mathematics.BoundingSphere that is the as large as the total combined area of the two specified spheres.</summary>
            <param name="Value_1_In">The first sphere to merge.</param>
            <param name="Value_2_In">The second sphere to merge.</param>
            <param name="Output_Out">When the method completes, contains the newly constructed bounding sphere.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.Radius(Stride.Core.Mathematics.BoundingSphere,System.Single@)">
            <summary>The radius of the sphere.</summary>
            <param name="Input_In">The radius of the sphere.</param>
            <param name="Radius_Out">The radius of the sphere.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Sphere._Operations_.Sphere_Join(Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.BoundingSphere@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.BoundingSphere struct.</summary>
            <param name="Center_In">The center of the sphere in three dimensional space.</param>
            <param name="Radius_In">The radius of the sphere.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.BoundingSphere struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.OperatorMinus(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Subtracts two vectors.</summary>
            <param name="Input_In">The first vector to subtract.</param>
            <param name="Input_2_In">The second vector to subtract.</param>
            <param name="Output_Out">When the method completes, contains the difference of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.OperatorMinus_Negate(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Reverses the direction of a given vector.</summary>
            <param name="Input_In">The vector to negate.</param>
            <param name="Output_Out">When the method completes, contains a vector facing in the opposite direction.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.NE(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.OperatorMultiply(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Multiply a vector with another by performing component-wise multiplication.</summary>
            <param name="Input_In">The first vector to multiply.</param>
            <param name="Input_2_In">The second vector to multiply.</param>
            <param name="Output_Out">When the method completes, contains the multiplied vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.OperatorDivide(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Divides a vector by the given vector, component-wise.</summary>
            <param name="Input_In">The vector to scale.</param>
            <param name="Input_2_In">The by.</param>
            <param name="Output_Out">The scaled vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.OperatorPlus(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Adds two vectors.</summary>
            <param name="Input_In">The first vector to add.</param>
            <param name="Input_2_In">The second vector to add.</param>
            <param name="Output_Out">When the method completes, contains the sum of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.OperatorEquals(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.CreateDefault">
            <summary>A Stride.Core.Mathematics.Vector3 with all of its components set to zero.</summary>
            <returns>A Stride.Core.Mathematics.Vector3 with all of its components set to zero.</returns>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Cross(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Calculates the cross product of two vectors.</summary>
            <param name="Input_In">First source vector.</param>
            <param name="Input_2_In">Second source vector.</param>
            <param name="Output_Out">When the method completes, contains he cross product of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Dot(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>Calculates the dot product of two vectors.</summary>
            <param name="Input_In">First source vector.</param>
            <param name="Input_2_In">Second source vector.</param>
            <param name="Result_Out">When the method completes, contains the dot product of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.FromValues(System.Collections.Generic.IEnumerable{System.Single},Stride.Core.Mathematics.Vector3@)">
            <summary>Creates a vector from the first values of a sequence, if the count of the sequence is lower than the dimension the remainig values get filled with 0</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.IsNaN(Stride.Core.Mathematics.Vector3,System.Boolean@)">
            <summary>Checks if ANY of the vector components is NaN</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.IsNaN_Component(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Checks all vector components for NaN</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Length(Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>Calculates the length of the vector.</summary>
            <remarks>
            Stride.Core.Mathematics.Vector3.LengthSquared may be preferred when only the relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the length of the vector.</param>
            <param name="Result_Out">The length of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.LengthSquared(Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>Calculates the squared length of the vector.</summary>
            <remarks>
            This method may be preferred to Stride.Core.Mathematics.Vector3.Length when only a relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the squared length of the vector.</param>
            <param name="Result_Out">The squared length of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Normalize(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts the vector into a unit vector.</summary>
            <param name="Input_In">The vector to normalize.</param>
            <param name="Output_Out">When the method completes, contains the normalized vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.One(Stride.Core.Mathematics.Vector3@)">
            <summary>A Stride.Core.Mathematics.Vector3 with all of its components set to one.</summary>
            <param name="One_Out">A Stride.Core.Mathematics.Vector3 with all of its components set to one.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Reflect(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3@)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <remarks>
            Reflect only gives the direction of a reflection off a surface, it does not determine
                        whether the original vector was close enough to the surface to hit it.
            </remarks>
            <param name="Vector_In">The source vector.</param>
            <param name="Normal_In">Normal of the surface.</param>
            <param name="Output_Out">When the method completes, contains the reflected vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Rotate_Quaternion(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Vector3@)">
            <summary>Transforms a 3D vector by the given Stride.Core.Mathematics.Quaternion rotation.</summary>
            <param name="Input_In">The vector to rotate.</param>
            <param name="Rotation_In">The Stride.Core.Mathematics.Quaternion rotation to apply.</param>
            <param name="Output_Out">When the method completes, contains the transformed Stride.Core.Mathematics.Vector4.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.SetSlice(Stride.Core.Mathematics.Vector3,System.Single,System.Int32,Stride.Core.Mathematics.Vector3@)">
            <summary>Sets the specified component of the vector, wraps the index if out of bounds. Use SetItem if you want better performance</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.ToVector2(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector2@)">
            <summary>Performs an explicit conversion from Stride.Core.Mathematics.Vector3 to Stride.Core.Mathematics.Vector2.</summary>
            <param name="Input_In">The value.</param>
            <param name="Result_Out">The result of the conversion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.ToVector4(Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts to a Vector4 with a specified w</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Transform(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3@)">
            <summary>Performs a coordinate transformation using the given Stride.Core.Mathematics.Matrix.</summary>
            <remarks>
            A coordinate transform performs the transformation with the assumption that the w component
                        is one. The four dimensional vector obtained from the transformation operation has each
                        component in the vector divided by the w component. This forces the wcomponent to be one and
                        therefore makes the vector homogeneous. The homogeneous vector is often prefered when working
                        with coordinates as the w component can safely be ignored.
            </remarks>
            <tags>applytransform,*</tags>
            <param name="Input_In">The coordinate vector to transform.</param>
            <param name="Transform_In">The transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Output_Out">When the method completes, contains the transformed coordinates.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.UnitX(Stride.Core.Mathematics.Vector3@)">
            <summary>The X unit Stride.Core.Mathematics.Vector3 (1, 0, 0).</summary>
            <param name="Unit_X_Out">The X unit Stride.Core.Mathematics.Vector3 (1, 0, 0).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.UnitY(Stride.Core.Mathematics.Vector3@)">
            <summary>The Y unit Stride.Core.Mathematics.Vector3 (0, 1, 0).</summary>
            <param name="Unit_Y_Out">The Y unit Stride.Core.Mathematics.Vector3 (0, 1, 0).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.UnitZ(Stride.Core.Mathematics.Vector3@)">
            <summary>The Z unit Stride.Core.Mathematics.Vector3 (0, 0, 1).</summary>
            <param name="Unit_Z_Out">The Z unit Stride.Core.Mathematics.Vector3 (0, 0, 1).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Vector_Join(System.Single,System.Single,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Vector3 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Vector3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Vector_Split(Stride.Core.Mathematics.Vector3,System.Single@,System.Single@,System.Single@)">
            <summary>Splits a vector into its components</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.X(Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>The X component of the vector.</summary>
            <param name="Input_In">The X component of the vector.</param>
            <param name="X_Out">The X component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Y(Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>The Y component of the vector.</summary>
            <param name="Input_In">The Y component of the vector.</param>
            <param name="Y_Out">The Y component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Z(Stride.Core.Mathematics.Vector3,System.Single@)">
            <summary>The Z component of the vector.</summary>
            <param name="Input_In">The Z component of the vector.</param>
            <param name="Z_Out">The Z component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Zero(Stride.Core.Mathematics.Vector3@)">
            <summary>A Stride.Core.Mathematics.Vector3 with all of its components set to zero.</summary>
            <param name="Zero_Out">A Stride.Core.Mathematics.Vector3 with all of its components set to zero.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.CatmullRom(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="Value_1_In">The first position in the interpolation.</param>
            <param name="Value_2_In">The second position in the interpolation.</param>
            <param name="Value_3_In">The third position in the interpolation.</param>
            <param name="Value_4_In">The fourth position in the interpolation.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">When the method completes, contains the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Hermite(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Performs a Hermite spline interpolation.</summary>
            <param name="Value_1_In">First source position vector.</param>
            <param name="Tangent_1_In">First source tangent vector.</param>
            <param name="Value_2_In">Second source position vector.</param>
            <param name="Tangent_2_In">Second source tangent vector.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">When the method completes, contains the result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.ToArray(Stride.Core.Mathematics.Vector3,System.Single[]@)">
            <summary>Creates an array containing the elements of the vector.</summary>
            <param name="Input_In">Creates an array containing the elements of the vector.</param>
            <param name="Result_Out">A three-element array containing the components of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.GetItem(Stride.Core.Mathematics.Vector3,System.Int32,System.Single@)">
            <summary>Gets the specified component of the vector, throws an exception when out of bounds. Use GetSlice if you want to auto wrap the index</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.SetItem(Stride.Core.Mathematics.Vector3,System.Single,System.Int32,Stride.Core.Mathematics.Vector3@)">
            <summary>Sets the specified component of the vector, throws an exception when out of bounds. Use SetSlice if you want to auto wrap the index</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Transform_Homogeneous(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector4@)">
            <summary>Transforms a 3D vector by the given Stride.Core.Mathematics.Matrix.</summary>
            <param name="Vector_In">The source vector.</param>
            <param name="Transform_In">The transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Result_Out">When the method completes, contains the transformed Stride.Core.Mathematics.Vector4.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.Transform_Normal(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3@)">
            <summary>Performs a normal transformation using the given Stride.Core.Mathematics.Matrix.</summary>
            <remarks>
            A normal transform performs the transformation with the assumption that the w component
                        is zero. This causes the fourth row and fourth collumn of the matrix to be unused. The
                        end result is a vector that is not translated, but all other transformation properties
                        apply. This is often prefered for normal vectors as normals purely represent direction
                        rather than location because normal vectors should not be translated.
            </remarks>
            <param name="Input_In">The normal vector to transform.</param>
            <param name="Transform_In">The transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Output_Out">When the method completes, contains the transformed normal.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.GetSlice(Stride.Core.Mathematics.Vector3,System.Int32,System.Single@)">
            <summary>Gets the specified component of the vector, wraps the index if out of bounds. Use GetItem if you want better performance</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.XY(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector2@)">
            <summary>Returns the inputs XY components as a Vector2.</summary>
            <tags>swizzle</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.XZ(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector2@)">
            <summary>Returns the inputs XZ components as a Vector2.</summary>
            <tags>swizzle</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.YZ(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Vector2@)">
            <summary>Returns the inputs YZ components as a Vector2.</summary>
            <tags>swizzle</tags>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector3._Operations_.ToVector3_Float32(System.Single,Stride.Core.Mathematics.Vector3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Vector3 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Vector3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.OperatorMinus(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4@)">
            <summary>Subtracts two vectors.</summary>
            <param name="Input_In">The first vector to subtract.</param>
            <param name="Input_2_In">The second vector to subtract.</param>
            <param name="Output_Out">When the method completes, contains the difference of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.OperatorMinus_Negate(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4@)">
            <summary>Reverses the direction of a given vector.</summary>
            <param name="Input_In">The vector to negate.</param>
            <param name="Output_Out">When the method completes, contains a vector facing in the opposite direction.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.NE(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.OperatorMultiply(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4@)">
            <summary>Multiplies a vector with another by performing component-wise multiplication.</summary>
            <param name="Input_In">The first vector to multiply.</param>
            <param name="Input_2_In">The second vector to multiply.</param>
            <param name="Output_Out">When the method completes, contains the multiplied vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.OperatorDivide(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4@)">
            <summary>Divides a vector by the given vector, component-wise.</summary>
            <param name="Input_In">The vector to scale.</param>
            <param name="Input_2_In">The by.</param>
            <param name="Output_Out">The scaled vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.OperatorPlus(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4@)">
            <summary>Adds two vectors.</summary>
            <param name="Input_In">The first vector to add.</param>
            <param name="Input_2_In">The second vector to add.</param>
            <param name="Output_Out">When the method completes, contains the sum of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.OperatorEquals(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.CreateDefault">
            <summary>The W unit Stride.Core.Mathematics.Vector4 (0, 0, 0, 1).</summary>
            <returns>The W unit Stride.Core.Mathematics.Vector4 (0, 0, 0, 1).</returns>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Dot(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,System.Single@)">
            <summary>Calculates the dot product of two vectors.</summary>
            <param name="Input_In">First source vector</param>
            <param name="Input_2_In">Second source vector.</param>
            <param name="Result_Out">When the method completes, contains the dot product of the two vectors.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.FromValues(System.Collections.Generic.IEnumerable{System.Single},Stride.Core.Mathematics.Vector4@)">
            <summary>Creates a vector from the first values of a sequence, if the count of the sequence is lower than the dimension the remainig values get filled with 0</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.IsNaN(Stride.Core.Mathematics.Vector4,System.Boolean@)">
            <summary>Checks if ANY of the vector components is NaN</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Length(Stride.Core.Mathematics.Vector4,System.Single@)">
            <summary>Calculates the length of the vector.</summary>
            <remarks>
            Stride.Core.Mathematics.Vector4.LengthSquared may be preferred when only the relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the length of the vector.</param>
            <param name="Result_Out">The length of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.LengthSquared(Stride.Core.Mathematics.Vector4,System.Single@)">
            <summary>Calculates the squared length of the vector.</summary>
            <remarks>
            This method may be preferred to Stride.Core.Mathematics.Vector4.Length when only a relative length is needed
                        and speed is of the essence.
            </remarks>
            <param name="Input_In">Calculates the squared length of the vector.</param>
            <param name="Result_Out">The squared length of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Normalize(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts the vector into a unit vector.</summary>
            <param name="Input_In">The vector to normalize.</param>
            <param name="Output_Out">When the method completes, contains the normalized vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.One(Stride.Core.Mathematics.Vector4@)">
            <summary>A Stride.Core.Mathematics.Vector4 with all of its components set to one.</summary>
            <param name="One_Out">A Stride.Core.Mathematics.Vector4 with all of its components set to one.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Rotate_Quaternion(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Quaternion,Stride.Core.Mathematics.Vector4@)">
            <summary>Transforms a 4D vector by the given Stride.Core.Mathematics.Quaternion rotation.</summary>
            <param name="Input_In">The vector to rotate.</param>
            <param name="Rotation_In">The Stride.Core.Mathematics.Quaternion rotation to apply.</param>
            <param name="Output_Out">When the method completes, contains the transformed Stride.Core.Mathematics.Vector4.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.SetSlice(Stride.Core.Mathematics.Vector4,System.Single,System.Int32,Stride.Core.Mathematics.Vector4@)">
            <summary>Sets the specified component of the vector, wraps the index if out of bounds. Use SetItem if you want better performance</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.ToVector2(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector2@)">
            <summary>Performs an explicit conversion from Stride.Core.Mathematics.Vector4 to Stride.Core.Mathematics.Vector2.</summary>
            <param name="Input_In">The value.</param>
            <param name="Result_Out">The result of the conversion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.ToVector3(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector3@)">
            <summary>Performs an explicit conversion from Stride.Core.Mathematics.Vector4 to Stride.Core.Mathematics.Vector3.</summary>
            <param name="Input_In">The value.</param>
            <param name="Result_Out">The result of the conversion.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Transform(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector4@)">
            <summary>Transforms a 4D vector by the given Stride.Core.Mathematics.Matrix.</summary>
            <tags>applytransform,*</tags>
            <param name="Input_In">The source vector.</param>
            <param name="Transform_In">The transformation Stride.Core.Mathematics.Matrix.</param>
            <param name="Output_Out">When the method completes, contains the transformed Stride.Core.Mathematics.Vector4.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.UnitW(Stride.Core.Mathematics.Vector4@)">
            <summary>The W unit Stride.Core.Mathematics.Vector4 (0, 0, 0, 1).</summary>
            <param name="Unit_W_Out">The W unit Stride.Core.Mathematics.Vector4 (0, 0, 0, 1).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.UnitX(Stride.Core.Mathematics.Vector4@)">
            <summary>The X unit Stride.Core.Mathematics.Vector4 (1, 0, 0, 0).</summary>
            <param name="Unit_X_Out">The X unit Stride.Core.Mathematics.Vector4 (1, 0, 0, 0).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.UnitY(Stride.Core.Mathematics.Vector4@)">
            <summary>The Y unit Stride.Core.Mathematics.Vector4 (0, 1, 0, 0).</summary>
            <param name="Unit_Y_Out">The Y unit Stride.Core.Mathematics.Vector4 (0, 1, 0, 0).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.UnitZ(Stride.Core.Mathematics.Vector4@)">
            <summary>The Z unit Stride.Core.Mathematics.Vector4 (0, 0, 1, 0).</summary>
            <param name="Unit_Z_Out">The Z unit Stride.Core.Mathematics.Vector4 (0, 0, 1, 0).</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Vector_Join(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Vector4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Vector4 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="W_In">Initial value for the W component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Vector4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Vector_Split(Stride.Core.Mathematics.Vector4,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>Splits a vector into its components</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.W(Stride.Core.Mathematics.Vector4,System.Single@)">
            <summary>The W component of the vector.</summary>
            <param name="Input_In">The W component of the vector.</param>
            <param name="W_Out">The W component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.X(Stride.Core.Mathematics.Vector4,System.Single@)">
            <summary>The X component of the vector.</summary>
            <param name="Input_In">The X component of the vector.</param>
            <param name="X_Out">The X component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Y(Stride.Core.Mathematics.Vector4,System.Single@)">
            <summary>The Y component of the vector.</summary>
            <param name="Input_In">The Y component of the vector.</param>
            <param name="Y_Out">The Y component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Z(Stride.Core.Mathematics.Vector4,System.Single@)">
            <summary>The Z component of the vector.</summary>
            <param name="Input_In">The Z component of the vector.</param>
            <param name="Z_Out">The Z component of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Zero(Stride.Core.Mathematics.Vector4@)">
            <summary>A Stride.Core.Mathematics.Vector4 with all of its components set to zero.</summary>
            <param name="Zero_Out">A Stride.Core.Mathematics.Vector4 with all of its components set to zero.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.CatmullRom(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,System.Single,Stride.Core.Mathematics.Vector4@)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="Value_1_In">The first position in the interpolation.</param>
            <param name="Value_2_In">The second position in the interpolation.</param>
            <param name="Value_3_In">The third position in the interpolation.</param>
            <param name="Value_4_In">The fourth position in the interpolation.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">When the method completes, contains the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.GetItem(Stride.Core.Mathematics.Vector4,System.Int32,System.Single@)">
            <summary>Gets the specified component of the vector, throws an exception when out of bounds. Use GetSlice if you want to auto wrap the index</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.Hermite(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Vector4,System.Single,Stride.Core.Mathematics.Vector4@)">
            <summary>Performs a Hermite spline interpolation.</summary>
            <param name="Value_1_In">First source position vector.</param>
            <param name="Tangent_1_In">First source tangent vector.</param>
            <param name="Value_2_In">Second source position vector.</param>
            <param name="Tangent_2_In">Second source tangent vector.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">When the method completes, contains the result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.SetItem(Stride.Core.Mathematics.Vector4,System.Single,System.Int32,Stride.Core.Mathematics.Vector4@)">
            <summary>Sets the specified component of the vector, throws an exception when out of bounds. Use SetSlice if you want to auto wrap the index</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.ToArray(Stride.Core.Mathematics.Vector4,System.Single[]@)">
            <summary>Creates an array containing the elements of the vector.</summary>
            <param name="Input_In">Creates an array containing the elements of the vector.</param>
            <param name="Result_Out">A four-element array containing the components of the vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.GetSlice(Stride.Core.Mathematics.Vector4,System.Int32,System.Single@)">
            <summary>Gets the specified component of the vector, wraps the index if out of bounds. Use GetItem if you want better performance</summary>
        </member>
        <member name="M:_CoreLibBasics_._3D.Vector4._Operations_.ToVector4_Float32(System.Single,Stride.Core.Mathematics.Vector4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Vector4 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Vector4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.NE(VL.Lib.Mathematics.ViewportF,VL.Lib.Mathematics.ViewportF,System.Boolean@)">
            <summary>Implements the operator !=.</summary>
            <param name="Input_In">The left.</param>
            <param name="Input_2_In">The right.</param>
            <param name="Result_Out">The result of the operator.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.OperatorEquals(VL.Lib.Mathematics.ViewportF,VL.Lib.Mathematics.ViewportF,System.Boolean@)">
            <summary>Implements the operator ==.</summary>
            <param name="Input_In">The left.</param>
            <param name="Input_2_In">The right.</param>
            <param name="Result_Out">The result of the operator.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Height(VL.Lib.Mathematics.ViewportF,System.Single@)">
            <summary>Height dimension of the viewport.</summary>
            <param name="Input_In">Height dimension of the viewport.</param>
            <param name="Height_Out">Height dimension of the viewport.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.MaxDepth(VL.Lib.Mathematics.ViewportF,System.Single@)">
            <summary>Gets or sets the maximum depth of the clip volume.</summary>
            <param name="Input_In">Gets or sets the maximum depth of the clip volume.</param>
            <param name="Max_Depth_Out">Gets or sets the maximum depth of the clip volume.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.MinDepth(VL.Lib.Mathematics.ViewportF,System.Single@)">
            <summary>Gets or sets the minimum depth of the clip volume.</summary>
            <param name="Input_In">Gets or sets the minimum depth of the clip volume.</param>
            <param name="Min_Depth_Out">Gets or sets the minimum depth of the clip volume.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Project(VL.Lib.Mathematics.ViewportF,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3@)">
            <summary>Projects a 3D vector from object space into screen space.</summary>
            <param name="Input_In">Projects a 3D vector from object space into screen space.</param>
            <param name="Source_In">The vector to project.</param>
            <param name="Matrix_In">A combined WorldViewProjection matrix.</param>
            <param name="Vector_Out">The projected vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Unproject(VL.Lib.Mathematics.ViewportF,Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Matrix,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts a screen space point into a corresponding point in world space.</summary>
            <param name="Input_In">Converts a screen space point into a corresponding point in world space.</param>
            <param name="Source_In">The vector to project.</param>
            <param name="Matrix_In">An inverted combined WorldViewProjection matrix.</param>
            <param name="Vector_Out">The unprojected vector.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Viewport_Join_Depth(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,VL.Lib.Mathematics.ViewportF@)">
            <summary>Initializes a new instance of the VL.Lib.Mathematics.ViewportF struct.</summary>
            <param name="X_In">The x coordinate of the upper-left corner of the viewport in pixels.</param>
            <param name="Y_In">The y coordinate of the upper-left corner of the viewport in pixels.</param>
            <param name="Width_In">The width of the viewport in pixels.</param>
            <param name="Height_In">The height of the viewport in pixels.</param>
            <param name="Min_Depth_In">The minimum depth of the clip volume.</param>
            <param name="Max_Depth_In">The maximum depth of the clip volume.</param>
            <param name="Output_Out">Initializes a new instance of the VL.Lib.Mathematics.ViewportF struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Viewport_Join_Rectangle(Stride.Core.Mathematics.RectangleF,VL.Lib.Mathematics.ViewportF@)">
            <summary>Initializes a new instance of the VL.Lib.Mathematics.ViewportF struct.</summary>
            <param name="Bounds_In">A bounding box that defines the location and size of the viewport in a render target.</param>
            <param name="Output_Out">Initializes a new instance of the VL.Lib.Mathematics.ViewportF struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Viewport_Join(System.Single,System.Single,System.Single,System.Single,VL.Lib.Mathematics.ViewportF@)">
            <summary>Initializes a new instance of the VL.Lib.Mathematics.ViewportF struct.</summary>
            <param name="X_In">The x coordinate of the upper-left corner of the viewport in pixels.</param>
            <param name="Y_In">The y coordinate of the upper-left corner of the viewport in pixels.</param>
            <param name="Width_In">The width of the viewport in pixels.</param>
            <param name="Height_In">The height of the viewport in pixels.</param>
            <param name="Output_Out">Initializes a new instance of the VL.Lib.Mathematics.ViewportF struct.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Width(VL.Lib.Mathematics.ViewportF,System.Single@)">
            <summary>Width dimension of the viewport.</summary>
            <param name="Input_In">Width dimension of the viewport.</param>
            <param name="Width_Out">Width dimension of the viewport.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.X(VL.Lib.Mathematics.ViewportF,System.Single@)">
            <summary>Position of the pixel coordinate of the upper-left corner of the viewport.</summary>
            <param name="Input_In">Position of the pixel coordinate of the upper-left corner of the viewport.</param>
            <param name="X_Out">Position of the pixel coordinate of the upper-left corner of the viewport.</param>
        </member>
        <member name="M:_CoreLibBasics_._3D.Viewport._Operations_.Y(VL.Lib.Mathematics.ViewportF,System.Single@)">
            <summary>Position of the pixel coordinate of the upper-left corner of the viewport.</summary>
            <param name="Input_In">Position of the pixel coordinate of the upper-left corner of the viewport.</param>
            <param name="Y_Out">Position of the pixel coordinate of the upper-left corner of the viewport.</param>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.ADSR_BZ5u9107sGjOAQJcxj525u">
            <summary>Classic synthesizer envelope generator with attack time, decay time, sustain level, slope and release time.</summary>
            <remarks>Use the Create [ADSRSettings] node to set the inputs.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.Counter_UIay2coHW4dO2NuoNnTZ3G">
            <summary>Allows to count a value up/down at given increments.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.CounterClamp_UmRvxWmFWbuNA95MLvVIEk">
            <summary>Allows to count a value up/down at given increments and clamps the output at the given minimum and maximum.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.CounterMirror_KnR2aqBgaKjNnq9rVe1JIk">
            <summary>Allows to count a value up/down at given increments and mirrors the output at the given minimum and maximum.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.CounterWrap_NQShHNCKkBNN1Rg1qdHOVT">
            <summary>Allows to count a value up/down at given increments and wraps the output at the given minimum and maximum.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.FrameCounter_BTu2lIk3ErHQUOIIjwJYCm">
            <summary>Returns the number of frames it was enabled.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.FrameDifference_UGiMzXJ8Pe3NmV2nXH2LpH`1">
            <summary>Returns the difference between the current input value and the one from the last frame.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.Heading_P4CfeJFnBFRMn0CBIirX7k">
            <summary>Returns the orientation and speed of the input vector over time.</summary>
            <tags>orientation,direction,angle,speed,length,movement</tags>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.Integrator_THHkpncME3nNMZHt1mZTtJ`1">
            <summary>Returns a value that is the result of all accumulated input values since the last reset.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.Levin_R`1">
            <summary>Returns the input sequence of values extrapolated into the future.</summary>
            <remarks>Modelled after Yellowtail as part of Golan Levin&apos;s AVES: http://acg.media.mit.edu/people/golan/aves/</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.Counter_Generic_BuCQWY17dcbPWEz6jSGvOC`1">
            <summary>Generic counter. Allows to count a value up/down at given increments.</summary>
            <remarks>Can accumulate errors when instantiated with floating point types. Integer types are safe.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.CounterClamp_Generic_Vp5Ua0DUXFiOP7AUvv4sYt`1">
            <summary>Generic counter. Allows to count a value up/down at given increments and clamps the output at the given minimum and maximum.</summary>
            <remarks>Can accumulate errors when instantiated with floating point types. Integer types are safe.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.CounterMirror_Generic_O9Fk9eM8x6dPJdHWfqU8yv`1">
            <summary>Generic counter. Allows to count a value up/down at given increments and mirrors the output at the given minimum and maximum.</summary>
            <remarks>Can accumulate errors when instantiated with floating point types. Integer types are safe.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.FrameBased.CounterWrap_Generic_TTro5GIElkiOwGRQfDIi9E`1">
            <summary>Generic counter. Allows to count a value up/down at given increments and wraps the output at the given minimum and maximum.</summary>
            <remarks>Can accumulate errors when instantiated with floating point types. Integer types are safe.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.ADSR_NLdSdxoGgeXLodhNRpRhvv">
            <summary>Classic synthesizer envelope generator with attack time, decay time, sustain level, slope and release time.</summary>
            <remarks>Use the Create [ADSRSettings] node to set the inputs.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.Filter_APkUExWKTIiNJbZIcf8Uew`1">
            <summary>Returns the input value filtered over time using the specified tweener transition.</summary>
            <tags>tween,damper,lerp,interpolate</tags>
        </member>
        <member name="T:_CoreLibBasics_.Animation.LFO_F48sA9CC7kzM1Y1LIpWRrD">
            <summary>A &quot;low frequency oscillator&quot; returning a value going from 0 to 1 in the given periode, specified in seconds.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Animation.LFO_MinMax_GF4Dmkmz16iP4GG4eDNHct">
            <summary>A &quot;low frequency oscillator&quot; returning a value going from 0 to 1 in the given periode, specified in seconds.</summary>
            <remarks>Returns its output mapped to the range between Minimum and Maximum.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.OneEuroFilter_FvW0xl6URWWMjdPsygqbs7`1">
            <summary>Returns the input filtered over time.</summary>
            <remarks>The 1€ filter is a simple algorithm to filter noisy signals for high precision and responsiveness. It uses a first order low-pass filter with an adaptive cutoff frequency: at low speeds, a low cutoff stabilizes the signal by reducing jitter, but as speed increases, the cutoff is increased to reduce lag. The algorithm is easy to implement, uses very few resources, and with two easily understood parameters, it is easy to tune. In a comparison with other filters, the 1€ filter has less lag using a reference amount of jitter reduction.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.Playhead_EQKfVwGC966NC2YT92PjkJ">
            <summary>Time control with play/pause, loop, speed and seek options.</summary>
            <tags>integrate,clock,watch</tags>
        </member>
        <member name="T:_CoreLibBasics_.Animation.Damper_Old_SjHVWskSlOcO6P3AsMPQYD">
            <summary>Returns the input value filtered over time.</summary>
            <remarks>Applies a force to the input value which prevents the output to reach the new value for a given time.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Animation.Stopwatch_Old_LMtctrTQxUdQWh8OjMIst3">
            <summary>Allows to measure time.</summary>
            <tags>time,clock,integrate</tags>
        </member>
        <member name="T:_CoreLibBasics_.Animation.IntegratorClamp_K5ne33LlFHfOOOblTQToDW">
            <tags>keyboard</tags>
        </member>
        <member name="T:_CoreLibBasics_.Animation.Stopwatch_Oy2h30sR8ODMEFMvzPCidW">
            <summary>Measures time.</summary>
            <remarks>Uses the global runtime clock by default, so two Stopwatch nodes will return the exact same values when operated in the same way.</remarks>
            <tags>time,clock,integrate</tags>
        </member>
        <member name="M:_CoreLibBasics_.Animation._Operations_.CurrentTime(VL.Lib.Animation.Time@)">
            <summary>Returns the time in seconds at the moment of the actual call.</summary>
            <remarks>This is using the high resolution CPU clock. For time of day and date operations, use the &quot;Now&quot; node instead.</remarks>
            <tags>now</tags>
        </member>
        <member name="M:_CoreLibBasics_.Animation._Operations_.SetCurrentFrameClock(VL.Lib.Animation.IFrameClock)">
            <summary>Sets the clock for the current thread.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Animation.Time._Operations_.FromDateTime(System.DateTime,VL.Lib.Animation.Time@)">
            <summary>Elapsed time in seconds since midnight year 0 of the gregorian calendar</summary>
        </member>
        <member name="M:_CoreLibBasics_.Animation.Time._Operations_.FromDateTime_UTC(System.DateTimeOffset,VL.Lib.Animation.Time@)">
            <summary>Elapsed time in seconds since midnight year 0 of the gregorian calendar</summary>
        </member>
        <member name="M:_CoreLibBasics_.Animation.IFrameClock._Operations_.GetTicks(VL.Lib.Animation.IFrameClock,System.IObservable{VL.Lib.Animation.FrameTimeMessage}@)">
            <summary>Gets an observable that sends an event before each frame.</summary>
            <param name="Input_In">Gets an observable that sends an event before each frame.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.OperatorMinus(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4@)">
            <summary>Subtracts two colors.</summary>
            <param name="Input_In">The first color to subtract.</param>
            <param name="Input_2_In">The second color to subtract.</param>
            <param name="Output_Out">WHen the method completes, contains the difference of the two colors.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.NE(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4,System.Boolean@)">
            <summary>Tests for inequality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has a different value than Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.OperatorMultiply(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4@)">
            <summary>Modulates two colors.</summary>
            <param name="Input_In">The first color to modulate.</param>
            <param name="Input_2_In">The second color to modulate.</param>
            <param name="Output_Out">When the method completes, contains the modulated color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.OperatorMultiply_Scale(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Scales the RGB values, alpha will stay the same</summary>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.OperatorDivide_Scale(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Scales the RGB values, alpha will stay the same</summary>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.OperatorPlus(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4@)">
            <summary>Adds two colors.</summary>
            <param name="Input_In">The first color to add.</param>
            <param name="Input_2_In">The second color to add.</param>
            <param name="Output_Out">When the method completes, completes the sum of the two colors.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.OperatorEquals(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4,System.Boolean@)">
            <summary>Tests for equality between two objects.</summary>
            <param name="Input_In">The first value to compare.</param>
            <param name="Input_2_In">The second value to compare.</param>
            <param name="Result_Out">true if Input has the same value as Input 2; otherwise, false.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.A(Stride.Core.Mathematics.Color4,System.Single@)">
            <summary>The alpha component of the color.</summary>
            <param name="Input_In">The alpha component of the color.</param>
            <param name="Alpha_Out">The alpha component of the color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.AdjustContrast(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Adjusts the contrast of a color.</summary>
            <param name="Input_In">The color whose contrast is to be adjusted.</param>
            <param name="Contrast_In">The amount by which to adjust the contrast.</param>
            <param name="Output_Out">When the method completes, contains the adjusted color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.AdjustSaturation(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Adjusts the saturation of a color.</summary>
            <param name="Input_In">The color whose saturation is to be adjusted.</param>
            <param name="Saturation_In">The amount by which to adjust the saturation.</param>
            <param name="Output_Out">When the method completes, contains the adjusted color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.B(Stride.Core.Mathematics.Color4,System.Single@)">
            <summary>The blue component of the color.</summary>
            <param name="Input_In">The blue component of the color.</param>
            <param name="Blue_Out">The blue component of the color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.Black(Stride.Core.Mathematics.Color4@)">
            <summary>The Black color (0, 0, 0, 1).</summary>
            <param name="Black_Out">The Black color (0, 0, 0, 1).</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.Complement(Stride.Core.Mathematics.Color4,System.Boolean,Stride.Core.Mathematics.Color4@)">
            <tags>invert,inverse,negate,negative</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.CreateDefault">
            <summary>The White color (1, 1, 1, 1).</summary>
            <returns>The White color (1, 1, 1, 1).</returns>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromHSL_Vector4(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Color4@)">
            <summary>Converts HSL color values to RGB color values.</summary>
            <param name="Hsl_In">
            
                        Color value to convert in hue, saturation, lightness (HSL).
                        The X element is Hue (H), the Y element is Saturation (S), the Z element is Lightness (L), and the W element is Alpha (which is copied to the output&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            
            </param>
            <param name="Result_Out">
            
                        Returns the converted color value.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromHSV(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Color4@)">
            <tags>hsb</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromHSV_Vector4(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Color4@)">
            <summary>Converts HSV color values to RGB color values.</summary>
            <tags>hsb</tags>
            <param name="Hsv_In">
            Color value to convert in hue, saturation, value (HSV).
                        The X element is Hue (H), the Y element is Saturation (S), the Z element is Value (V), and the W element is Alpha (which is copied to the output&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            </param>
            <param name="Result_Out">Returns the converted color value.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromHTML(System.String,Stride.Core.Mathematics.Color4@)">
            <summary>Converts a color value (without alpha) given as string of hex numbers to the corresponding color</summary>
            <remarks>Expects the string in the format RRGGBB where RR are two hex bytes for red, GG for green and BB for the blue component.</remarks>
            <tags>hex</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.G(Stride.Core.Mathematics.Color4,System.Single@)">
            <summary>The green component of the color.</summary>
            <param name="Input_In">The green component of the color.</param>
            <param name="Green_Out">The green component of the color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.Premultiply(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4@)">
            <summary>Computes the premultiplied value of the provided color.</summary>
            <param name="Value_In">The non-premultiplied value.</param>
            <param name="Output_Out">The premultiplied result.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.R(Stride.Core.Mathematics.Color4,System.Single@)">
            <summary>The red component of the color.</summary>
            <param name="Input_In">The red component of the color.</param>
            <param name="Red_Out">The red component of the color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.RGBA_Join_Vector3_Alpha(Stride.Core.Mathematics.Vector3,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Joins a color from a Vector3 and alpha</summary>
            <tags>fromrgba</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.RGBA_Join_Vector4(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Color4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Color4 struct.</summary>
            <tags>fromrgba</tags>
            <param name="Value_In">The red, green, blue, and alpha components of the color.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Color4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.RGBA_Join(System.Single,System.Single,System.Single,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Joins a color from its components</summary>
            <tags>fromrgba</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.RGBA_Split(Stride.Core.Mathematics.Color4,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>Splits a color into its components</summary>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.SetAlpha(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Overrides the alpha component of the color</summary>
            <tags>transparency,opacity</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.SetBlue(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Overrides the blue component of the color</summary>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.SetGreen(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Overrides the green component of the color</summary>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.SetRed(Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Overrides the red component of the color</summary>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.SmoothStep(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <summary>Performs a cubic interpolation between two colors.</summary>
            <param name="Start_In">Start color.</param>
            <param name="End_In">End color.</param>
            <param name="Amount_In">Value between 0 and 1 indicating the weight of End.</param>
            <param name="Output_Out">When the method completes, contains the cubic interpolation of the two colors.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToBytes(Stride.Core.Mathematics.Color4,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>Converts the color into a packed integer.</summary>
            <param name="Input_In">Converts the color into a packed integer.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToHex(Stride.Core.Mathematics.Color4,System.String@)">
            <summary>Converts a color to a string of hex values</summary>
            <remarks>Returns a string in the format RRGGBBAA where RR are two hex bytes for red, GG for green, BB for blue and AA for the alpha component.</remarks>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToHSL_Vector4(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts RGB color values to HSL color values.</summary>
            <param name="Rgb_In">Color value to convert.</param>
            <param name="Result_Out">
            
                        Returns the converted color value.
                        The X element is Hue (H), the Y element is Saturation (S), the Z element is Lightness (L), and the W element is Alpha (a copy of the input&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToHSV(Stride.Core.Mathematics.Color4,System.Single@,System.Single@,System.Single@,System.Single@)">
            <tags>hsb</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToHSV_Vector4(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts RGB color values to HSV color values.</summary>
            <tags>hsb</tags>
            <param name="Rgb_In">Color value to convert.</param>
            <param name="Result_Out">
            Returns the converted color value.
                        The X element is Hue (H), the Y element is Saturation (S), the Z element is Value (V), and the W element is Alpha (a copy of the input&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToHTML(Stride.Core.Mathematics.Color4,System.String@)">
            <summary>Converts a color (without alpha) to a string of hex values</summary>
            <remarks>Returns a string in the format RRGGBB where RR are two hex bytes for red, GG for green and BB for the blue component.</remarks>
            <tags>hex</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToVector3(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Vector3@)">
            <summary>Converts the color into a three component vector.</summary>
            <param name="Input_In">Converts the color into a three component vector.</param>
            <param name="Result_Out">A three component vector containing the red, green, and blue components of the color.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToVector4(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts the color into a four component vector.</summary>
            <param name="Input_In">Converts the color into a four component vector.</param>
            <param name="Result_Out">A four component vector containing all four color components.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.White(Stride.Core.Mathematics.Color4@)">
            <summary>The White color (1, 1, 1, 1).</summary>
            <param name="White_Out">The White color (1, 1, 1, 1).</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.LerpHSVA(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4,System.Single,Stride.Core.Mathematics.Color4@)">
            <tags>hsb</tags>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromHCY_Vector4(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Color4@)">
            <summary>Converts HCY color values to RGB color values.</summary>
            <param name="Hcy_In">
            
                        Color value to convert in hue, chroma, luminance (HCY).
                        The X element is Hue (H), the Y element is Chroma (C), the Z element is luminance (Y), and the W element is Alpha (which is copied to the output&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            
            </param>
            <param name="Result_Out">
            
                        Returns the converted color value.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromInteger(System.Int32,Stride.Core.Mathematics.Color4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Color4 struct.</summary>
            <param name="Rgba_In">A packed integer containing all four color components in RGBA order.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Color4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromXYZ_Vector4(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Color4@)">
            <summary>Converts XYZ color values to RGB color values.</summary>
            <remarks>Uses the CIE XYZ colorspace.</remarks>
            <param name="Xyz_In">
            
                        Color value to convert with the trisimulus values of X, Y, and Z in the corresponding element, and the W element with Alpha (which is copied to the output&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            
            </param>
            <param name="Result_Out">
            
                        Returns the converted color value.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromYUV_Vector4(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Color4@)">
            <summary>Converts YCbCr color values to RGB color values.</summary>
            <remarks>Converts using ITU-R BT.601/CCIR 601 W(r) = 0.299 W(b) = 0.114 U(max) = 0.436 V(max) = 0.615.</remarks>
            <param name="Yuv_In">
            
                        Color value to convert in Luma-Chrominance (YCbCr) aka YUV.
                        The X element contains Luma (Y, 0.0 to 1.0), the Y element contains Blue-difference chroma (U, -0.5 to 0.5), the Z element contains the R-difference chroma (V, -0.5 to 0.5), and the W element contains the Alpha (which is copied to the output&apos;s Alpha value).
            
            </param>
            <param name="Result_Out">
            
                        Returns the converted color value.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.RGBToSRGB(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4@)">
            <summary>Converts RGB color values to sRGB color values.</summary>
            <param name="Rgb_In">Color value to convert.</param>
            <param name="Output_Out">
            
                        Returns the converted color value.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.SRGBToRGB(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Color4@)">
            <summary>Converts sRGB color values to RGB color values.</summary>
            <param name="Srgb_In">
            
                        Color value to convert in sRGB.
            
            </param>
            <param name="Output_Out">
            
                        Returns the converted color value.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToHCY_Vector4(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts RGB color values to HCY color values.</summary>
            <param name="Rgb_In">Color value to convert.</param>
            <param name="Result_Out">
            
                        Returns the converted color value.
                        The X element is Hue (H), the Y element is Chroma (C), the Z element is luminance (Y), and the W element is Alpha (a copy of the input&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToInteger(Stride.Core.Mathematics.Color4,System.Int32@)">
            <summary>Converts the color into a packed integer.</summary>
            <param name="Input_In">Converts the color into a packed integer.</param>
            <param name="Result_Out">A packed integer containing all four color components.</param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToXYZ_Vector4(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts RGB color values to XYZ color values.</summary>
            <remarks>Uses the CIE XYZ colorspace.</remarks>
            <param name="Rgb_In">Color value to convert.</param>
            <param name="Result_Out">
            
                        Returns the converted color value with the trisimulus values of X, Y, and Z in the corresponding element, and the W element with Alpha (a copy of the input&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.ToYUV_Vector4(Stride.Core.Mathematics.Color4,Stride.Core.Mathematics.Vector4@)">
            <summary>Converts RGB color values to YUV color values.</summary>
            <remarks>Converts using ITU-R BT.601/CCIR 601 W(r) = 0.299 W(b) = 0.114 U(max) = 0.436 V(max) = 0.615.</remarks>
            <param name="Rgb_In">Color value to convert.</param>
            <param name="Result_Out">
            
                        Returns the converted color value in Luma-Chrominance (YCbCr) aka YUV.
                        The X element contains Luma (Y, 0.0 to 1.0), the Y element contains Blue-difference chroma (U, -0.5 to 0.5), the Z element contains the R-difference chroma (V, -0.5 to 0.5), and the W element contains the Alpha (a copy of the input&apos;s Alpha value).
                        Each has a range of 0.0 to 1.0.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Color.RGBA._Operations_.FromHex(System.String,Stride.Core.Mathematics.Color4@)">
            <summary>Converts a color value given as string of hex numbers to the corresponding color.</summary>
            <remarks>Expects the string in the format RRGGBBAA where RR are two hex bytes for red, GG for green, BB for blue and AA for the alpha component. The string can start with # and AA is optional.</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Control.FlipFlop_CJjTkCTbntqL2s5d9CL0vC">
            <summary>Sets its output to TRUE when there is a bang on the Set input and sets it to FALSE when there is a bang on the Reset input.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.FrameDelay_VYPkCl1PIexL9IROxeL6ju`1">
            <summary>Returns the input value delayed by one frame.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Hysteresis_QncJHHMGgHjPlvFyybnJNu">
            <summary>Returns TRUE as the input gets higher than the High Value and returns FALSE only as the input gets lower than the Low Value.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.LTP_RSqc5XgXEzxQLfwERcx43o`1">
            <summary>Returns the last changed input - Last Takes Precedence.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Metronome_HTX1jRPLocoMLbSqZXzVK8">
            <summary>Normalizes and repeats an incoming beat.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.MonoFlop_GeOV3KtNF5BPYMkYFPPAst">
            <summary>Returns TRUE for the specified length of time when the set input is banged.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.MonoFlop_FrameBased_MOvFgvcWss4OfcgJRMKKqX">
            <summary>Returns TRUE for the specified amount of frames when the set input is banged.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.SPH_RESwCzqU3iTMc4Ig82Av03`1">
            <summary>Returns the last sampled input value - Sample and Hold.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.SPH_Sampler_JS8Fy9szyhAMN4Qm29zI8d`1">
            <summary>Returns the last sampled input value - Sample and Hold.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Throttle_CIMuYtlg9G1O8cUcSTCGy2`1">
            <summary>Returns changes from the input not immediately but throttled to the specified interval.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Throttle_FrameBased_A6eLRwYsiDgPcSzyaV95WR`1">
            <summary>Returns changes from the input not immediately but throttled to the specified frame interval.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.TimerFlop_FdX7N0Rk7AuQXGSKZzxW0H">
            <summary>Returns TRUE if the input has been TRUE for  longer than the given time.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.TogEdge_GJoUlOOEtqiM4g67HVecyr">
            <summary>Bangs the Up Edge output if there was a change on the input from FALSE to TRUE, bangs the Down Edge output if there was a change on the input from TRUE to FALSE.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Toggle_NRtjXBFlZv8LkW1dAEOgnz">
            <summary>Toggles the output each time the Flip input is banged.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Trigger_JZTJBKEqu2MMacaY6EzFKc">
            <summary>Returns random bangs in the given minimum and maximum time interval.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Trigger_FrameBased_MqVqfX7Noi8Ovoy2ns8zSI">
            <summary>Returns random bangs in the given minimum and maximum frame interval.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.Undo_T3rhyhgvpyhMjGurjjnyNr`1">
            <summary>An Undo stack.&quot; Remarks=&quot;Specify how many Levels are kept in memory. Use Push, to put items on the stack, then use Undo/Redo as you please.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.OnOpen_FuW9Q3o4A1QLNwSJwTBGFz">
            <summary>Returns TRUE when executed for the first time after the program was started.</summary>
        </member>
        <member name="T:_CoreLibBasics_.Control.MultiFlipFlop_AFWKI5vbHl8OZXAGjJUUG8">
            <summary>Returns the index of the first pin that is TRUE and keeps it.</summary>
            <remarks>Beware: Index is 0-based, but pin-naming is 1-based!</remarks>
        </member>
        <member name="T:_CoreLibBasics_.Control.CounterFlop_S4Z3YSTEO40NUKv0LVF134`1">
            <summary>Returns TRUE if the specified number of bangs is detected</summary>
            <remarks>
            e.g. to detect double clicks
            The time between consecutive bangs must be less than the &quot;Maximum Interval&quot;
            </remarks>
            <tags>doubleclick</tags>
        </member>
        <member name="T:_CoreLibBasics_.Control.Try_NXr6u6gowSzLvQTfp53h2q">
            <summary>let&apos;s you get rid of pink nodes</summary>
            <tags>Catch,Exception</tags>
        </member>
        <member name="M:_CoreLibBasics_.Control._Operations_.Switch_Boolean``1(System.Boolean,``0,``0,``0@)">
            <summary>Returns the value of the first input, if the condition is FALSE, otherwise returns the value of second input.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Control._Operations_.Swap``1(System.Boolean,``0,``0,``0@,``0@)">
            <summary>Returns Input on Output 2 and Input 2 on Output</summary>
        </member>
        <member name="M:_CoreLibBasics_.Control._Operations_.SwitchOutput``1(System.Boolean,``0,``0,``0@,``0@)">
            <summary>Returns the input value on output True if the condition is TRUE, otherwise returns it on output False.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Control._Operations_.Switch``2(System.Int32,VL.Lib.Collections.Spread{``0},``0@)">
            <summary>Returns the value of the input corresponding to the index</summary>
            <remarks>Beware: Index is 0-based, but pin-naming is 1-based!</remarks>
        </member>
        <member name="T:_CoreLibBasics_.IO.Copier_FNW0C0nOSpRMXPPUCLdhqw">
            <summary>Asynchronously copies the file or folder to a new location</summary>
        </member>
        <member name="T:_CoreLibBasics_.IO.Mover_UmRMkEhKJUGNuSot9q4nGp">
            <summary>Asynchronously moves the file or folder to a new location</summary>
        </member>
        <member name="T:_CoreLibBasics_.IO.TempFile_UuOFoZ5aawZQWYM1Je8Jpg">
            <summary>Creates and provides an empty temporary file</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO._Operations_.Filename_Join(System.String,System.String,System.String,VL.Lib.IO.Path@)">
            <summary>Creates a Path from directory, file and extension strings</summary>
            <tags>extension,suffix,path,directory</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO._Operations_.IsRooted(VL.Lib.IO.Path,System.Boolean@)">
            <summary>Checks if a path is absolute or relative</summary>
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO._Operations_.SystemFolder(VL.Lib.IO.SpecialFolder,VL.Lib.IO.Path@)">
            <summary>Returns various folders of the system</summary>
            <tags>directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO._Operations_.ToPath(System.String,VL.Lib.IO.Path@)">
            <summary>Converts the string to a Path</summary>
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO._Operations_.ToPath_Explicit(System.String,System.Boolean,VL.Lib.IO.Path@)">
            <summary>Converts the string to a Path, explicitly decide if file or folder</summary>
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO._Operations_.MakePath(VL.Lib.IO.Path,VL.Lib.Collections.Spread{System.String},VL.Lib.IO.Path@)">
            <tags>file,directory,folder,combine,+,concat</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO._Operations_.TempPath(System.String@)">
            <summary>Returns the path of the current user&apos;s temporary folder</summary>
            <tags>directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Children(VL.Lib.IO.Path,VL.Lib.Collections.Spread{VL.Lib.IO.Path}@)">
            <tags>folder,enumerate</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Copy(VL.Lib.IO.Path,VL.Lib.IO.Path,System.Boolean,VL.Lib.IO.Path@,VL.Lib.IO.Path@)">
            <summary>Copies the file or folder to a new location</summary>
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.CreateDirectory(VL.Lib.IO.Path,System.Boolean,VL.Lib.IO.Path@,System.Boolean@)">
            <summary>Creates the folder of the path</summary>
            <tags>folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Delete(VL.Lib.IO.Path,System.Boolean,System.Boolean,System.Boolean@)">
            <summary>Deletes the file or folder to Recycle Bin, optionally removes it completely.</summary>
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Exists(VL.Lib.IO.Path,System.Boolean@)">
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Filename_Split(VL.Lib.IO.Path,System.String@,System.String@,System.String@)">
            <summary>Returns the directory path and the name and extension of a file</summary>
            <tags>extension,suffix,path,directory</tags>
            <param name="Input_In">Returns the directory path and the name and extension of a file</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.GetAttributes(VL.Lib.IO.Path,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>Returns readonly, hidden and system attributes of a file or folder</summary>
            <tags>readonly,hidden,system</tags>
            <param name="Input_In">Returns readonly, hidden and system attributes of a file or folder</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.GetDescendants(VL.Lib.IO.Path,System.String,System.Boolean,System.Boolean,VL.Lib.Collections.Spread{VL.Lib.IO.Path}@)">
            <summary>Returns all files and folders contained withinin a directory</summary>
            <tags>folder,enumerate</tags>
            <param name="Input_In">Returns all files and folders contained withinin a directory</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.GetDirectories(VL.Lib.IO.Path,System.String,System.Boolean,System.Boolean,VL.Lib.Collections.Spread{VL.Lib.IO.Path}@)">
            <summary>Returns all folders contained within a directory</summary>
            <tags>subdir,folder,enumerate</tags>
            <param name="Input_In">Returns all folders contained within a directory</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.GetFiles(VL.Lib.IO.Path,System.String,System.Boolean,System.Boolean,VL.Lib.Collections.Spread{VL.Lib.IO.Path}@)">
            <summary>Returns all files contained within a directory</summary>
            <tags>dir,enumerate</tags>
            <param name="Input_In">Returns all files contained within a directory</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.IsDirectory(VL.Lib.IO.Path,System.Boolean@)">
            <tags>folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.MakeRelative(VL.Lib.IO.Path,VL.Lib.IO.Path,VL.Lib.IO.Path@)">
            <summary>
            Returns this absolute path as a relative path to the given base path.
                        In case the base path has a different root than this path or this path is relative already
                        the same path will be returned.
            </summary>
            <tags>file,directory,folder</tags>
            <param name="Input_In">
            Returns this absolute path as a relative path to the given base path.
                        In case the base path has a different root than this path or this path is relative already
                        the same path will be returned.
            </param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Modified(VL.Lib.IO.Path,System.DateTime@,System.DateTime@,System.DateTime@)">
            <summary>Returns creation date, last write and last access dates of a file or folder</summary>
            <tags>file,directory,folder</tags>
            <param name="Input_In">Returns creation date, last write and last access dates of a file or folder</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Move(VL.Lib.IO.Path,VL.Lib.IO.Path,System.Boolean,VL.Lib.IO.Path@)">
            <summary>Moves the file or folder to a new location</summary>
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Parent(VL.Lib.IO.Path,VL.Lib.IO.Path@)">
            <tags>directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Refresh(VL.Lib.IO.Path,VL.Lib.IO.Path@)">
            <summary>Updates all properties of the path</summary>
            <tags>file,directory,folder</tags>
            <param name="Input_In">Updates all properties of the path</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Rename(VL.Lib.IO.Path,System.String,System.Boolean,VL.Lib.IO.Path@)">
            <summary>Renames the file or folder</summary>
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.SetAttributes(VL.Lib.IO.Path,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the readonly, hidden and system attributes of a file or folder</summary>
            <tags>readonly,hidden,system</tags>
            <param name="Input_In">Sets the readonly, hidden and system attributes of a file or folder</param>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Size(VL.Lib.IO.Path,System.Int64@)">
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Normalize(VL.Lib.IO.Path,VL.Lib.IO.Path@)">
            <summary>
            Normalizes the specified path, aka canonicalization.
                        e.g. converts c:\aaa\bbb\..\ccc to c:\aaa\ccc
                        This operation is rather slow.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.FileExists(VL.Lib.IO.Path,System.Boolean@)">
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.DirectoryExists(VL.Lib.IO.Path,System.Boolean@)">
            <tags>file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.Combine(VL.Lib.IO.Path,VL.Lib.IO.Path,VL.Lib.IO.Path@)">
            <summary>Appends a Path to another Path with a system path separator in between.</summary>
            <tags>+,makepath,concat,file,directory,folder</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.Path._Operations_.MakeAbsolute(VL.Lib.IO.Path,VL.Lib.IO.Path,VL.Lib.IO.Path@)">
            <summary>
            Returns this relative path as an absolute path to the given base path.
                        In case this path is absolute already the same path will be returned.
            </summary>
            <param name="Input_In">
            Returns this relative path as an absolute path to the given base path.
                        In case this path is absolute already the same path will be returned.
            </param>
        </member>
        <member name="T:_CoreLibBasics_.IO.Stream.Reader_LngSNSCMgIdM2gt49FOPlL">
            <summary>Asynchronously reads bytes from a stream</summary>
        </member>
        <member name="T:_CoreLibBasics_.IO.Stream.ReaderAll_I0f0g5bpDcwM7IvfNlL1lC">
            <summary>Asynchronously reads all bytes from a stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.GetPosition(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@,System.Int64@)">
            <summary>Gets the current position in the stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.Length(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@,System.Int64@)">
            <summary>Gets the byte length of the stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.Read(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},System.Int64,System.Int64,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@,VL.Lib.Collections.Spread{System.Byte}@)">
            <summary>Reads bytes from a stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.Read_String(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},VL.Lib.Text.Encodings,System.Int64,System.Int64,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@,System.String@)">
            <summary>Reads strings from a stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.ReadAll(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@,VL.Lib.Collections.Spread{System.Byte}@)">
            <summary>Reads all bytes from a stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.ReadAll_String(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},VL.Lib.Text.Encodings,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@,System.String@)">
            <summary>Reads the string from an entire stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.Write(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},System.Collections.Generic.IEnumerable{System.Byte},System.Int64,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@)">
            <summary>Writes bytes to a stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.Stream._Operations_.Write_String(VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream},System.String,VL.Lib.Text.Encodings,System.Int64,VL.Lib.Basics.Resources.IResourceProvider{System.IO.Stream}@)">
            <summary>Writes a string to a stream</summary>
        </member>
        <member name="M:_CoreLibBasics_.IO.FileWatcher._Operations_.NewPath_H(System.IO.RenamedEventArgs,VL.Lib.IO.Path@)">
            <summary>Returns the new path of a rename reported by watcher</summary>
            <tags>renamed,renamedeventargs</tags>
        </member>
        <member name="M:_CoreLibBasics_.IO.FileWatcher._Operations_.OldPath_H(System.IO.RenamedEventArgs,VL.Lib.IO.Path@)">
            <summary>Returns the old path of a rename reported by watcher</summary>
            <tags>renamed,renamedeventargs</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math.Noise._Operations_.SimplexNoise``2(``0,System.Int32,System.Single,System.Single,System.Single@)">
            <summary>Samples a smooth noise field with multiple octaves at the input position.</summary>
            <remarks>Output range is roughly [-1..1]</remarks>
            <tags>Random,Perlin</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math.Ranges.Generic._Operations_.Confine``3(``0,``1,``0,``0,``0@,``1@,System.Boolean@)">
            <summary>Confines a moving element to a given area, bouncing it on the borders keeping its velocity intact.</summary>
            <tags>constrain</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.SineWave(System.Single,System.Single@)">
            <summary>Generates a sine wave [-1..1] from a phase input [0...1]</summary>
            <tags>waveshaper</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.Solve(VL.Lib.Collections.Spread{VL.Lib.Collections.Spread{System.Single}},VL.Lib.Collections.Spread{System.Single},VL.Lib.Collections.Spread{System.Single}@,System.Boolean@)">
            <summary>Computes the solution of a linear equation system using Gauss elimination</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.TriangleWave(System.Single,System.Single,System.Single@)">
            <summary>Generates a triangle wave [-1..1] from a phase input [0...1]</summary>
            <tags>waveshaper</tags>
            <param name="Slope_In">Defines where the tip of the triangle is located in the phase</param>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.RectangleWave(System.Single,System.Single,System.Single@)">
            <summary>Generates a rectangle wave [-1..1] from a phase input [0...1]</summary>
            <tags>waveshaper,pulsewave</tags>
            <param name="Pulse_Width_In">Defines where the wave switches from -1 to 1 in the phase</param>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.SawtoothWave(System.Single,System.Boolean,System.Single@)">
            <summary>Generates a Sawtooth wave [-1..1] from a phase input [0...1]</summary>
            <tags>waveshaper,ramp</tags>
            <param name="Inverse_In">Inverts the wave, descending ramp when true</param>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.CosineWave(System.Single,System.Single@)">
            <summary>Generates a cosine wave [-1..1] from a phase input [0...1]</summary>
            <tags>waveshaper</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.Radix(System.Int32,System.Int32,System.Int32@)">
            <summary>Combines a number from individual digits given in base 2 to a number in base 10.</summary>
            <remarks>Leftmost input is the most significant, rightmost the least significant.</remarks>
            <tags>bit,binary</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math._Operations_.ClosestPointOnLine``2(``0,``0,``0,``0@,System.Single@)">
            <param name="Input_In">The point X</param>
            <param name="Line_From_In">Point A on the line</param>
            <param name="Line_To_In">Point B on the line</param>
            <param name="Output_Out">The closest point to X on the line</param>
            <param name="Parameter_Out">A parameter in unit range [0..1] that describes where the closest point in relation A and B is.</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BackEaseIn(System.Single,System.Single@)">
            <summary>BACK EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BackEaseInOut(System.Single,System.Single@)">
            <summary>BACK EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BackEaseOut(System.Single,System.Single@)">
            <summary>BACK EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BackEaseOutIn(System.Single,System.Single@)">
            <summary>BACK EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BounceEaseIn(System.Single,System.Single@)">
            <summary>BOUNCE EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BounceEaseInOut(System.Single,System.Single@)">
            <summary>BOUNCE EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BounceEaseOut(System.Single,System.Single@)">
            <summary>BOUNCE EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.BounceEaseOutIn(System.Single,System.Single@)">
            <summary>BOUNCE EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CircularEaseIn(System.Single,System.Single@)">
            <summary>CIRCULAR EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CircularEaseInOut(System.Single,System.Single@)">
            <summary>CIRCULAR EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CircularEaseOut(System.Single,System.Single@)">
            <summary>CIRCULAR EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CircularEaseOutIn(System.Single,System.Single@)">
            <summary>CIRCULAR EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CubicEaseIn(System.Single,System.Single@)">
            <summary>CUBIC EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CubicEaseInOut(System.Single,System.Single@)">
            <summary>CUBIC EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CubicEaseOut(System.Single,System.Single@)">
            <summary>CUBIC EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.CubicEaseOutIn(System.Single,System.Single@)">
            <summary>CUBIC EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ElasticEaseIn(System.Single,System.Single@)">
            <summary>ELASTIC EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ElasticEaseInOut(System.Single,System.Single@)">
            <summary>ELASTIC EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ElasticEaseOut(System.Single,System.Single@)">
            <summary>ELASTIC EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ElasticEaseOutIn(System.Single,System.Single@)">
            <summary>ELASTIC EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ExponentialEaseIn(System.Single,System.Single@)">
            <summary>EXPONENTIAL EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ExponentialEaseInOut(System.Single,System.Single@)">
            <summary>EXPONENTIAL EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ExponentialEaseOut(System.Single,System.Single@)">
            <summary>EXPONENTIAL EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.ExponentialEaseOutIn(System.Single,System.Single@)">
            <summary>EXPONENTIAL EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuadEaseIn(System.Single,System.Single@)">
            <summary>QUADRATIC EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuadEaseInOut(System.Single,System.Single@)">
            <summary>QUADRATIC EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuadEaseOut(System.Single,System.Single@)">
            <summary>QUADRATIC EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuadEaseOutIn(System.Single,System.Single@)">
            <summary>QUADRATIC EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuarticEaseIn(System.Single,System.Single@)">
            <summary>QUARTIC EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuarticEaseInOut(System.Single,System.Single@)">
            <summary>QUARTIC EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuarticEaseOut(System.Single,System.Single@)">
            <summary>QUARTIC EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuarticEaseOutIn(System.Single,System.Single@)">
            <summary>QUARTIC EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuinticEaseIn(System.Single,System.Single@)">
            <summary>QUINTYIC EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuinticEaseInOut(System.Single,System.Single@)">
            <summary>QUINTYIC EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuinticEaseOut(System.Single,System.Single@)">
            <summary>QUINTYIC EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.QuinticEaseOutIn(System.Single,System.Single@)">
            <summary>QUINTYIC EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.SinusoidalEaseIn(System.Single,System.Single@)">
            <summary>SINUSOIDAL EASE IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.SinusoidalEaseInOut(System.Single,System.Single@)">
            <summary>SINUSOIDAL EASE IN/OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.SinusoidalEaseOut(System.Single,System.Single@)">
            <summary>SINUSOIDAL EASE OUT</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Tweener._Operations_.SinusoidalEaseOutIn(System.Single,System.Single@)">
            <summary>SINUSOIDAL EASE OUT/IN</summary>
            <param name="X_In">Value in the range [0..1]</param>
            <param name="Output_Out">Shaped value</param>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.Distance``2(``0,``0,System.Single@)">
            <summary>Absolute distance between two values. Use the faster DistanceSquared if you only need to compare relative distances</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.DistanceSquared``2(``0,``0,System.Single@)">
            <summary>Squared distance between two values, can be used to comapre distances when the absolute value is not required</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.SubtractCyclic``2(``0,``0,``0@)">
            <tags>-</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.EqualsCyclic``2(``0,``0,``0,System.Boolean@)">
            <tags>=</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.Morph``2(System.Single,VL.Lib.Collections.Spread{``0},``0@)">
            <summary>Linearly interpolates between multiple input values</summary>
            <tags>lerp,interpolate,blend,inputmorph</tags>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.OneOver``2(``0,``0@)">
            <summary>Shortcut for 1/x</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.OneMinus``2(``0,``0@)">
            <summary>Shortcut for 1-x</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.ByHalf``2(``0,``0@)">
            <summary>Shortcut for x*0.5</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.ByTwo``2(``0,``0@)">
            <summary>Shortcut for x*2</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.ByMinusHalf``2(``0,``0@)">
            <summary>Shortcut for x*(-0.5)</summary>
        </member>
        <member name="M:_CoreLibBasics_.Math.Generic._Operations_.ByMinusTwo``2(``0,``0@)">
            <summary>Shortcut for x*(-2)</summary>
        </member>
        <member name="T:_CoreLibBasics_.Primitive.S_DbIZQr8DVl4NNDZ5CsrBdw">
            <tags>send</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.ManageProcess_KbnPKKIL8zRNfOzhFqxVxr.Update(VL.Core.PublicAPI.ICustomRegion,System.Boolean,VL.Lib.Primitive.ProcessLifespan,System.Boolean)">
            <param name="Enabled_In">Update the patch</param>
            <param name="Lifespan_In">Short lifespan means that the patch instance only lives as long as Enabled = true. Long lifespan means the patch instance is always alive.</param>
            <param name="Reset_In">Create a new instance of the patch</param>
        </member>
        <member name="T:_CoreLibBasics_.Primitive.S_ObjectChannel_CSK6ER2QaAeMsaOxOtI2cY">
            <tags>send</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive._Operations_.R``1(VL.Core.NodeContext,System.String,``0,System.Boolean,``0@,System.Boolean@)">
            <tags>receive</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive._Operations_.R_ObjectChannel``1(VL.Core.NodeContext,System.Object,``0,System.Boolean,``0@,System.Boolean@)">
            <tags>receive</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.AND(System.Boolean,System.Boolean,System.Boolean@)">
            <tags>&amp;&amp;</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.NOT(System.Boolean,System.Boolean@)">
            <tags>!</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.OR(System.Boolean,System.Boolean,System.Boolean@)">
            <tags>||</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToFloat32(System.Boolean,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToInt32(System.Boolean,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.XOR(System.Boolean,System.Boolean,System.Boolean@)">
            <tags>^</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToByte(System.Boolean,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToChar(System.Boolean,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToFloat64(System.Boolean,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToInt16(System.Boolean,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToInt64(System.Boolean,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToInt8(System.Boolean,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToUInt16(System.Boolean,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToUInt32(System.Boolean,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.ToUInt64(System.Boolean,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.NAND(System.Boolean,System.Boolean,System.Boolean@)">
            <tags>NotBoth</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.NOR(System.Boolean,System.Boolean,System.Boolean@)">
            <tags>Neither</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Boolean._Operations_.XNOR(System.Boolean,System.Boolean,System.Boolean@)">
            <tags>Equality</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.Pow(System.Single,System.Single,System.Single@)">
            <tags>gamma,power</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.Random(System.Single,System.Single,System.Single@)">
            <summary>Returns a random number between 0.0 and 1.0.</summary>
            <param name="Output_Out">A random number between 0.0 and 1.0.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToFloat32(System.Single,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToInt32(System.Single,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ZMOD(System.Single,System.Single,System.Single@)">
            <summary>
            Modulo operator with the property, that the remainder of a division z / d
                        and z &lt; 0 is positive. For example: zmod(-2, 30) = 28.
            </summary>
            <param name="Output_Out">Remainder of division z / d.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.OperatorDivide_Integer(System.Single,System.Single,System.Single@)">
            <summary>Direct version to divide integers into a factional number. Use DIV or DIVMOD to get an Integer result.</summary>
            <remarks>Same as / [Float32] but doesn&apos;t get consumend by the Adaptive category in the Nodebrowser.</remarks>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single@)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="Value_1_In">The first position in the interpolation.</param>
            <param name="Value_2_In">The second position in the interpolation.</param>
            <param name="Value_3_In">The third position in the interpolation.</param>
            <param name="Value_4_In">The fourth position in the interpolation.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">The result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToByte(System.Single,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToChar(System.Single,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToFloat64(System.Single,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToInt16(System.Single,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToInt64(System.Single,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToInt8(System.Single,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToUInt16(System.Single,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToUInt32(System.Single,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float32._Operations_.ToUInt64(System.Single,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.Dec(System.Int32,System.Int32@)">
            <summary>Decrements the input by 1</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.DIVMOD(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <tags>/</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.Inc(System.Int32,System.Int32@)">
            <summary>Increments the input by 1</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToFloat32(System.Int32,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToInt32(System.Int32,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToString_Binary(System.Int32,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToString_Hex(System.Int32,System.Boolean,System.String@)">
            <summary>Gets the hex representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.TryParse_Binary(System.String,System.Boolean@,System.Int32@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ZMOD(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Modulo operator with the property, that the remainder of a division z / d
                        and z &lt; 0 is positive. For example: zmod(-2, 30) = 28.
            </summary>
            <param name="Output_Out">Remainder of division z / d.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.OperatorBitwiseAnd(System.Int32,System.Int32,System.Int32@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.OperatorBitwiseExclusiveOr(System.Int32,System.Int32,System.Int32@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.OperatorBitwiseOr(System.Int32,System.Int32,System.Int32@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.OperatorBitwiseNegate(System.Int32,System.Int32@)">
            <summary>Bitwise negation</summary>
            <tags>NOT</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToByte(System.Int32,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToChar(System.Int32,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToInt16(System.Int32,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToInt64(System.Int32,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToInt8(System.Int32,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToUInt16(System.Int32,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToUInt32(System.Int32,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.BitsToUInt64(System.Int32,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToByte(System.Int32,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToChar(System.Int32,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToFloat64(System.Int32,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToInt16(System.Int32,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToInt64(System.Int32,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToInt8(System.Int32,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToUInt16(System.Int32,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToUInt32(System.Int32,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32._Operations_.ToUInt64(System.Int32,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Join(System.String,System.Collections.Generic.IEnumerable{System.String},System.String@)">
            <tags>+,spectral</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Replace(System.String,System.String,System.String,System.String@)">
            <tags>substitute</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Replace_Char(System.String,System.Char,System.Char,System.String@)">
            <tags>substitute</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Split_Count(System.String,System.Int32,VL.Lib.Collections.Spread{System.String}@)">
            <summary>Splits a string into a spread of strings with the given count of letters each</summary>
            <tags>separate</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Split_String(System.String,System.String,System.StringSplitOptions,VL.Lib.Collections.Spread{System.String}@)">
            <summary>Splits a string into a spread of strings based on the given separator</summary>
            <tags>separate</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Split_Strings``1(System.String,``0,System.StringSplitOptions,VL.Lib.Collections.Spread{System.String}@)">
            <summary>Splits a string into a spread of strings based on the given separators</summary>
            <tags>separate</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.SurroundWith(System.String,System.String,System.String@)">
            <summary>Adds the given quote string at the beginning and end of the string</summary>
            <tags>quote</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.SurroundWith_Char(System.String,System.Char,System.String@)">
            <summary>Adds the given quote char at the beginning and end of the string</summary>
            <tags>quote</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.ToLower(System.String,System.String@)">
            <tags>case,caps</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.ToUpper(System.String,System.String@)">
            <tags>case,caps</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Trim(System.String,System.String@)">
            <tags>clean</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.SplitToLines(System.String,System.Boolean,VL.Lib.Collections.Spread{System.String}@)">
            <summary>Splits a string into lines at any of the following line-endings: CR, LF, CRLF</summary>
            <tags>separate</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.TryParse(System.String,System.String@,System.Boolean@)">
            <summary>Parses a string into a numeric type</summary>
            <remarks>e.g: &quot;42&quot; would return 42</remarks>
            <tags>asvalue</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.ToBytes(System.String,VL.Lib.Text.Encodings,System.Byte[]@)">
            <tags>getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Trim_Char__(System.String,System.Char[],System.String@)">
            <tags>clean</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.TrimEnd(System.String,System.Char[],System.String@)">
            <tags>clean</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.TrimStart(System.String,System.Char[],System.String@)">
            <tags>clean</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.FromCharArray(System.Char[],System.String@)">
            <tags>tostring</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.FromCharArray_Length(System.Char[],System.Int32,System.Int32,System.String@)">
            <tags>tostring</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.FromBytes_Base64(System.Collections.Generic.IEnumerable{System.Byte},System.String@)">
            <tags>encode</tags>
            <param name="Result_Out">The string representation, in base 64, of the contents of the input</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.ToBytes_Base64(System.String,System.Byte[]@)">
            <tags>decode</tags>
            <param name="Result_Out">An array of 8-bit unsigned integers that is equivalent to the input</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.FromBytes(System.Collections.Generic.IEnumerable{System.Byte},VL.Lib.Text.Encodings,System.String@)">
            <tags>getstring</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Clean(VL.Lib.Collections.Spread{System.String},VL.Lib.Collections.Spread{System.String}@)">
            <summary>Removes slices with empty strings</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.CR(System.String@)">
            <tags>carriagereturn,13</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.CRLF(System.String@)">
            <tags>carriagereturn,linefeed,13,10</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.LF(System.String@)">
            <tags>linefeed,10</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.Tab(System.String@)">
            <tags>9</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.String._Operations_.HtmlAttributeEncode(System.String,System.String@)">
            <remarks>Converts only quotation marks, ampersands and left angle brackets to equivalent character entities. It is considerably faster than HtmlEncode</remarks>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.OperatorNullCoalescing``1(``0,``0,``0@)">
            <summary>The ?? operator is called the null-coalescing operator. It returns the left-hand operand if the operand is not null; otherwise it returns the right hand operand</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.OperatorEquals(System.Object,System.Object,System.Boolean@)">
            <summary>Calls the virtual Equals method on the input value</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.CastAs``1(System.Object,``0,``0@,System.Boolean@)">
            <summary>Casts the input value to the downstream connected type. In case the cast fails the provided default value will be used and the success output will return false</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.HardCast``1(System.Object,``0@)">
            <summary>Casts the input value to the downstream connected type. Will throw a InvalidCastException if the cast fails</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.Identity``1(``0,``0@)">
            <summary>Returns the input value</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.IsAssigned(System.Object,System.Boolean@,System.Boolean@)">
            <summary>Whether or not the value is null</summary>
            <tags>null,nil</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.ToString(System.Object,System.String@)">
            <summary>Calls the virtual ToString method on the input value</summary>
            <tags>asstring</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.AsObject``1(``0,System.Object@)">
            <summary>Helps in terms of getting your patch generic.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Object._Operations_.CastAs_Generic``2(``0,``1,``1@,System.Boolean@)">
            <summary>Casts the input value to the downstream connected type. In case the cast fails the provided default value will be used and the success output will return false</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.OperatorBitwiseAnd(System.Byte,System.Byte,System.Byte@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.OperatorBitwiseExclusiveOr(System.Byte,System.Byte,System.Byte@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.OperatorBitwiseOr(System.Byte,System.Byte,System.Byte@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.OperatorBitwiseNegate(System.Byte,System.Byte@)">
            <summary>Bitwise negation</summary>
            <tags>not</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToChar(System.Byte,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToInt16(System.Byte,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToInt32(System.Byte,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToInt64(System.Byte,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToInt8(System.Byte,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToUInt16(System.Byte,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToUInt32(System.Byte,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.BitsToUInt64(System.Byte,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToByte(System.Byte,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToChar(System.Byte,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToFloat32(System.Byte,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToFloat64(System.Byte,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToInt16(System.Byte,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToInt32(System.Byte,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToInt64(System.Byte,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToInt8(System.Byte,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToString_Binary(System.Byte,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToUInt16(System.Byte,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToUInt32(System.Byte,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.ToUInt64(System.Byte,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.TryParse_Binary(System.String,System.Boolean@,System.Byte@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Byte._Operations_.TryParse_Hex(System.String,System.Boolean@,System.Byte@)">
            <summary>Parses a hex string to an integer</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToByte(System.Char,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToInt16(System.Char,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToInt32(System.Char,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToInt64(System.Char,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToInt8(System.Char,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToUInt16(System.Char,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToUInt32(System.Char,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.BitsToUInt64(System.Char,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToByte(System.Char,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToChar(System.Char,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToFloat32(System.Char,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToFloat64(System.Char,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToInt16(System.Char,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToInt32(System.Char,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToInt64(System.Char,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToInt8(System.Char,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToString_Binary(System.Char,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToString_Hex(System.Char,System.Boolean,System.String@)">
            <summary>Gets the hex representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToUInt16(System.Char,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToUInt32(System.Char,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.ToUInt64(System.Char,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.TryParse_Binary(System.String,System.Boolean@,System.Char@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Char._Operations_.TryParse_Hex(System.String,System.Boolean@,System.Char@)">
            <summary>Parses a hex string to a char</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.CatmullRom(System.Double,System.Double,System.Double,System.Double,System.Single,System.Double@)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="Value_1_In">The first position in the interpolation.</param>
            <param name="Value_2_In">The second position in the interpolation.</param>
            <param name="Value_3_In">The third position in the interpolation.</param>
            <param name="Value_4_In">The fourth position in the interpolation.</param>
            <param name="Amount_In">Weighting factor.</param>
            <param name="Output_Out">The result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.Pow(System.Double,System.Double,System.Double@)">
            <tags>gamma,power</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToByte(System.Double,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToChar(System.Double,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToExactString(System.Double,System.String@)">
            <summary>
            Converts the given double to a string representation of its
                        exact decimal value.
            </summary>
            <param name="Input_In">The double to convert.</param>
            <param name="Result_Out">A string representation of the double&apos;s exact decimal value.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToFloat32(System.Double,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToFloat64(System.Double,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToInt16(System.Double,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToInt32(System.Double,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToInt64(System.Double,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToInt8(System.Double,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToUInt16(System.Double,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToUInt32(System.Double,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ToUInt64(System.Double,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.ZMOD(System.Double,System.Double,System.Double@)">
            <summary>
            Modulo operator with the property, that the remainder of a division z / d
                        and z &lt; 0 is positive. For example: zmod(-2, 30) = 28.
            </summary>
            <param name="Output_Out">Remainder of division z / d.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Float64._Operations_.OperatorDivide_Integer64(System.Double,System.Double,System.Double@)">
            <summary>Direct version to divide 64bit integers into a 64bit factional number. Use DIV or DIVMOD to get an Integer result.</summary>
            <remarks>Same as / [Float64] but doesn&apos;t get consumend by the Adaptive category in the Nodebrowser.</remarks>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.OperatorBitwiseAnd(System.Int16,System.Int16,System.Int16@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.OperatorBitwiseExclusiveOr(System.Int16,System.Int16,System.Int16@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.OperatorBitwiseOr(System.Int16,System.Int16,System.Int16@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.OperatorBitwiseNegate(System.Int16,System.Int16@)">
            <summary>Bitwise negation</summary>
            <tags>not</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToByte(System.Int16,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToChar(System.Int16,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToInt32(System.Int16,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToInt64(System.Int16,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToInt8(System.Int16,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToUInt16(System.Int16,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToUInt32(System.Int16,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.BitsToUInt64(System.Int16,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToByte(System.Int16,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToChar(System.Int16,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToFloat32(System.Int16,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToFloat64(System.Int16,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToInt16(System.Int16,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToInt32(System.Int16,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToInt64(System.Int16,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToInt8(System.Int16,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToString_Binary(System.Int16,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToString_Hex(System.Int16,System.Boolean,System.String@)">
            <summary>Gets the hex representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToUInt16(System.Int16,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToUInt32(System.Int16,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.ToUInt64(System.Int16,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.TryParse_Binary(System.String,System.Boolean@,System.Int16@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16._Operations_.TryParse_Hex(System.String,System.Boolean@,System.Int16@)">
            <summary>Parses a hex string to an integer</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.OperatorBitwiseAnd(System.UInt16,System.UInt16,System.UInt16@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.OperatorBitwiseExclusiveOr(System.UInt16,System.UInt16,System.UInt16@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.OperatorBitwiseOr(System.UInt16,System.UInt16,System.UInt16@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.OperatorBitwiseNegate(System.UInt16,System.UInt16@)">
            <summary>Bitwise negation</summary>
            <tags>not</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToByte(System.UInt16,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToChar(System.UInt16,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToInt16(System.UInt16,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToInt32(System.UInt16,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToInt64(System.UInt16,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToInt8(System.UInt16,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToUInt32(System.UInt16,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.BitsToUInt64(System.UInt16,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToByte(System.UInt16,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToChar(System.UInt16,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToFloat32(System.UInt16,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToFloat64(System.UInt16,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToInt16(System.UInt16,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToInt32(System.UInt16,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToInt64(System.UInt16,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToInt8(System.UInt16,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToString_Binary(System.UInt16,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToString_Hex(System.UInt16,System.Boolean,System.String@)">
            <summary>Gets the hex representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToUInt16(System.UInt16,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToUInt32(System.UInt16,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.ToUInt64(System.UInt16,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.TryParse_Binary(System.String,System.Boolean@,System.UInt16@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer16_Unsigned._Operations_.TryParse_Hex(System.String,System.Boolean@,System.UInt16@)">
            <summary>Parses a hex string to an integer</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.OperatorBitwiseAnd(System.UInt32,System.UInt32,System.UInt32@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.OperatorBitwiseExclusiveOr(System.UInt32,System.UInt32,System.UInt32@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.OperatorBitwiseOr(System.UInt32,System.UInt32,System.UInt32@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.OperatorBitwiseNegate(System.UInt32,System.UInt32@)">
            <summary>Bitwise negation</summary>
            <tags>NOT</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToByte(System.UInt32,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToChar(System.UInt32,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToInt16(System.UInt32,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToInt32(System.UInt32,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToInt64(System.UInt32,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToInt8(System.UInt32,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToUInt16(System.UInt32,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.BitsToUInt64(System.UInt32,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToByte(System.UInt32,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToChar(System.UInt32,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToFloat32(System.UInt32,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToFloat64(System.UInt32,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToInt16(System.UInt32,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToInt32(System.UInt32,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToInt64(System.UInt32,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToInt8(System.UInt32,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToString_Binary(System.UInt32,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToString_Hex(System.UInt32,System.Boolean,System.String@)">
            <summary>Gets the hex representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToUInt16(System.UInt32,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToUInt32(System.UInt32,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.ToUInt64(System.UInt32,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.TryParse_Binary(System.String,System.Boolean@,System.UInt32@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer32_Unsigned._Operations_.TryParse_Hex(System.String,System.Boolean@,System.UInt32@)">
            <summary>Parses a hex string to an integer</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.OperatorBitwiseAnd(System.Int64,System.Int64,System.Int64@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.OperatorBitwiseExclusiveOr(System.Int64,System.Int64,System.Int64@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.OperatorBitwiseOr(System.Int64,System.Int64,System.Int64@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.OperatorBitwiseNegate(System.Int64,System.Int64@)">
            <summary>Bitwise NOT</summary>
            <tags>not</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToByte(System.Int64,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToChar(System.Int64,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToInt16(System.Int64,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToInt32(System.Int64,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToInt8(System.Int64,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToUInt16(System.Int64,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToUInt32(System.Int64,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.BitsToUInt64(System.Int64,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.Dec(System.Int64,System.Int64@)">
            <summary>Decrements the input by 1</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.DIVMOD(System.Int64,System.Int64,System.Int64@,System.Int64@)">
            <tags>/</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.Inc(System.Int64,System.Int64@)">
            <summary>Increments the input by 1</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToByte(System.Int64,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToChar(System.Int64,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToFloat32(System.Int64,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToFloat64(System.Int64,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToInt16(System.Int64,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToInt32(System.Int64,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToInt64(System.Int64,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToInt8(System.Int64,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToString_Binary(System.Int64,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToString_Hex(System.Int64,System.Boolean,System.String@)">
            <summary>Gets the hex representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToUInt16(System.Int64,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToUInt32(System.Int64,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ToUInt64(System.Int64,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.TryParse_Binary(System.String,System.Boolean@,System.Int64@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.TryParse_Hex(System.String,System.Boolean@,System.Int64@)">
            <summary>Parses a hex string to an integer</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64._Operations_.ZMOD(System.Int64,System.Int64,System.Int64@)">
            <summary>
            Modulo operator with the property, that the remainder of a division z / d
                        and z &lt; 0 is positive. For example: zmod(-2, 30) = 28.
            </summary>
            <param name="Output_Out">Remainder of division z / d.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.OperatorBitwiseAnd(System.UInt64,System.UInt64,System.UInt64@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.OperatorBitwiseExclusiveOr(System.UInt64,System.UInt64,System.UInt64@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.OperatorBitwiseOr(System.UInt64,System.UInt64,System.UInt64@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.OperatorBitwiseNegate(System.UInt64,System.UInt64@)">
            <summary>Bitwise negation</summary>
            <tags>not</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToByte(System.UInt64,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToChar(System.UInt64,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToInt16(System.UInt64,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToInt32(System.UInt64,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToInt64(System.UInt64,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToInt8(System.UInt64,System.SByte@)">
            <summary>Unchecked bitwise copy to Integer8.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToUInt16(System.UInt64,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.BitsToUInt32(System.UInt64,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToByte(System.UInt64,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToChar(System.UInt64,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToFloat32(System.UInt64,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToFloat64(System.UInt64,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToInt16(System.UInt64,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToInt32(System.UInt64,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToInt64(System.UInt64,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToInt8(System.UInt64,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToString_Binary(System.UInt64,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToString_Hex(System.UInt64,System.Boolean,System.String@)">
            <summary>Gets the hex representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToUInt16(System.UInt64,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToUInt32(System.UInt64,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.ToUInt64(System.UInt64,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.TryParse_Binary(System.String,System.Boolean@,System.UInt64@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer64_Unsigned._Operations_.TryParse_Hex(System.String,System.Boolean@,System.UInt64@)">
            <summary>Parses a hex string to an integer</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.OperatorBitwiseAnd(System.SByte,System.SByte,System.SByte@)">
            <summary>Bitwise AND</summary>
            <tags>and</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.OperatorBitwiseExclusiveOr(System.SByte,System.SByte,System.SByte@)">
            <summary>Bitwise XOR</summary>
            <tags>xor</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.OperatorBitwiseOr(System.SByte,System.SByte,System.SByte@)">
            <summary>Bitwise OR</summary>
            <tags>or</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.OperatorBitwiseNegate(System.SByte,System.SByte@)">
            <summary>Bitwise negation</summary>
            <tags>not</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToByte(System.SByte,System.Byte@)">
            <summary>Unchecked bitwise copy to Byte.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToChar(System.SByte,System.Char@)">
            <summary>Unchecked bitwise copy to Char.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToInt16(System.SByte,System.Int16@)">
            <summary>Unchecked bitwise copy to Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToInt32(System.SByte,System.Int32@)">
            <summary>Unchecked bitwise copy to Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToInt64(System.SByte,System.Int64@)">
            <summary>Unchecked bitwise copy to Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToUInt16(System.SByte,System.UInt16@)">
            <summary>Unchecked bitwise copy to unsigned Integer16.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToUInt32(System.SByte,System.UInt32@)">
            <summary>Unchecked bitwise copy to unsigned Integer32.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.BitsToUInt64(System.SByte,System.UInt64@)">
            <summary>Unchecked bitwise copy to unsigned Integer64.</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToByte(System.SByte,System.Byte@)">
            <summary>
            Range checked value conversion to Byte.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToChar(System.SByte,System.Char@)">
            <summary>
            Range checked value conversion to Char.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToFloat32(System.SByte,System.Single@)">
            <summary>
            Range checked value conversion to Float32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToFloat64(System.SByte,System.Double@)">
            <summary>
            Range checked value conversion to Float64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToInt16(System.SByte,System.Int16@)">
            <summary>
            Range checked value conversion to Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToInt32(System.SByte,System.Int32@)">
            <summary>
            Range checked value conversion to Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToInt64(System.SByte,System.Int64@)">
            <summary>
            Range checked value conversion to Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToInt8(System.SByte,System.SByte@)">
            <summary>
            Range checked value conversion to Integer8.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToString_Binary(System.SByte,System.Boolean,System.String@)">
            <summary>Gets a binary representation as a string</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToUInt16(System.SByte,System.UInt16@)">
            <summary>
            Range checked value conversion to unsigned Integer16.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToUInt32(System.SByte,System.UInt32@)">
            <summary>
            Range checked value conversion to unsigned Integer32.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.ToUInt64(System.SByte,System.UInt64@)">
            <summary>
            Range checked value conversion to unsigned Integer64.
                        Throws an overflow exception if the value does not fit into the target type.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.TryParse_Binary(System.String,System.Boolean@,System.SByte@)">
            <summary>Parses a binary string to an integer, note that leading &apos;0x&apos; is not allowed</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Integer8._Operations_.TryParse_Hex(System.String,System.Boolean@,System.SByte@)">
            <summary>Parses a hex string to an integer</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Tuple__8_Items._Operations_.Tuple_Create``8(``0,``1,``2,``3,``4,``5,``6,``7,System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7}@)">
            <param name="Rest_In">The tuple&apos;s eighth component or any generic object that contains values of the tuple&apos;s remaining components.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Tuple__8_Items._Operations_.Rest``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7},``7@)">
            <param name="Rest_Out">Gets the current System.Tuple`8 the tuple&apos;s eighth component or any generic object that contains values of the tuple&apos;s remaining components.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Tuple__8_Items._Operations_.Tuple_Split``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
            <summary>Splits the specified 8 item tuple.</summary>
            <param name="Input_In">The input.</param>
            <param name="Item_1_Out">The item1.</param>
            <param name="Item_2_Out">The item2.</param>
            <param name="Item_3_Out">The item3.</param>
            <param name="Item_4_Out">The item4.</param>
            <param name="Item_5_Out">The item5.</param>
            <param name="Item_6_Out">The item6.</param>
            <param name="Item_7_Out">The item7.</param>
            <param name="Rest_Out">The item8 or the rest tuple.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Tuple__8_Items._Operations_.Join``8(``0,``1,``2,``3,``4,``5,``6,``7,System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7}@)">
            <param name="Rest_In">The tuple&apos;s eighth component or any generic object that contains values of the tuple&apos;s remaining components.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Tuple__8_Items._Operations_.Split``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,``7},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
            <summary>Splits the specified 8 item tuple.</summary>
            <param name="Input_In">The input.</param>
            <param name="Item_1_Out">The item1.</param>
            <param name="Item_2_Out">The item2.</param>
            <param name="Item_3_Out">The item3.</param>
            <param name="Item_4_Out">The item4.</param>
            <param name="Item_5_Out">The item5.</param>
            <param name="Item_6_Out">The item6.</param>
            <param name="Item_7_Out">The item7.</param>
            <param name="Rest_Out">The item8 or the rest tuple.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.TypeHelpers._Operations_.IsInteger``1(``0,System.Boolean@)">
            <summary>Checks whether the input is an integer type</summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.TypeHelpers._Operations_.TypeOf``1(``0,System.Type@)">
            <summary>Returns the Type Object for the type that got inferred at compile time in order to do some tricks at runtime.</summary>
            <param name="Input_In">The object flowing at runtime is irrelevant and thus can be NULL. Use type annotations in order to set the type. If you actually have an object at runtime use the GetType node instead.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.DynamicEnum._Operations_.CreateValue(VL.Lib.Collections.IDynamicEnum,System.String,VL.Lib.Collections.IDynamicEnum@)">
            <summary>Creates a new enum value with the same type as the input instance</summary>
            <param name="Input_In">Creates a new enum value with the same type as the input instance</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.DynamicEnum._Operations_.IsValid(VL.Lib.Collections.IDynamicEnum,System.Boolean@)">
            <summary>Returns true if the value is in the current entry list of the definition.</summary>
            <param name="Result_Out">
            true if the specified input is valid, not null and its value is not a null or empty string; otherwise, false.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.DynamicEnum._Operations_.Index(VL.Lib.Collections.IDynamicEnum,System.Int32@)">
            <summary>
            Gets the index of the selected item in the entries list of its definition.
                        Can return -1 if the string is not in the current list of entries.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.DynamicEnum._Operations_.TrySelectIndex``1(``0,System.Int32,System.Boolean@,``0@)">
            <summary>
            Sets the selected item to the value at the index in the entries list of its definition.
                        If the index is out of range, returns false and the input value.
            </summary>
            <tags>ord2enum</tags>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.IDisposable._Operations_.TryDispose(System.Object,System.Boolean@)">
            <summary>
            Tries to cast the input to IEnumerable or IDisposable, and then either tries to dispose all elements or the input itself.
                        Does not catch exceptions.
            </summary>
            <param name="Success_Out">Set to true if Dispose was called successfully on all elements or the input instance.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.IDisposable._Operations_.TryDispose_Sequence(System.Collections.ICollection,System.Boolean@)">
            <summary>
            Tries to cast the elements in the input to IDisposable and then calls Dispose on each element.
                        Does not catch exceptions.
            </summary>
            <param name="Success_Out">Set to true if Dispose was called successfully on all elements.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.IDisposable._Operations_.TryDispose_Instance(System.Object,System.Boolean@)">
            <summary>
            Tries to cast the input to IDisposable and then calls Dispose.
                        Does not catch exceptions.
            </summary>
            <param name="Success_Out">Set to true if input is a IDisposable and Dispose was called successfully.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.IntPtr._Operations_.ToImage(System.IntPtr,System.Int32,System.Int32,System.Int32,VL.Lib.Basics.Imaging.PixelFormat,System.String,VL.Lib.Basics.Imaging.IntPtrImage@)">
            <summary>
            Makes the pointer accessible as an image. No data gets copied. The returned image is volatile and should get disposed of.
                        Once disposed further access to VL.Lib.Basics.Imaging.IImage.GetData will return the image data from the default image.
            </summary>
            <param name="Input_In">The pointer to the data of the image.</param>
            <param name="Size_In">The size in bytes of the image data.</param>
            <param name="Width_In">The width in pixel.</param>
            <param name="Height_In">The height in pixel.</param>
            <param name="Format_In">The pixel format.</param>
            <param name="Original_Format_In">An optional hint at the original pixel format.</param>
            <param name="Result_Out">A volatile image using the pointer as its backing store.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Int4_Join(System.Int32,System.Int32,System.Int32,System.Int32,Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="W_In">Initial value for the W component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Int4_Join_SingleValue(System.Int32,Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="Value_In">Initial value for the X component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Int4_Create(System.Int32,System.Int32,System.Int32,System.Int32,Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="W_In">Initial value for the W component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Int4_Create_Integer32(System.Int32,Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Create(VL.Core.NodeContext,System.Int32,Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Create(VL.Core.NodeContext,System.Int32[],Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="Values_In">The values to assign to the X, Y, Z, and W components of the vector. This must be an array with four elements.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Create(VL.Core.NodeContext,System.Int32,System.Int32,System.Int32,System.Int32,Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="W_In">Initial value for the W component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.FromValues(System.Collections.Generic.IEnumerable{System.Int32},Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int4._Operations_.Int4_Create_Vector4(Stride.Core.Mathematics.Vector4,Stride.Core.Mathematics.Int4@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</summary>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int4 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Int2_Join(System.Int32,System.Int32,Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Int2_Create(System.Int32,System.Int32,Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Int2_Create_Integer32(System.Int32,Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Create(VL.Core.NodeContext,System.Int32,Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Create(VL.Core.NodeContext,Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="Value_In">A vector containing the values with which to initialize the X and Y components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Create(VL.Core.NodeContext,System.Int32,System.Int32,Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Create(VL.Core.NodeContext,System.Int32[],Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="Values_In">The values to assign to the X, Y, and Z components of the vector. This must be an array with three elements.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.Int2_Create_Vector2(Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="Value_In">A vector containing the values with which to initialize the X and Y components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int2._Operations_.FromValues(System.Collections.Generic.IEnumerable{System.Int32},Stride.Core.Mathematics.Int2@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</summary>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int2 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Int3_Join(System.Int32,System.Int32,System.Int32,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Int3_Join_SingleValue(System.Int32,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="Value_In">Initial value for the X component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Int3_Create(System.Int32,System.Int32,System.Int32,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Int3_Create_Integer32(System.Int32,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Create(VL.Core.NodeContext,System.Int32,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="Value_In">The value that will be assigned to all components.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Create(VL.Core.NodeContext,System.Int32[],Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="Values_In">The values to assign to the X, Y, and Z components of the vector. This must be an array with three elements.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Create(VL.Core.NodeContext,Stride.Core.Mathematics.Vector2,System.Int32,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="Value_In">A vector containing the values with which to initialize the X and Y components.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Create(VL.Core.NodeContext,System.Int32,System.Int32,System.Int32,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="X_In">Initial value for the X component of the vector.</param>
            <param name="Y_In">Initial value for the Y component of the vector.</param>
            <param name="Z_In">Initial value for the Z component of the vector.</param>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.Int3_Create_Vector3(Stride.Core.Mathematics.Vector3,Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="M:_CoreLibBasics_.Primitive.Int3._Operations_.FromValues(System.Collections.Generic.IEnumerable{System.Int32},Stride.Core.Mathematics.Int3@)">
            <summary>Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</summary>
            <param name="Output_Out">Initializes a new instance of the Stride.Core.Mathematics.Int3 struct.</param>
        </member>
        <member name="T:_CoreLibBasics_.System.Executor_C">
            <summary>Runs the specified program with the given arguments.</summary>
            <tags>shellexecute,process,start,run,cmd</tags>
        </member>
        <member name="T:_CoreLibBasics_.System.Batteries_FZRgLMgjTgONmPe4AEI6VT">
            <summary>Returns the battery status of all batteries found on this PC.</summary>
        </member>
        <member name="T:_CoreLibBasics_.System.ProcessPriority_Om29IyNNEW3QBPyy2uEaA4">
            <summary>Sets the priority category for this process</summary>
            <tags>boost</tags>
        </member>
        <member name="T:_CoreLibBasics_.System.Args_QEqKexpSae8Mqs7i7Sb5lQ">
            <summary>Returns the commandline arguments the application was started with.</summary>
        </member>
        <member name="T:_CoreLibBasics_.System.PID_CKpG02gTiMsOdqAuhIGdRa">
            <summary>Returns the process IDs of a given process name</summary>
        </member>
        <member name="T:_CoreLibBasics_.System.Shutdown_K8aZwgUHHTQMtVbHOFiDAk">
            <summary>Shutdown or restart the system</summary>
        </member>
        <member name="T:_CoreLibBasics_.System.KeepAppAlive_ALmRIRzkDPiPMzCiYxAe4z">
            <summary>Controls the lifetime of an exported console application</summary>
            <tags>console</tags>
        </member>
        <member name="M:_CoreLibBasics_.System._Operations_.Kill(System.Int32,System.Boolean)">
            <summary>Kills the process with the given ID</summary>
        </member>
        <member name="M:_CoreLibBasics_.System.DateTime._Operations_.Create_Year_Month_Day_Hour_Minute_Second_Kind(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind,System.DateTime@)">
            <tags>gregorian</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.DateTime._Operations_.Create_Year_Month_Day_Hour_Minute_Second_Millisecond_Kind(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind,System.DateTime@)">
            <tags>gregorian</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.DateTime._Operations_.Subtract(System.DateTime,System.TimeSpan,System.DateTime@)">
            <tags>-,minus</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.DateTime._Operations_.UtcNow(System.DateTime@)">
            <summary>Checks the computers main-board clock when it&apos;s called and returns the UTC time.</summary>
            <remarks>Can return different values when used multiple times in the same frame. Low resolution (several milliseconds) and not sync-locked with the CPU. Use it for tasks like displaying time of day, generating file names etc. For high-resolution time measurement use the CurrentTime node.</remarks>
            <tags>current,time</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.DateTime._Operations_.Split(System.DateTime,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.DayOfWeek@,System.Boolean@,System.DateTimeKind@)">
            <summary>Returns all properties of a date time as indivisual values.</summary>
            <tags>gregorian</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.DateTime._Operations_.Now(System.DateTime@)">
            <summary>Checks the computers main-board clock when it&apos;s called.</summary>
            <remarks>Can return different values when used multiple times in the same frame. Low resolution (several milliseconds) and not sync-locked with the CPU. Use it for tasks like displaying time of day, generating file names etc. For high-resolution time measurement use the CurrentTime node.</remarks>
            <tags>current,time</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.Management.ManagementBaseObject._Operations_.GetPropertyValue(System.Management.ManagementBaseObject,System.String,System.Object@)">
            <summary>Gets an equivalent accessor to a property&apos;s value.</summary>
            <param name="Input_In">Gets an equivalent accessor to a property&apos;s value.</param>
            <param name="Property_Name_In">The name of the property of interest.</param>
            <param name="Result_Out">The value of the specified property.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.ToImage(System.Drawing.Bitmap,System.Boolean,System.Boolean,System.Boolean,VL.Lib.Basics.Imaging.BitmapImage@)">
            <summary>Makes the bitmap accessible as an image. No data gets copied.</summary>
            <param name="Input_In">The bitmap to wrap.</param>
            <param name="Take_Ownership_In">Whether or not the wrapper should take ownership of the bitmap. So in case it gets disposed the bitmap will also get disposed.</param>
            <param name="Is_Volatile_In">Whether or not the returned image is marked as volatile. Should be true in case the bitmap gets modified later.</param>
            <param name="Can_Write_In">Whether or not one can write into the bitmap.</param>
            <param name="Result_Out">The image wrapping the bitmap.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.ResizeAndConvert(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Drawing2D.InterpolationMode,System.Drawing.Imaging.PixelFormat,System.Boolean,System.Drawing.Bitmap@)">
            <summary>Resize and convert the Bitmap to the specified width, height and pixel format.</summary>
            <param name="Input_In">The Bitmap to resize.</param>
            <param name="Width_In">The width to resize to.</param>
            <param name="Height_In">The height to resize to.</param>
            <param name="Interpolation_Mode_In">The interpolation mode.</param>
            <param name="Pixel_Format_In">The bitmap pixel format.</param>
            <param name="Dispose_Input_Bitmap_In">If set to true disposes input bitmap after conversion.</param>
            <param name="Output_Out">
            
                        The resized and converted Bitmap.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.Resize(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Drawing2D.InterpolationMode,System.Boolean,System.Drawing.Bitmap@)">
            <summary>Resize the Bitmap to the specified width and height.</summary>
            <param name="Input_In">The Bitmap to resize.</param>
            <param name="Width_In">The width to resize to.</param>
            <param name="Height_In">The height to resize to.</param>
            <param name="Interpolation_Mode_In">The interpolation mode.</param>
            <param name="Dispose_Input_Bitmap_In">If set to true disposes input bitmap after conversion.</param>
            <param name="Output_Out">
            
                        The resized and converted Bitmap.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.Convert(System.Drawing.Bitmap,System.Drawing.Imaging.PixelFormat,System.Boolean,System.Drawing.Bitmap@)">
            <summary>Convert a Bitmap to the specified pixel format.</summary>
            <param name="Input_In">The input.</param>
            <param name="Pixel_Format_In">The target bitmap pixel format.</param>
            <param name="Dispose_Input_Bitmap_In">If set to true disposes input bitmap after conversion.</param>
            <param name="Output_Out">
            
                        The new, Bitmap with converted pixels.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.Save(System.Drawing.Bitmap,System.String,VL.Lib.BitmapFileFormat,System.Boolean,System.Boolean,System.Drawing.Bitmap@)">
            <summary>Saves a bitmap to a file on disc with specified file format. Also takes care of the file extension.</summary>
            <param name="Input_In">The input bitmap.</param>
            <param name="Filename_In">The full path.</param>
            <param name="Format_In">The image file format.</param>
            <param name="Save_In">If set to true saves the file to disc.</param>
            <param name="Dispose_Input_Bitmap_In">If set to true disposes input bitmap after save. Useful when the node is the last in a Bitmap processing chain and no other node uses it anymore.</param>
            <param name="Output_Out"> Same Bitmap instance as the input.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.Save_CustomFormat(System.Drawing.Bitmap,System.String,System.Drawing.Imaging.ImageFormat,System.Boolean,System.Boolean,System.Drawing.Bitmap@)">
            <summary>Saves a bitmap to a file on disc with specified .NET image format.</summary>
            <param name="Input_In">The input bitmap.</param>
            <param name="Filename_In">The full path.</param>
            <param name="Format_In">The image file format.</param>
            <param name="Save_In">If set to true saves the file to disc.</param>
            <param name="Dispose_Input_Bitmap_In">If set to true disposes input bitmap after save. Useful when the node is the last in a Bitmap processing chain and no other node uses it anymore.</param>
            <param name="Output_Out"> Same Bitmap instance as the input.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.Copy(System.Drawing.Bitmap,System.Boolean,System.Drawing.Bitmap@)">
            <summary>Copy the pixel data of a Bitmap into a new one. Uses the same code path as Convert and also copies the metadata PropertyItems.</summary>
            <param name="Input_In">The input.</param>
            <param name="Dispose_Input_Bitmap_In">If set to true disposes input bitmap after the copy.</param>
            <param name="Output_Out">
            
                        The new Bitmap.
            
            </param>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.Info(System.Drawing.Bitmap,System.Drawing.Bitmap@,System.Int32@,System.Int32@,System.Drawing.Imaging.PixelFormat@,System.Single@,System.Single@,System.Drawing.Imaging.ImageFormat@)">
            <summary>Gets the info properties Width, Height, PixelFormat etc. of a Bitmap</summary>
            <tags>width,height,pixelformat,resolution,format</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.Drawing.Bitmap._Operations_.FromImage(VL.Lib.Basics.Imaging.IImage,System.Boolean,System.Drawing.Bitmap@)">
            <summary>Makes the VL.Lib.Basics.Imaging.IImage accessible as a System.Drawing.Bitmap by either copying the pixels or wrapping them.</summary>
            <param name="Input_In">The image to either copy the pixels from or wrap in a System.Drawing.Bitmap.</param>
            <param name="Copy_In">Whether or not to copy the pixels.</param>
            <param name="Result_Out">The System.Drawing.Bitmap containing either the copied pixels or pointing to the upstream image data.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetBooleanBytes(System.Boolean,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetCharBytes(System.Char,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetFloat32Bytes(System.Single,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetFloat64Bytes(System.Double,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetInt16Bytes(System.Int16,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetInt32Bytes(System.Int32,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetInt64Bytes(System.Int64,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetUInt16Bytes(System.UInt16,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetUInt32Bytes(System.UInt32,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.GetUInt64Bytes(System.UInt64,System.Byte[]@)">
            <tags>tobytes,getbytes,asraw</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToBoolean(System.Byte[],System.Int32,System.Boolean@)">
            <tags>asvalue,tovalue,frombytes</tags>
            <param name="Result_Out">if the byte at Start Index in Value is nonzero; otherwise, .</param>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToChar(System.Byte[],System.Int32,System.Char@)">
            <tags>aschar,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToFloat32(System.Byte[],System.Int32,System.Single@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToFloat64(System.Byte[],System.Int32,System.Double@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToInt16(System.Byte[],System.Int32,System.Int16@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToInt32(System.Byte[],System.Int32,System.Int32@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToInt64(System.Byte[],System.Int32,System.Int64@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToUInt16(System.Byte[],System.Int32,System.UInt16@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToUInt32(System.Byte[],System.Int32,System.UInt32@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.BitsAndBytes._Operations_.ToUInt64(System.Byte[],System.Int32,System.UInt64@)">
            <tags>asvalue,tovalue,frombytes</tags>
        </member>
        <member name="T:_CoreLibBasics_.System.Resources.SerialSharing_UIpvYTsjtgNNZH3ZY2bZ3H`2">
            <summary>Share a resource that may be accessed in a serial fashion only.</summary>
        </member>
        <member name="T:_CoreLibBasics_.System.Resources.ParallelSharing_ONJ8NO2HZFJPX8VYuGab7e`2">
            <summary>Share a resource that may be accessed in parallel.</summary>
        </member>
        <member name="T:_CoreLibBasics_.System.Resources.Using_Process_MCPOIRh2AQkOT4VzsU5rcr`1">
            <summary>Grabs the resource from the provider and holds on to it as long you feed the same provider.</summary>
            <remarks>Gets rid of the resource handle when the node gets disposed of or when the resource provider changes. This might lead to a disposal of the resource itself. Therefore you shouldn&apos;t use the provided resource longer than that.</remarks>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Bind``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Func{``0,VL.Lib.Basics.Resources.IResourceProvider{``1}},VL.Lib.Basics.Resources.IResourceProvider{``1}@)">
            <summary>
            SelectMany
                        Create a ResourceProvider per source resource. Creating any provider will work.
                        Takes into account that the resulting resources may depend on the source resources.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.BindNew``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Func{``0,``1},VL.Lib.Basics.Resources.IResourceProvider{``1}@)">
            <summary>
            Provides a new resource for every sink, asking for a source resource every time a sink resource is demanded. No resources are shared hereby.
                        The user provided resource will get managed.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.BindNew_Four``5(VL.Lib.Basics.Resources.IResourceProvider{``0},VL.Lib.Basics.Resources.IResourceProvider{``1},VL.Lib.Basics.Resources.IResourceProvider{``2},VL.Lib.Basics.Resources.IResourceProvider{``3},System.Func{``0,``1,``2,``3,``4},VL.Lib.Basics.Resources.IResourceProvider{``4}@)">
            <summary>
            Create a new resource using four source resources.
                        Takes ownership of the new resource in the resulting provider.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.BindNew_Three``4(VL.Lib.Basics.Resources.IResourceProvider{``0},VL.Lib.Basics.Resources.IResourceProvider{``1},VL.Lib.Basics.Resources.IResourceProvider{``2},System.Func{``0,``1,``2,``3},VL.Lib.Basics.Resources.IResourceProvider{``3}@)">
            <summary>
            Create a new resource using three source resources.
                        Takes ownership of the new resource in the resulting provider.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Do``1(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Action{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>Applies an action on a resource and outputs the same resource again.</summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.New``1(System.Func{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Manages the lifetime of a resource.
                        Every consumer will get its own handle asking the factory for a new resource.
                        Disposing a handle will dispose the handle&apos;s resource.
                        difference to proto: GetHandle() is not lazy, but will create the resource.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.New_BeforeDispose``1(System.Func{``0},System.Action{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Manages the lifetime of a resource.
                        Every consumer will get its own handle asking the factory for a new resource.
                        Disposing a handle will dispose the handle&apos;s resource.
                        difference to proto: GetHandle() is not lazy, but will create the resource.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.NewPooled``2(``0,System.Func{``0,``1},System.Int32,VL.Lib.Basics.Resources.IResourceProvider{``1}@)">
            <summary>
            Manages the lifetime of a resource from a pool. Same key will return a handle to the exact same resource.
                        First registered factory method wins, but will be removed on disposal of the pooled resource.
            </summary>
            <param name="Key_In">The key for the pool and resource creation</param>
            <param name="Factory_In">Factory method to create the resource provider from the key</param>
            <param name="Delay_Disposal_In_Milliseconds_In">The disposal delay in milliseconds after the last consumer has released its resource handle</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Select``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Func{``0,``1},VL.Lib.Basics.Resources.IResourceProvider{``1}@)">
            <summary>
            Provides a resource for every sink, asking for a source resource every time a sink resource is demanded. No resources are shared hereby.
                        The user provided resource will not get managed as it may exist already. (Select(form =&gt; form.Controls[0]) should not dispose the control)
                        If you create a new resource that you want to get managed use BindNew for this.
            </summary>
            <tags>project</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Select_Four``5(VL.Lib.Basics.Resources.IResourceProvider{``0},VL.Lib.Basics.Resources.IResourceProvider{``1},VL.Lib.Basics.Resources.IResourceProvider{``2},VL.Lib.Basics.Resources.IResourceProvider{``3},System.Func{``0,``1,``2,``3,``4},VL.Lib.Basics.Resources.IResourceProvider{``4}@)">
            <summary>
            Return a resource using four source resources.
                        Does not take ownership of resource in the resulting provider.
            </summary>
            <tags>project</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Select_Three``4(VL.Lib.Basics.Resources.IResourceProvider{``0},VL.Lib.Basics.Resources.IResourceProvider{``1},VL.Lib.Basics.Resources.IResourceProvider{``2},System.Func{``0,``1,``2,``3},VL.Lib.Basics.Resources.IResourceProvider{``3}@)">
            <summary>
            Return a resource using three source resources.
                        Does not take ownership of resource in the resulting provider.
            </summary>
            <tags>project</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Select_Two``3(VL.Lib.Basics.Resources.IResourceProvider{``0},VL.Lib.Basics.Resources.IResourceProvider{``1},System.Func{``0,``1,``2},VL.Lib.Basics.Resources.IResourceProvider{``2}@)">
            <summary>
            Return a resource using two source resources.
                        Does not take ownership of resource in the resulting provider.
            </summary>
            <tags>project</tags>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Publish``1(VL.Lib.Basics.Resources.IResourceProvider{``0},VL.Lib.Basics.Resources.IConnectableResourceProvider{``0}@)">
            <summary>
            Lets you connect and disconnect manually to the source.
                        All provided handles will now get access to the same upstream resource.
                        You may disconnect and reconnect to provide access to a new upstream resource.
                        Former disposable provider Memoize
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Return``1(``0,VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Will always provide same single resource. It exists already.
                        So its not the responsibility of Return() to dispose it.
            
                        Could also imagine a ReturnLazy that takes a Func&lt;TResource&gt;,
                        but as it is used mostly inside the monade it is already lazy to GetHandle() from downstream
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.ShareInParallel``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.IObservable{``1},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Share a resource that may be accessed in parallel.
                        Make sure that the resource is not mutating while access is granted.
                        You may specify an trigger source which signals the disposal after the RefCount goes to zero.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.ShareInParallel``1(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Int32,VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Share a resource that may be accessed in parallel.
                        Make sure that the resource is not mutating while access is granted.
                        You may specify how long the resource stays valid after the RefCount goes to zero.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.SharePooled``1(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Int32,System.Action{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Share resources that may be accessed in a serial fashion only.
                        Manages a pool of resources, will provide either a resource from the pool or a new one if the pool is empty.
                        You may specify how long the resources in the pool stay valid after the RefCount goes to zero.
                        Make sure you reset the resource in a way that it feels like a fresh resource.
                        Note that even a delayDisposalInMilliseconds of 0 might lead to a reuse of a resource if several threads are accessing the pool.
                        This is why you should always provide a valid reset method. It only gets called when a resource gets actually reused.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.SharePooled``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.IObservable{``1},System.Action{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Share resources that may be accessed in a serial fashion only.
                        Manages a pool of resources, will provide either a resource from the pool or a new one if the pool is empty.
                        You may specify an trigger source which signals the disposal after the RefCount goes to zero.
                        Make sure you reset the resource in a way that it feels like a fresh resource.
                        Note that even a delayDisposalInMilliseconds of 0 might lead to a reuse of a resource if several threads are accessing the pool.
                        This is why you should always provide a valid reset method. It only gets called when a resource gets actually reused.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.ShareSerially``1(VL.Lib.Basics.Resources.IResourceProvider{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>Share a resource that may be accessed in a serial fashion only.</summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.ShareSerially``1(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Int32,System.Action{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Share a resource that may be accessed in a serial fashion only.
                        You may specify how long the resource stays valid.
                        Make sure you reset the resource in a way that it feels like a fresh resource.
                        It only gets called when a resource gets actually reused.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.ShareSerially``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.IObservable{``1},System.Action{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Share a resource that may be accessed in a serial fashion only.
                        You may specify an trigger source which signals the disposal after the RefCount goes to zero.
                        Make sure you reset the resource in a way that it feels like a fresh resource.
                        It only gets called when a resource gets actually reused.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Using``1(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Action{``0},VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Cata
                        Runs the action on the resource
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.Using_Select``2(VL.Lib.Basics.Resources.IResourceProvider{``0},System.Func{``0,``1},``1@)">
            <summary>
            Cata
                        Runs the extractor on the resource and returns the output.
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.NewPooled_Bind``2(``0,System.Func{``0,VL.Lib.Basics.Resources.IResourceProvider{``1}},System.Int32,VL.Lib.Basics.Resources.IResourceProvider{``1}@)">
            <summary>
            Manages the lifetime of a resource from a pool. Same key will return a handle to the exact same resource.
                        First registered factory method wins, but will be removed on disposal of the pooled resource.
            </summary>
            <param name="Key_In">The key for the pool and resource creation</param>
            <param name="Factory_In">Factory method to create the resource provider from the key</param>
            <param name="Delay_Disposal_In_Milliseconds_In">The disposal delay in milliseconds after the last consumer has released its resource handle</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.NewPooled_PerApp_Bind_NoKey``1(System.Func{VL.Lib.Basics.Resources.IResourceProvider{``0}},System.Int32,VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Manages the lifetime of a resource from a pool. Same key will return a handle to the exact same resource.
                        First registered factory method wins, but will be removed on disposal of the pooled resource.
            </summary>
            <param name="Factory_In">Factory method to create the resource provider from the key</param>
            <param name="Delay_Disposal_In_Milliseconds_In">The disposal delay in milliseconds after the last consumer has released its resource handle</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.NewPooled_PerApp_NoKey``1(System.Func{``0},System.Int32,VL.Lib.Basics.Resources.IResourceProvider{``0}@)">
            <summary>
            Manages the lifetime of a resource from a pool. Same key will return a handle to the exact same resource.
                        First registered factory method wins, but will be removed on disposal of the pooled resource.
            </summary>
            <param name="Factory_In">Factory method to create the resource provider from the key</param>
            <param name="Delay_Disposal_In_Milliseconds_In">The disposal delay in milliseconds after the last consumer has released its resource handle</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.NewPooled_PerApp_Bind``2(``0,System.Func{``0,VL.Lib.Basics.Resources.IResourceProvider{``1}},System.Int32,VL.Lib.Basics.Resources.IResourceProvider{``1}@)">
            <summary>
            Manages the lifetime of a resource from a pool. Same key will return a handle to the exact same resource.
                        First registered factory method wins, but will be removed on disposal of the pooled resource.
            </summary>
            <param name="Key_In">The key for the pool and resource creation</param>
            <param name="Factory_In">Factory method to create the resource provider from the key</param>
            <param name="Delay_Disposal_In_Milliseconds_In">The disposal delay in milliseconds after the last consumer has released its resource handle</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources._Operations_.NewPooled_PerApp``2(``0,System.Func{``0,``1},System.Int32,VL.Lib.Basics.Resources.IResourceProvider{``1}@)">
            <summary>
            Manages the lifetime of a resource from a pool. Same key will return a handle to the exact same resource.
                        First registered factory method wins, but will be removed on disposal of the pooled resource.
            </summary>
            <param name="Key_In">The key for the pool and resource creation</param>
            <param name="Factory_In">Factory method to create the resource provider from the key</param>
            <param name="Delay_Disposal_In_Milliseconds_In">The disposal delay in milliseconds after the last consumer has released its resource handle</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Resources.ConnectableProvider._Operations_.CreateDefault``2">
            <summary>
            Lets you connect and disconnect manually to the source.
                        All provided handles will now get access to the same upstream resource.
                        You may disconnect and reconnect to provide access to a new upstream resource.
                        Former disposable provider Memoize
            </summary>
        </member>
        <member name="M:_CoreLibBasics_.System.GUID._Operations_.FromBytes(System.Byte[],System.Guid@)">
            <param name="B_In">A 16-element byte array containing values with which to initialize the GUID.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.GUID._Operations_.Create(VL.Core.NodeContext,System.Guid@)">
            <remarks>Convenience node, same as NewGuid</remarks>
        </member>
        <member name="M:_CoreLibBasics_.System.Console._Operations_.Write_H(System.Object)">
            <param name="Value_In">The value to write, or .</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Console._Operations_.WriteLine_H(System.Object)">
            <param name="Value_In">The value to write.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Console._Operations_.Write(System.Object,System.Boolean)">
            <summary>Writes the text representation of the specified object to the standard output stream.</summary>
            <tags>log</tags>
            <param name="Value_In">The value to write.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Console._Operations_.WriteLine(System.Object,System.Boolean)">
            <summary>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</summary>
            <tags>log</tags>
            <param name="Value_In">The value to write.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Console._Operations_.Beep(System.Boolean)">
            <summary>Plays the sound of a beep through the console speaker.</summary>
        </member>
        <member name="M:_CoreLibBasics_.System.Console._Operations_.Beep(System.Int32,System.Int32,System.Boolean)">
            <summary>Plays the sound of a beep of a specified frequency and duration through the console speaker.</summary>
            <param name="Frequency_In">The frequency of the beep, ranging from 37 to 32767 hertz.</param>
            <param name="Duration_In">The duration of the beep measured in milliseconds.</param>
        </member>
        <member name="T:_CoreLibBasics_.System.Application.ApplicationPath_ShuYEpkkVg1LwRBozVImYu">
            <summary>Returns the absolut basepath for assets</summary>
            <remarks>
            During development: Returns path to the directory of the main .vl document
            When exported: Returns path to the directory of the executable
            </remarks>
        </member>
        <member name="M:_CoreLibBasics_.System.Application.MainLoop_FTrgnFXaV2fQak1QZOwgTd.SetFPS(System.Single)">
            <param name="Max_FPS_In">Set to 0 to disable FPS throttling, e.g. when using V-Sync</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Application.MainLoop_FTrgnFXaV2fQak1QZOwgTd.SetWaitAccuracy(System.Double)">
            <param name="Wait_Accuracy_In">Estimated precision of the accuracy of Sleep(1) on the current machine in milliseconds. Default is 2ms. Usually between 1ms and 16ms. Higher values make the timer more precise but uses more CPU power.</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Application.MainLoop_FTrgnFXaV2fQak1QZOwgTd.SetIsIncremental(System.Boolean)">
            <param name="Is_Incremental_In">If true, the global time will update with the value to set to &quot;Incremental FPS&quot;</param>
        </member>
        <member name="M:_CoreLibBasics_.System.Application.MainLoop_FTrgnFXaV2fQak1QZOwgTd.SetIncrementalFPS(System.Double)">
            <param name="Incremental_FPS_In">Fixed FPS if &quot;Is Incremental&quot; is set to true.</param>
        </member>
        <member name="T:_CoreLibBasics_.System.Application.PID_Ez4hJCUcRAhMcvbODDpIMg">
            <summary>Returns the process ID of the running application</summary>
        </member>
        <member name="M:_CoreLibBasics_.Text._Operations_.Ellipsis_Ends(System.String,System.String,System.Int32,System.Boolean,System.String@)">
            <tags>pad,trim</tags>
        </member>
        <member name="M:_CoreLibBasics_.Text._Operations_.Ellipsis_Right(System.String,System.String,System.Int32,System.Boolean,System.String@)">
            <tags>pad,trim</tags>
        </member>
        <member name="M:_CoreLibBasics_.Text._Operations_.Ellipsis_Left(System.String,System.String,System.Int32,System.Boolean,System.String@)">
            <tags>pad,trim</tags>
        </member>
        <member name="M:_CoreLibBasics_.Text._Operations_.Ellipsis_Center(System.String,System.String,System.Int32,System.Boolean,System.String@)">
            <tags>pad,trim</tags>
        </member>
        <member name="M:_CoreLibBasics_.Text.FontList._Operations_.TryGetValue(VL.Lib.Text.FontList,System.String@,System.Boolean@)">
            <summary>Gets the font name as string. The &apos;Success&apos; pin indicates whether the input is valid.</summary>
        </member>
        <member name="T:_VL_Tokenizer_.IO.Tokenizer_Postfix_MzjqKVRPaSGPzFUlLZkwS2">
            <summary>Interprets an incoming stream of bytes as being a series of postfixed tokens. Returns a spread of tokens (with their postfix removed).</summary>
        </member>
        <member name="T:_VL_Tokenizer_.IO.Tokenizer_Frame_S9LmNU1FHynOjIAYRsBjPm">
            <summary>Interprets an incoming stream of bytes as being a series of framed tokens. Returns a spread of tokens (with their prefix and postfix bytes removed).</summary>
        </member>
        <member name="T:_VL_Tokenizer_.IO.Tokenizer_FixedLength_LKYxaM9jcO4OJnzPQrhoC3">
            <summary>Interprets an incoming stream of bytes as being a series of fixed-length tokens. Returns a spread of tokens by splitting the stream at length bytes.</summary>
        </member>
        <member name="T:_VL_Tokenizer_.IO.Tokenizer_LengthPrefix_EHaocYFxIJ1PQgRGnuwmo9">
            <summary>Interprets an incoming stream of bytes as being a series of lengh-prefixed tokens. Returns a spread of tokens (with their length prefix removed).</summary>
        </member>
        <member name="T:_VL_Tokenizer_.IO.Tokenizer_MRphnhx21MGPjqWD1DrR3L`1">
            <summary>Base of the Tokenizer nodes that allows to implement advanced custom tokenizers</summary>
        </member>
        <member name="T:_VL_Tokenizer_.IO.StringReceiver_Reactive_E1Sn9LsqDvCOKGivxF00mS`1">
            <summary>Reads data until the terminator is received and returns it as strings with the specified encoding exluding the terminator</summary>
            <tags>readline,readstringuntil,tokenizer</tags>
        </member>
        <member name="M:_VL_Tokenizer_.IO.StringReceiver_Reactive_E1Sn9LsqDvCOKGivxF00mS`1.Update``1(System.IObservable{`0},System.String,VL.Lib.Text.Encodings,System.Boolean,System.IObservable{VL.Lib.Collections.Spread{System.String}}@,System.Int32@)">
            <param name="Terminator_In">Defaults to CRLF, also known as #13#10 or \r\n</param>
            <param name="Buffer_Size_Out">The number of bytes currently collected without having received the terminator.</param>
        </member>
        <member name="T:_VL_Tokenizer_.IO.StringReceiver_MUuluuolPeyOdm6FjkdYAE`1">
            <summary>Reads data until the terminator is received and returns it as a string with the specified encoding exluding the terminator</summary>
            <remarks>Returns only the last string received in the current frame.</remarks>
            <tags>readline,readstringuntil,tokenizer</tags>
        </member>
        <member name="M:_VL_Tokenizer_.IO.StringReceiver_MUuluuolPeyOdm6FjkdYAE`1.Update``1(System.IObservable{`0},System.String,VL.Lib.Text.Encodings,System.Boolean,System.String@,System.Boolean@,System.Int32@)">
            <param name="Terminator_In">Defaults to CRLF, also known as #13#10 or \r\n</param>
            <param name="Buffer_Size_Out">The number of bytes currently collected without having received the terminator.</param>
        </member>
        <member name="T:_VL_Tokenizer_.IO.StringReceiver_Queued_JcOJy40j2RiN1B2Un1x7qv`1">
            <summary>Reads data until the terminator is received and returns it as a string with the specified encoding exluding the terminator</summary>
            <remarks>Queues all incoming strings and only returns one per frame.</remarks>
            <tags>readline,readstringuntil,tokenizer</tags>
        </member>
        <member name="M:_VL_Tokenizer_.IO.StringReceiver_Queued_JcOJy40j2RiN1B2Un1x7qv`1.Update``1(System.IObservable{`0},System.String,VL.Lib.Text.Encodings,System.Boolean,System.String@,System.Int32@,System.Int32@)">
            <param name="Terminator_In">Defaults to CRLF, also known as #13#10 or \r\n</param>
            <param name="Buffer_Size_Out">The number of bytes currently collected without having received the terminator.</param>
        </member>
        <member name="T:_VL_Tokenizer_.IO.Tokenizer.Result_C`1">
            <summary>Helper type for use with Tokenizer [IO]</summary>
        </member>
        <member name="M:_VL_Tokenizer_.IO.Tokenizer._Operations_.PostfixBytes(System.Collections.Generic.IEnumerable{System.Byte},System.Collections.Generic.IEnumerable{System.Byte},VL.Lib.Collections.Spread{System.Byte}@)">
            <summary>Adds the given postfix to the spread of bytes</summary>
        </member>
        <member name="M:_VL_Tokenizer_.IO.Tokenizer._Operations_.FrameBytes(System.Collections.Generic.IEnumerable{System.Byte},System.Collections.Generic.IEnumerable{System.Byte},System.Collections.Generic.IEnumerable{System.Byte},VL.Lib.Collections.Spread{System.Byte}@)">
            <summary>Frames the given spread of bytes with the given prefix and postfix bytes</summary>
        </member>
        <member name="M:_VL_Tokenizer_.IO.Tokenizer._Operations_.PrefixLength(System.Collections.Generic.IEnumerable{System.Byte},System.Boolean,System.Int32,VL.Lib.Collections.Spread{System.Byte}@)">
            <summary>Prefixes the given spread of bytes with a number that specifies its count</summary>
            <remarks>The specified &apos;Byte Count&apos; denotes the number (1, 2, 3 or 4) of bytes to express the length in. Obviously this number needs to be large enough to encompass the spreads length.</remarks>
        </member>
    </members>
</doc>
