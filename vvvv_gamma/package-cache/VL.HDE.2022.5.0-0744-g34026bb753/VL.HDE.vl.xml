<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.HDE.vl</name>
    </assembly>
    <members>
        <member name="M:_HDE_WidgetsAndViewers_.HDE.TooltipWidgets.DisposeAfterRenderingInput_C.Render_(VL.Skia.CallerInfo)">
            <summary>
            interface operation summary: Renders the layer. Called from downstream.
                        Scene graph elements should render themselves before calling render upstream.
            </summary>
        </member>
        <member name="M:_HDE_WidgetsAndViewers_.HDE.TooltipWidgets.DisposeAfterRenderingInput_C.Notify_(VL.Lib.IO.Notifications.INotification,VL.Skia.CallerInfo,System.Boolean@)">
            <summary>
            interface operation summary: Scene graph nodes typically notify upstream before considering to apply own logic.
                        Typically only apply own logic if notification didn&apos;t get processed by upstream.
                        Return if notification got processed.
            </summary>
        </member>
        <member name="M:_PublicAPI_.VL.Session._Operations_.ActiveCanvasStream(VL.Lib.Reactive.Channel{System.UInt32}@)">
            <remarks>please use ActiveLiveCanvasStream</remarks>
        </member>
        <member name="T:_HDE_ElementViewers_.HDE.ElementViewers.NodeInfoViewer_C">
            <summary>Renders static information about a node</summary>
            <remarks>This remark is here to debug the visualization of a remark</remarks>
        </member>
        <member name="M:_HDE_ElementViewers_.HDE.ElementViewers.NodeInfoViewer_C.Create(VL.Core.NodeContext)">
            <summary>This summary is here to debug the visualization of a summary</summary>
            <remarks>This remark is here to debug the visualization of a remark</remarks>
        </member>
        <member name="M:_HDE_ElementViewers_.HDE.ElementViewers.NodeInfoViewer_C.__Create__(VL.Core.NodeContext)">
            <summary>This summary is here to debug the visualization of a summary</summary>
            <remarks>This remark is here to debug the visualization of a remark</remarks>
        </member>
        <member name="M:_HelpbrowserMWidgets_.HelpBrowser.Widgets.Utils.DisposeAfterRenderingInput_C.Render_(VL.Skia.CallerInfo)">
            <summary>
            interface operation summary: Renders the layer. Called from downstream.
                        Scene graph elements should render themselves before calling render upstream.
            </summary>
        </member>
        <member name="M:_HelpbrowserMWidgets_.HelpBrowser.Widgets.Utils.DisposeAfterRenderingInput_C.Notify_(VL.Lib.IO.Notifications.INotification,VL.Skia.CallerInfo,System.Boolean@)">
            <summary>
            interface operation summary: Scene graph nodes typically notify upstream before considering to apply own logic.
                        Typically only apply own logic if notification didn&apos;t get processed by upstream.
                        Return if notification got processed.
            </summary>
        </member>
    </members>
</doc>
