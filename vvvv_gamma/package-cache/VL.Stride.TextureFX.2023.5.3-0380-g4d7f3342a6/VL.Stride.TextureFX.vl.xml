<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.Stride.TextureFX.vl</name>
    </assembly>
    <members>
        <member name="M:_VL_Stride_TextureFX_.Stride.Textures.Filter.DirectionalBlur_JQMxtk4r0EVPNzXMfWWGlS.Update(Stride.Graphics.Texture,VL.Stride.Shaders.ShaderFX.SetVar{System.Single},Stride.Core.Mathematics.Vector2,Stride.Core.Mathematics.Vector2,System.Boolean,VL.Stride.Shaders.ShaderFX.SetVar{Stride.Core.Mathematics.Vector4},Stride.Graphics.Texture,Stride.Core.Mathematics.Int2,Stride.Graphics.PixelFormat,System.Boolean,Stride.Graphics.Texture@)">
            <param name="Control_In">Allows to control the blending between the input texture and the result of the filter. Per channel.</param>
            <param name="Output_Texture_In">The texture to render to. If not set, the node creates its own output texture based on the input texture.</param>
        </member>
        <member name="M:_VL_Stride_TextureFX_.Stride.Textures.Filter.Glow_Hz2rlbtqlofLP8AQAVPqLb.Update(Stride.Graphics.Texture,System.Boolean,VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{System.Single},VL.Stride.Shaders.ShaderFX.SetVar{Stride.Core.Mathematics.Vector4},Stride.Graphics.Texture,Stride.Core.Mathematics.Int2,Stride.Graphics.PixelFormat,Stride.Graphics.PixelFormat,Stride.Graphics.SamplerState,System.Boolean,Stride.Graphics.Texture@)">
            <param name="Always_Generate_Mips_for_Input_In">If true, mipmaps will be generated in every frame, if false only on change of the texture reference. If the texture has mipmaps, nothing will be done.</param>
            <param name="Control_In">Allows to control the blending between the input texture and the result of the filter. Per channel.</param>
            <param name="Output_Texture_In">The texture to render to. If not set, the node creates its own output texture based on the input texture.</param>
            <param name="Render_Format_In">Allows to specify a render format that is differet to the output format</param>
        </member>
        <member name="T:_VL_Stride_TextureFX_.Stride.Textures.Mixer.Blend_AFu86hoz4AgPNxFpUGXY6q">
            <summary>Blend between two textures using different blend operations</summary>
            <tags>fade,mix,compose,over</tags>
        </member>
    </members>
</doc>
