<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.FuzzySearch.vl</name>
    </assembly>
    <members>
        <member name="T:_VL_Text_SimMetrics_.Text.Metrics.Levenshtein_OJrvV9iNlszM3NMnpNJNBc">
            <summary>Implements the basic Levenshtein algorithm providing a similarity measure between two strings</summary>
        </member>
        <member name="T:_VL_Text_SimMetrics_.Text.Metrics.ChapmanMeanLength_NAsvC5tzRDsMKMGoq8eG8C">
            <summary>Implements the Chapman Mean Length algorithm provides a similarity measure between two strings from size of the mean length of the vectors - this approach is suppossed to be used to determine which metrics may be best to apply rather than giveing a valid response itself</summary>
        </member>
        <member name="T:_VL_Text_SimMetrics_.Text.Metrics.ChapmanLengthDeviation_JLvV853tCs2M4p8ov3jSsH">
            <summary>Implements the Chapman Length Deviation algorithm whereby the length deviation of the word strings is used to determine if the strings are similar in size - This apporach is not intended to be used single handedly but rather alongside other approaches</summary>
        </member>
        <member name="T:_VL_Text_SimMetrics_.Text.Metrics.Jaro_DrcW6V6F6QmOXG2v7r86Hc">
            <summary>Implements the Jaro algorithm providing a similarity measure between two strings allowing character transpositions to a degree</summary>
        </member>
        <member name="T:_VL_Text_SimMetrics_.Text.Metrics.JaroWinkler_Qz1VyqzW42QN7Z3jdFYX0t">
            <summary>Implements the Jaro-Winkler algorithm providing a similarity measure between two strings allowing character transpositions to a degree adjusting the weighting for common prefixes</summary>
        </member>
        <member name="T:_VL_Text_SimMetrics_.Text.Metrics.NeedlemanWunch_SddzYkDQtxNNgOIHGBmKPn">
            <summary>Implements the Needleman-Wunch algorithm providing an edit distance based similarity measure between two strings</summary>
        </member>
    </members>
</doc>
