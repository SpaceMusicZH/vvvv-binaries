/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ComputeFXEffect
@P   - ComputeEffectShader.ThreadNumbers: X:1 Y:1 Z:1
@P EffectNodeBase.EffectNodeBaseShader: mixin FuseInstancedGenerateTransformations_ComputeFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer Globals [Size: 16]
@C    ParticleSize_id20 => FuseInstancedGenerateTransformations_ComputeFX.ParticleSize
***************************
******  Resources    ******
***************************
@R    Position_id21 => FuseInstancedGenerateTransformations_ComputeFX.Position [Stage: Compute, Slot: (0-0)]
@R    Velocity_id22 => FuseInstancedGenerateTransformations_ComputeFX.Velocity [Stage: Compute, Slot: (1-1)]
@R    InstanceWorld_id23 => FuseInstancedGenerateTransformations_ComputeFX.InstanceWorld [Stage: Compute, Slot: (0-0)]
@R    InstanceWorldInverse_id24 => FuseInstancedGenerateTransformations_ComputeFX.InstanceWorldInverse [Stage: Compute, Slot: (1-1)]
@R    Globals => Globals [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
@S    FuseInstancedGenerateTransformations_ComputeFX => 7dac3914f452a1ffc7611db6b06b60c3
@S    TransformUtils => 651146ed53d019a2c2c72b489f9cff84
@S    HappyTransform => 40e380fb8141f7a8a6b741a8bd03a993
@S    FuseCoreTransform => 2cbaeb06b0367b954ef12b555e3c4d7a
@S    FuseCoreMath => fdeacca3b2f02b9acb6430ed603f50b4
@S    FuseCommonTypes => 294db151085426350495bb436e7480dd
***************************
*****     Stages      *****
***************************
@G    Compute => 47bd69562fbc0e96eae44861fbce6f7b
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float3 ParticleSize_id20;          // Offset:    0 Size:    12
//
// }
//
// Resource bind info for Position_id21
// {
//
//   float3 $Element;                   // Offset:    0 Size:    12
//
// }
//
// Resource bind info for Velocity_id22
// {
//
//   float3 $Element;                   // Offset:    0 Size:    12
//
// }
//
// Resource bind info for InstanceWorld_id23
// {
//
//   struct Transform
//   {
//       
//       float4x4 Matrix;               // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
// Resource bind info for InstanceWorldInverse_id24
// {
//
//   struct Transform
//   {
//       
//       float4x4 Matrix;               // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Position_id21                     texture  struct         r/o             t0      1 
// Velocity_id22                     texture  struct         r/o             t1      1 
// InstanceWorld_id23                    UAV  struct         r/w             u0      1 
// InstanceWorldInverse_id24             UAV  struct         r/w             u1      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_resource_structured t0, 12
dcl_resource_structured t1, 12
dcl_uav_structured u0, 64
dcl_uav_structured u1, 64
dcl_input vThreadID.x
dcl_temps 8
dcl_thread_group 1, 1, 1
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id0.x; vThreadGroupID.y <- __input__.GroupId_id0.y; vThreadGroupID.z <- __input__.GroupId_id0.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id1.x; vThreadID.y <- __input__.DispatchThreadId_id1.y; vThreadID.z <- __input__.DispatchThreadId_id1.z
//
#line 101 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_ComputeFXEffect_96941bf6c30486c6e439c37ab10d576c.hlsl"
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.xyz, vThreadID.x, l(0), t1.xyzx  // r0.x <- vel.x; r0.y <- vel.y; r0.z <- vel.z

#line 105
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx

#line 49
mul r0.xyz, r0.xyzx, l(-6.283185, 6.283185, -6.283185, 0.000000)  // r0.x <- z.x; r0.y <- z.y; r0.z <- z.z

#line 50
sincos r0.xyz, r1.xyz, r0.xyzx  // r1.x <- x.x; r1.y <- x.y; r1.z <- x.z; r0.x <- y.x; r0.y <- y.y; r0.z <- y.z

#line 51
mul r2.xyzw, r0.xyzy, r1.yzyx  // r2.w <- <rot3x3_id84 return value>._m20
mul r0.w, r1.z, r2.x
mad r3.z, -r0.y, r0.z, -r0.w  // r3.z <- <rot3x3_id84 return value>._m12
mul r0.y, r0.y, r0.x
mad r3.x, -r0.y, r1.z, r2.z  // r3.x <- <rot3x3_id84 return value>._m10
mul r4.xyz, r1.zzyz, r1.yxxy  // r4.y <- <rot3x3_id84 return value>._m11; r4.z <- <rot3x3_id84 return value>._m22

#line 76
mov r3.y, r4.y
mul r5.xyz, r3.xyzx, cb0[0].yyyy  // r5.x <- m._m10; r5.y <- m._m11; r5.z <- m._m12

#line 106
mov r6.y, r5.x

#line 51
mad r7.x, r0.y, r0.z, r4.x  // r7.x <- <rot3x3_id84 return value>._m00
mad r7.z, r2.x, r0.z, -r2.y  // r7.z <- <rot3x3_id84 return value>._m02

#line 77
mov r4.x, r2.w

#line 51
mul r7.y, r0.z, -r1.x  // r7.y <- <rot3x3_id84 return value>._m01

#line 77
mov r4.y, r0.x

#line 75
mul r0.xyz, r7.zxyz, cb0[0].xxxx  // r0.x <- m._m02; r0.y <- m._m00; r0.z <- m._m01

#line 106
mov r6.x, r0.y

#line 77
mul r1.xyz, r4.xyzx, cb0[0].zzzz  // r1.x <- m._m20; r1.y <- m._m21; r1.z <- m._m22

#line 106
mov r6.z, r1.x

#line 100
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r2.xyz, vThreadID.x, l(0), t0.xyzx  // r2.x <- pos.x; r2.y <- pos.y; r2.z <- pos.z

#line 106
mov r6.w, r2.x
store_structured u0.xyzw, vThreadID.x, l(0), r6.xyzw
mov r0.y, r5.z
mov r5.x, r0.z
mov r5.z, r1.y
mov r0.z, r1.z
mov r5.w, r2.y
store_structured u0.xyzw, vThreadID.x, l(16), r5.xyzw
mov r0.w, r2.z
store_structured u0.xyzw, vThreadID.x, l(32), r0.xyzw
mov r0.xyzw, l(0,0,0,1.000000)
store_structured u0.xyzw, vThreadID.x, l(48), r0.xyzw

#line 80
dp3 r7.w, -r2.xyzx, r7.xyzx  // r7.w <- im._m30

#line 71
div r0.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[0].xyzx  // r0.x <- inverseScaling.x; r0.y <- inverseScaling.y; r0.z <- inverseScaling.z

#line 81
mul r1.xyzw, r0.xxxx, r7.xyzw  // r1.x <- im._m00; r1.y <- im._m10; r1.z <- im._m20; r1.w <- im._m30

#line 107
store_structured u1.xyzw, vThreadID.x, l(0), r1.xyzw

#line 80
dp3 r3.w, -r2.xyzx, r3.xyzx  // r3.w <- im._m31

#line 82
mul r1.xyzw, r0.yyyy, r3.xyzw  // r1.x <- im._m01; r1.y <- im._m11; r1.z <- im._m21; r1.w <- im._m31

#line 107
store_structured u1.xyzw, vThreadID.x, l(16), r1.xyzw

#line 80
dp3 r4.w, -r2.xyzx, r4.xyzx  // r4.w <- im._m32

#line 83
mul r0.xyzw, r0.zzzz, r4.xyzw  // r0.x <- im._m02; r0.y <- im._m12; r0.z <- im._m22; r0.w <- im._m32

#line 107
store_structured u1.xyzw, vThreadID.x, l(32), r0.xyzw
store_structured u1.xyzw, vThreadID.x, l(48), l(0,0,0,1.000000)

#line 122
ret 
// Approximately 49 instruction slots used
***************************
*************************/
static const float PI_id11 = 3.1415926535897;
struct CS_STREAMS 
{
    uint3 GroupId_id0;
    uint3 DispatchThreadId_id1;
    int ThreadCountX_id7;
    int ThreadCountY_id8;
    int ThreadCountZ_id9;
    uint ThreadCountPerGroup_id5;
    uint3 ThreadGroupCount_id4;
    uint ThreadGroupIndex_id6;
};
struct CS_INPUT 
{
    uint3 GroupId_id0 : SV_GroupID;
    uint3 DispatchThreadId_id1 : SV_DispatchThreadID;
};
struct Matrix4x4 
{
    float4x4 Matrix;
};
struct Ray 
{
    float3 ro, rd, sp, sn;
};
struct Transform 
{
    float4x4 Matrix;
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id10;
};
cbuffer Globals 
{
    float3 ParticleSize_id20;
};
StructuredBuffer<float3> Position_id21;
StructuredBuffer<float3> Velocity_id22;
RWStructuredBuffer<Transform> InstanceWorld_id23;
RWStructuredBuffer<Transform> InstanceWorldInverse_id24;
float4x4 as4x4_id73(float3x3 m)
{
    float4x4 newM = { m._11, m._12, m._13, 0, m._21, m._22, m._23, 0, m._31, m._32, m._33, 0, 0, 0, 0, 1};
    return newM;
}
float3x3 rot3x3_id84(float3 rotation)
{
    float3 z = float3(-rotation.x, rotation.y, -rotation.z) * acos(-1) * 2;
    float3 x = cos(z), y = sin(z);
    return float3x3(x.y * x.z + y.x * y.y * y.z, -x.x * y.z, y.x * x.y * y.z - y.y * x.z, x.y * y.z - y.x * y.y * x.z, x.x * x.z, -y.y * y.z - y.x * x.y * x.z, x.x * y.y, y.x, x.x * x.y);
}
float4x4 rot4x4_id86(float3 rotation)
{
    return as4x4_id73(rot3x3_id84(rotation));
}
float4x4 identity4x4_id71()
{
    float4x4 m = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1};
    return m;
}
float3x3 lookat_id74(float3 dir, float3 up = float3(0, 1, 0))
{
    float3 z = normalize(dir);
    float3 x = normalize(cross(up, z));
    float3 y = normalize(cross(z, x));
    return float3x3(x, y, z);
}
void TransformTRSWithInverse_id108(float3 translation, float3 rotation, float3 scaling, out float4x4 m, out float4x4 im)
{
    float3 inverseScaling = 1.0 / scaling;
    im = identity4x4_id71();
    m = rot4x4_id86(rotation);
    float4x4 inverseRotation = transpose(m);
    m[0] *= scaling.x;
    m[1] *= scaling.y;
    m[2] *= scaling.z;
    m[3].xyz = translation.xyz;
    im[3].xyz = -translation.xyz;
    im = mul(im, inverseRotation);
    im._11_21_31_41 *= inverseScaling.x;
    im._12_22_32_42 *= inverseScaling.y;
    im._13_23_33_43 *= inverseScaling.z;
}
float4x4 translateM_id81(float3 pos, float4x4 m)
{
    float4x4 mT = identity4x4_id71();
    mT._41 = pos.x;
    mT._42 = pos.y;
    mT._43 = pos.z;
    return mul(mT, m);
}
float4x4 lookat4x4_id75(float3 dir, float3 up = float3(0, 1, 0))
{
    return as4x4_id73(lookat_id74(dir, up));
}
void Compute_id111(inout CS_STREAMS streams)
{
    uint index = streams.DispatchThreadId_id1.x;
    float3 pos = Position_id21[index];
    float3 vel = Velocity_id22[index];
    float4x4 world2 = mul(lookat4x4_id75(normalize(-vel), float3(0, 1, 0)), translateM_id81(pos, identity4x4_id71()));
    float4x4 world;
    float4x4 worldInverse;
    TransformTRSWithInverse_id108(pos, normalize(vel), ParticleSize_id20, world, worldInverse);
    InstanceWorld_id23[index].Matrix = world;
    InstanceWorldInverse_id24[index].Matrix = worldInverse;
}
[numthreads(1, 1, 1)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id0 = __input__.GroupId_id0;
    streams.DispatchThreadId_id1 = __input__.DispatchThreadId_id1;
    streams.ThreadCountX_id7 = 1;
    streams.ThreadCountY_id8 = 1;
    streams.ThreadCountZ_id9 = 1;
    streams.ThreadCountPerGroup_id5 = 1 * 1 * 1;
    streams.ThreadGroupCount_id4 = ThreadGroupCountGlobal_id10;
    streams.ThreadGroupIndex_id6 = (streams.GroupId_id0.z * streams.ThreadGroupCount_id4.y + streams.GroupId_id0.y) * streams.ThreadGroupCount_id4.x + streams.GroupId_id0.x;
    Compute_id111(streams);
}
