/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ShaderFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin SMParticleProvider_ShaderFX
***************************
*****     Sources     *****
***************************
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    SMParticleProvider_ShaderFX => 3903c25bcc23925654ca0d3ba3b881c6
@S    TransformationBase => 21981c533d88209fdcf07f258ddf01c2
@S    SMParticleProvider => 5879f3a1eaa2ed12a5e7e907e3f4ba12
@S    SMGridParticleStruct => 1101aaa3dabe64320f382d670ccb694d
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    NormalStream => ea68512133899a045766d21afb59733a
***************************
*****     Stages      *****
***************************
@G    Vertex => 1441b88693221fad54606da0e331019d
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
// POSITION                 0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// VID_ID40_SEM             0   x           0     NONE    uint   x   
// POSITION_WS              0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_input_sgv v0.x, vertex_id
dcl_input v1.xyzw
dcl_output o0.x
dcl_output o1.xyzw
//
// Initial variable locations:
//   v0.x <- __input__.VertexID_id39; 
//   v1.x <- __input__.Position_id29.x; v1.y <- __input__.Position_id29.y; v1.z <- __input__.Position_id29.z; v1.w <- __input__.Position_id29.w; 
//   o1.x <- <VSMain return value>.PositionWS_id30.x; o1.y <- <VSMain return value>.PositionWS_id30.y; o1.z <- <VSMain return value>.PositionWS_id30.z; o1.w <- <VSMain return value>.PositionWS_id30.w; 
//   o0.x <- <VSMain return value>.VID_id40
//
#line 83 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_ShaderFXEffect_fecc80b020b6a9c1e6f9b42d403ab7ca.hlsl"
mov o0.x, v0.x
mov o1.xyzw, v1.xyzw
ret 
// Approximately 3 instruction slots used
***************************
*************************/
struct VS_STREAMS 
{
    uint VertexID_id39;
    float4 Position_id29;
    uint VID_id40;
    float4 PositionWS_id30;
};
struct VS_OUTPUT 
{
    uint VID_id40 : VID_ID40_SEM;
    float4 PositionWS_id30 : POSITION_WS;
};
struct VS_INPUT 
{
    uint VertexID_id39 : SV_VertexID;
    float4 Position_id29 : POSITION;
};
struct SMGridParticle 
{
    float3 Pos;
    float3 Vel;
    float3 Rot;
    float3 Size;
    float3 Col;
    float Mesh;
};
cbuffer PerDraw 
{
    float4x4 World_id21;
    float4x4 WorldInverse_id22;
    float4x4 WorldInverseTranspose_id23;
    float4x4 WorldView_id24;
    float4x4 WorldViewInverse_id25;
    float4x4 WorldViewProjection_id26;
    float3 WorldScale_id27;
    float4 EyeMS_id28;
};
cbuffer PerMaterial 
{
    float ParticleSize_id37 = 0.1;
};
cbuffer PerView 
{
    float4x4 View_id14;
    float4x4 ViewInverse_id15;
    float4x4 Projection_id16;
    float4x4 ProjectionInverse_id17;
    float4x4 ViewProjection_id18;
    float2 ProjScreenRay_id19;
    float4 Eye_id20;
};
StructuredBuffer<SMGridParticle> ParticlesBuffer_id38;
void PostTransformPosition_id4()
{
}
void TransformPosition_id3()
{
}
void PreTransformPosition_id9(inout VS_STREAMS streams)
{
    streams.VID_id40 = streams.VertexID_id39;
    streams.PositionWS_id30 = streams.Position_id29;
}
void BaseTransformVS_id6(inout VS_STREAMS streams)
{
    PreTransformPosition_id9(streams);
    TransformPosition_id3();
    PostTransformPosition_id4();
}
void VSMain_id0()
{
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.VertexID_id39 = __input__.VertexID_id39;
    streams.Position_id29 = __input__.Position_id29;
    VSMain_id0();
    BaseTransformVS_id6(streams);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.VID_id40 = streams.VID_id40;
    __output__.PositionWS_id30 = streams.PositionWS_id30;
    return __output__;
}
