/**************************
***** Compiler Parameters *****
***************************
@P EffectName: DrawFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin ConstantColorTexturedPoint_DrawFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 416]
@C    World_id29 => Transformation.World
@C    WorldInverse_id30 => Transformation.WorldInverse
@C    WorldInverseTranspose_id31 => Transformation.WorldInverseTranspose
@C    WorldView_id32 => Transformation.WorldView
@C    WorldViewInverse_id33 => Transformation.WorldViewInverse
@C    WorldViewProjection_id34 => Transformation.WorldViewProjection
@C    WorldScale_id35 => Transformation.WorldScale
@C    EyeMS_id36 => Transformation.EyeMS
cbuffer Globals [Size: 96]
@C    ColorInput_id46 => ConstantColor_DrawFX.ColorInput
@C    Texture0TexelSize_id48 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id50 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id52 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id54 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id56 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id58 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id60 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id62 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id64 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id66 => Texturing.Texture9TexelSize
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    PointSampler_id76 => Texturing.PointSampler [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id47 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ConstantColorTexturedPoint_DrawFX => dc6f9100680ff046c49703c495552c6a
@S    ConstantColor_DrawFX => c24e8c4f4e0a7e31da0786e0b11b6010
@S    VS_PS_Base => f089dc4ce5d5868b962b08793ef74fd9
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    NormalStream => ea68512133899a045766d21afb59733a
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    ColorBase => b8b78679285939723aa5d9647437398b
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
***************************
*****     Stages      *****
***************************
@G    Vertex => ff98e50ffc6413f837f5851b40eab595
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id29;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id30;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id31;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id32;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id33;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id34; // Offset:  320 Size:    64
//   float3 WorldScale_id35;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id36;                 // Offset:  400 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   v1.x <- __input__.TexCoord_id95.x; v1.y <- __input__.TexCoord_id95.y; 
//   o1.x <- <VSMain return value>.TexCoord_id95.x; o1.y <- <VSMain return value>.TexCoord_id95.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 158 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_DrawFXEffect_e6b66d4764fb47872bf3e518c85c4010.hlsl"
dp4 o0.x, v0.xyzw, cb0[20].xyzw
dp4 o0.y, v0.xyzw, cb0[21].xyzw
dp4 o0.z, v0.xyzw, cb0[22].xyzw
dp4 o0.w, v0.xyzw, cb0[23].xyzw

#line 162
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 97949ea69ea238eebbc9b522278e79cd
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float4 ColorInput_id46;            // Offset:    0 Size:    16
//      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
//   float2 Texture0TexelSize_id48;     // Offset:   16 Size:     8 [unused]
//   float2 Texture1TexelSize_id50;     // Offset:   24 Size:     8 [unused]
//   float2 Texture2TexelSize_id52;     // Offset:   32 Size:     8 [unused]
//   float2 Texture3TexelSize_id54;     // Offset:   40 Size:     8 [unused]
//   float2 Texture4TexelSize_id56;     // Offset:   48 Size:     8 [unused]
//   float2 Texture5TexelSize_id58;     // Offset:   56 Size:     8 [unused]
//   float2 Texture6TexelSize_id60;     // Offset:   64 Size:     8 [unused]
//   float2 Texture7TexelSize_id62;     // Offset:   72 Size:     8 [unused]
//   float2 Texture8TexelSize_id64;     // Offset:   80 Size:     8 [unused]
//   float2 Texture9TexelSize_id66;     // Offset:   88 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PointSampler_id76                 sampler      NA          NA             s0      1 
// Texture0_id47                     texture  float4          2d             t0      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id95.x; v1.y <- __input__.TexCoord_id95.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 148 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_DrawFXEffect_e6b66d4764fb47872bf3e518c85c4010.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mul o0.xyzw, r0.xyzw, cb0[0].xyzw

#line 151
ret 
// Approximately 3 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id95;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id95 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float2 TexCoord_id95;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id95 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
    float2 TexCoord_id95 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 World_id29;
    float4x4 WorldInverse_id30;
    float4x4 WorldInverseTranspose_id31;
    float4x4 WorldView_id32;
    float4x4 WorldViewInverse_id33;
    float4x4 WorldViewProjection_id34;
    float3 WorldScale_id35;
    float4 EyeMS_id36;
};
cbuffer PerView 
{
    float4x4 View_id22;
    float4x4 ViewInverse_id23;
    float4x4 Projection_id24;
    float4x4 ProjectionInverse_id25;
    float4x4 ViewProjection_id26;
    float2 ProjScreenRay_id27;
    float4 Eye_id28;
};
cbuffer Globals 
{
    float4 ColorInput_id46 = float4(1, 1, 1, 1);
    float2 Texture0TexelSize_id48;
    float2 Texture1TexelSize_id50;
    float2 Texture2TexelSize_id52;
    float2 Texture3TexelSize_id54;
    float2 Texture4TexelSize_id56;
    float2 Texture5TexelSize_id58;
    float2 Texture6TexelSize_id60;
    float2 Texture7TexelSize_id62;
    float2 Texture8TexelSize_id64;
    float2 Texture9TexelSize_id66;
};
Texture2D Texture0_id47;
Texture2D Texture1_id49;
Texture2D Texture2_id51;
Texture2D Texture3_id53;
Texture2D Texture4_id55;
Texture2D Texture5_id57;
Texture2D Texture6_id59;
Texture2D Texture7_id61;
Texture2D Texture8_id63;
Texture2D Texture9_id65;
TextureCube TextureCube0_id67;
TextureCube TextureCube1_id68;
TextureCube TextureCube2_id69;
TextureCube TextureCube3_id70;
Texture3D Texture3D0_id71;
Texture3D Texture3D1_id72;
Texture3D Texture3D2_id73;
Texture3D Texture3D3_id74;
SamplerState Sampler_id75;
SamplerState PointSampler_id76 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id77 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id78 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id79 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id80 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id81 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id82 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id83 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id84 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id85;
SamplerState Sampler1_id86;
SamplerState Sampler2_id87;
SamplerState Sampler3_id88;
SamplerState Sampler4_id89;
SamplerState Sampler5_id90;
SamplerState Sampler6_id91;
SamplerState Sampler7_id92;
SamplerState Sampler8_id93;
SamplerState Sampler9_id94;
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id95 = __input__.TexCoord_id95;
    streams.ColorTarget_id2 = Texture0_id47.Sample(PointSampler_id76, streams.TexCoord_id95) * ColorInput_id46;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.TexCoord_id95 = __input__.TexCoord_id95;
    streams.ShadingPosition_id0 = mul(streams.Position_id14, WorldViewProjection_id34);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id95 = streams.TexCoord_id95;
    return __output__;
}
