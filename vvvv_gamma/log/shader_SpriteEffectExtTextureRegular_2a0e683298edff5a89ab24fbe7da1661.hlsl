/**************************
***** Compiler Parameters *****
***************************
@P EffectName: SpriteEffectExtTextureRegular
***************************
****  ConstantBuffers  ****
***************************
cbuffer Globals [Size: 16]
@C    MipLevel_id16 => SpriteEffectExtTextureRegular.MipLevel
***************************
******  Resources    ******
***************************
@R    Sampler_id15 => SpriteEffectExtTextureRegular.Sampler [Stage: Pixel, Slot: (0-0)]
@R    TextureRegular_id14 => SpriteEffectExtTextureRegular.TextureRegular [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    SpriteEffectExtTextureRegular => c9989a78e1f801df331ae71975ec28ca
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
***************************
*****     Stages      *****
***************************
@G    Vertex => 0b6f5758bceb0f37aca09c3fa6b43875
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id18.x; v0.y <- __input__.Position_id18.y; v0.z <- __input__.Position_id18.z; v0.w <- __input__.Position_id18.w; 
//   v1.x <- __input__.TexCoord_id17.x; v1.y <- __input__.TexCoord_id17.y; 
//   o1.x <- <VSMain return value>.TexCoord_id17.x; o1.y <- <VSMain return value>.TexCoord_id17.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 59 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_SpriteEffectExtTextureRegular_2a0e683298edff5a89ab24fbe7da1661.hlsl"
mov o0.xyzw, v0.xyzw
mov o1.xy, v1.xyxx
ret 
// Approximately 3 instruction slots used
@G    Pixel => a8512f1250d31307014b4ae271933e5b
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float MipLevel_id16;               // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler_id15                      sampler      NA          NA             s0      1 
// TextureRegular_id14               texture  float4          2d             t0      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id17.x; v1.y <- __input__.TexCoord_id17.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 39 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_SpriteEffectExtTextureRegular_2a0e683298edff5a89ab24fbe7da1661.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) o0.xyzw, v1.xyxx, t0.xyzw, s0, cb0[0].x

#line 48
ret 
// Approximately 2 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id17;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id17 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id18;
    float2 TexCoord_id17;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id17 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id18 : POSITION;
    float2 TexCoord_id17 : TEXCOORD0;
};
cbuffer Globals 
{
    float MipLevel_id16;
};
Texture2D TextureRegular_id14;
SamplerState Sampler_id15;
float4 Shading_id2(inout PS_STREAMS streams)
{
    return TextureRegular_id14.SampleLevel(Sampler_id15, streams.TexCoord_id17, MipLevel_id16);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id17 = __input__.TexCoord_id17;
    streams.ColorTarget_id2 = Shading_id2(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id18 = __input__.Position_id18;
    streams.TexCoord_id17 = __input__.TexCoord_id17;
    streams.ShadingPosition_id0 = streams.Position_id18;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id17 = streams.TexCoord_id17;
    return __output__;
}
