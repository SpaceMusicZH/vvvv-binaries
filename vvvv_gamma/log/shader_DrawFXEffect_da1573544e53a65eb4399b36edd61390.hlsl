/**************************
***** Compiler Parameters *****
***************************
@P EffectName: DrawFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Fluid3DRaymarcher_DrawFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 416]
@C    World_id21 => Transformation.World
@C    WorldInverse_id22 => Transformation.WorldInverse
@C    WorldInverseTranspose_id23 => Transformation.WorldInverseTranspose
@C    WorldView_id24 => Transformation.WorldView
@C    WorldViewInverse_id25 => Transformation.WorldViewInverse
@C    WorldViewProjection_id26 => Transformation.WorldViewProjection
@C    WorldScale_id27 => Transformation.WorldScale
@C    EyeMS_id28 => Transformation.EyeMS
cbuffer PerView [Size: 352]
@C    View_id14 => Transformation.View
@C    ViewInverse_id15 => Transformation.ViewInverse
@C    Projection_id16 => Transformation.Projection
@C    ProjectionInverse_id17 => Transformation.ProjectionInverse
@C    ViewProjection_id18 => Transformation.ViewProjection
@C    ProjScreenRay_id19 => Transformation.ProjScreenRay
@C    Eye_id20 => Transformation.Eye
cbuffer Globals [Size: 192]
@C    Texture0TexelSize_id30 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id32 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id34 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id36 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id38 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id40 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id42 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id44 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id46 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id48 => Texturing.Texture9TexelSize
@C    Color_id90 => Fluid3DRaymarcher_DrawFX.Color
@C    tVolumeTransform_id92 => Fluid3DRaymarcher_DrawFX.tVolumeTransform
@C    maxSteps_id94 => Fluid3DRaymarcher_DrawFX.maxSteps
@C    stepSize_id95 => Fluid3DRaymarcher_DrawFX.stepSize
@C    opacity_id96 => Fluid3DRaymarcher_DrawFX.opacity
@C    OffsetZ_id97 => Fluid3DRaymarcher_DrawFX.OffsetZ
@C    Gamma_id98 => Fluid3DRaymarcher_DrawFX.Gamma
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    linearSampler_id93 => Fluid3DRaymarcher_DrawFX.linearSampler [Stage: Pixel, Slot: (0-0)]
@R    texVOL_id91 => Fluid3DRaymarcher_DrawFX.texVOL [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    Fluid3DRaymarcher_DrawFX => a0e00ba4cae86491eb60a4071c799288
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
***************************
*****     Stages      *****
***************************
@G    Vertex => 0d3e232adc7b91c88a328aa2d650cacb
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id21;               // Offset:    0 Size:    64
//   float4x4 WorldInverse_id22;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id23;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id24;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id25;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id26; // Offset:  320 Size:    64 [unused]
//   float3 WorldScale_id27;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id28;                 // Offset:  400 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- __input__.Position_id87.x; v0.y <- __input__.Position_id87.y; v0.z <- __input__.Position_id87.z; v0.w <- __input__.Position_id87.w; 
//   v1.x <- __input__.TexCoord_id77.x; v1.y <- __input__.TexCoord_id77.y; 
//   o1.x <- <VSMain return value>.TexCoord_id77.x; o1.y <- <VSMain return value>.TexCoord_id77.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 195 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_DrawFXEffect_da1573544e53a65eb4399b36edd61390.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 196
mad r0.xy, v1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
mov r0.z, l(1.000000)
dp3 o1.x, r0.xyzx, cb0[0].xywx
dp3 o1.y, r0.xyzx, cb0[1].xywx

#line 200
ret 
// Approximately 9 instruction slots used
@G    Pixel => f5f35f6b483f283312fb522c371efa62
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerView
// {
//
//   float4x4 View_id14;                // Offset:    0 Size:    64 [unused]
//   float4x4 ViewInverse_id15;         // Offset:   64 Size:    64
//   float4x4 Projection_id16;          // Offset:  128 Size:    64 [unused]
//   float4x4 ProjectionInverse_id17;   // Offset:  192 Size:    64
//   float4x4 ViewProjection_id18;      // Offset:  256 Size:    64 [unused]
//   float2 ProjScreenRay_id19;         // Offset:  320 Size:     8 [unused]
//   float4 Eye_id20;                   // Offset:  336 Size:    16 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id30;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id32;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id34;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id36;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id38;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id40;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id42;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id44;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id46;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id48;     // Offset:   72 Size:     8 [unused]
//   float4 Color_id90;                 // Offset:   80 Size:    16 [unused]
//   float4x4 tVolumeTransform_id92;    // Offset:   96 Size:    64
//   uint maxSteps_id94;                // Offset:  160 Size:     4
//   float stepSize_id95;               // Offset:  164 Size:     4
//   float opacity_id96;                // Offset:  168 Size:     4
//   float OffsetZ_id97;                // Offset:  172 Size:     4
//   float Gamma_id98;                  // Offset:  176 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// linearSampler_id93                sampler      NA          NA             s0      1 
// texVOL_id91                       texture  float3          3d             t0      1 
// PerView                           cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id77.x; v1.y <- __input__.TexCoord_id77.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 166 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_DrawFXEffect_da1573544e53a65eb4399b36edd61390.hlsl"
mov r0.xy, v1.xyxx
mov r0.z, l(1.000000)
dp3 r1.x, r0.xyzx, cb0[12].xywx  // r1.x <- rayPos.x
dp3 r1.y, r0.xyzx, cb0[13].xywx  // r1.y <- rayPos.y

#line 167
mov r1.z, l(-1.000000)
dp3 r0.x, r1.xyzx, cb0[4].xyzx
dp3 r0.y, r1.xyzx, cb0[5].xyzx
dp3 r0.z, r1.xyzx, cb0[6].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- <UVtoEYE_id2 return value>.x; r0.y <- <UVtoEYE_id2 return value>.y; r0.z <- <UVtoEYE_id2 return value>.z

#line 175
mad r1.x, r0.x, cb1[10].w, cb0[4].w  // r1.x <- p.x
mad r1.y, r0.y, cb1[10].w, cb0[5].w  // r1.y <- p.y
mad r1.z, r0.z, cb1[10].w, cb0[6].w  // r1.z <- p.z

#line 160
mov r2.w, l(1.000000)

#line 179
mov r2.xyz, r1.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z
mov r3.xyz, l(0,0,0,0)  // r3.x <- accumVolume.x; r3.y <- accumVolume.y; r3.z <- accumVolume.z
mov r0.w, l(0)  // r0.w <- i
loop 
  ult r1.w, cb1[10].x, r0.w
  breakc_nz r1.w

#line 181
  mad r2.xyz, r0.xyzx, cb1[10].yyyy, r2.xyzx

#line 160
  dp4 r4.x, r2.xyzw, cb1[6].xyzw
  dp4 r4.y, r2.xyzw, cb1[7].xyzw
  dp4 r4.z, r2.xyzw, cb1[8].xyzw
  add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r4.x <- p.x; r4.y <- p.y; r4.z <- p.z

#line 161
  sample_indexable(texture3d)(float,float,float,float) r4.xyz, r4.xyzx, t0.xyzw, s0  // r4.x <- result.x; r4.y <- result.y; r4.z <- result.z

#line 182
  mad r3.xyz, r4.xyzx, cb1[10].zzzz, r3.xyzx

#line 183
  iadd r0.w, r0.w, l(1)
endloop 

#line 185
mov_sat o0.xyz, r3.xyzx
mov o0.w, l(0.500000)

#line 188
ret 
// Approximately 33 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id77;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id77 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id87;
    float2 TexCoord_id77;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id77 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id87 : POSITION;
    float2 TexCoord_id77 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 World_id21;
    float4x4 WorldInverse_id22;
    float4x4 WorldInverseTranspose_id23;
    float4x4 WorldView_id24;
    float4x4 WorldViewInverse_id25;
    float4x4 WorldViewProjection_id26;
    float3 WorldScale_id27;
    float4 EyeMS_id28;
};
cbuffer PerView 
{
    float4x4 View_id14;
    float4x4 ViewInverse_id15;
    float4x4 Projection_id16;
    float4x4 ProjectionInverse_id17;
    float4x4 ViewProjection_id18;
    float2 ProjScreenRay_id19;
    float4 Eye_id20;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id30;
    float2 Texture1TexelSize_id32;
    float2 Texture2TexelSize_id34;
    float2 Texture3TexelSize_id36;
    float2 Texture4TexelSize_id38;
    float2 Texture5TexelSize_id40;
    float2 Texture6TexelSize_id42;
    float2 Texture7TexelSize_id44;
    float2 Texture8TexelSize_id46;
    float2 Texture9TexelSize_id48;
    float4 Color_id90;
    float4x4 tVolumeTransform_id92;
    uint maxSteps_id94;
    float stepSize_id95;
    float opacity_id96;
    float OffsetZ_id97;
    float Gamma_id98;
};
Texture2D Texture0_id29;
Texture2D Texture1_id31;
Texture2D Texture2_id33;
Texture2D Texture3_id35;
Texture2D Texture4_id37;
Texture2D Texture5_id39;
Texture2D Texture6_id41;
Texture2D Texture7_id43;
Texture2D Texture8_id45;
Texture2D Texture9_id47;
TextureCube TextureCube0_id49;
TextureCube TextureCube1_id50;
TextureCube TextureCube2_id51;
TextureCube TextureCube3_id52;
Texture3D Texture3D0_id53;
Texture3D Texture3D1_id54;
Texture3D Texture3D2_id55;
Texture3D Texture3D3_id56;
SamplerState Sampler_id57;
SamplerState PointSampler_id58 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id59 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id60 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id61 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id62 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id63 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id64 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id65 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id66 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id67;
SamplerState Sampler1_id68;
SamplerState Sampler2_id69;
SamplerState Sampler3_id70;
SamplerState Sampler4_id71;
SamplerState Sampler5_id72;
SamplerState Sampler6_id73;
SamplerState Sampler7_id74;
SamplerState Sampler8_id75;
SamplerState Sampler9_id76;
Texture3D<float3> texVOL_id91;
SamplerState linearSampler_id93 : IMMUTABLE 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
    AddressW = Border;
};
float3 volume_id3(float3 p, Texture3D<float3> t)
{
    p = mul(float4(p, 1), tVolumeTransform_id92).xyz + 0.5;
    float3 result = t.Sample(linearSampler_id93, p);
    return result;
}
float3 UVtoEYE_id2(float2 uv)
{
    float4 rayPos = float4(mul(float4(uv, 0, 1), ProjectionInverse_id17).xy, -1, 0);
    return normalize(mul(rayPos, ViewInverse_id15).xyz);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id77 = __input__.TexCoord_id77;
    float3 eye = ViewInverse_id15[3].xyz;
    float3 dir = UVtoEYE_id2(streams.TexCoord_id77);
    float3 p = eye + normalize(dir) * OffsetZ_id97;
    float3 accumVolume;
    float3 lightP = p;

    for (uint i = 0; i <= maxSteps_id94; i++)
    {
        p += dir * stepSize_id95;
        accumVolume += volume_id3(p, texVOL_id91) * opacity_id96;
    }
    float4 col = float4(accumVolume, 1);
    streams.ColorTarget_id2 = saturate(float4(col.xyz, 0.5));
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id87 = __input__.Position_id87;
    streams.TexCoord_id77 = __input__.TexCoord_id77;
    streams.ShadingPosition_id0 = mul(streams.Position_id87, World_id21);
    streams.TexCoord_id77 = mul(float4(streams.TexCoord_id77.x - 0.5, 0.5 - streams.TexCoord_id77.y, 0, 1), World_id21);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id77 = streams.TexCoord_id77;
    return __output__;
}
