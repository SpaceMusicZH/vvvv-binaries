/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ShaderFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin AsyncTestLogic_ShaderFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer Globals [Size: 16]
@C    Inc_id26 => AsyncTestLogic_ShaderFX.Inc
***************************
******  Resources    ******
***************************
@R    Values_id25 => AsyncTestLogic_ShaderFX.Values [Stage: Compute, Slot: (0-0)]
@R    Globals => Globals [Stage: Compute, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    AsyncTestLogic_ShaderFX => c4ae912f2224b414980737482021d610
@S    ComputeShaderBase => 8f045851eaa4513eb38a704d53889e6d
***************************
*****     Stages      *****
***************************
@G    Compute => 34ded01a50f7dcac30e86650d72855cf
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float Inc_id26;                    // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Values_id25                           UAV   float         buf             u0      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 1
dcl_thread_group 1, 1, 1
//
// Initial variable locations:
//   vThreadGroupID.x <- __input__.GroupId_id14.x; vThreadGroupID.y <- __input__.GroupId_id14.y; vThreadGroupID.z <- __input__.GroupId_id14.z; 
//   vThreadID.x <- __input__.DispatchThreadId_id15.x; vThreadID.y <- __input__.DispatchThreadId_id15.y; vThreadID.z <- __input__.DispatchThreadId_id15.z
//
#line 35 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_ShaderFXEffect_424b0bb4dfdd160a32d936782452d048.hlsl"
ld_uav_typed_indexable(buffer)(float,float,float,float) r0.x, vThreadID.xxxx, u0.xyzw  // r0.x <- value

#line 36
add r0.x, r0.x, cb0[0].x

#line 37
store_uav_typed u0.xyzw, vThreadID.xxxx, r0.xxxx

#line 52
ret 
// Approximately 4 instruction slots used
***************************
*************************/
struct CS_STREAMS 
{
    uint3 GroupId_id14;
    uint3 DispatchThreadId_id15;
    int ThreadCountX_id21;
    int ThreadCountY_id22;
    int ThreadCountZ_id23;
    uint ThreadCountPerGroup_id19;
    uint3 ThreadGroupCount_id18;
    uint ThreadGroupIndex_id20;
};
struct CS_INPUT 
{
    uint3 GroupId_id14 : SV_GroupID;
    uint3 DispatchThreadId_id15 : SV_DispatchThreadID;
};
struct VS_STREAMS 
{
};
struct VS_INPUT 
{
};
cbuffer PerDispatch 
{
    int3 ThreadGroupCountGlobal_id24;
};
cbuffer Globals 
{
    float Inc_id26;
};
RWBuffer<float> Values_id25;
void Compute_id3(inout CS_STREAMS streams)
{
    uint index = streams.DispatchThreadId_id15.x;
    float value = Values_id25[index];
    value += Inc_id26;
    Values_id25[index] = value;
}
[numthreads(1, 1, 1)]
void CSMain(CS_INPUT __input__)
{
    CS_STREAMS streams = (CS_STREAMS)0;
    streams.GroupId_id14 = __input__.GroupId_id14;
    streams.DispatchThreadId_id15 = __input__.DispatchThreadId_id15;
    streams.ThreadCountX_id21 = 1;
    streams.ThreadCountY_id22 = 1;
    streams.ThreadCountZ_id23 = 1;
    streams.ThreadCountPerGroup_id19 = 1 * 1 * 1;
    streams.ThreadGroupCount_id18 = ThreadGroupCountGlobal_id24;
    streams.ThreadGroupIndex_id20 = (streams.GroupId_id14.z * streams.ThreadGroupCount_id18.y + streams.GroupId_id14.y) * streams.ThreadGroupCount_id18.x + streams.GroupId_id14.x;
    Compute_id3(streams);
}
void VSMain()
{
    VS_STREAMS streams = (VS_STREAMS)0;
}
