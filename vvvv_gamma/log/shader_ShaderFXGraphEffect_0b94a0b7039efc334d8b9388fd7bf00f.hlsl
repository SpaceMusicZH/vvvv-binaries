/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ShaderFXGraphEffect
@P   - ShaderFXGraph.ShaderFXRoot: mixin [{PixelRoot = mixin DoFloat4 [{Before = mixin ComputeOrder [{Computes = [ComputeVoid, ComputeVoid, ComputeVoid, mixin AssignVarFloat4<TextureValue_5> [{Value = mixin SampleTextureFloat4<ObjectTexture_fx3,PerUpdate,ObjectSampler_fx4,PerUpdate> [{TexCd = GetSemanticFloat2<SemanticValue_6,TEXCOORD0>}]}], mixin AssignVarFloat4<Input_7> [{Value = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}], mixin AssignVarFloat4<Multiply_8> [{Value = mixin MultiplyFloat4 [{Left = GetVarFloat4<TextureValue_5>}, {Right = GetVarFloat4<Input_7>}]}]]}]}, {Value = GetVarFloat4<Multiply_8>}]}, {VertexRoot = mixin DoFloat4 [{Before = mixin ComputeOrder [{Computes = [ComputeVoid, mixin AssignVarMatrix<Input_0> [{Value = InputMatrix<ShaderFX.InputValueMatrix,PerUpdate>}], mixin AssignVarFloat4<Transform_1> [{Value = mixin TransformFloat4 [{Left = GetSemanticFloat4<SemanticValue_2,POSITION>}, {Right = GetVarMatrix<Input_0>}]}]]}]}, {Value = GetVarFloat4<Transform_1>}]}]
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerUpdate [Size: 80]
@C    InputValue_id46 => ShaderFX.InputValueFloat4
@C    InputValue_id56 => ShaderFX.InputValueMatrix
***************************
******  Resources    ******
***************************
@R    PerUpdate => PerUpdate [Stage: Vertex, Slot: (0-0)]
@R    DynamicSampler_id41 => ObjectSampler_fx4 [Stage: Pixel, Slot: (0-0)]
@R    DynamicTexture_id40 => ObjectTexture_fx3 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ShaderFXGraph => 9576ae145548087fcd55edf446b17dd0
@S    VS_PS_Base => f089dc4ce5d5868b962b08793ef74fd9
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    NormalStream => ea68512133899a045766d21afb59733a
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    ComputeFloat4 => bc345c7d961ff4b1766c5b1d5e15bd5a
@S    DoFloat4 => 312f1c610231ffe618620ce43634d0aa
@S    ComputeVoid => b62583a94b8503c79e9107f4b5bc9392
@S    ComputeOrder => 1d9b1cd3f5e3ad3f3f10e4fc88326cc7
@S    AssignVarFloat4 => 3a0c495ce724365e837c33156190acbe
@S    StreamVariableFloat4 => 2bfe58666cb67eed05b9410465550725
@S    SampleTextureFloat4 => 7322e565b887529ba33f14140cd2fe85
@S    ComputeFloat2 => 4826dbf2e774b7283c93b6121c851c5d
@S    DeclTexture => 446d0ef18094b3b6440125d6e9cb6306
@S    DeclSampler => 2b4d3075cdc21c655fee5c274c8566ed
@S    GetSemanticFloat2 => 72d1b2113bce4aac1e03baaeaa9db138
@S    SemanticFloat2 => 7d018e6f29de96f6b830ab77f6b8985a
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
@S    MultiplyFloat4 => 0ca4b2400d6fa1fe17005a6d3edfbd7f
@S    GetVarFloat4 => 2805d4f95c82389ce488a02bbf6e99f5
@S    AssignVarMatrix => dd66225a9fd6dd4dde8f06ef7d17186b
@S    ComputeMatrix => 3d2736b5fb4cc5353a04a60e62f9a98c
@S    StreamVariableMatrix => 7f393f70e6be9420dd700a1e5ab1b8df
@S    InputMatrix => 6c031c209a4afd3753a56049aa876a9b
@S    DeclMatrix => 572bc8ee3abf017c2c90d1d3e5ce75b7
@S    TransformFloat4 => bdf950fe5dd7af54b2b816f0edf38715
@S    GetSemanticFloat4 => 841d67198fd56763a075bb181bf19849
@S    SemanticFloat4 => 4e5dc1946b8f33ca667062f66f9232fd
@S    GetVarMatrix => 7bcc7cd95e70aaad9fb1369bb427f62f
***************************
*****     Stages      *****
***************************
@G    Vertex => 3168cc8778dcafe078d19c71321719d0
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id46;            // Offset:    0 Size:    16 [unused]
//   float4x4 InputValue_id56;          // Offset:   16 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerUpdate                         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   v1.x <- __input__.SemanticValue_6_id42.x; v1.y <- __input__.SemanticValue_6_id42.y; 
//   o1.x <- <VSMain return value>.SemanticValue_6_id42.x; o1.y <- <VSMain return value>.SemanticValue_6_id42.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 98 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_ShaderFXGraphEffect_0b94a0b7039efc334d8b9388fd7bf00f.hlsl"
dp4 o0.x, v0.xyzw, cb0[1].xyzw
dp4 o0.y, v0.xyzw, cb0[2].xyzw
dp4 o0.z, v0.xyzw, cb0[3].xyzw
dp4 o0.w, v0.xyzw, cb0[4].xyzw

#line 214
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 97949ea69ea238eebbc9b522278e79cd
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id46;            // Offset:    0 Size:    16
//   float4x4 InputValue_id56;          // Offset:   16 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DynamicSampler_id41               sampler      NA          NA             s0      1 
// DynamicTexture_id40               texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.SemanticValue_6_id42.x; v1.y <- __input__.SemanticValue_6_id42.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 94 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_ShaderFXGraphEffect_0b94a0b7039efc334d8b9388fd7bf00f.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- <Compute_id7 return value>.x; r0.y <- <Compute_id7 return value>.y; r0.z <- <Compute_id7 return value>.z; r0.w <- <Compute_id7 return value>.w

#line 86
mul o0.xyzw, r0.xyzw, cb0[0].xyzw

#line 203
ret 
// Approximately 3 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 SemanticValue_6_id42;
    float4 TextureValue_5_id39;
    float4 Input_7_id45;
    float4 Multiply_8_id48;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 SemanticValue_6_id42 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float2 SemanticValue_6_id42;
    float4x4 Input_0_id55;
    float4 Transform_1_id58;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 SemanticValue_6_id42 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
    float2 SemanticValue_6_id42 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 World_id29;
    float4x4 WorldInverse_id30;
    float4x4 WorldInverseTranspose_id31;
    float4x4 WorldView_id32;
    float4x4 WorldViewInverse_id33;
    float4x4 WorldViewProjection_id34;
    float3 WorldScale_id35;
    float4 EyeMS_id36;
};
cbuffer PerUpdate 
{
    float4 InputValue_id46;
    float4x4 InputValue_id56;
};
cbuffer PerView 
{
    float4x4 View_id22;
    float4x4 ViewInverse_id23;
    float4x4 Projection_id24;
    float4x4 ProjectionInverse_id25;
    float4x4 ViewProjection_id26;
    float2 ProjScreenRay_id27;
    float4 Eye_id28;
};
Texture2D DynamicTexture_id40;
SamplerState DynamicSampler_id41;
float4 Compute_id12(inout PS_STREAMS streams)
{
    return streams.Input_7_id45;
}
float4 Compute_id10(inout PS_STREAMS streams)
{
    return streams.TextureValue_5_id39;
}
float2 Compute_id4(inout PS_STREAMS streams)
{
    return streams.SemanticValue_6_id42;
}
float4x4 Compute_id34(inout VS_STREAMS streams)
{
    return streams.Input_0_id55;
}
float4 Compute_id32(inout VS_STREAMS streams)
{
    return streams.Position_id14;
}
float4 Compute_id15(inout PS_STREAMS streams)
{
    return Compute_id10(streams) * Compute_id12(streams);
}
float4 Compute_id8()
{
    return InputValue_id46;
}
float4 Compute_id7(inout PS_STREAMS streams)
{
    return DynamicTexture_id40.Sample(DynamicSampler_id41, Compute_id4(streams));
}
float4 Compute_id37(inout VS_STREAMS streams)
{
    return mul(Compute_id32(streams), Compute_id34(streams));
}
float4x4 Compute_id30()
{
    return InputValue_id56;
}
void Compute_id24(inout PS_STREAMS streams)
{
    streams.Multiply_8_id48 = Compute_id15(streams);
}
void Compute_id22(inout PS_STREAMS streams)
{
    streams.Input_7_id45 = Compute_id8();
}
void Compute_id20(inout PS_STREAMS streams)
{
    streams.TextureValue_5_id39 = Compute_id7(streams);
}
void Compute_id18()
{
}
void Compute_id17()
{
}
void Compute_id16()
{
}
void Compute_id42(inout VS_STREAMS streams)
{
    streams.Transform_1_id58 = Compute_id37(streams);
}
void Compute_id40(inout VS_STREAMS streams)
{
    streams.Input_0_id55 = Compute_id30();
}
void Compute_id38()
{
}
float4 Compute_id27(inout PS_STREAMS streams)
{
    return streams.Multiply_8_id48;
}
void Compute_id26(inout PS_STREAMS streams)
{

    {
        Compute_id16();
    }

    {
        Compute_id17();
    }

    {
        Compute_id18();
    }

    {
        Compute_id20(streams);
    }

    {
        Compute_id22(streams);
    }

    {
        Compute_id24(streams);
    }
}
float4 Compute_id45(inout VS_STREAMS streams)
{
    return streams.Transform_1_id58;
}
void Compute_id44(inout VS_STREAMS streams)
{

    {
        Compute_id38();
    }

    {
        Compute_id40(streams);
    }

    {
        Compute_id42(streams);
    }
}
float4 Compute_id3(inout PS_STREAMS streams)
{
    Compute_id26(streams);
    return Compute_id27(streams);
}
float4 Compute_id2(inout VS_STREAMS streams)
{
    Compute_id44(streams);
    return Compute_id45(streams);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.SemanticValue_6_id42 = __input__.SemanticValue_6_id42;
    streams.ColorTarget_id2 = Compute_id3(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.SemanticValue_6_id42 = __input__.SemanticValue_6_id42;
    streams.ShadingPosition_id0 = Compute_id2(streams);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.SemanticValue_6_id42 = streams.SemanticValue_6_id42;
    return __output__;
}
