/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin TriColor_TextureFX [{Control = InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>}]
@P Control: InputFloat4<ShaderFX.InputValueFloat4,PerUpdate>
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerUpdate [Size: 16]
@C    InputValue_id95 => ShaderFX.InputValueFloat4
cbuffer Globals [Size: 144]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    ColorA_id88 => TriColor_TextureFX.ColorA
@C    ColorB_id89 => TriColor_TextureFX.ColorB
@C    ColorC_id90 => TriColor_TextureFX.ColorC
@C    Smooth_id91 => TriColor_TextureFX.Smooth
@C    Center_id92 => TriColor_TextureFX.Center
@C    SingleChannel_id93 => TriColor_TextureFX.SingleChannel
@C    ClampColor_id94 => TriColor_TextureFX.ClampColor
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler0_id52 => Texturing.Sampler0 [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerUpdate => PerUpdate [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    TriColor_TextureFX => f7d8951fbd39a5f4182682a399b91afa
@S    FilterBase => 5bd9cb7e7eb80aa436e148c74d845c07
@S    TextureFX => 27bb4f1f808a5eedf6dfeaa75c669c29
@S    ImageEffectShader => 8064e30cc02e5eb4052f420259dbf05e
@S    SpriteBase => 5a7aa9dfd5b5c7613053f4f66c79ca0d
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    ComputeFloat4 => bc345c7d961ff4b1766c5b1d5e15bd5a
@S    InputFloat4 => f6891eacc9ea2d912dcfded49ea96a71
@S    DeclFloat4 => 03cb445d0e450d0a37ad5f24c8a93feb
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 198 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_TextureFXEffect_3beccd3d73910bef5d5b9712af1736a5.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 202
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 467d3454401151c3f447e05ea6627b78
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerUpdate
// {
//
//   float4 InputValue_id95;            // Offset:    0 Size:    16
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float4 ColorA_id88;                // Offset:   80 Size:    16
//      = 0x00000000 0x00000000 0x00000000 0x3f800000 
//   float4 ColorB_id89;                // Offset:   96 Size:    16
//      = 0x3f000000 0x3f000000 0x3f000000 0x3f800000 
//   float4 ColorC_id90;                // Offset:  112 Size:    16
//      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
//   float Smooth_id91;                 // Offset:  128 Size:     4
//      = 0x3f000000 
//   float Center_id92;                 // Offset:  132 Size:     4
//      = 0x3f000000 
//   bool SingleChannel_id93;           // Offset:  136 Size:     4
//      = 0xffffffff 
//   bool ClampColor_id94;              // Offset:  140 Size:     4
//      = 0xffffffff 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler0_id52                     sampler      NA          NA             s0      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerUpdate                         cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 177 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_TextureFXEffect_3beccd3d73910bef5d5b9712af1736a5.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- <InTex0_id26 return value>.x; r0.y <- <InTex0_id26 return value>.y; r0.z <- <InTex0_id26 return value>.z; r0.w <- <InTex0_id26 return value>.w

#line 157
dp3 r1.x, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)  // r1.x <- fd.x

#line 158
movc r1.xyzw, cb1[8].zzzz, r1.xxxx, r0.xyzw  // r1.y <- fd.y; r1.z <- fd.z; r1.w <- fd.w

#line 159
lt r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzw
lt r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r2.xyzw, -r2.xyzw, r3.xyzw
itof r2.xyzw, r2.xyzw
add r3.x, -cb1[8].y, l(1.000001)
div r3.x, cb1[8].y, r3.x
log r4.xyzw, |r1.xyzw|
mul r3.xyzw, r3.xxxx, r4.xyzw
exp r3.xyzw, r3.xyzw
mad r2.xyzw, r2.xyzw, r3.xyzw, -r1.xyzw
mad_sat r3.x, cb1[8].x, l(2.000000), l(-1.000000)
mad r3.x, -r3.x, l(0.500000), l(1.000000)
mad r1.xyzw, r3.xxxx, r2.xyzw, r1.xyzw

#line 164
mad r2.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.333300, -1.333300, -1.333300, -1.333300)

#line 163
mad r1.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-0.666600, -0.666600, -0.666600, -0.666600)

#line 161
mov_sat r3.x, cb1[8].x  // r3.x <- Smooth2

#line 162
add r3.y, -r3.x, l(1.000000)
add r3.x, r3.x, l(0.000001)
div r3.x, r3.y, r3.x  // r3.x <- sm

#line 164
mad r2.xyzw, r2.xyzw, r3.xxxx, l(0.333300, 0.333300, 0.333300, 0.333300)

#line 163
mad r1.xyzw, r1.xyzw, r3.xxxx, l(0.666600, 0.666600, 0.666600, 0.666600)
add r1.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r1.x <- fd1.x; r1.y <- fd1.y; r1.z <- fd1.z; r1.w <- fd1.w

#line 164
max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r2.x <- fd2.x; r2.y <- fd2.y; r2.z <- fd2.z; r2.w <- fd2.w

#line 168
min r3.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r3.x <- fd2.x; r3.y <- fd2.y; r3.z <- fd2.z; r3.w <- fd2.w

#line 169
movc r2.xyzw, cb1[8].wwww, r3.xyzw, r2.xyzw  // r2.x <- fd2.x; r2.y <- fd2.y; r2.z <- fd2.z; r2.w <- fd2.w

#line 167
min r3.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r3.x <- fd1.x; r3.y <- fd1.y; r3.z <- fd1.z; r3.w <- fd1.w

#line 169
movc r1.xyzw, cb1[8].wwww, r3.xyzw, r1.xyzw  // r1.x <- fd1.x; r1.y <- fd1.y; r1.z <- fd1.z; r1.w <- fd1.w

#line 171
add r3.xyzw, cb1[5].xyzw, -cb1[6].xyzw
mad r1.xyzw, r1.xyzw, r3.xyzw, cb1[6].xyzw  // r1.x <- col.x; r1.y <- col.y; r1.z <- col.z; r1.w <- col.w

#line 172
add r3.xyzw, -r1.xyzw, cb1[7].xyzw
mad r1.xyzw, r2.xyzw, r3.xyzw, r1.xyzw

#line 182
add r1.xyzw, -r0.xyzw, r1.xyzw
mad o0.xyzw, cb0[0].xyzw, r1.xyzw, r0.xyzw

#line 191
ret 
// Approximately 38 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerUpdate 
{
    float4 InputValue_id95;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float4 ColorA_id88 = float4(0.0f, 0.0f, 0.0f, 1.0f);
    float4 ColorB_id89 = float4(0.5f, 0.5f, 0.5f, 1.0f);
    float4 ColorC_id90 = float4(1.0f, 1.0f, 1.0f, 1.0f);
    float Smooth_id91 = 0.5f;
    float Center_id92 = 0.5f;
    bool SingleChannel_id93 = true;
    bool ClampColor_id94 = true;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 Compute_id30()
{
    return InputValue_id95;
}
float4 Filter_id29(inout PS_STREAMS streams, float4 tex0col)
{
    float2 uv = streams.TexCoord_id62;
    float2 R = ViewSize_id77;
    float4 col = Texture0_id14.SampleLevel(Sampler0_id52, uv, 0);
    float4 fd = col;
    if (SingleChannel_id93)
    {
        fd = dot(col.rgb, 1. / 3.);
    }
    fd = lerp(fd, sign(fd) * pow(abs(fd), Center_id92 / (1.000001 - Center_id92)), 1 - .5 * saturate(Smooth_id91 * 2 - 1));
    float Smooth2 = saturate(Smooth_id91 * 2) / 2.;
    Smooth2 = saturate(Smooth_id91);
    float sm = (1 - Smooth2) / (.000001 + Smooth2);
    float4 fd1 = max(0, 1 - ((((fd * 2 - .6666) * sm + .6666 - 0) / (1 - 0))));
    float4 fd2 = max(0, ((((fd * 2 - 1.3333) * sm + .3333 - 0) / (1 - 0))));
    if (ClampColor_id94)
    {
        fd1 = saturate(fd1);
        fd2 = saturate(fd2);
    }
    col = ColorB_id89;
    col = lerp(col, ColorA_id88, fd1);
    col = lerp(col, ColorC_id90, fd2);
    return col;
}
float4 InTex0_id26(inout PS_STREAMS streams)
{
    return Texture0_id14.SampleLevel(Sampler0_id52, streams.TexCoord_id62, 0);
}
float4 Shading_id28(inout PS_STREAMS streams)
{
    float4 col = InTex0_id26(streams);
    return lerp(col, Filter_id29(streams, col), Compute_id30());
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id28(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
