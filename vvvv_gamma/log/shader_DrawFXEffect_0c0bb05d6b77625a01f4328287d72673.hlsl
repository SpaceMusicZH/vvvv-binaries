/**************************
***** Compiler Parameters *****
***************************
@P EffectName: DrawFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin DrawDCVertices_DrawFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerView [Size: 384]
@C    View_id22 => Transformation.View
@C    ViewInverse_id23 => Transformation.ViewInverse
@C    Projection_id24 => Transformation.Projection
@C    ProjectionInverse_id25 => Transformation.ProjectionInverse
@C    ViewProjection_id26 => Transformation.ViewProjection
@C    ProjScreenRay_id27 => Transformation.ProjScreenRay
@C    Eye_id28 => Transformation.Eye
@C    NearClipPlane_id45 => Camera.NearClipPlane
@C    FarClipPlane_id46 => Camera.FarClipPlane
@C    ZProjection_id47 => Camera.ZProjection
@C    ViewSize_id48 => Camera.ViewSize
@C    AspectRatio_id49 => Camera.AspectRatio
cbuffer Globals [Size: 32]
@C    Color_id52 => DrawDCVertices_DrawFX.Color
@C    SizeMult_id53 => DrawDCVertices_DrawFX.SizeMult
***************************
******  Resources    ******
***************************
@R    Vertices_id50 => DrawDCVertices_DrawFX.Vertices [Stage: Vertex, Slot: (0-0)]
@R    Indices_id51 => DrawDCVertices_DrawFX.Indices [Stage: Vertex, Slot: (1-1)]
@R    PerView => PerView [Stage: Geometry, Slot: (0-0)]
@R    Globals => Globals [Stage: Geometry, Slot: (1-1)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    DrawDCVertices_DrawFX => f146d5d9b045c8ad87f3d715824d1ab1
@S    VS_PS_Base => f089dc4ce5d5868b962b08793ef74fd9
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    NormalStream => ea68512133899a045766d21afb59733a
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    Camera => f5d1a113ef7a27319900e8cc2e11ae0d
@S    SDFVertex => a55fb6c0cb5db6eac29bd614045e195f
***************************
*****     Stages      *****
***************************
@G    Vertex => b322a878aee3cd12d8ade23934e7355a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for Vertices_id50
// {
//
//   struct Vertex
//   {
//       
//       float3 position;               // Offset:    0
//       float3 normal;                 // Offset:   12
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for Indices_id51
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Vertices_id50                     texture  struct         r/o             t0      1 
// Indices_id51                      texture  struct         r/o             t1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_InstanceID            0   x           0   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION_WS              0   xyzw        0     NONE   float   xyzw
// SIZE_ID56_SEM            0   x           1     NONE   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_structured t0, 24
dcl_resource_structured t1, 4
dcl_input_sgv v0.x, instance_id
dcl_output o0.xyzw
dcl_output o1.x
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- __input__; 
//   o1.x <- <VSMain return value>.Size_id56; 
//   o0.x <- <VSMain return value>.PositionWS_id15.x; o0.y <- <VSMain return value>.PositionWS_id15.y; o0.z <- <VSMain return value>.PositionWS_id15.z; o0.w <- <VSMain return value>.PositionWS_id15.w
//
#line 127 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_DrawFXEffect_0c0bb05d6b77625a01f4328287d72673.hlsl"
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, v0.x, l(0), t1.xxxx  // r0.x <- id

#line 128
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) o0.xyz, r0.x, l(0), t0.xyzx

#line 134
mov o0.w, l(1.000000)
mov o1.x, l(0.100000)
ret 
// Approximately 5 instruction slots used
@G    Geometry => 4a4c8e91748e34973bbd9b3f95fe24c1
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerView
// {
//
//   float4x4 View_id22;                // Offset:    0 Size:    64
//   float4x4 ViewInverse_id23;         // Offset:   64 Size:    64 [unused]
//   float4x4 Projection_id24;          // Offset:  128 Size:    64
//   float4x4 ProjectionInverse_id25;   // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjection_id26;      // Offset:  256 Size:    64 [unused]
//   float2 ProjScreenRay_id27;         // Offset:  320 Size:     8 [unused]
//   float4 Eye_id28;                   // Offset:  336 Size:    16 [unused]
//   float NearClipPlane_id45;          // Offset:  352 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id46;           // Offset:  356 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id47;           // Offset:  360 Size:     8 [unused]
//   float2 ViewSize_id48;              // Offset:  368 Size:     8 [unused]
//   float AspectRatio_id49;            // Offset:  376 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float4 Color_id52;                 // Offset:    0 Size:    16 [unused]
//   float SizeMult_id53;               // Offset:   16 Size:     4
//      = 0x3f800000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerView                           cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION_WS              0   xyzw        0     NONE   float   xyzw
// SIZE_ID56_SEM            0   x           1     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD_ID54_SEM        0   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, 1.000000, 0, 0},
                              { 1.000000, 1.000000, 0, 0},
                              { 0, 0, -1.000000, 1.000000},
                              { 1.000000, 0, 1.000000, 1.000000},
                              { 0, 0, -1.000000, -1.000000},
                              { 0, 0, 1.000000, -1.000000} }
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_input v[1][0].xyzw
dcl_input v[1][1].x
dcl_temps 4
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output o0.xy
dcl_output_siv o1.xyzw, position
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- triangleStream; 
//   v[0][0].x <- input[0].PositionWS_id15.x; v[0][0].y <- input[0].PositionWS_id15.y; v[0][0].z <- input[0].PositionWS_id15.z; v[0][0].w <- input[0].PositionWS_id15.w; 
//   v[0][1].x <- input[0].Size_id56
//
#line 105 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_DrawFXEffect_0c0bb05d6b77625a01f4328287d72673.hlsl"
dp4 r0.x, v[0][0].xyzw, cb0[0].xyzw  // r0.x <- center.x
dp4 r0.y, v[0][0].xyzw, cb0[1].xyzw  // r0.y <- center.y
dp4 r0.z, v[0][0].xyzw, cb0[2].xyzw  // r0.z <- center.z

#line 111
mov r1.z, cb1[1].x
mov r2.x, cb1[1].x
mov r2.z, l(0)

#line 112
mov r3.w, l(1.000000)

#line 107
mov r0.w, l(0)  // r0.w <- i
loop 
  ige r1.w, r0.w, l(4)
  breakc_nz r1.w

#line 111
  mov r1.xy, icb[r0.w + 2].zwzz
  mul r1.xyw, r1.xyxz, v[0][1].xxxx
  mad r3.xyz, r1.xywx, r2.xxzx, r0.xyzx  // r3.x <- pos.x; r3.y <- pos.y; r3.z <- pos.z

#line 112
  dp4 r1.x, r3.xyzw, cb0[8].xyzw  // r1.x <- streams.ShadingPosition_id0.x
  dp4 r1.y, r3.xyzw, cb0[9].xyzw  // r1.y <- streams.ShadingPosition_id0.y
  dp4 r1.w, r3.xyzw, cb0[10].xyzw  // r1.w <- streams.ShadingPosition_id0.z
  dp4 r2.y, r3.xyzw, cb0[11].xyzw  // r2.y <- streams.ShadingPosition_id0.w

#line 118
  mov o0.xy, icb[r0.w + 0].xyxx
  mov o1.x, r1.x
  mov o1.y, r1.y
  mov o1.z, r1.w
  mov o1.w, r2.y
  emit_stream m0

#line 120
  iadd r0.w, r0.w, l(1)
endloop 

#line 121
ret 
// Approximately 27 instruction slots used
@G    Pixel => 4593e7c3705bd4beab19bf6e989c2682
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float4 Color_id52;                 // Offset:    0 Size:    16
//   float SizeMult_id53;               // Offset:   16 Size:     4 [unused]
//      = 0x3f800000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD_ID54_SEM        0   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- __input__.TexCoord_id54.x; v0.y <- __input__.TexCoord_id54.y; 
//   v1.x <- __input__.ShadingPosition_id0.x; v1.y <- __input__.ShadingPosition_id0.y; v1.z <- __input__.ShadingPosition_id0.z; v1.w <- __input__.ShadingPosition_id0.w; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 91 "H:\JHH_SpaceMusic\SpaceMusicZH\vvvv-binaries\vvvv_gamma\log\shader_DrawFXEffect_0c0bb05d6b77625a01f4328287d72673.hlsl"
add r0.xy, v0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)  // r0.x <- tex.x; r0.y <- tex.y

#line 92
dp2 r0.x, r0.xyxx, r0.xyxx
lt r0.x, l(0.250000), r0.x

#line 93
discard_nz r0.x

#line 97
mov o0.xyzw, cb0[0].xyzw
ret 
// Approximately 6 instruction slots used
***************************
*************************/
static const float3 QuadPositions_id42[4] = { float3(-1, 1, 0), float3(1, 1, 0), float3(-1, -1, 0), float3(1, -1, 0)};
static const float2 QuadUV_id43[4] = { float2(0, 1), float2(1, 1), float2(0, 0), float2(1, 0)};
struct PS_STREAMS 
{
    float2 TexCoord_id54;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float2 TexCoord_id54 : TEXCOORD_ID54_SEM;
    float4 ShadingPosition_id0 : SV_Position;
};
struct GS_STREAMS 
{
    float4 PositionWS_id15;
    float Size_id56;
    float2 TexCoord_id54;
    float4 ShadingPosition_id0;
};
struct GS_OUTPUT 
{
    float2 TexCoord_id54 : TEXCOORD_ID54_SEM;
    float4 ShadingPosition_id0 : SV_Position;
};
struct GS_INPUT 
{
    float4 PositionWS_id15 : POSITION_WS;
    float Size_id56 : SIZE_ID56_SEM;
};
struct VS_STREAMS 
{
    uint InstanceID_id13;
    float4 PositionWS_id15;
    float Size_id56;
};
struct VS_OUTPUT 
{
    float4 PositionWS_id15 : POSITION_WS;
    float Size_id56 : SIZE_ID56_SEM;
};
struct VS_INPUT 
{
    uint InstanceID_id13 : SV_InstanceID;
};
struct Vertex 
{
    float3 position;
    float3 normal;
};
cbuffer PerDraw 
{
    float4x4 World_id29;
    float4x4 WorldInverse_id30;
    float4x4 WorldInverseTranspose_id31;
    float4x4 WorldView_id32;
    float4x4 WorldViewInverse_id33;
    float4x4 WorldViewProjection_id34;
    float3 WorldScale_id35;
    float4 EyeMS_id36;
};
cbuffer PerView 
{
    float4x4 View_id22;
    float4x4 ViewInverse_id23;
    float4x4 Projection_id24;
    float4x4 ProjectionInverse_id25;
    float4x4 ViewProjection_id26;
    float2 ProjScreenRay_id27;
    float4 Eye_id28;
    float NearClipPlane_id45 = 1.0f;
    float FarClipPlane_id46 = 100.0f;
    float2 ZProjection_id47;
    float2 ViewSize_id48;
    float AspectRatio_id49;
};
cbuffer Globals 
{
    float4 Color_id52;
    float SizeMult_id53 = 1;
};
StructuredBuffer<Vertex> Vertices_id50;
StructuredBuffer<uint> Indices_id51;
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id54 = __input__.TexCoord_id54;
    float2 tex = streams.TexCoord_id54 - 0.5f;
    if (dot(tex, tex) > 0.25f)
        discard;
    streams.ColorTarget_id2 = Color_id52;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
[maxvertexcount(4)]
void GSMain(point GS_INPUT input[1], inout TriangleStream<GS_OUTPUT> triangleStream)
{
    GS_STREAMS streams = (GS_STREAMS)0;
    streams.PositionWS_id15 = input[0].PositionWS_id15;
    streams.Size_id56 = input[0].Size_id56;
    float4 center = mul(streams.PositionWS_id15, View_id22);

    for (int i = 0; i < 4; i++)
    {
        streams.TexCoord_id54 = (QuadUV_id43[i].xy - 0.5) + 0.5;
        float4 pos = float4(0, 0, 0, 1);
        pos.xyz = center.xyz + QuadPositions_id42[i].xyz * streams.Size_id56 * SizeMult_id53;
        streams.ShadingPosition_id0 = mul(pos, Projection_id24);

        {
            GS_OUTPUT output = (GS_OUTPUT)0;
            output.TexCoord_id54 = streams.TexCoord_id54;
            output.ShadingPosition_id0 = streams.ShadingPosition_id0;
            triangleStream.Append(output);
        }
    }
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.InstanceID_id13 = __input__.InstanceID_id13;
    uint id = streams.InstanceID_id13;
    id = Indices_id51[id];
    float3 P_PosSize = Vertices_id50[id].position;
    streams.PositionWS_id15 = float4(P_PosSize.xyz, 1);
    streams.Size_id56 = 0.1;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.PositionWS_id15 = streams.PositionWS_id15;
    __output__.Size_id56 = streams.Size_id56;
    return __output__;
}
