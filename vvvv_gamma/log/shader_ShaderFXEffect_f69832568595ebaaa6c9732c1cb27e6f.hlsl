/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ShaderFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin FuseCommonDrawSphereSimpleExtension_ShaderFX [{Provider = SphereProvider}, {ShadingColor0 = ComputeColor}]
@P Provider: SphereProvider
@P ShadingColor0: ComputeColor
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 416]
@C    World_id30 => Transformation.World
@C    WorldInverse_id31 => Transformation.WorldInverse
@C    WorldInverseTranspose_id32 => Transformation.WorldInverseTranspose
@C    WorldView_id33 => Transformation.WorldView
@C    WorldViewInverse_id34 => Transformation.WorldViewInverse
@C    WorldViewProjection_id35 => Transformation.WorldViewProjection
@C    WorldScale_id36 => Transformation.WorldScale
@C    EyeMS_id37 => Transformation.EyeMS
cbuffer PerView [Size: 352]
@C    View_id23 => Transformation.View
@C    ViewInverse_id24 => Transformation.ViewInverse
@C    Projection_id25 => Transformation.Projection
@C    ProjectionInverse_id26 => Transformation.ProjectionInverse
@C    ViewProjection_id27 => Transformation.ViewProjection
@C    ProjScreenRay_id28 => Transformation.ProjScreenRay
@C    Eye_id29 => Transformation.Eye
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Geometry, Slot: (0-0)]
@R    PerView => PerView [Stage: Geometry, Slot: (1-1)]
@R    PerView => PerView [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    FuseCommonDrawSphereSimpleExtension_ShaderFX => d8d9e0e367850787782d9167e73ddd7a
@S    MaterialExtension => bd314d2afed93384fa52af5d242de440
@S    ShadingBase => b0f11f286acc22f5586417a8311cb632
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    NormalBase => b2b31addde884722f942622026837c39
@S    NormalUpdate => 6fd3c9b8fa943d9951400645fe40502e
@S    NormalStream => ea68512133899a045766d21afb59733a
@S    TransformationBase => 21981c533d88209fdcf07f258ddf01c2
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    ShaderUtils => 27e27e08e991883f970444d1aebe3b58
@S    SphereProvider => 0d83a07e81ceb85f3914bc202a9f86bf
***************************
*****     Stages      *****
***************************
@G    Vertex => 434794ee6b474645b1d499b41fd1be24
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
//
// Initial variable locations:
//   v0.x <- __input__.Position_id15.x; v0.y <- __input__.Position_id15.y; v0.z <- __input__.Position_id15.z; v0.w <- __input__.Position_id15.w; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 293 "C:\Program Files\vvvv\vvvv_gamma_2022.5.0-0485-g8f46e4a34a\log\shader_ShaderFXEffect_f69832568595ebaaa6c9732c1cb27e6f.hlsl"
mov o0.xyzw, v0.xyzw
ret 
// Approximately 2 instruction slots used
@G    Geometry => dab68a5bfffd6fb5cc22d185adbdcf36
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id30;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id31;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id32;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id33;           // Offset:  192 Size:    64
//   float4x4 WorldViewInverse_id34;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id35; // Offset:  320 Size:    64 [unused]
//   float3 WorldScale_id36;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id37;                 // Offset:  400 Size:    16 [unused]
//
// }
//
// cbuffer PerView
// {
//
//   float4x4 View_id23;                // Offset:    0 Size:    64 [unused]
//   float4x4 ViewInverse_id24;         // Offset:   64 Size:    64 [unused]
//   float4x4 Projection_id25;          // Offset:  128 Size:    64
//   float4x4 ProjectionInverse_id26;   // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjection_id27;      // Offset:  256 Size:    64 [unused]
//   float2 ProjScreenRay_id28;         // Offset:  320 Size:     8 [unused]
//   float4 Eye_id29;                   // Offset:  336 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION_WS              0   xyzw        0     NONE   float   xyzw
// SPHERESIZE_ID105_SEM     0   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// SV_Position              0   xyzw        2      POS   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, 1.000000, 0, 0},
                              { 1.000000, 1.000000, 0, 0},
                              { 0, 0, -1.000000, 1.000000},
                              { 1.000000, 0, 1.000000, 1.000000},
                              { 0, 0, -1.000000, -1.000000},
                              { 0, 0, 1.000000, -1.000000} }
dcl_constantbuffer CB0[15], immediateIndexed
dcl_constantbuffer CB1[12], immediateIndexed
dcl_input_siv v[1][0].xyzw, position
dcl_temps 4
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output o0.xyzw
dcl_output o1.x
dcl_output o1.yz
dcl_output_siv o2.xyzw, position
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- triangleStream; 
//   v[0][0].x <- input[0].ShadingPosition_id0.x; v[0][0].y <- input[0].ShadingPosition_id0.y; v[0][0].z <- input[0].ShadingPosition_id0.z; v[0][0].w <- input[0].ShadingPosition_id0.w
//
#line 267 "C:\Program Files\vvvv\vvvv_gamma_2022.5.0-0485-g8f46e4a34a\log\shader_ShaderFXEffect_f69832568595ebaaa6c9732c1cb27e6f.hlsl"
dp4 r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[12].xyzw  // r0.x <- posView.x
dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[13].xyzw  // r0.y <- posView.y
dp4 r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[14].xyzw  // r0.z <- posView.z

#line 272
mov r1.z, l(0)

#line 273
mov r2.w, l(1.000000)

#line 269
mov r0.w, l(0)  // r0.w <- i
loop 
  ige r1.w, r0.w, l(4)
  breakc_nz r1.w

#line 271
  mad r3.xy, icb[r0.w + 0].xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r3.x <- streams.TexCoord_id86.x; r3.y <- streams.TexCoord_id86.y

#line 272
  mov r1.xy, icb[r0.w + 2].zwzz
  mad r2.xyz, r1.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r0.xyzx  // r2.x <- viewCornerPos.x; r2.y <- viewCornerPos.y; r2.z <- viewCornerPos.z

#line 273
  dp4 r1.x, r2.xyzw, cb1[8].xyzw  // r1.x <- streams.ShadingPosition_id0.x
  dp4 r1.y, r2.xyzw, cb1[9].xyzw  // r1.y <- streams.ShadingPosition_id0.y
  dp4 r1.w, r2.xyzw, cb1[10].xyzw  // r1.w <- streams.ShadingPosition_id0.z
  dp4 r2.x, r2.xyzw, cb1[11].xyzw  // r2.x <- streams.ShadingPosition_id0.w

#line 281
  mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  mov o1.x, l(0.100000)
  mov o1.yz, r3.xxyx
  mov o2.x, r1.x
  mov o2.y, r1.y
  mov o2.z, r1.w
  mov o2.w, r2.x
  emit_stream m0

#line 283
  iadd r0.w, r0.w, l(1)
endloop 

#line 284
ret 
// Approximately 27 instruction slots used
@G    Pixel => 527e9cdaeedb1f942c9e22cbf4ad3a4a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerView
// {
//
//   float4x4 View_id23;                // Offset:    0 Size:    64 [unused]
//   float4x4 ViewInverse_id24;         // Offset:   64 Size:    64
//   float4x4 Projection_id25;          // Offset:  128 Size:    64 [unused]
//   float4x4 ProjectionInverse_id26;   // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjection_id27;      // Offset:  256 Size:    64
//   float2 ProjScreenRay_id28;         // Offset:  320 Size:     8 [unused]
//   float4 Eye_id29;                   // Offset:  336 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerView                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION_WS              0   xyzw        0     NONE   float   xyz 
// SPHERESIZE_ID105_SEM     0   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Depth                 0    N/A   oDepth    DEPTH   float    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[20], immediateIndexed
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_output o0.xyzw
dcl_output oDepth
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- __input__.PositionWS_id16.x; v0.y <- __input__.PositionWS_id16.y; v0.z <- __input__.PositionWS_id16.z; v0.w <- __input__.PositionWS_id16.w; 
//   v1.x <- __input__.sphereSize_id105; v1.y <- __input__.TexCoord_id86.x; v1.z <- __input__.TexCoord_id86.y; 
//   v2.x <- __input__.ShadingPosition_id0.x; v2.y <- __input__.ShadingPosition_id0.y; v2.z <- __input__.ShadingPosition_id0.z; v2.w <- __input__.ShadingPosition_id0.w; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w; 
//   oDepth <- <PSMain return value>.Depth_id10
//
#line 191 "C:\Program Files\vvvv\vvvv_gamma_2022.5.0-0485-g8f46e4a34a\log\shader_ShaderFXEffect_f69832568595ebaaa6c9732c1cb27e6f.hlsl"
dp2 r0.x, v1.yzyy, v1.yzyy  // r0.x <- lenSqr

#line 192
lt r0.y, l(1.000000), r0.x

#line 193
discard_nz r0.y

#line 194
add r0.x, -r0.x, l(1.000000)
sqrt r0.z, r0.x  // r0.z <- z

#line 196
mov r0.xy, v1.yzyy
dp3 r1.x, r0.xyzx, cb0[4].xyzx
dp3 r1.y, r0.xyzx, cb0[5].xyzx
dp3 r1.z, r0.xyzx, cb0[6].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx  // r0.x <- normal.x; r0.y <- normal.y; r0.z <- normal.z

#line 197
mad r0.xyz, r0.xyzx, v1.xxxx, v0.xyzx  // r0.x <- worldPos.x; r0.y <- worldPos.y; r0.z <- worldPos.z

#line 181
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[18].xyzw  // r1.x <- posWVP.z
dp4 r0.x, r0.xyzw, cb0[19].xyzw  // r0.x <- posWVP.w

#line 185
div oDepth, r1.x, r0.x

#line 258
mov o0.xyzw, l(0,0,0,0)
ret 
// Approximately 19 instruction slots used
***************************
*************************/
static const float3 QuadPositions_id101[4] = { float3(-1, 1, 0), float3(1, 1, 0), float3(-1, -1, 0), float3(1, -1, 0)};
static const float2 QuadUV_id102[4] = { float2(0, 1), float2(1, 1), float2(0, 0), float2(1, 0)};
struct PS_STREAMS 
{
    float2 TexCoord_id86;
    float sphereSize_id105;
    float4 PositionWS_id16;
    float3 normalWS_id21;
    float3 meshNormalWS_id19;
    float DepthVS_id17;
    float Depth_id10;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float Depth_id10 : SV_Depth;
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 PositionWS_id16 : POSITION_WS;
    float sphereSize_id105 : SPHERESIZE_ID105_SEM;
    float2 TexCoord_id86 : TEXCOORD0;
    float4 ShadingPosition_id0 : SV_Position;
};
struct GS_STREAMS 
{
    float4 PositionWS_id16;
    float sphereSize_id105;
    float2 TexCoord_id86;
    float4 ShadingPosition_id0;
};
struct GS_OUTPUT 
{
    float4 PositionWS_id16 : POSITION_WS;
    float sphereSize_id105 : SPHERESIZE_ID105_SEM;
    float2 TexCoord_id86 : TEXCOORD0;
    float4 ShadingPosition_id0 : SV_Position;
};
struct GS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
};
struct VS_STREAMS 
{
    float4 Position_id15;
    float3 normalWS_id21;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
};
struct VS_INPUT 
{
    float4 Position_id15 : POSITION;
};
cbuffer PerDraw 
{
    float4x4 World_id30;
    float4x4 WorldInverse_id31;
    float4x4 WorldInverseTranspose_id32;
    float4x4 WorldView_id33;
    float4x4 WorldViewInverse_id34;
    float4x4 WorldViewProjection_id35;
    float3 WorldScale_id36;
    float4 EyeMS_id37;
};
cbuffer PerView 
{
    float4x4 View_id23;
    float4x4 ViewInverse_id24;
    float4x4 Projection_id25;
    float4x4 ProjectionInverse_id26;
    float4x4 ViewProjection_id27;
    float2 ProjScreenRay_id28;
    float4 Eye_id29;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id39;
    float2 Texture1TexelSize_id41;
    float2 Texture2TexelSize_id43;
    float2 Texture3TexelSize_id45;
    float2 Texture4TexelSize_id47;
    float2 Texture5TexelSize_id49;
    float2 Texture6TexelSize_id51;
    float2 Texture7TexelSize_id53;
    float2 Texture8TexelSize_id55;
    float2 Texture9TexelSize_id57;
};
Texture2D Texture0_id38;
Texture2D Texture1_id40;
Texture2D Texture2_id42;
Texture2D Texture3_id44;
Texture2D Texture4_id46;
Texture2D Texture5_id48;
Texture2D Texture6_id50;
Texture2D Texture7_id52;
Texture2D Texture8_id54;
Texture2D Texture9_id56;
TextureCube TextureCube0_id58;
TextureCube TextureCube1_id59;
TextureCube TextureCube2_id60;
TextureCube TextureCube3_id61;
Texture3D Texture3D0_id62;
Texture3D Texture3D1_id63;
Texture3D Texture3D2_id64;
Texture3D Texture3D3_id65;
SamplerState Sampler_id66;
SamplerState PointSampler_id67 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id68 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id69 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id70 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id71 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id72 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id73 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id74 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id75 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id76;
SamplerState Sampler1_id77;
SamplerState Sampler2_id78;
SamplerState Sampler3_id79;
SamplerState Sampler4_id80;
SamplerState Sampler5_id81;
SamplerState Sampler6_id82;
SamplerState Sampler7_id83;
SamplerState Sampler8_id84;
SamplerState Sampler9_id85;
float4 Compute_id47()
{
    return 0;
}
float4 Shading_id2()
{
    return Compute_id47();
}
float4 StrideShadingWorldNormal_id17(inout PS_STREAMS streams, float3 worldPos, float3 normal)
{
    streams.PositionWS_id16 = float4(worldPos, 1);
    float4 posWVP = mul(streams.PositionWS_id16, ViewProjection_id27);
    streams.normalWS_id21 = normal;
    streams.meshNormalWS_id19 = normal;
    streams.DepthVS_id17 = posWVP.w;
    streams.Depth_id10 = posWVP.z / posWVP.w;
    return Shading_id2();
}
float4 Shading_id44(inout PS_STREAMS streams)
{
    float2 mapping = streams.TexCoord_id86;
    float lenSqr = dot(mapping, mapping);
    if (lenSqr > 1)
        discard;
    float z = sqrt(1 - lenSqr);
    float3 normal = float3(mapping, z);
    normal = normalize(mul(float4(normal, 0), ViewInverse_id24).xyz);
    float4 worldPos = float4((normal * streams.sphereSize_id105) + streams.PositionWS_id16.xyz, 1);
    return StrideShadingWorldNormal_id17(streams, worldPos, normal);
}
void PSMain_id1()
{
}
void PostTransformPosition_id43(inout VS_STREAMS streams)
{
    streams.ShadingPosition_id0 = streams.Position_id15;
}
void TransformPosition_id42()
{
}
void PreTransformPosition_id41()
{
}
void GenerateNormal_VS_id4(inout VS_STREAMS streams)
{
    streams.normalWS_id21 = 0.0f;
}
void VSMain_id0()
{
}
void PSMain_id3(inout PS_STREAMS streams)
{
    PSMain_id1();
    streams.ColorTarget_id2 = Shading_id44(streams);
}
void GenerateNormal_PS_id5()
{
}
float getSphereSize_id46()
{
    return 0.1;
}
float3 getSpherePos_id45()
{
    return 1;
}
void BaseTransformVS_id15(inout VS_STREAMS streams)
{
    PreTransformPosition_id41();
    TransformPosition_id42();
    PostTransformPosition_id43(streams);
}
void VSMain_id10(inout VS_STREAMS streams)
{
    VSMain_id0();
    GenerateNormal_VS_id4(streams);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.PositionWS_id16 = __input__.PositionWS_id16;
    streams.sphereSize_id105 = __input__.sphereSize_id105;
    streams.TexCoord_id86 = __input__.TexCoord_id86;
    GenerateNormal_PS_id5();
    PSMain_id3(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.Depth_id10 = streams.Depth_id10;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
[maxvertexcount(4)]
void GSMain(point GS_INPUT input[1], inout TriangleStream<GS_OUTPUT> triangleStream)
{
    GS_STREAMS streams = (GS_STREAMS)0;
    streams.ShadingPosition_id0 = input[0].ShadingPosition_id0;
    streams.PositionWS_id16 = float4(getSpherePos_id45(), 1);
    streams.sphereSize_id105 = getSphereSize_id46();
    float4 posView = mul(streams.PositionWS_id16, WorldView_id33);

    for (int i = 0; i < 4; i++)
    {
        streams.TexCoord_id86 = QuadUV_id102[i].xy * 2 - 1;
        float4 viewCornerPos = float4(posView.xyz + QuadPositions_id101[i].xyz * streams.sphereSize_id105, 1);
        streams.ShadingPosition_id0 = mul(viewCornerPos, Projection_id25);

        {
            GS_OUTPUT output = (GS_OUTPUT)0;
            output.PositionWS_id16 = streams.PositionWS_id16;
            output.sphereSize_id105 = streams.sphereSize_id105;
            output.TexCoord_id86 = streams.TexCoord_id86;
            output.ShadingPosition_id0 = streams.ShadingPosition_id0;
            triangleStream.Append(output);
        }
    }
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id15 = __input__.Position_id15;
    VSMain_id10(streams);
    BaseTransformVS_id15(streams);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    return __output__;
}
