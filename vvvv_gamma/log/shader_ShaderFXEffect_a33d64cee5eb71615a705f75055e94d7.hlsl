/**************************
***** Compiler Parameters *****
***************************
@P EffectName: ShaderFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin FuseGeometryMeshSurfaceVSExtension_ShaderFX [{ShadingColor0 = ComputeColor}, {Surface = FuseGeometryMeshSurface}]
@P Surface: FuseGeometryMeshSurface
@P ShadingColor0: ComputeColor
***************************
*****     Sources     *****
***************************
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    FuseGeometryMeshSurfaceVSExtension_ShaderFX => 3a8fc8ea652f6e7857e041c490180054
@S    MaterialExtension => bd314d2afed93384fa52af5d242de440
@S    ShadingBase => b0f11f286acc22f5586417a8311cb632
@S    ComputeColor => c875a0e093379dd74cd9a5a73aca830f
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    NormalBase => b2b31addde884722f942622026837c39
@S    NormalUpdate => 6fd3c9b8fa943d9951400645fe40502e
@S    NormalStream => ea68512133899a045766d21afb59733a
@S    TransformationBase => 21981c533d88209fdcf07f258ddf01c2
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    FuseGeometryMeshSurfaceStream => eef9b71305af04b043dd2e3c65f6602b
@S    FuseGeometryMeshSurface => ffc6ab49a59296931d9249e0bcb8d538
***************************
*****     Stages      *****
***************************
@G    Vertex => 7f8c11a528bbc155f71944cfef69ebc8
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION_WS              0   xyzw        0     NONE   float       
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
vs_5_0
dcl_globalFlags refactoringAllowed
//
// Initial variable locations:
//   v0.x <- __input__.PositionWS_id16.x; v0.y <- __input__.PositionWS_id16.y; v0.z <- __input__.PositionWS_id16.z; v0.w <- __input__.PositionWS_id16.w; 
//   v1.x <- __input__.TexCoord_id86.x; v1.y <- __input__.TexCoord_id86.y
//
#line 250 "C:\Program Files\vvvv\vvvv_gamma_2022.5.0-0485-g8f46e4a34a\log\shader_ShaderFXEffect_a33d64cee5eb71615a705f75055e94d7.hlsl"
ret 
// Approximately 1 instruction slots used
@G    Pixel => 4b239ca88c2652219e5e93c566d07f08
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_output o0.xyzw
//
// Initial variable locations:
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 241 "C:\Program Files\vvvv\vvvv_gamma_2022.5.0-0485-g8f46e4a34a\log\shader_ShaderFXEffect_a33d64cee5eb71615a705f75055e94d7.hlsl"
mov o0.xyzw, l(0,0,0,0)
ret 
// Approximately 2 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
};
struct VS_STREAMS 
{
    float4 PositionWS_id16;
    float2 TexCoord_id86;
    float3 normalWS_id21;
    float3 msP_id96;
    float3 msN_id97;
    float2 msUV_id98;
};
struct VS_INPUT 
{
    float4 PositionWS_id16 : POSITION_WS;
    float2 TexCoord_id86 : TEXCOORD0;
};
struct MeshSurface 
{
    float3 p;
    float3 n;
    float2 uv;
};
cbuffer PerDraw 
{
    float4x4 World_id30;
    float4x4 WorldInverse_id31;
    float4x4 WorldInverseTranspose_id32;
    float4x4 WorldView_id33;
    float4x4 WorldViewInverse_id34;
    float4x4 WorldViewProjection_id35;
    float3 WorldScale_id36;
    float4 EyeMS_id37;
};
cbuffer PerView 
{
    float4x4 View_id23;
    float4x4 ViewInverse_id24;
    float4x4 Projection_id25;
    float4x4 ProjectionInverse_id26;
    float4x4 ViewProjection_id27;
    float2 ProjScreenRay_id28;
    float4 Eye_id29;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id39;
    float2 Texture1TexelSize_id41;
    float2 Texture2TexelSize_id43;
    float2 Texture3TexelSize_id45;
    float2 Texture4TexelSize_id47;
    float2 Texture5TexelSize_id49;
    float2 Texture6TexelSize_id51;
    float2 Texture7TexelSize_id53;
    float2 Texture8TexelSize_id55;
    float2 Texture9TexelSize_id57;
};
Texture2D Texture0_id38;
Texture2D Texture1_id40;
Texture2D Texture2_id42;
Texture2D Texture3_id44;
Texture2D Texture4_id46;
Texture2D Texture5_id48;
Texture2D Texture6_id50;
Texture2D Texture7_id52;
Texture2D Texture8_id54;
Texture2D Texture9_id56;
TextureCube TextureCube0_id58;
TextureCube TextureCube1_id59;
TextureCube TextureCube2_id60;
TextureCube TextureCube3_id61;
Texture3D Texture3D0_id62;
Texture3D Texture3D1_id63;
Texture3D Texture3D2_id64;
Texture3D Texture3D3_id65;
SamplerState Sampler_id66;
SamplerState PointSampler_id67 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id68 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id69 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id70 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id71 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id72 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id73 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id74 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id75 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id76;
SamplerState Sampler1_id77;
SamplerState Sampler2_id78;
SamplerState Sampler3_id79;
SamplerState Sampler4_id80;
SamplerState Sampler5_id81;
SamplerState Sampler6_id82;
SamplerState Sampler7_id83;
SamplerState Sampler8_id84;
SamplerState Sampler9_id85;
float4 Compute_id23()
{
    return 0;
}
float4 Shading_id2()
{
    return Compute_id23();
}
float4 Shading_id16()
{
    return Shading_id2();
}
void assignMeshSurfaceStreams_id18(inout VS_STREAMS streams, MeshSurface surface)
{
    streams.msP_id96 = surface.p;
    streams.msN_id97 = surface.n;
    streams.msUV_id98 = surface.uv;
}
MeshSurface makeSurface_id24(float3 p, float3 n, float2 uv)
{
    MeshSurface surface;
    surface.p = p;
    surface.n = n;
    surface.uv = uv;
    return surface;
}
void GenerateNormal_VS_id4(inout VS_STREAMS streams)
{
    streams.normalWS_id21 = 0.0f;
}
void TransformPosition_id12()
{
}
void PreTransformPosition_id11()
{
}
float4 Shading_id22()
{
    return Shading_id16();
}
void PSMain_id1()
{
}
void PostTransformPosition_id13()
{
}
void TransformPosition_id20(inout VS_STREAMS streams)
{
    TransformPosition_id12();
    GenerateNormal_VS_id4(streams);
    float3 p = streams.PositionWS_id16.xyz;
    float3 n = streams.normalWS_id21.xyz;
    float2 uv = streams.TexCoord_id86.xy;
    MeshSurface surface = makeSurface_id24(p, n, uv);
    assignMeshSurfaceStreams_id18(streams, surface);
    streams.PositionWS_id16.xyz = streams.msP_id96;
    float nLenSqr = dot(streams.msN_id97, streams.msN_id97);
    float3 normal = nLenSqr > 0 ? streams.msN_id97 : streams.normalWS_id21.xyz;
    streams.normalWS_id21 = normal;
    streams.TexCoord_id86.xy = streams.msUV_id98;
}
void PreTransformPosition_id19()
{
    PreTransformPosition_id11();
}
void GenerateNormal_VS_id21()
{
}
void VSMain_id0()
{
}
void PSMain_id3(inout PS_STREAMS streams)
{
    PSMain_id1();
    streams.ColorTarget_id2 = Shading_id22();
}
void GenerateNormal_PS_id5()
{
}
void BaseTransformVS_id15(inout VS_STREAMS streams)
{
    PreTransformPosition_id19();
    TransformPosition_id20(streams);
    PostTransformPosition_id13();
}
void VSMain_id10()
{
    VSMain_id0();
    GenerateNormal_VS_id21();
}
PS_OUTPUT PSMain()
{
    PS_STREAMS streams = (PS_STREAMS)0;
    GenerateNormal_PS_id5();
    PSMain_id3(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
void VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.PositionWS_id16 = __input__.PositionWS_id16;
    streams.TexCoord_id86 = __input__.TexCoord_id86;
    VSMain_id10();
    BaseTransformVS_id15(streams);
}
