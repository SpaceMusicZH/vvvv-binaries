[Summary("Color Matrix")]
[Tags("Color Grading")]

shader ColorMatrix_Advanced_Internal_ShaderFX : ComputeFloat4, ColorMatrixOperations
{
    [Default(1.0, 1.0, 1.0, 1.0)]
    compose ComputeFloat4 Color;

    [Default(1.0f, 1.0f, 1.0f, 1.0f)]
    compose ComputeFloat4 Channel0;

    [Default(1.0f, 1.0f, 1.0f, 1.0f)]
    compose ComputeFloat4 Channel1;

    [Default(1.0f, 1.0f, 1.0f, 1.0f)]
    compose ComputeFloat4 Channel2;

    [Default(1.0f, 1.0f, 1.0f, 1.0f)]
    compose ComputeFloat4 Channel3;

    int type;

    override float4 Compute()
    {
        float4 c;

        switch(type)
        {
            case 0 : c = RGBAMatrix(Color.Compute(), Channel0.Compute(), Channel1.Compute(), Channel2.Compute(), Channel3.Compute()); break;
            case 1 : c = HSLAMatrix(Color.Compute(), Channel0.Compute(), Channel1.Compute(), Channel2.Compute(), Channel3.Compute()); break;
            case 2 : c = HSVAMatrix(Color.Compute(), Channel0.Compute(), Channel1.Compute(), Channel2.Compute(), Channel3.Compute()); break;
            case 3 : c = CMYKMatrix(Color.Compute(), Channel0.Compute(), Channel1.Compute(), Channel2.Compute(), Channel3.Compute()); break;
        }

        return c;
    }
};