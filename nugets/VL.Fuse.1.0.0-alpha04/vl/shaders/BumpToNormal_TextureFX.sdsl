shader BumpToNormal_TextureFX : TextureFX
{
	float2 R;
	float Radius = 1.0;
	float Amt = 1.0;

	stage override float4 Shading()
	{
		return heightToNormalMap(streams.TexCoord);
	}




	float4 q(float2 x,float2 off,float v){return Texture0.SampleLevel(LinearSampler,x+off/R,v);}
	float gam(float x,float y){return sign(x)*pow(abs(x),y);}
	float sat(float4 c,float4 d)
	{
		return (dot(c.rgb,1./3.)-dot(d.rgb,1./3.))/sqrt(.00001+abs(dot(c.rgb,1./3.)+dot(d.rgb,1./3.)));
	}

	float4 heightToNormalMap(float2 x:TEXCOORD0)
	{
	float rad=max(Radius,0);
	float3 e=float3(1,-1,0)*rad;
	float v=log2(rad);
	float4 cx=q(x,e.xy,v)+q(x,e.xz,v)+q(x,e.xx,v)-q(x,e.yy,v)-q(x,e.yz,v)-q(x,e.yx,v);
	float4 cy=q(x,e.yy,v)+q(x,e.zy,v)+q(x,e.xy,v)-q(x,e.yx,v)-q(x,e.zx,v)-q(x,e.xx,v);
	float4 c=0;
	float d=pow(2,Amt);
	c.r=d*sat(q(x,e.xz,v),q(x,e.yz,v));
	c.g=d*sat(q(x,e.zx,v),q(x,e.zy,v));
	c.b=1;
	c.rgb=normalize(c.rgb);

	c.rg += .5;
	c.g = 1 - c.g;
	c.a=Texture0.SampleLevel(LinearSampler,x,0).a;
	return c;
}

};